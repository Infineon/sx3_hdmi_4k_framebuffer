`include "ddr3_sdram_mem_params_ddr3_ip_inst.v"
//=============================================================================
// Verilog module generated by IPExpress    12/10/2008    10:31:45         
// Filename: USERNAME.v                                          
// Copyright(c) 2011 Lattice Semiconductor Corporation. All rights reserved.   
//=============================================================================

/* WARNING - Changes to this file should be performed by re-running IPexpress
or modifying the .LPC file and regenerating the core.  Other changes may lead
to inconsistent simulation and/or implementation results */

//--------------------------
// USERNAME module 
//--------------------------

`timescale 1ns/1ps
module ddr3_ip_inst_core (
// Inputs
  clk,
  rst_n,
  param_trcd,
  param_trp,
  param_twr,
  param_tras,
  param_trc,
  param_trrd,
  param_trtp,
  param_twtr,
  param_tckesr,
  param_tzqoper,
  param_tzqs,
  param_tmrd,
  param_tpd,
  param_txpdll,
  param_tcke,
  param_txpr,
  param_tmod,
  param_tzqinit,
  addr_init_0,
  addr_init_1,
  addr_init_2,
  addr_init_3,
  wl_phase_dly_cnt,
  
  phy_init_act, 
  wl_act,
  wl_done,                             

// Input signals from the User I/F  
  init_start,
  cmd,
  addr,
  cmd_burst_cnt,
  cmd_valid,
  ofly_burst_len,
  
  
// Input signals from  configuration 
  trefi,                           
  ar_burst_cnt, 
  
//data  coming from user I/F
  datain,
  dmsel,
  DataRdy2Data,
  
// To the IOs
  pio_read,
  cal_bc4,
  ddr_cs_n,
  ddr_ras_n,
  ddr_cas_n,
  ddr_we_n,
  ddr_ba,
  ddr_addr,
  ddr_cke,
  datain_valid, 

// Output signals to the User I/F
  cmd_rdy,                             
  init_done,   
  
// Signals going to IOs for write      
  ddr_dq_out,
  ddr_wr_lat_odd,
  dqs_out,
  dqs_out_en,
  dqs_out_en_erly,
  dq_out_en,
  ddr_dqm,
  
  mem_odt_out,
  cntl_odt_out ,
  rd_odd,
  mirror_on
);

input                        rst_n;
input                        clk;
 
input [1:0]         param_trcd;    
input [1:0]          param_trp;      
input [1:0]          param_twr;          
input [3:0]         param_tras;     
input [3:0]          param_trc;        
input [1:0]         param_trrd;        
input [1:0]         param_trtp;    
input [1:0]         param_twtr;    
input [1:0]       param_tckesr ;
input [7:0]      param_tzqoper ;
input [5:0]         param_tzqs;
input [1:0]         param_tmrd;
input [1:0]          param_tpd;
input [2:0]       param_txpdll;
input [1:0]         param_tcke;
input [5:0]         param_txpr;
input [2:0]         param_tmod;
input [8:0]      param_tzqinit;

input [15:0]                 addr_init_0;
input [15:0]                 addr_init_1;
input [15:0]                 addr_init_2;
input [15:0]                 addr_init_3;
input [7:0]                  wl_phase_dly_cnt;

input                        init_start;
input                        phy_init_act;
input                        wl_act;
input                        wl_done;
input [63:0]              datain;
input [7:0]            dmsel; 
input [1:0]                  DataRdy2Data;

input [3:0]                  cmd;
input [26:0]         addr;
input [4:0]                  cmd_burst_cnt;
input                        cmd_valid;
input                        ofly_burst_len;


input [15:0]                 trefi;
input [2:0]                  ar_burst_cnt;

output                       pio_read;
output                       cal_bc4;

output [0:0]          ddr_cs_n;
output                       ddr_ras_n;
output                       ddr_cas_n;
output                       ddr_we_n;
output [2:0]        ddr_ba;
output [13:0]         ddr_addr ;
output                       datain_valid;
output [63:0]             ddr_dq_out;
output                       ddr_wr_lat_odd;
output [1:0]         dqs_out;
output                       dqs_out_en;
output                       dqs_out_en_erly;
output                       dq_out_en;

output [7:0]           ddr_dqm;
output [0:0]         ddr_cke;


output                       cmd_rdy;
output                       init_done;

output [0:0]          mem_odt_out;       
output                       cntl_odt_out;
output                       rd_odd;
output                       mirror_on;

ddr3_sdram_core_ddr3_ip_inst U1_LSC_IP_ddr_core (

  .clk(clk),
  .rst_n(rst_n),
  .param_trcd(param_trcd),
  .param_trp(param_trp),
  .param_twr(param_twr),
  .param_tras(param_tras),
  .param_trc(param_trc),
  .param_trrd(param_trrd),
  .param_trtp(param_trtp),
  .param_twtr(param_twtr),
  .param_tckesr(param_tckesr),
  .param_tzqoper(param_tzqoper),
  .param_tzqs(param_tzqs),
  .param_tmrd(param_tmrd),
  .param_tpd(param_tpd),
  .param_txpdll(param_txpdll),
  .param_tcke(param_tcke),
  .param_txpr(param_txpr),
  .param_tmod(param_tmod),
  .param_tzqinit(param_tzqinit),
  .addr_init_0(addr_init_0),
  .addr_init_1(addr_init_1),
  .addr_init_2(addr_init_2),
  .addr_init_3(addr_init_3),
  .wl_phase_dly_cnt(wl_phase_dly_cnt),
  .phy_init_act(phy_init_act),
  .wl_act(wl_act),
  .wl_done(wl_done),
// Input signals from the User I/F  
  .init_start(init_start),
  .cmd(cmd),
  .addr(addr),
  .cmd_burst_cnt(cmd_burst_cnt),
  .cmd_valid(cmd_valid),
  .ofly_burst_len(ofly_burst_len),
  
  
// Input signals from  configuration 
  .trefi(trefi),
  .ar_burst_cnt(ar_burst_cnt), 
  
//data  coming from user I/F
  .datain(datain),
  .dmsel(dmsel),
  .DataRdy2Data(DataRdy2Data),
  
//data coming from IOs (read)   
//.ddr_rd_data(ddr_rd_data),
//.ddr_rd_data_vld(ddr_rd_data_vld),
  
// To the user I/F 
//.read_data(read_data),
//.read_data_vld(read_data_vld),
// To the IOs
  .pio_read(pio_read),
  .cal_bc4(cal_bc4),
  .ddr_cs_n(ddr_cs_n),
  .ddr_ras_n(ddr_ras_n),
  .ddr_cas_n(ddr_cas_n),
  .ddr_we_n(ddr_we_n),
  .ddr_ba(ddr_ba),
  .ddr_addr(ddr_addr),
  .ddr_cke(ddr_cke),
  .datain_valid(datain_valid),

// Output signals to the User I/F
  .cmd_rdy(cmd_rdy),
  .init_done(init_done),
  
// Signals going to IOs for write      
  .ddr_dq_out(ddr_dq_out),
  .ddr_wr_lat_odd(ddr_wr_lat_odd),
  .dqs_out(dqs_out),
  .dqs_out_en(dqs_out_en),
  .dqs_out_en_erly(dqs_out_en_erly),
  .dq_out_en(dq_out_en),
  .ddr_dqm(ddr_dqm),
  
  .mem_odt_out(mem_odt_out),
  .cntl_odt_out(cntl_odt_out) ,
  .rd_odd(rd_odd),
  .mirror_on(mirror_on)
);

endmodule
// ddr3_obf_temp.v generated by Lattice IP Model Creator version 1
// created on Fri Sep  5 12:20:05 PDT 2014
// Copyright(c) 2007 Lattice Semiconductor Corporation. All rights reserved
// obfuscator_exe unlicensed version 1.27jul2010

// top






























`timescale 1 ns / 100 ps
module cz419bf_ddr3_ip_inst (
   
    clk,
    rst_n,
    phy_init_act,
    
   
   fpbfbde,			 
   shfdef6,			 
   uief7b5,			 
   bl7bda8,			 
   kqded46,			 
   vvf6a31,			 
   ntb518e,			 
   zma8c76,			 
   me463b2,
   wy31d91,
   zz8ec89,
   xw7644e,		 
   fcb2273,		 

   
   tj9139b,			 
   je89cdf,			 
   en4e6fb,			 
   ps737dd,			 
   vx9beeb,			 
   dmdf75f,			 
   lqfbafa,			 
   pfdd7d2,			 
   hoebe97,
   fn5f4bb,
   ayfa5de,   
   jpd2ef1,
   gq9778f,		 
   gdbbc78,

   ykde3c4,
   xwf1e20,			
   gd8f103,
   ea7881d,
   mec40e9,
   tw20748,
   tj3a43,
   yz1d21e,

   dze90f5,
   xw487af,			
   go43d7a,
   xy1ebd0,
   suf5e83,
   tjaf419,
   sh7a0ce,
   vid0675,   

   zm833ab,
   zz19d5b,
   eaceade,
   mr756f0,
   sjab784,
   kd5bc24, 
   sude125,
   ayf0928,
   fp84941,
   sw24a0f,
   fc25078,
   lf283c3,
   kd41e1f,
   gqf0fd,
   ea787e9,
   kdc3f48,
   co1fa44,
   addr_init_0,
   addr_init_1,
   addr_init_2,
   addr_init_3,
      
   param_trcd, 
   param_trp,  
   param_twr,  
   param_tras, 
   param_trc,  
   param_trrd,  
   param_trtp, 
   param_twtr,

   param_tckesr ,
   param_tzqoper ,
   param_tzqs,
   param_tmrd,
   param_tpd,
   param_txpdll,
   param_tcke,
   czc6e18,
   param_txpr,
   param_tmod,
   param_tzqinit ,  
    

   datain,
   dmsel,
   DataRdy2Data,





   je3ab0e,
   xwd5872, 
   wl_act,  
   dz61c91,
   pue48e,
   yk72473,
   mg92399,
   
   wl_done,
  

   jr8e646,			 
   dm73237,
   ba991bb,		   
   blc8ddb,
   qg46edf,
   bn376f8,
   mtbb7c7,		 
   ykdbe3d,			 
   bydf1e9,
   wjf8f4a,
   dzc7a55,
   bn3d2ae,
   ddr_cs_n,
   ddr_ras_n,
   ddr_cas_n,
   ddr_we_n,
   ddr_ba,
   ddr_addr,
   ddr_cke,
   datain_valid,   




   

   ddr_dq_out,
   dqs_out,
   dqs_out_en,
   dqs_out_en_erly,
   dq_out_en,
   ddr_dqm,
   

   pio_read,
   
   
   ksb3c61,
   db9e308,
   lqf1846,
   ng8c233,
   cal_bc4,
   an8cd7,
   ic466bd,
   sj335e9,
   sj9af4d ,
   hbd7a6d ,
   ribd36f ,
   lde9b7a ,
   fa4dbd6,
   rd_odd,
   qt6f598,
   uv7acc4 ,
`ifdef ddr3_ip_inst_DIR_SREF_EXT
   sref_ent_cmd,
   sref_ext_cmd,
`endif
   mirror_on        
);
input                           clk;
input                           rst_n;
input                           phy_init_act;
input                           fpbfbde;
input                           shfdef6;
input                           uief7b5;
input                           bl7bda8;
input                           kqded46;
input                           vvf6a31;
input [4:0]                     ntb518e;
input [`ddr3_ip_inst_CS_WIDTH-1:0]           zma8c76;
input [`ddr3_ip_inst_COL_WIDTH -1:0]         me463b2;
input [`ddr3_ip_inst_BANK_WIDTH -1 :0]       wy31d91;
input [`ddr3_ip_inst_ROW_WIDTH -1:0]         zz8ec89;
input [2:0]                     xw7644e;
input                           fcb2273;
input                           tj9139b;
input                           je89cdf;
input                           en4e6fb;
input                           ps737dd;
input                           vx9beeb;
input                           dmdf75f;
input [4:0]                     lqfbafa;
input [`ddr3_ip_inst_CS_WIDTH-1:0]           pfdd7d2;
input [`ddr3_ip_inst_COL_WIDTH -1:0]         hoebe97;
input [`ddr3_ip_inst_BANK_WIDTH -1 :0]       fn5f4bb;
input [`ddr3_ip_inst_ROW_WIDTH -1:0]         ayfa5de;
input [2:0]                     jpd2ef1;
input                           gq9778f;
input                           wl_done;
input [`ddr3_ip_inst_AL_WIDTH-1:0]           sude125;
input [`ddr3_ip_inst_CL_WIDTH-1:0]           ayf0928;
input [`ddr3_ip_inst_CWL_WIDTH-1:0]          sw24a0f;
input                           fc25078;
input                           fp84941;
input                           lf283c3;
input                           kd41e1f;
input                           gqf0fd;
input                           ea787e9;
input                           kdc3f48;
input [3:0]                     co1fa44;
input                           wl_act;
input                           je3ab0e;
input [`ddr3_ip_inst_DQS_WIDTH-1:0]          xwd5872;
input                           dz61c91;
input                           pue48e;
input [`ddr3_ip_inst_CS_WIDTH-1:0]           yk72473;
input [15:0]                    mg92399;
input                           ykde3c4;
input                           xwf1e20;
input                           gd8f103;
input                           ea7881d;
input                           mec40e9;
input                           tw20748;
input                           tj3a43;
input                           yz1d21e;
input                           dze90f5;
input                           xw487af;
input                           go43d7a;
input                           xy1ebd0;
input                           suf5e83;
input                           tjaf419;
input                           sh7a0ce;
input                           vid0675;
input                           zm833ab;
input                           zz19d5b;
input                           eaceade;
input                           mr756f0;
input                           sjab784;
input                           kd5bc24;
input [`ddr3_ip_inst_TRCD_WIDTH-1:0]         param_trcd;
input [`ddr3_ip_inst_TRP_WIDTH-1:0]          param_trp;
input [`ddr3_ip_inst_TWR_WIDTH-1:0]          param_twr;
input [`ddr3_ip_inst_TRAS_WIDTH-1:0]         param_tras;
input [`ddr3_ip_inst_TRC_WIDTH-1:0]          param_trc;
input [`ddr3_ip_inst_TRRD_WIDTH-1:0]         param_trrd;
input [`ddr3_ip_inst_TRTP_WIDTH-1:0]         param_trtp;
input [`ddr3_ip_inst_TWTR_WIDTH-1:0]         param_twtr;
input [`ddr3_ip_inst_TCKESR_WIDTH-1:0]       param_tckesr ;
input [`ddr3_ip_inst_TZQOPER_WIDTH-1:0]      param_tzqoper ;
input [`ddr3_ip_inst_TZQS_WIDTH-1:0]         param_tzqs;
input [`ddr3_ip_inst_TMRD_WIDTH-1:0]         param_tmrd;
input [`ddr3_ip_inst_TPD_WIDTH-1:0]          param_tpd;
input [`ddr3_ip_inst_TXPDLL_WIDTH-1:0]       param_txpdll;
input [`ddr3_ip_inst_TCKE_WIDTH-1:0]         param_tcke;
input [`ddr3_ip_inst_TXPR_WIDTH-1:0] param_txpr;
input [`ddr3_ip_inst_TMOD_WIDTH-1:0] param_tmod;
input [`ddr3_ip_inst_TZQINIT_WIDTH-1:0] param_tzqinit;
input [15:0]                    addr_init_0;
input [15:0]                    addr_init_1;
input [15:0]                    addr_init_2;
input [15:0]                    addr_init_3;
input [`ddr3_ip_inst_DSIZE -1:0]             datain;
input [`ddr3_ip_inst_USER_DM -1:0]           dmsel;
input [1:0]        DataRdy2Data;
input                           gdbbc78;
input [2:0]                     czc6e18;
output                          jr8e646;
output                          dm73237;
output                          ba991bb;
output                          blc8ddb;
output                          qg46edf;
output                          bn376f8;
output                          mtbb7c7;
output                          ykdbe3d;
output                          bydf1e9;
output                          wjf8f4a;
output                          dzc7a55;
output                          mirror_on;
output                          bn3d2ae;
output [`ddr3_ip_inst_CS_WIDTH -1:0]         ddr_cs_n;
output [`ddr3_ip_inst_CS_WIDTH -1:0]         lqf1846;
output                          ddr_ras_n;
output                          ddr_cas_n;
output                          ddr_we_n;
output [`ddr3_ip_inst_BANK_WIDTH-1:0]         ddr_ba;

`ifdef ddr3_ip_inst_ROW_WIDTH_12
output [`ddr3_ip_inst_ROW_WIDTH:0]         ddr_addr ;

`else
output [`ddr3_ip_inst_ROW_WIDTH-1:0]         ddr_addr ;

`endif
output                          datain_valid;
output [`ddr3_ip_inst_DSIZE -1:0]            ddr_dq_out;
output [`ddr3_ip_inst_DQS_WIDTH-1:0]         dqs_out;
output                          dqs_out_en;
output                          dqs_out_en_erly;
output                          dq_out_en;
output [`ddr3_ip_inst_USER_DM -1:0]          ddr_dqm;
output [`ddr3_ip_inst_CKE_WIDTH -1:0]        ddr_cke;
output                          pio_read;
output                          ksb3c61;
output                          db9e308;
output                          ng8c233;
output                          cal_bc4;
output                          an8cd7;
output                          ic466bd;
output                          sj335e9;
output                          sj9af4d ;
output                          hbd7a6d ;
output                          ribd36f ;
output                          lde9b7a  ;
output                          fa4dbd6;
output                          rd_odd;
output                          qt6f598;
output                          uv7acc4;

`ifdef ddr3_ip_inst_DIR_SREF_EXT
output                          sref_ent_cmd;
output                          sref_ext_cmd;

`endif
wire   [`ddr3_ip_inst_CKE_WIDTH -1:0]        ddr_cke;
wire                            qt6f598;
wire                            uv7acc4;

`ifdef ddr3_ip_inst_DIR_SREF_EXT
wire                              sref_ent_cmd;
wire                              sref_ext_cmd;

`endif
wire [4:0]                      ntb518e;
wire [`ddr3_ip_inst_DSIZE -1:0]              ddr_dq_out;
wire [`ddr3_ip_inst_USER_DM -1:0]            ddr_dqm;
wire [`ddr3_ip_inst_CS_WIDTH -1:0]           lqf1846;
wire [`ddr3_ip_inst_DQS_WIDTH-1:0]           dqs_out;
wire [`ddr3_ip_inst_ROW_WIDTH-1:0]           xwfb35f;
wire [`ddr3_ip_inst_COL_WIDTH:0]             kdd9afb;
wire [`ddr3_ip_inst_BANK_WIDTH-1:0]           rtcd7dc;
wire [`ddr3_ip_inst_BANK_WIDTH-1:0]           ddr_ba;

`ifdef ddr3_ip_inst_ROW_WIDTH_12
wire [`ddr3_ip_inst_ROW_WIDTH:0]             ddr_addr ;

`else
wire [`ddr3_ip_inst_ROW_WIDTH-1:0]           ddr_addr ;

`endif
wire [`ddr3_ip_inst_COL_WIDTH -1:0]          me463b2;
wire [`ddr3_ip_inst_BANK_WIDTH -1 :0]          wy31d91;
wire [`ddr3_ip_inst_ROW_WIDTH -1:0]          zz8ec89;
wire [4:0]                      lqfbafa;
wire [`ddr3_ip_inst_COL_WIDTH -1:0]          hoebe97;
wire [`ddr3_ip_inst_BANK_WIDTH -1 :0]          fn5f4bb;
wire [`ddr3_ip_inst_ROW_WIDTH -1:0]          ayfa5de;
wire [`ddr3_ip_inst_CS_WIDTH -1:0]           ddr_cs_n;
wire [`ddr3_ip_inst_RL_WIDTH-1:0]            ayf5998;
wire [`ddr3_ip_inst_WL_WIDTH-1:0]            coaccc1;
wire [`ddr3_ip_inst_AL_WIDTH-1:0]            sude125;
wire [`ddr3_ip_inst_CL_WIDTH-1:0]            ayf0928;
wire [`ddr3_ip_inst_CWL_WIDTH-1:0]           sw24a0f;
wire [`ddr3_ip_inst_DQS_WIDTH-1:0]           xwd5872;
wire [`ddr3_ip_inst_CS_WIDTH-1:0]            yk72473;
wire [15:0]                     mg92399;
wire                            kd41e1f;
wire                            lf283c3;
wire                            ea787e9;
wire                            gqf0fd;
wire [`ddr3_ip_inst_TRCD_WIDTH-1:0]          param_trcd;
wire [`ddr3_ip_inst_TRP_WIDTH-1:0]           param_trp;
wire [`ddr3_ip_inst_TRAS_WIDTH-1:0]          param_tras;
wire [`ddr3_ip_inst_TRC_WIDTH-1:0]           param_trc;
wire [`ddr3_ip_inst_TRTP_WIDTH-1:0]          param_trtp;
wire [`ddr3_ip_inst_TWTR_WIDTH-1:0]          param_twtr;
wire [`ddr3_ip_inst_TCKESR_WIDTH-1:0]        param_tckesr ;
wire [`ddr3_ip_inst_TZQOPER_WIDTH-1:0]       param_tzqoper ;
wire [`ddr3_ip_inst_TZQS_WIDTH-1:0]          param_tzqs;
wire [`ddr3_ip_inst_TMRD_WIDTH-1:0]          param_tmrd;
wire [`ddr3_ip_inst_TPD_WIDTH-1:0]           param_tpd;
wire [`ddr3_ip_inst_TXPDLL_WIDTH-1:0]        param_txpdll;
wire [`ddr3_ip_inst_TCKE_WIDTH-1:0]          param_tcke;
wire [`ddr3_ip_inst_TXPR_WIDTH-1:0] param_txpr;
wire [`ddr3_ip_inst_TMOD_WIDTH-1:0] param_tmod;
wire [`ddr3_ip_inst_TZQINIT_WIDTH-1:0] param_tzqinit;
wire [15:0]                     addr_init_0;
wire [15:0]                     addr_init_1;
wire [15:0]                     addr_init_2;
wire [15:0]                     addr_init_3;
wire [2:0]                      czc6e18;
wire                            cal_bc4 ;
wire                            an8cd7 ;
wire [`ddr3_ip_inst_DSIZE -1:0]              datain;
wire [`ddr3_ip_inst_USER_DM -1:0]            dmsel;
wire [`ddr3_ip_inst_CS_WIDTH -1:0]           zxc8c5b;
wire                            db9e308, ng8c233;
wire                            hd8b7c8, of5be47;
wire                            zkdf23d,hbf91ea;
wire  [`ddr3_ip_inst_CS_WIDTH-1:0]           zma8c76;
wire  [`ddr3_ip_inst_CS_WIDTH-1:0]           pfdd7d2;
wire                            bn3d5ba;
wire [5:0]                      kqeadd6 ;
wire                            gdbbc78;
wire [2:0]                      ngb7589;
wire                            fpbac4b;
wire                            bn376f8;
reg                             yzb12f4;
wire                            wl_act;

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`endif

`ifdef ddr3_ip_inst_X4_GEAR

`else

`endif
reg al4bd22;
reg gb5e914;
reg nef48a5;
reg epa452b;
reg db2295d;
reg tw14aef;
reg hda577a;
reg [2 : 0] ym2bbd7;
reg jc5deb9;
reg goef5ca;
reg sh7ae50;
reg thd7284;
reg ecb9426;
reg jcca130;
reg fn50983;
reg [2 : 0] zz84c1e;
reg yz260f7;
reg ba307bc;
reg hq83de2;
reg fc1ef12;
reg gbf7893;
reg ukbc49c;
reg ipe24e0;
reg ep12704;
reg pu93824;
reg do9c123;
reg ose091b;
reg zm48d8;
reg wy246c3;
reg qv23619;
reg pu1b0cc;
reg fnd8662;
reg gbc3317;
reg db198bd;
reg mrcc5ee;
reg ww62f74;
reg qv17ba1;
reg lsbdd0d;
reg rgee86b;
reg hb7435b;
reg epa1ade;
reg yzd6f4;
reg rt6b7a4;
reg cz5bd26;
reg gode935;
reg nef49a9;
reg epa4d4b;
reg [3 : 0] yz26a5c;
reg [`ddr3_ip_inst_TWR_WIDTH - 1 : 0] fc352e5;
reg [`ddr3_ip_inst_TRRD_WIDTH - 1 : 0] mga972a;
reg [1 : 0] sh4b951;
reg su5ca8c;
reg aye5460;
reg vk2a301;
reg ip5180a;
reg vk8c054;
reg [`ddr3_ip_inst_ROW_WIDTH - 1 : 0] sh602a2;
reg [`ddr3_ip_inst_COL_WIDTH : 0] je1515;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] uka8aa;
reg [`ddr3_ip_inst_RL_WIDTH - 1 : 0] kd54550;
reg [`ddr3_ip_inst_WL_WIDTH - 1 : 0] pua2a85;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] ks1542b;
reg rvaa159;
reg dz50ace;
reg ir85676;
reg mg2b3b4;
reg me59da0;
reg [5 : 0] eaced00;
reg [2 : 0] lq76800;
reg kfb4002;
reg dba0014;
reg [2047:0] swa7;
wire [70:0] ou538;

`ifdef ddr3_ip_inst_ROW_WIDTH_12

`else

`endif

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`endif

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`endif

`ifdef ddr3_ip_inst_ROW_WIDTH_12

`else

`endif



`ifdef ddr3_ip_inst_DIR_SREF_EXT

`endif




`ifdef ddr3_ip_inst_X4_GEAR

`else

`endif

localparam kf29c0 = 71,do14e04 = 32'hfdffc68b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`ifdef ddr3_ip_inst_ROW_WIDTH_12


`else


`endif


`ifdef ddr3_ip_inst_DIR_SREF_EXT


`endif


`ifdef ddr3_ip_inst_DIR_SREF_EXT


`endif


`ifdef ddr3_ip_inst_ROW_WIDTH_12


`else


`endif


`ifdef ddr3_ip_inst_DIR_SREF_EXT


`endif


`ifdef ddr3_ip_inst_X4_GEAR


`else


`endif


















`ifdef ddr3_ip_inst_ROW_WIDTH_12



`else



`endif






`ifdef ddr3_ip_inst_DIR_SREF_EXT



`endif




`ifdef ddr3_ip_inst_DIR_SREF_EXT



`endif










`ifdef ddr3_ip_inst_ROW_WIDTH_12



`else



`endif









assign                          db9e308 = rvaa159;
assign                          ng8c233 = dz50ace;


assign                          an8cd7 = !cal_bc4 ;
assign                          qt6f598 = ir85676;
assign                          uv7acc4 = mg2b3b4;
assign                          lqf1846 = ks1542b;

assign                          bn376f8 = vk8c054 && !dba0014;
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) yzb12f4 <= 1'b0;   else yzb12f4 <= vk8c054;
end

wy3b2ea_ddr3_ip_inst czd9751(
   .clk(clk ) ,   .rst_n(rst_n ),
   .ec8d0c4(al4bd22 ),   .ay43101(ay43101 ),   .icc404c(icc404c ),   .yz1d21e(do9c123 ),   .vid0675(db198bd ),   .fpbfbde(gb5e914 ),   .tj9139b(goef5ca ),   .gdbbc78(ba307bc ),

   .zk79cda(zk79cda ),   .tu73699(tu73699 ),   .vida65e(vida65e) ,   .je99794(je99794),   .ip5e518(ip5e518)   );
bn94624_ddr3_ip_inst uka3127(
   .clk(clk ),   .rst_n(rst_n ),   .param_trp(param_trp ) ,   .param_tckesr(param_tckesr ) ,   .param_tzqoper(param_tzqoper ) ,   .param_tzqs(param_tzqs ),   .param_tmrd(param_tmrd ),   .param_tpd(param_tpd ),   .param_twr(fc352e5 ),   .param_txpdll(param_txpdll ),   .param_tcke(param_tcke ),   .kdc3f48(epa4d4b ),   .ayf5998(kd54550 ),   .tu73699(tu73699 ),   .ip5e518(ip5e518),   .ykde3c4(hq83de2 ),   .xwf1e20(fc1ef12 ),
   .gd8f103(gbf7893 ),   .ea7881d(ukbc49c ),   .mec40e9(ipe24e0 ),   .tw20748(ep12704 ),   .tj3a43(pu93824 ),   .yz1d21e(do9c123 ),   .dze90f5(ose091b ),   .xw487af(zm48d8 ),
   .go43d7a(wy246c3 ),   .xy1ebd0(qv23619 ),   .suf5e83(pu1b0cc ),   .tjaf419(fnd8662 ),   .sh7a0ce(gbc3317 ),   .vid0675(db198bd ),   .an237a8(ba307bc ),   .co1fa44 (yz26a5c  ),

   .baa88c8(baa88c8 ),   .ir23214(ir23214 ),   .hbc8527(hbc8527 ),   .vk149f2(vk149f2 ),   .nt27c94(nt27c94 ),   .mrf2539(mrf2539),   .tj94e69(fca734e ),   .gd39a72(gd39a72 ),   .tu69cae(tu69cae ),   .ww72b95(ww72b95 ),   .bn3d2ae(bn3d2ae ),   .icc404c(icc404c ),
   .ba991bb(ba991bb ),
   .blc8ddb(blc8ddb ),   .qg46edf(qg46edf ),   .qia941f(qia941f ),   .dz507cf(dz507cf ),   .mtbb7c7(mtbb7c7 ),
   .ykdbe3d(ykdbe3d ),
   .bydf1e9(bydf1e9 ),   .wjf8f4a(wjf8f4a ),   .dzc7a55(dzc7a55 ),   .ksb3c61(ksb3c61),   .ic466bd(ic466bd),   .sj335e9(sj335e9),

`ifdef ddr3_ip_inst_DIR_SREF_EXT
   .sref_ent_cmd (sref_ent_cmd),   .sref_ext_cmd (sref_ext_cmd),

`endif
   .oh1234b(ribd36f),   .ec8d2e6(lde9b7a)   );
kd4b983_ddr3_ip_inst go5cc1c(
   .clk(clk ),   .rst_n(rst_n ),   .uie0c97(zk79cda ),
      .fpbfbde(gb5e914 ),
   .shfdef6(nef48a5 ),
   .uief7b5(epa452b ),
   .bl7bda8(db2295d ),
   .kqded46(tw14aef ),
   .vvf6a31(hda577a ),
   .ntb518e(ntb518e ),
   .zma8c76(zma8c76 ),
   .me463b2(me463b2 ),   .wy31d91(wy31d91 ),   .zz8ec89(zz8ec89 ),   .fcb2273(jc5deb9 ),      .tj9139b(goef5ca ),
   .je89cdf(sh7ae50 ),
   .en4e6fb(thd7284 ),
   .ps737dd(ecb9426 ),
   .vx9beeb(jcca130 ),
   .dmdf75f(fn50983 ),
   .lqfbafa(lqfbafa ),
   .pfdd7d2(pfdd7d2 ),
   .hoebe97(hoebe97 ),   .fn5f4bb(fn5f4bb ),   .ayfa5de(ayfa5de ),   .gq9778f(yz260f7 ),   .tw11291(do9c123 || db198bd || ba307bc),
  .vida65e(vida65e) ,   .sude125(sude125 ),   .ayf0928(ayf0928 ),   .fp84941(epa1ade ),   .sw24a0f(sw24a0f ),   .fc25078(yzd6f4),   .lf283c3(rt6b7a4 ),   .kd41e1f(cz5bd26 ),   .gqf0fd(gode935 ),   .ea787e9(nef49a9 ),   .zm833ab(mrcc5ee),   .zz19d5b(ww62f74),   .eaceade(qv17ba1),   .mr756f0(lsbdd0d),   .sjab784(rgee86b ),   .kd5bc24(hb7435b ),   .param_trcd(param_trcd ),   .param_trp(param_trp ),   .param_tras(param_tras ),   .param_trc(param_trc ),   .param_trrd(mga972a ),   .param_trtp(param_trtp ),   .param_twtr(param_twtr ),   .czc6e18(czc6e18),   .yz1d21e(do9c123),   .vid0675(db198bd),   .xw7644e(ym2bbd7),   .jpd2ef1(zz84c1e),

   .ayf5998(ayf5998 ),   .coaccc1(coaccc1 ),   .wjedd26(wjedd26 ),   .hb749a7(hb749a7 ),   .hd8b7c8(hd8b7c8 ),   .of5be47(of5be47 ),   .tj94e69(tj94e69 ),   .ay43101(ay43101 ),   .zxc8c5b(zxc8c5b ),   .ksb9b7e(kdd9afb),   .su6df8f(rtcd7dc ),   .dz7e3c5(xwfb35f ),   .jr8e646(jr8e646 ),
   .dm73237(dm73237 ),   .zkdf23d(zkdf23d ),   .hbf91ea(hbf91ea ),   .oh1234b(sj9af4d),   .ec8d2e6(hbd7a6d),   .bn3d5ba(bn3d5ba) ,   .kqeadd6(kqeadd6) ,   .ngb7589(ngb7589),   .fa4dbd6(fa4dbd6),   .rd_odd(rd_odd),   .sh4e2a7(sh4e2a7)
);
sj8a9ee_ddr3_ip_inst uv54f74(
   .clk(clk ),   .rst_n(rst_n ),   .nt27c94(nt27c94 ),   .mrf2539(mrf2539),   .fadfb42(1'b0 ),   .gbfda13(1'b0 ),   .ened09d(1'b0 ),   .ea684ed(1'b0 ),   .fa42769(1'b0 ),   .vx13b4b(1'b0 ),   .ym9da5f(1'b0 ),   .yxed2f8(1'b0 ),   .gd39a72(gd39a72 ),   .baa88c8(baa88c8 ),   .rgc5735(ir23214 ),   .tj94e69(tj94e69 ),   .bn3d2ae(fca734e ),   .hb749a7(hb749a7 ),   .by475a9(rvaa159 ),   .end6a5a(dz50ace ),   .wjedd26(wjedd26 ),   .hbc8527(hbc8527 ),   .vk149f2(vk149f2 ),
   .co8dea7(1'b0 ),   .hbf91ea(mg2b3b4 ),   .tu69cae(tu69cae ),   .ww72b95(ww72b95 ),   .zxc8c5b(ks1542b ),   .ngb7589(lq76800),
   .ec8d0c4(al4bd22),   .xwfb35f(sh602a2),   .rtcd7dc(uka8aa),   .kdd9afb(je1515),   .addr_init_0(addr_init_0),   .addr_init_1(addr_init_1),   .addr_init_2(addr_init_2),   .addr_init_3(addr_init_3),
   .uk77c(bn376f8),   .dz507cf(dz507cf),   .qia941f(qia941f),   .wl_act(aye5460),   .dz61c91(vk2a301),   .pue48e(ip5180a),   .yk72473(yk72473),   .mg92399(mg92399),   .bn3d5ba(me59da0 ),   .kqeadd6(eaced00 ),   .sh4e2a7(sh4e2a7),      .vida65e(je99794),   
   .ddr_cs_n(ddr_cs_n ),   .ddr_ras_n(ddr_ras_n ),   .ddr_cas_n(ddr_cas_n ),   .ddr_we_n(ddr_we_n ),   .ddr_ba(ddr_ba ),   .ddr_addr(ddr_addr ),   .ddr_cke(ddr_cke),
   .mirror_on(mirror_on)
);


mg88f1d_ddr3_ip_inst by478e9(
   .clk(clk ),   .rst_n(rst_n ),   .datain(datain ),   .dmsel(dmsel ),   .hd8b7c8(rvaa159 ),   .of5be47(dz50ace ),

`ifdef ddr3_ip_inst_X4_GEAR
   .zkdf23d(1'b1 ),

`else
   .zkdf23d(ir85676 ),


`endif
   .ayf5998(kd54550 ),   .coaccc1(pua2a85 ),   .DataRdy2Data(sh4b951 ),   .je3ab0e(su5ca8c ),   .xwd5872(xwd5872 ),   .wl_act(aye5460 ),

  .datain_valid(datain_valid ),  .ddr_dq_out(ddr_dq_out ),  .dqs_out(dqs_out ),  .dqs_out_en(dqs_out_en ),  .dqs_out_en_erly(dqs_out_en_erly ),  .dq_out_en(dq_out_en ),  .ddr_dqm(ddr_dqm ),  .pio_read(pio_read ),  .cal_bc4(cal_bc4 )   );


always@* begin al4bd22<=ou538[0];gb5e914<=ou538[1];nef48a5<=ou538[2];epa452b<=ou538[3];db2295d<=ou538[4];tw14aef<=ou538[5];hda577a<=ou538[6];ym2bbd7<={xw7644e>>1,ou538[7]};jc5deb9<=ou538[8];goef5ca<=ou538[9];sh7ae50<=ou538[10];thd7284<=ou538[11];ecb9426<=ou538[12];jcca130<=ou538[13];fn50983<=ou538[14];zz84c1e<={jpd2ef1>>1,ou538[15]};yz260f7<=ou538[16];ba307bc<=ou538[17];hq83de2<=ou538[18];fc1ef12<=ou538[19];gbf7893<=ou538[20];ukbc49c<=ou538[21];ipe24e0<=ou538[22];ep12704<=ou538[23];pu93824<=ou538[24];do9c123<=ou538[25];ose091b<=ou538[26];zm48d8<=ou538[27];wy246c3<=ou538[28];qv23619<=ou538[29];pu1b0cc<=ou538[30];fnd8662<=ou538[31];gbc3317<=ou538[32];db198bd<=ou538[33];mrcc5ee<=ou538[34];ww62f74<=ou538[35];qv17ba1<=ou538[36];lsbdd0d<=ou538[37];rgee86b<=ou538[38];hb7435b<=ou538[39];epa1ade<=ou538[40];yzd6f4<=ou538[41];rt6b7a4<=ou538[42];cz5bd26<=ou538[43];gode935<=ou538[44];nef49a9<=ou538[45];epa4d4b<=ou538[46];yz26a5c<={co1fa44>>1,ou538[47]};fc352e5<={param_twr>>1,ou538[48]};mga972a<={param_trrd>>1,ou538[49]};sh4b951<={DataRdy2Data>>1,ou538[50]};su5ca8c<=ou538[51];aye5460<=ou538[52];vk2a301<=ou538[53];ip5180a<=ou538[54];vk8c054<=ou538[55];sh602a2<={xwfb35f>>1,ou538[56]};je1515<={kdd9afb>>1,ou538[57]};uka8aa<={rtcd7dc>>1,ou538[58]};kd54550<={ayf5998>>1,ou538[59]};pua2a85<={coaccc1>>1,ou538[60]};ks1542b<={zxc8c5b>>1,ou538[61]};rvaa159<=ou538[62];dz50ace<=ou538[63];ir85676<=ou538[64];mg2b3b4<=ou538[65];me59da0<=ou538[66];eaced00<={kqeadd6>>1,ou538[67]};lq76800<={ngb7589>>1,ou538[68]};kfb4002<=ou538[69];dba0014<=ou538[70];end
always@* begin swa7[2047]<=fpbfbde;swa7[2046]<=shfdef6;swa7[2044]<=uief7b5;swa7[2040]<=bl7bda8;swa7[2032]<=kqded46;swa7[2017]<=vvf6a31;swa7[1987]<=xw7644e[0];swa7[1980]<=param_trrd[0];swa7[1963]<=vid0675;swa7[1942]<=pue48e;swa7[1926]<=fcb2273;swa7[1921]<=tw20748;swa7[1913]<=DataRdy2Data[0];swa7[1903]<=lf283c3;swa7[1879]<=zm833ab;swa7[1872]<=hbf91ea;swa7[1837]<=wl_done;swa7[1805]<=tj9139b;swa7[1795]<=tj3a43;swa7[1783]<=kdc3f48;swa7[1778]<=je3ab0e;swa7[1770]<=hd8b7c8;swa7[1758]<=kd41e1f;swa7[1710]<=zz19d5b;swa7[1696]<=bn3d5ba;swa7[1679]<=gq9778f;swa7[1627]<=xwfb35f[0];swa7[1562]<=je89cdf;swa7[1543]<=yz1d21e;swa7[1519]<=co1fa44[0];swa7[1509]<=wl_act;swa7[1499]<=fp84941;swa7[1492]<=of5be47;swa7[1469]<=gqf0fd;swa7[1466]<=coaccc1[0];swa7[1398]<=sjab784;swa7[1373]<=eaceade;swa7[1344]<=kqeadd6[0];swa7[1310]<=gdbbc78;swa7[1280]<=fpbac4b;swa7[1207]<=kdd9afb[0];swa7[1144]<=xwf1e20;swa7[1076]<=en4e6fb;swa7[1039]<=dze90f5;swa7[1023]<=phy_init_act;swa7[990]<=param_twr[0];swa7[981]<=sh7a0ce;swa7[971]<=dz61c91;swa7[960]<=mec40e9;swa7[951]<=fc25078;swa7[936]<=zkdf23d;swa7[891]<=ea787e9;swa7[885]<=zxc8c5b[0];swa7[839]<=jpd2ef1[0];swa7[749]<=kd5bc24;swa7[733]<=ayf5998[0];swa7[699]<=mr756f0;swa7[640]<=ngb7589[0];swa7[572]<=ykde3c4;swa7[513]<=yzb12f4;swa7[490]<=tjaf419;swa7[480]<=ea7881d;swa7[419]<=dmdf75f;swa7[366]<=rtcd7dc[0];swa7[245]<=suf5e83;swa7[240]<=gd8f103;swa7[209]<=vx9beeb;swa7[122]<=xy1ebd0;swa7[104]<=ps737dd;swa7[61]<=go43d7a;swa7[30]<=xw487af;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule






























`timescale 1 ns / 100 ps
module zx4098b_ddr3_ip_inst (
    
    clk,			               
    rst_n,		                   

    
    cmd,                           
    addr,                          
    cmd_burst_cnt,                 
    cmd_valid,                     
    init_start,                    
    ofly_burst_len,                

    
    bn376f8,                 
    blc8ddb,                 
    mtbb7c7,                 
    jr8e646,                     
    dm73237,                     
    ic466bd,                   
    sj335e9,                   
    ykdbe3d,                      
    dzc7a55,                       
    bydf1e9,                     
    ba991bb,                     
    qg46edf,                     
    sj17fb8,                    
    `ifdef ddr3_ip_inst_EXT_AUTO_REF
    ext_auto_ref,                  
    ext_auto_ref_ack,              
    `endif

    
    trefi,                         
    ar_burst_cnt,                  
    tuc5cab,                     
    aa2e55b,                     
    ui72ad8,                     

    
    cmd_rdy,                       
    

    
    uxab605,                    
    al5b02c,                   
    pfd8164,               
    hoc0b27,            
    ie593b,                    
    sj2c9d9,                
    ld64ecc,                  
    db27666,                       
    ou3b336,                   
    qtd99b1,                      
    czc6e18,                      

    
    fpbfbde,                    
    shfdef6,                   
    uief7b5,                      
    bl7bda8,                       
    kqded46,                        
    ykde3c4,                
    xwf1e20,                
    gd8f103,                  
    ea7881d,                  
    fa5d2af,                 
    hbe957b,                
    zz8ec89,                      
    me463b2,                      
    wy31d91,                       
    zma8c76,                        
    mec40e9,                         
    yz1d21e,                  
    fcb2273,                   
    wyb6cd6,                     
    vvf6a31,                    
    ntb518e,                   
    cb9ac09,                         
    ipd604d,                         
    xw7644e,                       

    
    tj9139b,                    
    je89cdf,                   
    en4e6fb,                      
    ps737dd,                       
    vx9beeb,                        
    dze90f5,                
    xw487af,                
    go43d7a,                  
    xy1ebd0,                  
    czd38ea,                 
    do9c755,                
    ayfa5de,                      
    hoebe97,                      
    fn5f4bb,                       
    pfdd7d2,                        
    suf5e83,                         
    vid0675,                  
    gq9778f,                   
    hbe9f7c,                     
    dmdf75f,                    
    lqfbafa,                   
    ykef9b1,                         
    jc7cd89,                         
    jpd2ef1,                       

    ux3625f,                      
    irb12fd,                      
    
    co1fa44,                
    gdbbc78                       

);
input                                 clk;
input                                 rst_n;
input   [3:0]                         cmd;
input   [`ddr3_ip_inst_ADDR_WIDTH-1:0]             addr;
input   [4:0]                         cmd_burst_cnt;
input                                 cmd_valid;
input                                 init_start;
input                                 ofly_burst_len;
input                                 bn376f8;
input                                 blc8ddb;
input                                 mtbb7c7;
input                                 jr8e646;
input                                 dm73237;
input                                 ic466bd;
input                                 sj335e9;
input                                 ykdbe3d;
input                                 dzc7a55;
input                                 bydf1e9;
input                                 ba991bb;
input                                 qg46edf;
input                                 sj17fb8;

`ifdef ddr3_ip_inst_EXT_AUTO_REF
input                                 ext_auto_ref;
output                                ext_auto_ref_ack;

`endif
input   [15:0]                        trefi;
input   [2:0]                         ar_burst_cnt;
input   [15:0]                        tuc5cab;
input   [15:0]                        aa2e55b;
input   [15:0]                        ui72ad8;
output                                cmd_rdy;
output                                uxab605;
output  [3:0]                         al5b02c;
output                                pfd8164;
output                                hoc0b27;
output  [1:0]                         ie593b;
output  [2:0]                         sj2c9d9;
output                                ld64ecc;
output                                db27666;
output                                ou3b336;
output                                qtd99b1;
output  [2:0]                         czc6e18;
output                                fpbfbde;
output                                shfdef6;
output                                uief7b5;
output                                bl7bda8;
output                                kqded46;
output                                ykde3c4;
output                                xwf1e20;
output                                gd8f103;
output                                ea7881d;
output                                fa5d2af;
output                                hbe957b;
output  [`ddr3_ip_inst_ROW_WIDTH-1:0]              zz8ec89;
output  [`ddr3_ip_inst_COL_WIDTH-1:0]              me463b2;
output  [2:0]                         wy31d91;
output  [`ddr3_ip_inst_CS_WIDTH-1:0]               zma8c76;
output                                mec40e9;
output                                yz1d21e;
output                                fcb2273;
output                                wyb6cd6;
output                                vvf6a31;
output  [4:0]                         ntb518e;
output                                cb9ac09;
output                                ipd604d;
output  [2:0]                         xw7644e;
output                                tj9139b;
output                                je89cdf;
output                                en4e6fb;
output                                ps737dd;
output                                vx9beeb;
output                                dze90f5;
output                                xw487af;
output                                go43d7a;
output                                xy1ebd0;
output                                czd38ea;
output                                do9c755;
output  [`ddr3_ip_inst_ROW_WIDTH-1:0]              ayfa5de;
output  [`ddr3_ip_inst_COL_WIDTH-1:0]              hoebe97;
output  [2:0]                         fn5f4bb;
output  [`ddr3_ip_inst_CS_WIDTH-1:0]               pfdd7d2;
output                                suf5e83;
output                                vid0675;
output                                gq9778f;
output                                hbe9f7c;
output                                dmdf75f;
output  [4:0]                         lqfbafa;
output                                ykef9b1;
output                                jc7cd89;
output  [2:0]                         jpd2ef1;
output                          ux3625f;
output                          irb12fd;
output  [3:0]                         co1fa44;
output                                gdbbc78;

`define ddr3_ip_inst_CDL_READ 4'b0001

`define ddr3_ip_inst_CDL_WRITE 4'b0010

`define ddr3_ip_inst_CDL_READA 4'b0011

`define ddr3_ip_inst_CDL_WRITEA 4'b0100

`define ddr3_ip_inst_PWRDN_ENTRY 4'b0101

`define ddr3_ip_inst_LOAD_MR 4'b0110

`define ddr3_ip_inst_SEFL_REF_ENTRY 4'b1000

`define ddr3_ip_inst_SEFL_REF_EXIT 4'b1001

`define ddr3_ip_inst_PWRDN_EXIT 4'b1011

`define ddr3_ip_inst_ZQ_CAL_LONG 4'b1100

`define ddr3_ip_inst_ZQ_CAL_SHORT 4'b1101

`define ddr3_ip_inst_INT_BANK 8

`define ddr3_ip_inst_AR_CNT 4'd8

`define ddr3_ip_inst_WORST_CMD_SEQ_CLK 16'd320    //To be adjusted for DDR3

`ifdef ddr3_ip_inst_AR_BURST_8

`define ddr3_ip_inst_TREFI_ADJUST ((`ddr3_ip_inst_WORST_CMD_SEQ_CLK / 16'h8) )

`else

`ifdef ddr3_ip_inst_AR_BURST_1

`define ddr3_ip_inst_TREFI_ADJUST `ddr3_ip_inst_WORST_CMD_SEQ_CLK 

`else

`define ddr3_ip_inst_TREFI_ADJUST ((`ddr3_ip_inst_WORST_CMD_SEQ_CLK / `ddr3_ip_inst_AR_BURST_EN) )

`endif

`endif
parameter ay4ce6d   = 1'b0;
parameter ic67369   = 1'b1;
reg                     ep39b48;
reg   [3:0]             pfcda45 ;
reg   [3:0]             yk6d22f ;
reg   [3:0]             jc69179 ;
reg   [`ddr3_ip_inst_ADDR_WIDTH-1:0] tu48bcb;
reg   [`ddr3_ip_inst_ADDR_WIDTH-1:0] hb45e5b;
reg   [4:0]             je2f2df ;
reg   [4:0]             ps796fa ;
reg                     sucb7d2;
reg                     yx5be91;
reg                     cmd_rdy ;
reg                     uxab605;
reg                     nrd2351;
reg                     lf91a8e;
reg   [3:0]             sw8d476 ;
reg   [2:0]             czc6e18;
reg   [2:0]             al51d84;
reg                     ld64ecc;
reg                     db27666;
reg                     ou3b336;
reg                     rv8499f;
reg   [`ddr3_ip_inst_ROW_WIDTH-1:0]  zz8ec89;
reg   [`ddr3_ip_inst_COL_WIDTH-1:0]  me463b2;
reg   [2:0]             wy31d91;
reg   [`ddr3_ip_inst_CS_WIDTH-1:0]   zma8c76;
reg   [4:0]             ntb518e;
reg                     cb9ac09;
reg                     ipd604d;
reg   [2:0]             xw7644e;
reg   [`ddr3_ip_inst_ROW_WIDTH-1:0]  ayfa5de;
reg   [`ddr3_ip_inst_COL_WIDTH-1:0]  hoebe97;
reg   [2:0]             fn5f4bb;
reg   [`ddr3_ip_inst_CS_WIDTH-1:0]   pfdd7d2;
reg   [4:0]             lqfbafa;
reg                     ykef9b1;
reg                     jc7cd89;
reg   [2:0]             jpd2ef1;
reg   [`ddr3_ip_inst_CS_WIDTH-1:0]   vx1343c;
reg                     fpbfbde;
reg                     tj9139b;
reg                     mg879a2;
reg                     ux3cd10;
wire  [2:0]             nre6885;
reg                     uief7b5;
reg                     shfdef6;
reg                     kqded46;
reg                     bl7bda8;
reg                     vvf6a31;
reg                     gd8f103;
reg                     ea7881d;
reg                     ykde3c4;
reg                     xwf1e20;
reg                     fa5d2af;
reg                     hbe957b;
reg                     mec40e9;
reg                     yz1d21e;
reg                     fcb2273;
reg                     wyb6cd6 ;
reg                    ux3625f ;
reg                     en4e6fb;
reg                     je89cdf;
reg                     vx9beeb;
reg                     ps737dd;
reg                     dmdf75f;
reg                     go43d7a;
reg                     xy1ebd0;
reg                     dze90f5;
reg                     xw487af;
reg                     czd38ea;
reg                     do9c755;
reg                     suf5e83;
reg                     vid0675;
reg                     gq9778f;
reg                     hbe9f7c ;
reg                    irb12fd ;
reg                     ir33e82;
reg                     mt9f414;
reg                     eafa0a4;
reg                     ned0521;
reg                     mg8290b;
reg                     tw14858;
reg                     gda42c2;
reg                     qi21615;
reg                     twb0a9;
reg                     fa5854b;
reg                     hbc2a5b;
reg                ec152de;
reg                     swa96f1;
reg                     of4b789;
reg                     sh5bc4d;
reg                     eade26d;
reg                     tuf1368;
reg                     vk89b42;
reg                     vi4da13;
reg                     ui6d09b;
reg                     cm684d9;
reg                     ps426c9;
reg                     xl1364b;
reg                nt9b25e;
wire                    ofd92f6;
wire                    alc97b5;
wire                    gb4bdac;
wire                    cz5ed64;
wire                    jpf6b25;
wire                    vxb592e;
wire                    pfd8164;
wire                    hoc0b27;
reg   [1:0]             fc25dc6;
reg   [3:0]             al5b02c;
reg   [3:0]             ea77191;
reg   [1:0]             ie593b;
reg   [2:0]             sj2c9d9;
reg   [2:0]             xl3225d;
reg                     hd912ef ;
reg   [2:0]             ri8977f;
reg   [1:0]             mr4bbfa;
reg   [3:0]             xw5dfd4;
reg   [1:0]             osefea2;
reg   [2:0]             ip7f511;
reg                     sufa88d;
reg                     qgd4468;
reg                     lsa2341;
reg                     ba11a0a ;
reg                     qi8d052;
reg                     cm68290;
wire                    qtd99b1;
wire                    yma40c;
wire                    tu52061;
wire                    gd9030a;
wire                    lf81855;
wire                    rvc2af;
wire                    nr6157e;
wire                    ukabf7;
wire                    ld55fb8;
wire                    sref_ext_cmd;
wire                    nr7ee37;
wire                    enf71be;
wire                    jeb8df5;
wire  [`ddr3_ip_inst_BSIZE-1:0]      czc6fab;
wire  [3:0]             tj37d5c;
wire  [3:0]             wlbeae6;
wire                    wwf5734;
reg   [`ddr3_ip_inst_BSIZE-1:0]      uxab9a0;
reg                     cm5cd05 ;
reg                     fne6828 ;
reg                     ie34147 ;
reg                     nta0a38  ;

`ifdef ddr3_ip_inst_EXT_AUTO_REF
reg                     qi51c6;

`else
reg   [15:0]            bn28e30;
reg                     dm47186;
reg                     fp38c33;
reg                     wjc619f;
reg                     zm30cfd;
reg   [15:0]            vk867eb ;
reg   [ 3:0]            sj33f5b;

`endif
reg   [ 3:0]            co1fa44;
reg                     gdbbc78;
reg                     dmeb72c;
reg                     uv5b962;
reg                     wjdcb15;
reg                     goe58ac;
reg                     oh2c560;
reg                     go62b05;
reg                     qi15829;
reg                     gqac148;
reg                     wj60a41  ;
reg                     ks520c ;
reg                     ep29060 ;
reg                     fa48305;
reg                     uv4182a  ;
reg                     lfc155 ;
reg                     qt60aae ;
reg   [1:0]             ou5574;
reg                     je2aba0;
reg [(`ddr3_ip_inst_CS_WIDTH* 8)-1:0]   vv55d03;
reg [(`ddr3_ip_inst_CS_WIDTH* 8)-1:0]   wlae81e;
reg [(`ddr3_ip_inst_CS_WIDTH* 8)-1:0]   vv740f5;
reg [(`ddr3_ip_inst_CS_WIDTH* 8)-1:0]   nta07ae;
reg [(`ddr3_ip_inst_CS_WIDTH* 8)-1:0]   xl3d77;
reg                     do1ebbe;
reg                     osf5df3 ;
reg [2:0]               mtaef99;
wire                    qg77ccd ;
wire                    yzbe668 ;
wire                    thf3345 ;
wire                    zm99a2f ;
reg                     hbcd17a ;
reg                     ic68bd6 ;
reg                     jp45eb0 ;
reg                     zm2f587 ;
reg   [`ddr3_ip_inst_ROW_WIDTH-1:0]  of7ac3a;
wire  [5:0]             mrd61d4;
wire                    dbb0ea4;
wire                    aa87527;
wire                    fc3a939;
wire                    qgd49ca;
wire  [`ddr3_ip_inst_ROW_WIDTH-1:0]  ira4e50;
wire                    fp27284;

`ifdef ddr3_ip_inst_CS_WIDTH_4
wire                    gd39426;

`else
reg                     gd39426;

`endif
reg                     dz509a3;
wire                    jr84d1e;
wire                    an268f7;
wire                    uk347bd;
wire                    coa3de8;
wire                    ls1ef41;
wire                    czf7a0b;
wire                    pubd05c;
wire                    uve82e2;
reg   [`ddr3_ip_inst_ROW_WIDTH-1:0]  en41715;
wire  [`ddr3_ip_inst_ROW_WIDTH-1:0]  hqb8ac;
wire                    ic5c562;
wire                    ene2b11;
wire                    aa1588d;

`ifdef ddr3_ip_inst_CS_WIDTH_2
wire                    ieac468;
reg                     kq62341 ;

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4
wire  [1:0]             ieac468;
reg   [1:0]             kq62341 ;

`endif
reg                     kq68210;
wire                    cz41081;

`ifdef ddr3_ip_inst_EXT_AUTO_REF
wire                    sj840c;

`endif
wire                    tu42064;
wire                    aa10323;
reg                     ph81919;
reg                     xlc8cf;
wire                    nr6467f;
wire                    wl233ff;
wire                    nt19ffc;
wire                    necffe6;
wire                    gb7ff32;
wire                    ykff994;
wire                    pffcca0;
wire                    zxe6507;
reg                     lf3283e;
reg                     lf941f6;
wire                    zza0fb7;
integer                 kf7dbe;

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`else

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_1

`else

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_1

`else

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_1

`else

`endif
reg    co3edf4;

`ifdef ddr3_ip_inst_CS_WIDTH_1

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`endif

`ifdef ddr3_ip_inst_EXT_AUTO_REF

`else

`endif

`ifdef ddr3_ip_inst_EXT_AUTO_REF  //----------------------------

`else  //internal auto refresh              

`endif

`ifdef ddr3_ip_inst_EXT_AUTO_REF  //

`else              

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_1

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_1

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_1

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`endif
reg [3 : 0] vvf6fa0;
reg [`ddr3_ip_inst_ADDR_WIDTH - 1 : 0] lsb7d06;
reg [4 : 0] kfbe832;
reg faf4194;
reg pha0ca2;
reg jr6516;
reg bn328b7;
reg jr945be;
reg hqa2df7;
reg bn16fbb;
reg vkb7ddf;
reg mtbeefa;
reg wjf77d4;
reg yzbbea5;
reg nedf52c;
reg mefa962;
reg uid4b10;
reg pha5880;
reg ir2c406;
reg [15 : 0] kq62035;
reg [2 : 0] sw101a8;
reg [15 : 0] cb80d41;
reg [15 : 0] xl6a0d;
reg [15 : 0] do3506e;
reg xya8372;
reg [3 : 0] cz41b93;
reg [3 : 0] wldc9d;
reg [3 : 0] fn6e4ed;
reg [`ddr3_ip_inst_ADDR_WIDTH - 1 : 0] ic7276e;
reg [`ddr3_ip_inst_ADDR_WIDTH - 1 : 0] pu93b71;
reg [4 : 0] co9db8b;
reg [4 : 0] enedc58;
reg dz6e2c4;
reg vv71626;
reg nt8b136;
reg jc589b7;
reg [3 : 0] goc4dba;
reg [2 : 0] cb26dd1;
reg mt36e8d;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] rib746c;
reg lfba363;
reg qgd1b1f;
reg [2 : 0] gq8d8f8;
reg fa6c7c1;
reg ne63e0b;
reg uk1f05b;
reg shf82d8;
reg qgc16c4;
reg zmb620;
reg cz5b103;
reg fnd881c;
reg ayc40e6;
reg ba20730;
reg fp3983;
reg rv1cc1e;
reg vve60f6;
reg do307b6;
reg xy83db2;
reg do1ed92;
reg rtf6c93;
reg ecb649e;
reg jeb24f1;
reg wy9278b;
reg do93c58;
reg nt9e2c3;
reg nef161e;
reg bn8b0f2;
reg rg58797;
reg yxc3cbb;
reg ls1e5dc;
reg yxf2ee2;
reg ie97714;
reg wlbb8a0;
reg [1 : 0] yxdc504;
reg [3 : 0] cze2825;
reg [2 : 0] ls1412d;
reg zza096b;
reg [2 : 0] je4b5e;
reg [1 : 0] zm25af3;
reg [3 : 0] lf2d79a;
reg [1 : 0] ld6bcd7;
reg [2 : 0] kd5e6bf;
reg rtf35fc;
reg kf9afe7;
reg vvd7f3d;
reg bnbf9ef;
reg nrfcf7e;
reg ipe7bf7;
reg jr3dfbd;
reg ayefdef;
reg bl7ef79;
reg mrf7bce;
reg ribde74;
reg meef3a3;
reg ne79d18;
reg goce8c3;
reg dz74618;
reg wya30c6;
reg mt18630;
reg kdc3185;
reg [`ddr3_ip_inst_BSIZE - 1 : 0] ir18c2d;
reg [3 : 0] alc616c;
reg [3 : 0] fc30b65;
reg sj85b2b;
reg [`ddr3_ip_inst_BSIZE - 1 : 0] vx2d95d;
reg ho6caee;
reg al65772;
reg uk2bb95;
reg dm5dca9;
reg lqee54a;
reg ea72a52;
reg gd95290;
reg iea9485;
reg nr4a429;
reg jc5214f;
reg ep90a7a;
reg qv853d4;
reg an29ea4;
reg xj4f524;
reg mr7a927;
reg uid493c;
reg oha49e0;
reg ym24f04;
reg db27820;
reg [1 : 0] ux3c107;
reg goe083c;
reg [(`ddr3_ip_inst_CS_WIDTH * 8) - 1 : 0] ng41e0;
reg [(`ddr3_ip_inst_CS_WIDTH * 8) - 1 : 0] ba20f02;
reg [(`ddr3_ip_inst_CS_WIDTH * 8) - 1 : 0] an7812;
reg [(`ddr3_ip_inst_CS_WIDTH * 8) - 1 : 0] cb3c094;
reg [(`ddr3_ip_inst_CS_WIDTH * 8) - 1 : 0] sue04a4;
reg kf2521;
reg ir1290d;
reg [2 : 0] bn9486d;
reg sja436e;
reg ie21b75;
reg epdba8;
reg os6dd45;
reg fn6ea28;
reg of75147;
reg hqa8a3c;
reg bl451e2;
reg [`ddr3_ip_inst_ROW_WIDTH - 1 : 0] lf28f16;
reg [5 : 0] fa478b6;
reg qv3c5b2;
reg cze2d94;
reg nt16ca5;
reg mgb652f;
reg [`ddr3_ip_inst_ROW_WIDTH - 1 : 0] vkb2979;
reg nt94bca;
reg lfa5e56;
reg ba2f2b6;
reg dm795b2;
reg bycad92;
reg me56c92;
reg ecb6491;
reg jeb2489;
reg wy9244b;
reg co92258;
reg [`ddr3_ip_inst_ROW_WIDTH - 1 : 0] bn912c0;
reg [`ddr3_ip_inst_ROW_WIDTH - 1 : 0] vk89607;
reg sh4b03a;
reg xw581d5;
reg tuc0eab;
reg cb755b;
reg vk3aadd;
reg psd56ea;
reg epab753;
reg cz5ba9c;
reg jpdd4e5;
reg kqea72f;
reg ww53978;
reg hq9cbc1;
reg qge5e0a;
reg pu2f050;
reg kq78282;
reg eac1410;
reg gqa080;
reg hb50401;
reg qi8200f;
reg co10079;
reg ep803c9;
reg [2047:0] swa7;
wire [181:0] ou538;

`ifdef ddr3_ip_inst_EXT_AUTO_REF

`endif

`define ddr3_ip_inst_CDL_READ 4'b0001

`define ddr3_ip_inst_CDL_WRITE 4'b0010

`define ddr3_ip_inst_CDL_READA 4'b0011

`define ddr3_ip_inst_CDL_WRITEA 4'b0100

`define ddr3_ip_inst_PWRDN_ENTRY 4'b0101

`define ddr3_ip_inst_LOAD_MR 4'b0110

`define ddr3_ip_inst_SEFL_REF_ENTRY 4'b1000

`define ddr3_ip_inst_SEFL_REF_EXIT 4'b1001

`define ddr3_ip_inst_PWRDN_EXIT 4'b1011

`define ddr3_ip_inst_ZQ_CAL_LONG 4'b1100

`define ddr3_ip_inst_ZQ_CAL_SHORT 4'b1101

`define ddr3_ip_inst_INT_BANK 8

`define ddr3_ip_inst_AR_CNT 4'd8

`define ddr3_ip_inst_WORST_CMD_SEQ_CLK 16'd320    //To be adjusted for DDR3

`ifdef ddr3_ip_inst_AR_BURST_8

`define ddr3_ip_inst_TREFI_ADJUST ((`ddr3_ip_inst_WORST_CMD_SEQ_CLK / 16'h8) )

`else

`ifdef ddr3_ip_inst_AR_BURST_1

`define ddr3_ip_inst_TREFI_ADJUST `ddr3_ip_inst_WORST_CMD_SEQ_CLK 

`else

`define ddr3_ip_inst_TREFI_ADJUST ((`ddr3_ip_inst_WORST_CMD_SEQ_CLK / `ddr3_ip_inst_AR_BURST_EN) )

`endif

`endif

`ifdef ddr3_ip_inst_EXT_AUTO_REF

`else

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`endif

`ifdef ddr3_ip_inst_EXT_AUTO_REF

`endif

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`else

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_1

`else

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_1

`else

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_1

`else

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_1

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`endif

`ifdef ddr3_ip_inst_EXT_AUTO_REF

`else

`endif

`ifdef ddr3_ip_inst_EXT_AUTO_REF  //----------------------------

`else  //internal auto refresh              

`endif

`ifdef ddr3_ip_inst_EXT_AUTO_REF  //

`else              

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_1

`endif


`ifdef ddr3_ip_inst_CS_WIDTH_1

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_1

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4


`endif

localparam kf29c0 = 182,do14e04 = 32'hfdffc68b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`ifdef ddr3_ip_inst_EXT_AUTO_REF


`endif


`define ddr3_ip_inst_CDL_READ 4'b0001


`define ddr3_ip_inst_CDL_WRITE 4'b0010


`define ddr3_ip_inst_CDL_READA 4'b0011


`define ddr3_ip_inst_CDL_WRITEA 4'b0100


`define ddr3_ip_inst_PWRDN_ENTRY 4'b0101


`define ddr3_ip_inst_LOAD_MR 4'b0110


`define ddr3_ip_inst_SEFL_REF_ENTRY 4'b1000


`define ddr3_ip_inst_SEFL_REF_EXIT 4'b1001


`define ddr3_ip_inst_PWRDN_EXIT 4'b1011


`define ddr3_ip_inst_ZQ_CAL_LONG 4'b1100


`define ddr3_ip_inst_ZQ_CAL_SHORT 4'b1101


`define ddr3_ip_inst_INT_BANK 8


`define ddr3_ip_inst_AR_CNT 4'd8


`define ddr3_ip_inst_WORST_CMD_SEQ_CLK 16'd320    //To be adjusted for DDR3


`ifdef ddr3_ip_inst_AR_BURST_8


`define ddr3_ip_inst_TREFI_ADJUST ((`ddr3_ip_inst_WORST_CMD_SEQ_CLK / 16'h8) )


`else


`ifdef ddr3_ip_inst_AR_BURST_1


`define ddr3_ip_inst_TREFI_ADJUST `ddr3_ip_inst_WORST_CMD_SEQ_CLK 


`else


`define ddr3_ip_inst_TREFI_ADJUST ((`ddr3_ip_inst_WORST_CMD_SEQ_CLK / `ddr3_ip_inst_AR_BURST_EN) )


`endif


`endif


`ifdef ddr3_ip_inst_EXT_AUTO_REF


`else


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_4


`else


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_4


`endif


`ifdef ddr3_ip_inst_EXT_AUTO_REF


`endif


`ifdef ddr3_ip_inst_DIR_SREF_EXT


`else


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_4


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_1


`else


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_1


`else


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_1


`else


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_1


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_4


`endif


`ifdef ddr3_ip_inst_EXT_AUTO_REF


`else


`endif


`ifdef ddr3_ip_inst_EXT_AUTO_REF  //----------------------------


`else  //internal auto refresh              


`endif


`ifdef ddr3_ip_inst_EXT_AUTO_REF  //


`else              


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_4


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_1


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_1


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_4


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_1


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_4


`endif






`ifdef ddr3_ip_inst_EXT_AUTO_REF



`endif












`define ddr3_ip_inst_CDL_READ 4'b0001



`define ddr3_ip_inst_CDL_WRITE 4'b0010



`define ddr3_ip_inst_CDL_READA 4'b0011



`define ddr3_ip_inst_CDL_WRITEA 4'b0100



`define ddr3_ip_inst_PWRDN_ENTRY 4'b0101



`define ddr3_ip_inst_LOAD_MR 4'b0110



`define ddr3_ip_inst_SEFL_REF_ENTRY 4'b1000



`define ddr3_ip_inst_SEFL_REF_EXIT 4'b1001



`define ddr3_ip_inst_PWRDN_EXIT 4'b1011



`define ddr3_ip_inst_ZQ_CAL_LONG 4'b1100



`define ddr3_ip_inst_ZQ_CAL_SHORT 4'b1101




`define ddr3_ip_inst_INT_BANK 8



`define ddr3_ip_inst_AR_CNT 4'd8











`define ddr3_ip_inst_WORST_CMD_SEQ_CLK 16'd320    //To be adjusted for DDR3




`ifdef ddr3_ip_inst_AR_BURST_8



`define ddr3_ip_inst_TREFI_ADJUST ((`ddr3_ip_inst_WORST_CMD_SEQ_CLK / 16'h8) )



`else



`ifdef ddr3_ip_inst_AR_BURST_1



`define ddr3_ip_inst_TREFI_ADJUST `ddr3_ip_inst_WORST_CMD_SEQ_CLK 



`else




`define ddr3_ip_inst_TREFI_ADJUST ((`ddr3_ip_inst_WORST_CMD_SEQ_CLK / `ddr3_ip_inst_AR_BURST_EN) )



`endif



`endif









`ifdef ddr3_ip_inst_EXT_AUTO_REF



`else



`endif



`ifdef ddr3_ip_inst_CS_WIDTH_4



`else



`endif



`ifdef ddr3_ip_inst_CS_WIDTH_2



`endif




`ifdef ddr3_ip_inst_CS_WIDTH_4



`endif



`ifdef ddr3_ip_inst_EXT_AUTO_REF



`endif






assign zza0fb7 = ((al65772 && vvf6fa0 != `ddr3_ip_inst_SEFL_REF_EXIT) || (!al65772 && vvf6fa0 == `ddr3_ip_inst_SEFL_REF_EXIT) ||                       (dm5dca9   && vvf6fa0 != `ddr3_ip_inst_PWRDN_EXIT) || (!dm5dca9   && vvf6fa0 == `ddr3_ip_inst_PWRDN_EXIT)) ? 1'b1 : 1'b0;

assign zxe6507 = ( vvf6fa0 == 4'h0 || vvf6fa0 == 4'h7 || vvf6fa0 == 4'ha || vvf6fa0 == 4'he || vvf6fa0 == 4'hf || co10079 )                       ? 1'b1 : 1'b0;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      ep39b48          <= 1'b0;      pfcda45                <= 4'h0;      yk6d22f               <= 4'h0;      jc69179              <= 4'h0;      tu48bcb               <= {`ddr3_ip_inst_ADDR_WIDTH{1'b0}};      hb45e5b              <= {`ddr3_ip_inst_ADDR_WIDTH{1'b0}};      je2f2df      <= 5'b0;      ps796fa     <= 5'b0;      wj60a41       <= 1'b0;      ks520c      <= 1'b0;      ep29060      <= 1'b0;      nrd2351     <= 1'b0;      lf91a8e    <= 1'b0;      sw8d476       <= `ddr3_ip_inst_AR_CNT;   end   else begin      ep39b48          <= faf4194 & ~gqa080;      pfcda45                <= vvf6fa0;      yk6d22f               <= vvf6fa0;      jc69179              <= cz41b93;      tu48bcb               <= lsb7d06;      hb45e5b              <= ic7276e;      je2f2df      <= kfbe832;      ps796fa     <= co9db8b;      wj60a41       <= cze2d94;      ks520c      <= cze2d94;      ep29060      <= cze2d94;      nrd2351     <= jr6516;      lf91a8e    <= nt8b136;      sw8d476       <= {~(|(sw101a8)),sw101a8};    end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      yx5be91         <= 1'b0;   end   else if (pha0ca2 && !vv71626 & !bnbf9ef) begin      yx5be91         <= 1'b1;   end   else if (bn328b7) begin      yx5be91         <= 1'b0;   end   else      yx5be91         <= vv71626;
end
assign qtd99b1             = vv71626 & ~bn328b7;


always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      ba11a0a      <= 1'b0;   end   else begin      ba11a0a      <= bn328b7;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      sucb7d2          <= 1'b0;   end   else if (!goe083c) begin      sucb7d2          <= 1'b0;   end   else begin      sucb7d2          <= ~dz6e2c4;   end
end
assign gd9030a        = (cz41b93 == `ddr3_ip_inst_CDL_WRITE)  ? 1'b1 : 1'b0;
assign lf81855        = (cz41b93 == `ddr3_ip_inst_CDL_READ)   ? 1'b1 : 1'b0;
assign rvc2af       = (cz41b93 == `ddr3_ip_inst_CDL_WRITEA) ? 1'b1 : 1'b0;
assign nr6157e       = (cz41b93 == `ddr3_ip_inst_CDL_READA)  ? 1'b1 : 1'b0;
assign ukabf7       = (cz41b93 == `ddr3_ip_inst_LOAD_MR)    ? 1'b1 : 1'b0;
assign ld55fb8      = (cz41b93 == `ddr3_ip_inst_SEFL_REF_ENTRY) ? 1'b1 : 1'b0;
assign sref_ext_cmd  = (cz41b93 == `ddr3_ip_inst_SEFL_REF_EXIT)  ? 1'b1 : 1'b0;
assign nr7ee37        = (cz41b93 == `ddr3_ip_inst_PWRDN_ENTRY)    ? 1'b1 : 1'b0;
assign enf71be    = (cz41b93 == `ddr3_ip_inst_PWRDN_EXIT)     ? 1'b1 : 1'b0;
assign jeb8df5   = (cz41b93 == `ddr3_ip_inst_ZQ_CAL_LONG || cz41b93 == `ddr3_ip_inst_ZQ_CAL_SHORT )    ? 1'b1 : 1'b0;
assign aa10323 = wldc9d[3] & ~wldc9d[2] & wldc9d[0];
assign tu42064  = cz41b93[3]  & ~cz41b93[2]  & cz41b93[0];
assign yma40c = bl7ef79 | mrf7bce |  ribde74 | meef3a3;
assign tu52061 = ~wldc9d[3] & (~wldc9d[2] | (wldc9d[2] & ~wldc9d[1] & ~wldc9d[0]));
assign czc6fab = ic7276e[`ddr3_ip_inst_COL_WIDTH+`ddr3_ip_inst_BSIZE-1:`ddr3_ip_inst_COL_WIDTH];  


`ifdef ddr3_ip_inst_DIR_SREF_EXT

assign aa87527  = uid493c & xya8372;
assign fc3a939  = oha49e0 & xya8372;
assign qgd49ca  = oha49e0 & xya8372;
assign ira4e50  = ic7276e[`ddr3_ip_inst_ADDR_WIDTH-1:`ddr3_ip_inst_COL_WIDTH+`ddr3_ip_inst_BSIZE];


`else

assign aa87527  = uid493c & xya8372 &                        (~cz5ba9c | psd56ea);

assign fc3a939  = oha49e0 & xya8372 &                        (~cz5ba9c | epab753);
assign qgd49ca  = oha49e0 & xya8372 &                        (~cz5ba9c );

`endif


assign ira4e50  = ic7276e[`ddr3_ip_inst_ADDR_WIDTH-1:`ddr3_ip_inst_COL_WIDTH+`ddr3_ip_inst_BSIZE];
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      ph81919         <= 1'b0;   end   else if (psd56ea && uid493c && xya8372) begin      ph81919         <= 1'b0;   end
   else if ((wya30c6 || goce8c3) && uid493c && xya8372) begin      ph81919         <= 1'b1;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      cm5cd05           <= 1'b0;      fne6828         <= 1'b0;   end   else if (goce8c3 & cze2d94) begin      cm5cd05           <= 1'b1;      fne6828         <= 1'b1;   end   else if (dz74618 & cze2d94) begin      cm5cd05           <= 1'b0;      fne6828         <= 1'b0;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      ie34147           <= 1'b0;      nta0a38         <= 1'b0;   end   else if (wya30c6 & cze2d94) begin      ie34147           <= 1'b1;      nta0a38         <= 1'b1;   end   else if (mt18630 & cze2d94) begin      ie34147           <= 1'b0;      nta0a38         <= 1'b0;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      do1ebbe           <= 1'b0;   end   else begin      do1ebbe           <= jr3dfbd;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      mtaef99          <= 3'b0;   end
   else if(kf2521 && an29ea4  )   begin      mtaef99          <=  ic7276e[`ddr3_ip_inst_COL_WIDTH+2:`ddr3_ip_inst_COL_WIDTH];   end
end



`ifdef ddr3_ip_inst_CS_WIDTH_2
    assign ieac468 = ic7276e[`ddr3_ip_inst_COL_WIDTH+3];    assign ic5c562 = (kq62341 == ic7276e[`ddr3_ip_inst_COL_WIDTH+3]);


`endif




`ifdef ddr3_ip_inst_CS_WIDTH_4
    assign ieac468 = ic7276e[`ddr3_ip_inst_COL_WIDTH+4:`ddr3_ip_inst_COL_WIDTH+3];    assign ic5c562 = (kq62341 == ic7276e[`ddr3_ip_inst_COL_WIDTH+4:`ddr3_ip_inst_COL_WIDTH+3]);


`endif




`ifdef ddr3_ip_inst_CS_WIDTH_1



`else

always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      kq62341              <= {`ddr3_ip_inst_CS_WIDTH/2{1'b0}};   end   else if(kf2521 && cze2d94  )   begin      kq62341              <= ieac468 ;   end
end

`endif






always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      rv8499f      <= 1'b0;      osf5df3     <= 1'b0;   end   else if (an29ea4) begin      rv8499f      <= ~mt36e8d;      osf5df3     <= ~ir1290d;   end
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      kq68210  <= 1'b0;   end   else if (cze2d94) begin      kq68210  <= ~cb755b;   end
end


always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      lf3283e          <= 1'b0;   end   else begin      if (an29ea4 && !mt36e8d) begin         lf3283e      <= (pu93b71[`ddr3_ip_inst_COL_WIDTH+2:`ddr3_ip_inst_COL_WIDTH] == bn9486d) ? 1'b1 : 1'b0  ;      end   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      lf941f6          <= 1'b0;   end   else begin      if (an29ea4 && mt36e8d) begin         lf941f6      <= (pu93b71[`ddr3_ip_inst_COL_WIDTH+2:`ddr3_ip_inst_COL_WIDTH] == bn9486d) ? 1'b1 : 1'b0  ;      end   end
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      zz8ec89             <= {`ddr3_ip_inst_ROW_WIDTH{1'b0}};      me463b2             <= {`ddr3_ip_inst_COL_WIDTH{1'b0}};      wy31d91              <= 3'b0;      zma8c76               <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};      ntb518e          <= 5'b0;      cb9ac09                <= ay4ce6d;      ipd604d                <= ic67369;      xw7644e              <= 3'h0;            ayfa5de             <= {`ddr3_ip_inst_ROW_WIDTH{1'b0}};      hoebe97             <= {`ddr3_ip_inst_COL_WIDTH{1'b0}};      fn5f4bb              <= 3'b0;      pfdd7d2               <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};      lqfbafa          <= 5'b0;      ykef9b1                <= ay4ce6d;      jc7cd89                <= ic67369;      jpd2ef1              <= 3'h0;            wyb6cd6            <= 1'b0;      hbe9f7c            <= 1'b0;
   end   else begin      if (mr7a927 && !mt36e8d) begin         me463b2         <= pu93b71[`ddr3_ip_inst_COL_WIDTH-1:0];         wy31d91          <= (ne79d18) ? pu93b71[18:16] : pu93b71[`ddr3_ip_inst_COL_WIDTH+2:`ddr3_ip_inst_COL_WIDTH];         zma8c76           <= rib746c;         zz8ec89         <= pu93b71[`ddr3_ip_inst_ADDR_WIDTH-1:`ddr3_ip_inst_BSIZE+`ddr3_ip_inst_COL_WIDTH];                  ntb518e      <= enedc58;         cb9ac09            <= (yxdc504 == 2'b01) ? ~jc589b7 : yxdc504[1] ;         ipd604d            <= (yxdc504 == 2'b01) ?  jc589b7 : ~yxdc504[1] ;         


`ifdef ddr3_ip_inst_CS_WIDTH_1
         wyb6cd6        <= 1'b1;


`else
         wyb6cd6        <= sh4b03a & jr3dfbd   ;


`endif
         xw7644e          <= pu93b71[12:10];      end      if (mr7a927 && mt36e8d) begin         hoebe97         <= pu93b71[`ddr3_ip_inst_COL_WIDTH-1:0];         fn5f4bb          <= (ne79d18) ? pu93b71[18:16] : pu93b71[`ddr3_ip_inst_COL_WIDTH+2:`ddr3_ip_inst_COL_WIDTH];         pfdd7d2           <= rib746c;         ayfa5de         <= pu93b71[`ddr3_ip_inst_ADDR_WIDTH-1:`ddr3_ip_inst_COL_WIDTH+`ddr3_ip_inst_BSIZE];                  lqfbafa      <= enedc58;         ykef9b1            <= (yxdc504 == 2'b01) ? ~jc589b7 : yxdc504[1] ;         jc7cd89            <= (yxdc504 == 2'b01) ?  jc589b7 : ~yxdc504[1] ;         


`ifdef ddr3_ip_inst_CS_WIDTH_1
         hbe9f7c        <= 1'b1;


`else
         hbe9f7c        <= sh4b03a & jr3dfbd  ;


`endif
         jpd2ef1          <= pu93b71[12:10];      end   end
end


assign gb4bdac = xj4f524 & kf2521 & ~mt36e8d;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      hbcd17a <= 1'b0;   end   else if (ls1e5dc) begin      hbcd17a <= 1'b1;   end   else if (bn16fbb) begin      hbcd17a <= 1'b0;   end
end
assign qg77ccd = ls1e5dc | fn6ea28 ;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      fpbfbde       <= 1'b0;      fcb2273      <= 1'b0;   end   else if (bn16fbb) begin      fpbfbde       <= 1'b0;      fcb2273      <= 1'b0;   end   else if (sja436e && tuc0eab) begin      fpbfbde       <= 1'b1;      fcb2273      <= hb50401;   end
end


assign cz5ed64 = xj4f524 & kf2521 & mt36e8d;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      ic68bd6 <= 1'b0;   end   else if (yxf2ee2) begin      ic68bd6 <= 1'b1;   end   else if (vkb7ddf) begin      ic68bd6 <= 1'b0;   end
end

assign yzbe668 = yxf2ee2 | of75147 ;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      tj9139b       <= 1'b0;      gq9778f      <= 1'b0;   end   else if (vkb7ddf) begin      tj9139b       <= 1'b0;      gq9778f      <= 1'b0;   end   else if (ie21b75 && xw581d5) begin      tj9139b       <= 1'b1;      gq9778f      <= qi8200f;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      mg879a2       <= 1'b0;      ux3cd10       <= 1'b0;   end   else begin      mg879a2       <= fpbfbde;      ux3cd10       <= tj9139b;   end
end
assign ofd92f6 = fpbfbde & ~lfba363;
assign alc97b5 = tj9139b & ~qgd1b1f;



always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      qi8d052 <= 1'b0;      cm68290 <= 1'b0;   end   else begin      qi8d052 <= mtbeefa;      cm68290 <= wjf77d4;   end
end


assign jpf6b25 = xj4f524 & ~kf2521 & ~mt36e8d;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      jp45eb0 <= 1'b0;   end   else if (ie97714) begin      jp45eb0 <= 1'b1;   end   else if (nrfcf7e) begin      jp45eb0 <= 1'b0;   end
end
assign thf3345 = ie97714 | hqa8a3c ;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      yz1d21e       <= 1'b0;   end   else if (nrfcf7e) begin      yz1d21e       <= 1'b0;   end   else if (epdba8 && tuc0eab) begin      yz1d21e       <= 1'b1;   end
end


assign vxb592e = xj4f524 & ~kf2521 & mt36e8d;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      zm2f587 <= 1'b0;   end   else if (wlbb8a0) begin      zm2f587 <= 1'b1;   end   else if (ipe7bf7) begin      zm2f587 <= 1'b0;   end
end
assign zm99a2f = wlbb8a0 | bl451e2 ;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      vid0675       <= 1'b0;   end   else if (ipe7bf7) begin      vid0675       <= 1'b0;   end   else if (os6dd45 && xw581d5 ) begin      vid0675       <= 1'b1;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      cmd_rdy         <= 1'b0;      fa48305       <= 1'b0;      uv4182a      <= 1'b0;      lfc155  <= 1'b0;      qt60aae <= 1'b0;   end   else  begin      cmd_rdy       <= dm795b2 & ~db27820;
      lfc155  <= dm795b2 & ~db27820;
      qt60aae <= dm795b2;      fa48305       <= ym24f04;      uv4182a      <= ym24f04;   end
end







assign ene2b11 = (~sja436e  | bn16fbb) & (~epdba8 | nrfcf7e);
assign aa1588d = (~ie21b75  | vkb7ddf) & (~os6dd45 | ipe7bf7);

assign nt19ffc = (~fn6ea28  | bn16fbb) & (~hqa8a3c | nrfcf7e);
assign necffe6 = (~of75147  | vkb7ddf) & (~bl451e2 | ipe7bf7);
assign nr6467f  =  gd95290 | jpdd4e5;
assign wl233ff  =  uid493c & xya8372 & (ne79d18 | dz74618 | mt18630 | kdc3185);
assign cz41081 = bn16fbb | vkb7ddf | mtbeefa | wjf77d4;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      co3edf4           <= 1'b0;   end   else begin      co3edf4           <= vk3aadd;   end
end
assign an268f7 = (((dz6e2c4 & ~ep803c9) | vk3aadd) & ~kqea72f & ~ww53978 &                      ((~cb755b & ~nt16ca5 & hq9cbc1)   |               (~cb755b &  nt16ca5 & qge5e0a)   |               ( cb755b & ~nt16ca5 & qge5e0a)   |                       ( cb755b &  nt16ca5 & hq9cbc1)                      ));
always @(negedge rst_n or posedge clk) begin   if (!rst_n)      xlc8cf     <= 1'b0;   else if (cze2d94 && (ne79d18 || kdc3185 || dz74618 || mt18630))      xlc8cf     <= 1'b1;   else if (yzbbea5 || nedf52c || uid4b10 || pha5880)      xlc8cf     <= 1'b0;
end





`ifdef ddr3_ip_inst_CS_WIDTH_1

always @ (ir18c2d) begin   vx1343c[0] = 0;
end

`endif




`ifdef ddr3_ip_inst_CS_WIDTH_2

always @ (ir18c2d) begin   vx1343c = 2'h3;   case (ir18c2d[3])        1'b0 : vx1343c[0] = 0;      1'b1 : vx1343c[1] = 0;   endcase
end

`endif




`ifdef ddr3_ip_inst_CS_WIDTH_4

always @ (ir18c2d) begin   vx1343c = 4'hf;   case (ir18c2d[4:3])        2'b00 : vx1343c[0] = 0;      2'b01 : vx1343c[1] = 0;      2'b10 : vx1343c[2] = 0;      2'b11 : vx1343c[3] = 0;   endcase
end

`endif









always @ (posedge clk or negedge rst_n) begin    if (!rst_n) begin        fc25dc6            <= 2'b0;        uxab605           <= 1'b0;        ea77191         <= 4'h0;        al51d84            <= 3'b0;        ie593b           <= 2'b0;        xl3225d      <= 3'b0;        ld64ecc         <= 1'b0;        db27666              <= 1'b0;        ou3b336          <= 1'b0;        ri8977f         <= 3'b0;        mr4bbfa        <= 2'b0;        hd912ef       <= 1'b0;        xw5dfd4      <= 4'b0;        osefea2       <= 2'b0;        ip7f511   <= 3'b0;        sufa88d     <= 1'b0;        qgd4468          <= 1'b0;        lsa2341      <= 1'b0;
    end    else if (qtd99b1) begin        fc25dc6            <= cb80d41[1:0];        uxab605           <= cb80d41[3];        ea77191         <= {cb80d41[6:4],cb80d41[2]};        al51d84            <= cb80d41[11:9];        ie593b           <= xl6a0d[4:3];          xl3225d      <= do3506e[5:3];        ld64ecc         <= cb80d41[12];        db27666              <= xl6a0d[9]  | xl6a0d[6] | xl6a0d[2];        ou3b336          <= do3506e[10] | do3506e[9];        ri8977f         <= 3'b001;                  mr4bbfa        <= 2'b00;                   hd912ef       <= 1'b0;                    xw5dfd4      <= 4'b0010;        osefea2       <= 2'b00;                   ip7f511   <= 3'b000;                  sufa88d     <= 1'b0;        qgd4468          <= 1'b0;        lsa2341      <= 1'b0;
    end    else begin                 if ((cz41b93 == `ddr3_ip_inst_LOAD_MR) && cze2d94 && (ic7276e[17:16] == 2'b00)) begin            mr4bbfa    <= ic7276e[1:0];            hd912ef   <= ic7276e[3];            xw5dfd4  <= {ic7276e[6:4],ic7276e[2]};            ri8977f     <= ic7276e[11:9];            sufa88d <= ic7276e[12];         end
         if ((cz41b93 == `ddr3_ip_inst_LOAD_MR) && cze2d94 && (ic7276e[17:16] == 2'b01)) begin            osefea2   <= ic7276e[4:3];            qgd4468      <= ic7276e[9] | ic7276e[6] | ic7276e[2];         end     if ((cz41b93 == `ddr3_ip_inst_LOAD_MR) && cze2d94 && (ic7276e[17:16] == 2'b10)) begin            ip7f511 <= ic7276e[5:3];            lsa2341    <= ic7276e[10] | ic7276e[9];         end         if (yzbbea5 && (ux3c107 == 2'b00)) begin            fc25dc6        <= zm25af3;            uxab605       <= zza096b;            ea77191     <= lf2d79a;            al51d84        <= je4b5e;            ld64ecc     <= ba2f2b6 | rtf35fc;         end         if (yzbbea5 && (ux3c107 == 2'b01)) begin            ie593b       <= ld6bcd7;            db27666          <= kf9afe7;         end         if (yzbbea5 && (ux3c107 == 2'b10)) begin            xl3225d  <= kd5e6bf;            ou3b336      <= vvd7f3d;         end    end
end

always @(negedge rst_n or posedge clk) begin   if (!rst_n)      ou5574   <= 2'b00;   else if ((cz41b93 == `ddr3_ip_inst_LOAD_MR) && cze2d94)      ou5574   <= ic7276e[17:16];
end
always @ (cze2825) begin   case (cze2825)    4'b0010 : al5b02c = 4'h3;    4'b0100 : al5b02c = 4'h3;    4'b0110 : al5b02c = 4'h4;    4'b1000 : al5b02c = 4'h4;    4'b1010 : al5b02c = 4'h5;    4'b1100 : al5b02c = 4'h5;    default : al5b02c = 4'h3;   endcase
end
assign pfd8164 = cze2825[1];
always @ (cb26dd1) begin   case (cb26dd1)    3'b001 : czc6e18 = 4'h3;    3'b010 : czc6e18 = 4'h3;    3'b011 : czc6e18 = 4'h4;    3'b100 : czc6e18 = 4'h4;    3'b101 : czc6e18 = 4'h5;    3'b110 : czc6e18 = 4'h6;    default: czc6e18 = 4'h3;   endcase
end
always @ (ls1412d) begin   case (ls1412d)    3'b000 : sj2c9d9 = 3'h3;    3'b001 : sj2c9d9 = 3'h3;    3'b010 : sj2c9d9 = 3'h4;    3'b011 : sj2c9d9 = 3'h4;    default: sj2c9d9 = 3'h3;   endcase
end
assign hoc0b27 = ~ls1412d[0];




assign tj37d5c = (xj4f524 && !ir1290d) ? fn6e4ed : 4'h0 ;
always @ (alc616c) begin    ir33e82              = 0;    mt9f414             = 0;    eafa0a4        = 0;    ned0521        = 0;    mg8290b      = 0;    tw14858      = 0;    twb0a9          = 0;    fa5854b               = 0;    gda42c2       = 0;    qi21615      = 0;    hbc2a5b        = 0;    case (alc616c)          `ddr3_ip_inst_CDL_READ   : begin                         ir33e82      = 1;            ec152de    = 0;        end        `ddr3_ip_inst_CDL_READA  : begin                         twb0a9  = 1;            ir33e82      = 1;            ec152de    = 0;        end        `ddr3_ip_inst_CDL_WRITE  : begin                         mt9f414     = 1;            ec152de    = 0;        end        `ddr3_ip_inst_LOAD_MR : begin                            fa5854b       = 1;            hbc2a5b= 1;            ec152de    = 0;        end        `ddr3_ip_inst_CDL_WRITEA : begin                         twb0a9  = 1;            mt9f414     = 1;            ec152de    = 0;        end        `ddr3_ip_inst_SEFL_REF_ENTRY : begin                     mg8290b  = 1;            hbc2a5b    = 1;            ec152de        = 0;        end	`ddr3_ip_inst_SEFL_REF_EXIT : begin                      tw14858  = 1;            hbc2a5b    = 1;            ec152de        = 0;        end        `ddr3_ip_inst_PWRDN_ENTRY  : begin                       eafa0a4    = 1;            hbc2a5b    = 1;            ec152de        = 0;        end        `ddr3_ip_inst_PWRDN_EXIT  : begin                         ned0521    = 1;            hbc2a5b    = 1;            ec152de        = 0;        end        `ddr3_ip_inst_ZQ_CAL_LONG : begin                         gda42c2   = 1;            hbc2a5b    = 1;            ec152de        = 0;        end        `ddr3_ip_inst_ZQ_CAL_SHORT : begin                        qi21615  = 1;            hbc2a5b    = 1;            ec152de        = 0;        end        default : begin            ir33e82          = 0;            mt9f414         = 0;            eafa0a4    = 0;            ned0521    = 0;            mg8290b  = 0;            tw14858  = 0;            twb0a9      = 0;            fa5854b           = 0;            hbc2a5b    = 0;            gda42c2   = 0;            qi21615  = 0;            ec152de        = 1;        end    endcase
end





assign wlbeae6 = (xj4f524 && ir1290d) ? fn6e4ed : 4'h0 ;
always @ (fc30b65) begin    swa96f1              = 0;    of4b789             = 0;    sh5bc4d        = 0;    eade26d        = 0;    tuf1368      = 0;    vk89b42      = 0;    cm684d9          = 0;    ps426c9               = 0;    vi4da13       = 0;    ui6d09b      = 0;    xl1364b        = 0;    case (fc30b65)          `ddr3_ip_inst_CDL_READ   : begin                         swa96f1      = 1;            nt9b25e    = 0;        end        `ddr3_ip_inst_CDL_READA  : begin                         cm684d9  = 1;            swa96f1      = 1;            nt9b25e    = 0;        end        `ddr3_ip_inst_CDL_WRITE  : begin                         of4b789     = 1;            nt9b25e    = 0;        end        `ddr3_ip_inst_LOAD_MR : begin                            ps426c9       = 1;            xl1364b= 1;            nt9b25e    = 0;        end        `ddr3_ip_inst_CDL_WRITEA : begin                         cm684d9  = 1;            of4b789     = 1;            nt9b25e    = 0;        end        `ddr3_ip_inst_SEFL_REF_ENTRY : begin                     tuf1368  = 1;            xl1364b    = 1;            nt9b25e        = 0;        end	`ddr3_ip_inst_SEFL_REF_EXIT : begin                          vk89b42  = 1;            xl1364b    = 1;            nt9b25e        = 0;        end        `ddr3_ip_inst_PWRDN_ENTRY  : begin                       sh5bc4d    = 1;            xl1364b    = 1;            nt9b25e        = 0;        end        `ddr3_ip_inst_PWRDN_EXIT  : begin                        eade26d    = 1;            xl1364b    = 1;            nt9b25e        = 0;        end        `ddr3_ip_inst_ZQ_CAL_LONG : begin                        vi4da13   = 1;            xl1364b    = 1;            nt9b25e        = 0;        end        `ddr3_ip_inst_ZQ_CAL_SHORT : begin                       ui6d09b  = 1;            xl1364b    = 1;            nt9b25e        = 0;        end        default : begin            swa96f1          = 0;            of4b789         = 0;            sh5bc4d    = 0;            eade26d    = 0;            tuf1368  = 0;            vk89b42  = 0;            cm684d9      = 0;            ps426c9           = 0;            xl1364b    = 0;            vi4da13   = 0;            ui6d09b  = 0;            nt9b25e        = 1;        end    endcase
end



always @ (posedge clk or negedge rst_n) begin    if (!rst_n) begin        kqded46               <= 1'b0;        bl7bda8              <= 1'b0;        vvf6a31           <= 1'b0;        gd8f103         <= 1'b0;        ea7881d         <= 1'b0;        ykde3c4       <= 1'b0;        xwf1e20       <= 1'b0;        fa5d2af        <= 1'b0;        hbe957b       <= 1'b0;        mec40e9                <= 1'b0;        ux3625f             <= 1'b0;    end    else if (xj4f524 && !ir1290d)begin        kqded46               <= fa6c7c1;        bl7bda8              <= ne63e0b;        vvf6a31           <= ayc40e6;        gd8f103         <= uk1f05b;        ea7881d         <= shf82d8;        ykde3c4       <= qgc16c4;        xwf1e20       <= zmb620;        fa5d2af        <= cz5b103;        hbe957b       <= fnd881c;        mec40e9                <= ba20730;        ux3625f             <= rv1cc1e ;    end
end
always @ (posedge clk or negedge rst_n) begin    if (!rst_n) begin        vx9beeb               <= 1'b0;        ps737dd              <= 1'b0;        dmdf75f           <= 1'b0;        go43d7a         <= 1'b0;        xy1ebd0         <= 1'b0;        dze90f5       <= 1'b0;        xw487af       <= 1'b0;        czd38ea        <= 1'b0;        do9c755       <= 1'b0;        suf5e83                <= 1'b0;        irb12fd             <= 1'b0;    end        else if (xj4f524 && ir1290d) begin        vx9beeb               <= vve60f6;        ps737dd              <= do307b6;        dmdf75f           <= do93c58;        go43d7a         <= xy83db2;        xy1ebd0         <= do1ed92;        dze90f5       <= rtf6c93;        xw487af       <= ecb649e;        czd38ea        <= jeb24f1;        do9c755       <= wy9278b;        suf5e83                <= nt9e2c3;        irb12fd             <= bn8b0f2 ;    end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      je2aba0    <= 1'b0;   else if (bn328b7)      je2aba0    <= 1'b1;   else if (qtd99b1)      je2aba0    <= 1'b0;   else      je2aba0    <= goe083c;
end






















always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin


`ifdef ddr3_ip_inst_EXT_AUTO_REF
       qi51c6       <= 1'b0;


`else
       bn28e30          <= 16'b1;       dm47186      <= 1'b0;       fp38c33    <= 1'b0;       wjc619f    <= 1'b0;       zm30cfd         <= 1'b0;       vk867eb           <= 16'd0;       sj33f5b       <= `ddr3_ip_inst_AR_CNT;


`endif
       co1fa44       <= `ddr3_ip_inst_AR_CNT;       uv5b962        <= 1'b0;       wjdcb15       <= 1'b0;       dmeb72c           <= 1'b0;       goe58ac         <= 1'b0;   end   else begin
      goe58ac         <= ((mefa962 | iea9485)) & ~uid4b10;


`ifdef ddr3_ip_inst_EXT_AUTO_REF  //----------------------------
       qi51c6 <= ext_auto_ref;       if (sj840c && !iea9485) begin          co1fa44   <= goc4dba;          uv5b962    <= 1'b1;       end       else if (hqa2df7) begin          uv5b962     <= 1'b0;       end       else begin          uv5b962    <= ea72a52;       end                       if (sj840c && !iea9485) begin          wjdcb15   <= 1'b1;       end       else if (jr945be) begin          wjdcb15   <= 1'b0;       end       else begin          wjdcb15   <= gd95290;       end



`else  //internal auto refresh              
       vk867eb          <= kq62035 - `ddr3_ip_inst_TREFI_ADJUST;
       if (dm47186 || iea9485 )           bn28e30  <= 16'd1;              else if ( goe083c && !dm47186 && !iea9485 && !dm5dca9)          bn28e30  <= bn28e30+1;       fp38c33  <= (bn28e30[7:0]  == vk867eb[7:0]);       wjc619f  <= (bn28e30[15:8] == {vk867eb[15:8]});       dm47186    <= fp38c33 & wjc619f;
       if (vv71626 || zm30cfd  || iea9485) begin          sj33f5b <= goc4dba;       end       else if (dm47186 && !lqee54a)          sj33f5b <= sj33f5b-1;
       if (goc4dba == 4'b0001)          zm30cfd   <= dm47186;       else          zm30cfd   <= (sj33f5b == 4'd1) & dm47186;
       if (zm30cfd && !iea9485) begin          co1fa44   <= goc4dba;          uv5b962    <= 1'b1;       end       else if (hqa2df7) begin          uv5b962    <= 1'b0;       end       else begin          uv5b962    <= ea72a52;       end       if (zm30cfd && !iea9485) begin          wjdcb15   <= 1'b1;       end       else if (jr945be) begin          wjdcb15   <= 1'b0;       end       else begin          wjdcb15   <= gd95290;       end


`endif

      dmeb72c       <= gdbbc78;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      gdbbc78         <= 1'b0;   else if (xw581d5 && tuc0eab && !ym24f04 && !cze2d94 && !an29ea4)      gdbbc78         <= ea72a52;   else if (hqa2df7)      gdbbc78         <= 1'b0;   else      gdbbc78         <= gdbbc78;
end


`ifdef ddr3_ip_inst_EXT_AUTO_REF  //
   assign sj840c   = ext_auto_ref & ~qi51c6;   assign ext_auto_ref_ack = jr945be;   assign fp27284        = sj840c;

`else              
   assign fp27284        = gdbbc78 & ~lqee54a;

`endif












always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      uief7b5         <= 1'b0;      shfdef6          <= 1'b0;   end   else begin      if (hqa2df7 && fpbfbde && !fcb2273 ) begin         uief7b5         <= 1'b1;         shfdef6      <= 1'b0;      end      else if (hqa2df7 && fpbfbde && fcb2273 && !bycad92 ) begin         uief7b5         <= 1'b1;         shfdef6      <= 1'b1;      end      else if (hqa2df7 && fpbfbde && fcb2273 && bycad92  && dmdf75f) begin         uief7b5         <= 1'b1;         shfdef6      <= 1'b0;      end      else if (hqa2df7 && fpbfbde && fcb2273 && bycad92  && !dmdf75f) begin         uief7b5         <= 1'b0;         shfdef6      <= 1'b0;      end      else if (an29ea4 && !mt36e8d) begin         shfdef6      <= (lfa5e56 & ecb6491) | (~lfa5e56 & gq8d8f8[2]);         uief7b5         <= (~lfa5e56 | ecb6491) &                                (fa6c7c1 | ne63e0b);      end   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      en4e6fb         <= 1'b0;      je89cdf          <= 1'b0;   end   else begin      if (hqa2df7 && tj9139b  && !gq9778f ) begin         en4e6fb         <= 1'b1;         je89cdf      <= 1'b0;      end      else if (hqa2df7 && tj9139b  && gq9778f && !me56c92 ) begin         en4e6fb         <= 1'b1;         je89cdf      <= 1'b1;      end      else if (hqa2df7 && tj9139b  && gq9778f && me56c92  && vvf6a31) begin         en4e6fb         <= 1'b1;         je89cdf      <= 1'b0;      end      else if (hqa2df7 && tj9139b && gq9778f && me56c92  && !vvf6a31) begin         en4e6fb         <= 1'b0;         je89cdf      <= 1'b0;      end      else if (an29ea4 && mt36e8d) begin         je89cdf      <= (lfa5e56 & ecb6491) | (~lfa5e56 & gq8d8f8[2]);         en4e6fb         <= (~lfa5e56 | ecb6491) &                                (vve60f6 | do307b6);      end   end
end

`ifdef ddr3_ip_inst_CS_WIDTH_4
   assign mrd61d4 = ir18c2d;

`endif



`ifdef ddr3_ip_inst_CS_WIDTH_2
   assign mrd61d4 = {1'b0,ir18c2d};

`endif



`ifdef ddr3_ip_inst_CS_WIDTH_1
   assign mrd61d4 = {2'b00,ir18c2d};

`endif


assign dbb0ea4 = cze2d94 & jr3dfbd;
row_addr_tab_ddr3_ip_inst gb4ed8f (     .RdAddress    (mrd61d4),     .WrAddress    (mrd61d4),     .Data         (ira4e50),     .WrClock      (clk),     .WrClockEn    (dbb0ea4),     .WE           (1'b1),     .Q            (hqb8ac)
);
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      of7ac3a  <= {`ddr3_ip_inst_ROW_WIDTH{1'b0}};   else      of7ac3a  <= vk89607;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      en41715  <= {`ddr3_ip_inst_ROW_WIDTH{1'b0}};   else      en41715  <= ic7276e[`ddr3_ip_inst_ADDR_WIDTH-1:`ddr3_ip_inst_BSIZE+`ddr3_ip_inst_COL_WIDTH];
end



assign czf7a0b = |( bn912c0[7:0] ^ lf28f16[7:0]) ? 1'b1 : 1'b0;
assign pubd05c = |( bn912c0[`ddr3_ip_inst_ROW_WIDTH - 1 :8] ^ lf28f16[`ddr3_ip_inst_ROW_WIDTH - 1 :8]) ? 1'b1 : 1'b0;
assign ls1ef41  = jeb2489 | wy9244b;




assign  nre6885 = 3'b0;
assign uk347bd = ~(~mt36e8d & ecb6491);
assign coa3de8 = ~( mt36e8d & ecb6491);





`ifdef ddr3_ip_inst_CS_WIDTH_1

always @ (ir18c2d) begin   nta07ae = 8'b0;   case (ir18c2d)        3'b000 : nta07ae[0] = 1;      3'b001 : nta07ae[1] = 1;      3'b010 : nta07ae[2] = 1;      3'b011 : nta07ae[3] = 1;      3'b100 : nta07ae[4] = 1;      3'b101 : nta07ae[5] = 1;      3'b110 : nta07ae[6] = 1;      3'b111 : nta07ae[7] = 1;      default : nta07ae = 8'b0;   endcase
end

`endif




`ifdef ddr3_ip_inst_CS_WIDTH_2

always @ (ir18c2d) begin   nta07ae = 16'b0;
   case (ir18c2d)        4'b0000 : nta07ae[0] = 1;      4'b0001 : nta07ae[1] = 1;      4'b0010 : nta07ae[2] = 1;      4'b0011 : nta07ae[3] = 1;      4'b0100 : nta07ae[4] = 1;      4'b0101 : nta07ae[5] = 1;      4'b0110 : nta07ae[6] = 1;      4'b0111 : nta07ae[7] = 1;      4'b1000 : nta07ae[8] = 1;      4'b1001 : nta07ae[9] = 1;      4'b1010 : nta07ae[10] = 1;      4'b1011 : nta07ae[11] = 1;      4'b1100 : nta07ae[12] = 1;      4'b1101 : nta07ae[13] = 1;      4'b1110 : nta07ae[14] = 1;      4'b1111 : nta07ae[15] = 1;      default : nta07ae = 16'b0;   endcase
end

`endif




`ifdef ddr3_ip_inst_CS_WIDTH_4

always @ (ir18c2d) begin   nta07ae = 32'b0;   case (ir18c2d)        5'b00000 : nta07ae[0] = 1;      5'b00001 : nta07ae[1] = 1;      5'b00010 : nta07ae[2] = 1;      5'b00011 : nta07ae[3] = 1;      5'b00100 : nta07ae[4] = 1;      5'b00101 : nta07ae[5] = 1;      5'b00110 : nta07ae[6] = 1;      5'b00111 : nta07ae[7] = 1;      5'b01000 : nta07ae[8] = 1;      5'b01001 : nta07ae[9] = 1;      5'b01010 : nta07ae[10] = 1;      5'b01011 : nta07ae[11] = 1;      5'b01100 : nta07ae[12] = 1;      5'b01101 : nta07ae[13] = 1;      5'b01110 : nta07ae[14] = 1;      5'b01111 : nta07ae[15] = 1;      5'b10000 : nta07ae[16] = 1;      5'b10001 : nta07ae[17] = 1;      5'b10010 : nta07ae[18] = 1;      5'b10011 : nta07ae[19] = 1;      5'b10100 : nta07ae[20] = 1;      5'b10101 : nta07ae[21] = 1;      5'b10110 : nta07ae[22] = 1;      5'b10111 : nta07ae[23] = 1;      5'b11000 : nta07ae[24] = 1;      5'b11001 : nta07ae[25] = 1;      5'b11010 : nta07ae[26] = 1;      5'b11011 : nta07ae[27] = 1;      5'b11100 : nta07ae[28] = 1;      5'b11101 : nta07ae[29] = 1;      5'b11110 : nta07ae[30] = 1;      5'b11111 : nta07ae[31] = 1;      default : nta07ae = 32'b0;   endcase
end

`endif


always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      uxab9a0  <= {`ddr3_ip_inst_BSIZE{1'b0}};      xl3d77   <= {(`ddr3_ip_inst_CS_WIDTH*8){1'b0}};   end   else if (an29ea4) begin      uxab9a0  <= ir18c2d;      xl3d77   <= cb3c094;   end
end



assign gb7ff32 = ~gd39426 & gq8d8f8[2] & ayefdef;
assign ykff994  = ~wldc9d[3] & ( (~wldc9d[2] & wldc9d[1] & wldc9d[0]) | (wldc9d[2] & ~wldc9d[1] & ~wldc9d[0]));

assign pffcca0 = ~wldc9d[3] & ~wldc9d[2] & ( (~wldc9d[1] & wldc9d[0]) | (wldc9d[1] & ~wldc9d[0])); 

always @ (posedge clk or negedge rst_n) begin    if (!rst_n) begin        vv55d03        <= {(`ddr3_ip_inst_CS_WIDTH*`ddr3_ip_inst_INT_BANK)-1{1'b0}};    end    else begin       for (kf7dbe=0; kf7dbe<`ddr3_ip_inst_CS_WIDTH*`ddr3_ip_inst_INT_BANK; kf7dbe=kf7dbe+1) begin          casex ({mgb652f, sue04a4[kf7dbe], pu2f050, cb3c094[kf7dbe], kq78282, eac1410})          6'b111xxx:   vv55d03[kf7dbe] <= 1'b0;             6'b1xx110:   vv55d03[kf7dbe] <= 1'b0;             6'b1xx101:   vv55d03[kf7dbe] <= 1'b1;             6'bxxx0xx:   vv55d03[kf7dbe] <= an7812[kf7dbe];          default  :   vv55d03[kf7dbe] <= ng41e0[kf7dbe];          endcase       end    end
end



always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      wlae81e        <= {(`ddr3_ip_inst_CS_WIDTH*`ddr3_ip_inst_INT_BANK)-1{1'b0}};   end   else begin      if (mefa962) begin         if (tj9139b && !dmdf75f)            wlae81e        <= cb3c094;         else if (fpbfbde && !vvf6a31)            wlae81e        <= cb3c094;         else            wlae81e    <= {(`ddr3_ip_inst_CS_WIDTH*`ddr3_ip_inst_INT_BANK){1'b0}};      end   end
end




assign wwf5734 = (gdbbc78 & ~lqee54a) | ((ne79d18 | goce8c3 | kdc3185) & co92258);
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      vv740f5           <= {(`ddr3_ip_inst_CS_WIDTH*`ddr3_ip_inst_INT_BANK)-1{1'b0}};   end   else begin      if (sj85b2b)         vv740f5           <= {(`ddr3_ip_inst_CS_WIDTH*`ddr3_ip_inst_INT_BANK){1'b0}};      else if (mefa962)         vv740f5	<= ba20f02;      else if (hqa2df7)                  vv740f5      <=  ba20f02;       
      else if (an29ea4 & kf2521 )         vv740f5      <= ng41e0;   end
end
assign jr84d1e    = |(an7812);   
assign uve82e2 = cze2d94;



`ifdef ddr3_ip_inst_CS_WIDTH_1

always @ (ir18c2d or an7812) begin   case (ir18c2d)        3'b000 : gd39426 = an7812[0];      3'b001 : gd39426 = an7812[1];      3'b010 : gd39426 = an7812[2];      3'b011 : gd39426 = an7812[3];      3'b100 : gd39426 = an7812[4];      3'b101 : gd39426 = an7812[5];      3'b110 : gd39426 = an7812[6];      3'b111 : gd39426 = an7812[7];      default: gd39426 = 1'b0;   endcase
end

`endif




`ifdef ddr3_ip_inst_CS_WIDTH_2

always @ (ir18c2d or an7812) begin
   case (ir18c2d)        4'b0000 : gd39426 = an7812[0];      4'b0001 : gd39426 = an7812[1];      4'b0010 : gd39426 = an7812[2];      4'b0011 : gd39426 = an7812[3];      4'b0100 : gd39426 = an7812[4];      4'b0101 : gd39426 = an7812[5];      4'b0110 : gd39426 = an7812[6];      4'b0111 : gd39426 = an7812[7];      4'b1000 : gd39426 = an7812[8];      4'b1001 : gd39426 = an7812[9];      4'b1010 : gd39426 = an7812[10];      4'b1011 : gd39426 = an7812[11];      4'b1100 : gd39426 = an7812[12];      4'b1101 : gd39426 = an7812[13];      4'b1110 : gd39426 = an7812[14];      4'b1111 : gd39426 = an7812[15];      default : gd39426 = 1'b0;   endcase
end

`endif





`ifdef ddr3_ip_inst_CS_WIDTH_4


MUX321_ddr3_ip_inst xje3182(	.D0  (vv740f5[0]),    .D1  (vv740f5[1]),    .D2  (vv740f5[2]),    .D3  (vv740f5[3]),        .D4  (vv740f5[4]),    .D5  (vv740f5[5]),    .D6  (vv740f5[6]),    .D7  (vv740f5[7]),        .D8  (vv740f5[8]),    .D9  (vv740f5[9]),    .D10 (vv740f5[10]),   .D11 (vv740f5[11]),        .D12 (vv740f5[12]),   .D13 (vv740f5[13]),   .D14 (vv740f5[14]),   .D15 (vv740f5[15]),        .D16 (vv740f5[16]),   .D17 (vv740f5[17]),   .D18 (vv740f5[18]),   .D19 (vv740f5[19]),        .D20 (vv740f5[20]),   .D21 (vv740f5[21]),   .D22 (vv740f5[22]),   .D23 (vv740f5[23]),        .D24 (vv740f5[24]),   .D25 (vv740f5[25]),   .D26 (vv740f5[26]),   .D27 (vv740f5[27]),        .D28 (vv740f5[28]),   .D29 (vv740f5[29]),   .D30 (vv740f5[30]),   .D31 (vv740f5[31]),        .SD1 (czc6fab[0]), .SD2 (czc6fab[1]), .SD3 (czc6fab[2]), .SD4 (czc6fab[3]),	.SD5 (czc6fab[4]), .Z   (gd39426)        );


`endif


always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      dz509a3  <= 1'b0;   else      dz509a3  <= gd39426;
end
always@* begin vvf6fa0<={cmd>>1,ou538[0]};lsb7d06<={addr>>1,ou538[1]};kfbe832<={cmd_burst_cnt>>1,ou538[2]};faf4194<=ou538[3];pha0ca2<=ou538[4];jr6516<=ou538[5];bn328b7<=ou538[6];jr945be<=ou538[7];hqa2df7<=ou538[8];bn16fbb<=ou538[9];vkb7ddf<=ou538[10];mtbeefa<=ou538[11];wjf77d4<=ou538[12];yzbbea5<=ou538[13];nedf52c<=ou538[14];mefa962<=ou538[15];uid4b10<=ou538[16];pha5880<=ou538[17];ir2c406<=ou538[18];kq62035<={trefi>>1,ou538[19]};sw101a8<={ar_burst_cnt>>1,ou538[20]};cb80d41<={tuc5cab>>1,ou538[21]};xl6a0d<={aa2e55b>>1,ou538[22]};do3506e<={ui72ad8>>1,ou538[23]};xya8372<=ou538[24];cz41b93<={pfcda45>>1,ou538[25]};wldc9d<={yk6d22f>>1,ou538[26]};fn6e4ed<={jc69179>>1,ou538[27]};ic7276e<={tu48bcb>>1,ou538[28]};pu93b71<={hb45e5b>>1,ou538[29]};co9db8b<={je2f2df>>1,ou538[30]};enedc58<={ps796fa>>1,ou538[31]};dz6e2c4<=ou538[32];vv71626<=ou538[33];nt8b136<=ou538[34];jc589b7<=ou538[35];goc4dba<={sw8d476>>1,ou538[36]};cb26dd1<={al51d84>>1,ou538[37]};mt36e8d<=ou538[38];rib746c<={vx1343c>>1,ou538[39]};lfba363<=ou538[40];qgd1b1f<=ou538[41];gq8d8f8<={nre6885>>1,ou538[42]};fa6c7c1<=ou538[43];ne63e0b<=ou538[44];uk1f05b<=ou538[45];shf82d8<=ou538[46];qgc16c4<=ou538[47];zmb620<=ou538[48];cz5b103<=ou538[49];fnd881c<=ou538[50];ayc40e6<=ou538[51];ba20730<=ou538[52];fp3983<=ou538[53];rv1cc1e<=ou538[54];vve60f6<=ou538[55];do307b6<=ou538[56];xy83db2<=ou538[57];do1ed92<=ou538[58];rtf6c93<=ou538[59];ecb649e<=ou538[60];jeb24f1<=ou538[61];wy9278b<=ou538[62];do93c58<=ou538[63];nt9e2c3<=ou538[64];nef161e<=ou538[65];bn8b0f2<=ou538[66];rg58797<=ou538[67];yxc3cbb<=ou538[68];ls1e5dc<=ou538[69];yxf2ee2<=ou538[70];ie97714<=ou538[71];wlbb8a0<=ou538[72];yxdc504<={fc25dc6>>1,ou538[73]};cze2825<={ea77191>>1,ou538[74]};ls1412d<={xl3225d>>1,ou538[75]};zza096b<=ou538[76];je4b5e<={ri8977f>>1,ou538[77]};zm25af3<={mr4bbfa>>1,ou538[78]};lf2d79a<={xw5dfd4>>1,ou538[79]};ld6bcd7<={osefea2>>1,ou538[80]};kd5e6bf<={ip7f511>>1,ou538[81]};rtf35fc<=ou538[82];kf9afe7<=ou538[83];vvd7f3d<=ou538[84];bnbf9ef<=ou538[85];nrfcf7e<=ou538[86];ipe7bf7<=ou538[87];jr3dfbd<=ou538[88];ayefdef<=ou538[89];bl7ef79<=ou538[90];mrf7bce<=ou538[91];ribde74<=ou538[92];meef3a3<=ou538[93];ne79d18<=ou538[94];goce8c3<=ou538[95];dz74618<=ou538[96];wya30c6<=ou538[97];mt18630<=ou538[98];kdc3185<=ou538[99];ir18c2d<={czc6fab>>1,ou538[100]};alc616c<={tj37d5c>>1,ou538[101]};fc30b65<={wlbeae6>>1,ou538[102]};sj85b2b<=ou538[103];vx2d95d<={uxab9a0>>1,ou538[104]};ho6caee<=ou538[105];al65772<=ou538[106];uk2bb95<=ou538[107];dm5dca9<=ou538[108];lqee54a<=ou538[109];ea72a52<=ou538[110];gd95290<=ou538[111];iea9485<=ou538[112];nr4a429<=ou538[113];jc5214f<=ou538[114];ep90a7a<=ou538[115];qv853d4<=ou538[116];an29ea4<=ou538[117];xj4f524<=ou538[118];mr7a927<=ou538[119];uid493c<=ou538[120];oha49e0<=ou538[121];ym24f04<=ou538[122];db27820<=ou538[123];ux3c107<={ou5574>>1,ou538[124]};goe083c<=ou538[125];ng41e0<={vv55d03>>1,ou538[126]};ba20f02<={wlae81e>>1,ou538[127]};an7812<={vv740f5>>1,ou538[128]};cb3c094<={nta07ae>>1,ou538[129]};sue04a4<={xl3d77>>1,ou538[130]};kf2521<=ou538[131];ir1290d<=ou538[132];bn9486d<={mtaef99>>1,ou538[133]};sja436e<=ou538[134];ie21b75<=ou538[135];epdba8<=ou538[136];os6dd45<=ou538[137];fn6ea28<=ou538[138];of75147<=ou538[139];hqa8a3c<=ou538[140];bl451e2<=ou538[141];lf28f16<={of7ac3a>>1,ou538[142]};fa478b6<={mrd61d4>>1,ou538[143]};qv3c5b2<=ou538[144];cze2d94<=ou538[145];nt16ca5<=ou538[146];mgb652f<=ou538[147];vkb2979<={ira4e50>>1,ou538[148]};nt94bca<=ou538[149];lfa5e56<=ou538[150];ba2f2b6<=ou538[151];dm795b2<=ou538[152];bycad92<=ou538[153];me56c92<=ou538[154];ecb6491<=ou538[155];jeb2489<=ou538[156];wy9244b<=ou538[157];co92258<=ou538[158];bn912c0<={en41715>>1,ou538[159]};vk89607<={hqb8ac>>1,ou538[160]};sh4b03a<=ou538[161];xw581d5<=ou538[162];tuc0eab<=ou538[163];cb755b<=ou538[164];vk3aadd<=ou538[165];psd56ea<=ou538[166];epab753<=ou538[167];cz5ba9c<=ou538[168];jpdd4e5<=ou538[169];kqea72f<=ou538[170];ww53978<=ou538[171];hq9cbc1<=ou538[172];qge5e0a<=ou538[173];pu2f050<=ou538[174];kq78282<=ou538[175];eac1410<=ou538[176];gqa080<=ou538[177];hb50401<=ou538[178];qi8200f<=ou538[179];co10079<=ou538[180];ep803c9<=ou538[181];end
always@* begin swa7[2047]<=addr[0];swa7[2046]<=cmd_burst_cnt[0];swa7[2044]<=cmd_valid;swa7[2040]<=init_start;swa7[2032]<=ofly_burst_len;swa7[2017]<=bn376f8;swa7[2013]<=wjdcb15;swa7[1990]<=mtaef99[0];swa7[1987]<=blc8ddb;swa7[1980]<=gda42c2;swa7[1979]<=goe58ac;swa7[1963]<=yx5be91;swa7[1957]<=uv4182a;swa7[1942]<=ec152de;swa7[1932]<=qg77ccd;swa7[1929]<=aa10323;swa7[1926]<=mtbb7c7;swa7[1923]<=uve82e2;swa7[1921]<=ui72ad8[0];swa7[1914]<=wj60a41;swa7[1913]<=qi21615;swa7[1911]<=oh2c560;swa7[1903]<=nre6885[0];swa7[1879]<=nrd2351;swa7[1876]<=tu52061;swa7[1872]<=xl1364b;swa7[1866]<=lfc155;swa7[1837]<=swa96f1;swa7[1816]<=yzbe668;swa7[1810]<=ph81919;swa7[1805]<=jr8e646;swa7[1799]<=en41715[0];swa7[1795]<=ep39b48;swa7[1783]<=ned0521;swa7[1780]<=ks520c;swa7[1778]<=twb0a9;swa7[1775]<=go62b05;swa7[1770]<=ui6d09b;swa7[1758]<=ir33e82;swa7[1710]<=lf91a8e;swa7[1704]<=gd9030a;swa7[1696]<=nt9b25e;swa7[1685]<=qt60aae;swa7[1679]<=ba991bb;swa7[1627]<=of4b789;swa7[1584]<=thf3345;swa7[1573]<=xlc8cf;swa7[1567]<=cm5cd05;swa7[1562]<=dm73237;swa7[1557]<=ira4e50[0];swa7[1551]<=hqb8ac[0];swa7[1548]<=zm2f587;swa7[1543]<=pfcda45[0];swa7[1521]<=do1ebbe;swa7[1519]<=mg8290b;swa7[1513]<=ep29060;swa7[1509]<=fa5854b;swa7[1504]<=czf7a0b;swa7[1502]<=qi15829;swa7[1499]<=mg879a2;swa7[1493]<=cm68290;swa7[1492]<=cm684d9;swa7[1469]<=mt9f414;swa7[1466]<=vk89b42;swa7[1415]<=wwf5734;swa7[1404]<=nta07ae[0];swa7[1400]<=coa3de8;swa7[1398]<=rv8499f;swa7[1377]<=tj37d5c[0];swa7[1373]<=sw8d476[0];swa7[1361]<=lf81855;swa7[1359]<=zxe6507;swa7[1355]<=osefea2[0];swa7[1349]<=nr6157e;swa7[1344]<=ofd92f6;swa7[1343]<=lf941f6;swa7[1326]<=sufa88d;swa7[1323]<=ou5574[0];swa7[1310]<=qg46edf;swa7[1301]<=ld55fb8;swa7[1280]<=gb4bdac;swa7[1279]<=co3edf4;swa7[1210]<=lsa2341;swa7[1207]<=sh5bc4d;swa7[1199]<=vv55d03[0];swa7[1193]<=gb7ff32;swa7[1144]<=trefi[0];swa7[1120]<=zm99a2f;swa7[1110]<=nr7ee37;swa7[1098]<=nr6467f;swa7[1086]<=fne6828;swa7[1076]<=ic466bd;swa7[1067]<=fp27284;swa7[1054]<=ic5c562;swa7[1048]<=of7ac3a[0];swa7[1039]<=yk6d22f[0];swa7[1026]<=jpf6b25;swa7[1023]<=cmd[0];swa7[1006]<=uv5b962;swa7[995]<=osf5df3;swa7[990]<=tw14858;swa7[981]<=sucb7d2;swa7[978]<=fa48305;swa7[971]<=hbc2a5b;swa7[964]<=tu42064;swa7[961]<=pubd05c;swa7[960]<=aa2e55b[0];swa7[957]<=gqac148;swa7[951]<=ux3cd10;swa7[938]<=yma40c;swa7[936]<=ps426c9;swa7[891]<=eafa0a4;swa7[885]<=vi4da13;swa7[839]<=bydf1e9;swa7[783]<=uxab9a0[0];swa7[778]<=qgd49ca;swa7[774]<=jp45eb0;swa7[760]<=xl3d77[0];swa7[752]<=ls1ef41;swa7[749]<=vx1343c[0];swa7[746]<=qi8d052;swa7[733]<=tuf1368;swa7[707]<=wlbeae6[0];swa7[702]<=vv740f5[0];swa7[700]<=uk347bd;swa7[699]<=al51d84[0];swa7[688]<=czc6fab[0];swa7[679]<=pffcca0;swa7[677]<=xw5dfd4[0];swa7[674]<=rvc2af;swa7[671]<=lf3283e;swa7[663]<=ip7f511[0];swa7[650]<=ukabf7;swa7[640]<=alc97b5;swa7[639]<=zza0fb7;swa7[605]<=qgd4468;swa7[599]<=je2aba0;swa7[596]<=necffe6;swa7[572]<=sj17fb8;swa7[555]<=sref_ext_cmd;swa7[513]<=cz5ed64;swa7[503]<=dmeb72c;swa7[490]<=ps796fa[0];swa7[482]<=cz41081;swa7[480]<=tuc5cab[0];swa7[419]<=dzc7a55;swa7[389]<=fc3a939;swa7[387]<=ic68bd6;swa7[373]<=ba11a0a;swa7[366]<=eade26d;swa7[351]<=wlae81e[0];swa7[350]<=an268f7;swa7[344]<=jeb8df5;swa7[339]<=ykff994;swa7[338]<=mr4bbfa[0];swa7[298]<=nt19ffc;swa7[251]<=nta0a38;swa7[245]<=je2f2df[0];swa7[241]<=kq68210;swa7[240]<=ar_burst_cnt[0];swa7[209]<=ykdbe3d;swa7[194]<=aa87527;swa7[193]<=hbcd17a;swa7[175]<=jr84d1e;swa7[172]<=enf71be;swa7[169]<=ri8977f[0];swa7[149]<=wl233ff;swa7[125]<=ie34147;swa7[122]<=hb45e5b[0];swa7[120]<=aa1588d;swa7[104]<=sj335e9;swa7[97]<=dbb0ea4;swa7[87]<=dz509a3;swa7[84]<=hd912ef;swa7[61]<=tu48bcb[0];swa7[60]<=ene2b11;swa7[48]<=mrd61d4[0];swa7[42]<=xl3225d[0];swa7[30]<=jc69179[0];swa7[21]<=ea77191[0];swa7[10]<=fc25dc6[0];swa7[5]<=vxb592e;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule































`timescale 1 ns / 100 ps
module ux18a1b_ddr3_ip_inst (

   clk,
   rst_n,
   uie0c97,
   tw1b8b9, 
   ofdc5cb, 
   by475a9,
   end6a5a,
   cob976c,
   sucbb60, 
   tu5db00, 
   kded802, 
   xw6c014,
   cz600a3,
   ks51d,
   ep28e8,
   hq14744,
   qia3a23,  
   ux1d119,
   wje88cd,
   qt4466c,   
   bn3d5ba, 
   tw11291, 
   ldcd926,
   sude125,
   zkdf23d,
   mg24dd6,
   kf26eb0,

   zz37585 ,
   wjedd26 ,
   hb749a7  ,
   hdb0bf4 ,
   hd8b7c8 ,
   of5be47 ,
   hb7e9eb ,
   tj94e69 ,
   hqa7af3,
   bn3d79b ,
   lqebcde ,
   ay43101,
   rtf379c,
   lf9bce7
   );
input              uie0c97;
input              clk;
input              rst_n;
input              tw1b8b9;
input              ofdc5cb;
input              by475a9;
input              end6a5a;
input              cob976c;
input              sucbb60;
input              tu5db00;
input              kded802;
input              xw6c014;
input              cz600a3;
input              ks51d;
input              ep28e8;
input              ux1d119;
input              hq14744;
input              wje88cd;
input              qia3a23;
input              qt4466c;
input              bn3d5ba ;
input              tw11291;
input              ldcd926;
input [`ddr3_ip_inst_AL_WIDTH-1:0] sude125;
input              zkdf23d;
input              mg24dd6;
input              kf26eb0;
output             zz37585 ;
output             wjedd26 ;
output             hb749a7  ;
output             hdb0bf4 ;
output             hd8b7c8 ;
output             of5be47 ;
output             hb7e9eb ;
output             tj94e69 ;
output             hqa7af3;
output             bn3d79b ;
output             lqebcde;
output             ay43101;
output             rtf379c;
output             lf9bce7;

`define ddr3_ip_inst_IDLE 0 

`define ddr3_ip_inst_NOP_C 1 //2

`define ddr3_ip_inst_PRE 2 //4

`define ddr3_ip_inst_PRE_WAIT 3 //8

`define ddr3_ip_inst_ACT 4 //16

`define ddr3_ip_inst_ACT_WAIT 5 //32

`define ddr3_ip_inst_WR 6 //64

`define ddr3_ip_inst_RD 7 //128

`define ddr3_ip_inst_RDW 8 //256

`define ddr3_ip_inst_WRW 9
wire                uie0c97;
wire                clk;
wire                rst_n;
wire [`ddr3_ip_inst_AL_WIDTH-1:0] sude125;
reg  [9:0]          rv3528, ks1a947;
reg                 zz37585, zza51c8 ;
reg                 wjedd26, lq4723e ;
reg                 hb749a7, dzc8f9c  ;
reg                 ho47ce7, ec3e73a  ;
reg                 hdb0bf4, pu9ce8e;
reg                 hd8b7c8, xy3a394 ;
reg                 icd1ca3, xl8e518 ;
reg                 of5be47, db94638 ;
reg                 hb7e9eb ;
reg                 ux18e38, thc71c4 ;
reg                 tj94e69, hbc713f ;
reg                 lf389ff, qgc4fff ;
reg                 hqa7af3, je3ffcf;
reg                 bn3d79b, wwff3d0 ;
reg                 lqebcde, facf40f;
reg                 rtf379c, rgd03dd;
reg                 lf9bce7, qif75f;
reg                 ay43101, zxdd7ce;
reg                 jcebe77;
reg                 vv5f3bb;
reg                 blf9dde;
reg                 osceef7;
reg                 me777b8;
reg                 wlbbdc1;
reg                 wwdee0c;
reg                 mrf7061;
reg                 vkb830d;
reg                 osc186a;
reg                 phc351, xj61a8e;
reg                 uxd476;
wire                kd6a3b4;
reg yx51da4;
reg vx8ed24;
reg rg76926;
reg gdb4932;
reg ana4995;
reg qi24cac;
reg qv26560;
reg rv32b04;
reg gd95826;
reg ecac134;
reg gb609a1;
reg ng4d0c;
reg gd26863;
reg qi3431d;
reg yza18e8;
reg dbc744;
reg dm63a26;
reg ux1d133;
reg me59da0;
reg qt44cec;
reg ep26765;
reg ir85676;
reg ie9d964;
reg blecb20;
reg [9 : 0] en65906;
reg [9 : 0] yz2c834;
reg hb641a4;
reg zm20d27;
reg lf693a;
reg ks349d6;
reg gda4eb1;
reg ph2758c;
reg hq3ac66;
reg ipd6332;
reg wlb1994;
reg xy8cca5;
reg lq6652b;
reg db3295a;
reg zz94ad6;
reg dba56b6;
reg sw2b5b7;
reg ld5adb8;
reg czd6dc7;
reg cob6e3d;
reg pub71e8;
reg twb8f43;
reg fnc7a1b;
reg rv3d0de;
reg kde86f6;
reg ay437b5;
reg fc1bda9;
reg eaded4b;
reg zxf6a59;
reg tjb52ce;
reg uka9676;
reg en4b3b1;
reg os59d8d;
reg uicec68;
reg jc76340;
reg yzb1a03;
reg mg8d01d;
reg [2047:0] swa7;
wire [60:0] ou538;

`define ddr3_ip_inst_IDLE 0 

`define ddr3_ip_inst_NOP_C 1 //2

`define ddr3_ip_inst_PRE 2 //4

`define ddr3_ip_inst_PRE_WAIT 3 //8

`define ddr3_ip_inst_ACT 4 //16

`define ddr3_ip_inst_ACT_WAIT 5 //32

`define ddr3_ip_inst_WR 6 //64

`define ddr3_ip_inst_RD 7 //128

`define ddr3_ip_inst_RDW 8 //256

`define ddr3_ip_inst_WRW 9

localparam kf29c0 = 61,do14e04 = 32'hfdffca8b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`define ddr3_ip_inst_IDLE 0 


`define ddr3_ip_inst_NOP_C 1 //2


`define ddr3_ip_inst_PRE 2 //4


`define ddr3_ip_inst_PRE_WAIT 3 //8


`define ddr3_ip_inst_ACT 4 //16


`define ddr3_ip_inst_ACT_WAIT 5 //32


`define ddr3_ip_inst_WR 6 //64


`define ddr3_ip_inst_RD 7 //128


`define ddr3_ip_inst_RDW 8 //256


`define ddr3_ip_inst_WRW 9




 

 



`define ddr3_ip_inst_IDLE 0 



`define ddr3_ip_inst_NOP_C 1 //2



`define ddr3_ip_inst_PRE 2 //4



`define ddr3_ip_inst_PRE_WAIT 3 //8



`define ddr3_ip_inst_ACT 4 //16



`define ddr3_ip_inst_ACT_WAIT 5 //32



`define ddr3_ip_inst_WR 6 //64



`define ddr3_ip_inst_RD 7 //128



`define ddr3_ip_inst_RDW 8 //256



`define ddr3_ip_inst_WRW 9





always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      uxd476 <= 1'b0;   end   else if (rg76926) begin      uxd476  <= blecb20;   end
end

assign #0.1 kd6a3b4    = ~(blecb20 ^ yzb1a03);

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      jcebe77   <=  1'b0;   else if (gd26863 && wjedd26)      jcebe77   <=  1'b1;
   else if (dba56b6 || zz37585|| ks349d6 || lq6652b || hd8b7c8)      jcebe77   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      osc186a   <=  1'b0;   else if (dbc744 && wjedd26)      osc186a   <=  1'b1;
   else if (dba56b6 || zz37585 || ks349d6 || ipd6332 || of5be47)      osc186a   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      blf9dde   <=  1'b0;   else if (ana4995)      blf9dde   <=  1'b1;   else if (lq6652b || zz37585)      blf9dde   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      osceef7   <=  1'b0;   else if (rg76926)      osceef7   <=  1'b1;   else if (ks349d6 || zz37585)      osceef7   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      me777b8   <=  1'b0;   else if (gdb4932)      me777b8   <=  1'b1;   else if (ipd6332 || zz37585)      me777b8   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      wlbbdc1   <=  1'b0;   else if (vx8ed24)      wlbbdc1   <=  1'b1;   else if (dba56b6 || zz37585)      wlbbdc1   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      vv5f3bb   <=  1'b0;   else if (qt44cec )      vv5f3bb   <=  1'b1;   else      vv5f3bb   <=  1'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      wwdee0c   <=  1'b0;   else if (gb609a1)      wwdee0c   <=  1'b1;   else if (ks349d6 || zz37585)      wwdee0c   <=  1'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      mrf7061   <=  1'b0;   else if (rv32b04)      mrf7061   <=  1'b1;   else if (ks349d6)      mrf7061   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      vkb830d   <=  1'b0;   else if (gd95826)      vkb830d   <=  1'b1;   else if (dba56b6 || ks349d6)      vkb830d   <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      rv3528   <=  10'b0;      zz37585           <=  1'b0;      wjedd26            <=  1'b0;      hb749a7            <=  1'b0;      ho47ce7         <=  1'b0;      hdb0bf4       <=  1'b0;      hd8b7c8             <=  1'b0;      icd1ca3          <=  1'b0;      of5be47             <=  1'b0;      ux18e38          <=  1'b0;      tj94e69            <=  1'b0;      lf389ff         <=  1'b0;      hqa7af3       <=  1'b0;      bn3d79b            <=  1'b0;      lqebcde            <=  1'b0;      rtf379c        <=  1'b0;      lf9bce7        <=  1'b0;      ay43101      <=  1'b1;      phc351       <=  1'b0;  end  else begin      rv3528   <=  yz2c834;      zz37585           <=  hb641a4;      wjedd26            <=  zm20d27;      hb749a7            <=  lf693a;      ho47ce7         <=  gda4eb1;      hdb0bf4       <=  ph2758c;      hd8b7c8             <=  hq3ac66;      icd1ca3          <=  wlb1994;      of5be47             <=  xy8cca5;      ux18e38          <=  db3295a;      tj94e69            <=  zz94ad6;      lf389ff         <=  sw2b5b7;      hqa7af3       <=  ld5adb8;      bn3d79b            <=  czd6dc7;      lqebcde            <=  cob6e3d;      rtf379c        <=  pub71e8;      lf9bce7        <=  twb8f43;      ay43101      <=  fnc7a1b;      phc351       <=  jc76340;  end end





always @ (en65906 or yx51da4 or vx8ed24 or rg76926  or os59d8d or         gdb4932 or ana4995  or me59da0 or kde86f6 or ay437b5         or qi24cac or qv26560 or fc1bda9         or ecac134  or ng4d0c or         dbc744 or qi3431d or dm63a26 or yza18e8 or ux1d133         or rtf379c or lf9bce7  or ep26765 or eaded4b         or zxf6a59 or sude125 or ir85676         or rv3d0de or tjb52ce or uka9676         or wjedd26 or zz37585 or ay43101 or hqa7af3 or hdb0bf4 or uicec68 or en4b3b1 or gd95826 or mg8d01d) begin
ks1a947 = 'b0;
db94638 = 1'b0;
hb7e9eb = 1'b0;
thc71c4 = 1'b0;
xy3a394 = 1'b0;
xl8e518 = 1'b0;
hbc713f = 1'b0;
qgc4fff = 1'b0;
dzc8f9c = 1'b0;
ec3e73a = 1'b0;
wwff3d0 = 1'b0;
facf40f = 1'b0;
xj61a8e = 1'b0;
lq4723e = wjedd26;
zza51c8 = zz37585;
zxdd7ce = ay43101;
rgd03dd = rtf379c;
qif75f = lf9bce7;
je3ffcf = hqa7af3;
pu9ce8e = hdb0bf4;
case (1)        en65906[`ddr3_ip_inst_IDLE] : begin         zza51c8 = 1'b1;         lq4723e = 1'b0;         dzc8f9c  = 1'b0;         ec3e73a  = 1'b0;         pu9ce8e=1'b0;         xy3a394 = 1'b0;         xl8e518 = 1'b0;         db94638 = 1'b0;         hb7e9eb = 1'b0;         thc71c4 = 1'b0;         hbc713f = 1'b0;         qgc4fff = 1'b0;         je3ffcf = 1'b0;         wwff3d0 = 1'b0;         facf40f = 1'b0;         rgd03dd = 1'b0;         qif75f = 1'b0;         zxdd7ce = 1'b1;         xj61a8e = 1'b0;         if (yx51da4) begin              ks1a947[`ddr3_ip_inst_NOP_C] = 1'b1;              lq4723e = 1'b1;              zza51c8 = 1'b0;              zxdd7ce = 1'b0;         end         else ks1a947[`ddr3_ip_inst_IDLE] = 1'b1;      end                         en65906[`ddr3_ip_inst_NOP_C]: begin       if (vx8ed24 || zxf6a59)  begin              if (rtf379c && (ng4d0c || rv3d0de) ) begin                 ks1a947[`ddr3_ip_inst_PRE] = 1'b1;                 lq4723e = 1'b0;                 hbc713f = 1'b1;                 qgc4fff = 1'b1;                 rgd03dd = 1'b0;                 zxdd7ce = 1'b0;              end
             else if (lf9bce7 && (dbc744 || os59d8d) && (gd95826 || en4b3b1)) begin                 ks1a947[`ddr3_ip_inst_PRE] = 1'b1;                 lq4723e = 1'b0;                 hbc713f = 1'b1;                 qgc4fff = 1'b1;                 qif75f = 1'b0;                 zxdd7ce = 1'b0;              end              else if (!rtf379c && !lf9bce7) begin                 ks1a947[`ddr3_ip_inst_PRE] = 1'b1;                 lq4723e = 1'b0;                 hbc713f = 1'b1;                 qgc4fff = 1'b1;                 zxdd7ce = 1'b0;              end              else begin                ks1a947[`ddr3_ip_inst_NOP_C] = 1'b1;                lq4723e = 1'b1;              end         end                   else if (rg76926 || fc1bda9) begin
              if (rtf379c && (qi3431d || !mg8d01d)  && (qv26560 || uka9676)) begin                 ks1a947[`ddr3_ip_inst_ACT] = 1'b1;                 lq4723e = 1'b0;                 dzc8f9c = 1'b1;                 ec3e73a = 1'b1;                 rgd03dd = 1'b0;                 zxdd7ce = 1'b0;              end
              else if (lf9bce7 && (dm63a26 || !mg8d01d) && (qv26560 || uka9676)) begin                 ks1a947[`ddr3_ip_inst_ACT] = 1'b1;                 lq4723e = 1'b0;                 dzc8f9c = 1'b1;                 ec3e73a = 1'b1;                 qif75f = 1'b0;                 zxdd7ce = 1'b0;              end              else if (!rtf379c && !lf9bce7) begin                 ks1a947[`ddr3_ip_inst_ACT] = 1'b1;                 lq4723e = 1'b0;                 dzc8f9c = 1'b1;                 ec3e73a = 1'b1;                 zxdd7ce = 1'b0;              end              else begin                ks1a947[`ddr3_ip_inst_NOP_C] = 1'b1;                lq4723e = 1'b1;              end        end                 else if (gdb4932 || eaded4b) begin           if (rtf379c ) begin                 ks1a947[`ddr3_ip_inst_WR] = 1'b1;                 lq4723e = 1'b0;                 xy3a394 = 1'b1;                 xl8e518 = 1'b1;                 rgd03dd = 1'b0;                 zxdd7ce = 1'b0;           end           else if (lf9bce7 && ux1d133) begin                 ks1a947[`ddr3_ip_inst_WR] = 1'b1;                 lq4723e = 1'b0;                 xy3a394 = 1'b1;                 xl8e518 = 1'b1;                 qif75f = 1'b0;                 zxdd7ce = 1'b0;           end           else if (!rtf379c && !lf9bce7) begin                 ks1a947[`ddr3_ip_inst_WR] = 1'b1;                 lq4723e = 1'b0;                 xy3a394 = 1'b1;                 xl8e518 = 1'b1;                 zxdd7ce = 1'b0;           end           else begin                ks1a947[`ddr3_ip_inst_NOP_C] = 1'b1;                lq4723e = 1'b1;           end        end                 else if (ana4995 || ay437b5) begin          if (rtf379c && yza18e8) begin                 ks1a947[`ddr3_ip_inst_RD] = 1'b1;                 lq4723e = 1'b0;                 db94638 = 1'b1;                 hb7e9eb = 1'b1;                 thc71c4 = 1'b1;                 rgd03dd = 1'b0;                 zxdd7ce = 1'b0;          end          else if (lf9bce7 ) begin                 ks1a947[`ddr3_ip_inst_RD] = 1'b1;                 lq4723e = 1'b0;                 db94638 = 1'b1;                 hb7e9eb = 1'b1;                 thc71c4 = 1'b1;                 qif75f = 1'b0;                 zxdd7ce = 1'b0;          end          else if (!rtf379c && !lf9bce7 ) begin                 ks1a947[`ddr3_ip_inst_RD] = 1'b1;                 lq4723e = 1'b0;                 db94638 = 1'b1;                 hb7e9eb = 1'b1;                 thc71c4 = 1'b1;                 zxdd7ce = 1'b0;           end           else begin                ks1a947[`ddr3_ip_inst_NOP_C] = 1'b1;                lq4723e = 1'b1;           end        end 
        else if (kde86f6 && (rv3d0de || os59d8d )) begin	ks1a947[`ddr3_ip_inst_IDLE]=1'b1;	zza51c8 = 1'b1;	lq4723e = 1'b0;	zxdd7ce=1'b1;        end        else begin            ks1a947[`ddr3_ip_inst_NOP_C] = 1'b1;            lq4723e = 1'b1;        end      end                   en65906[`ddr3_ip_inst_PRE] : begin           ks1a947[`ddr3_ip_inst_PRE_WAIT] = 1'b1;           hbc713f = 1'b0;           qgc4fff = 1'b0;           je3ffcf = 1'b1;      end                        en65906[`ddr3_ip_inst_PRE_WAIT] : begin         if (rg76926 || fc1bda9) begin            zxdd7ce = 1'b0;             if ((ecac134 || tjb52ce) && (qv26560 || uka9676) )begin                 ks1a947[`ddr3_ip_inst_ACT]=1'b1;                 dzc8f9c = 1'b1;                 ec3e73a = 1'b1;                 je3ffcf = 1'b0;           end           else begin              ks1a947[`ddr3_ip_inst_PRE_WAIT]=1'b1;              je3ffcf = 1'b1;           end         end 
         else if (kde86f6) begin             if (ecac134 || tjb52ce) begin	ks1a947[`ddr3_ip_inst_IDLE]=1'b1;	zza51c8 = 1'b1;	je3ffcf = 1'b0;	zxdd7ce = 1'b1;             end             else begin              ks1a947[`ddr3_ip_inst_PRE_WAIT]=1'b1;              je3ffcf = 1'b1;             end         end          else begin              ks1a947[`ddr3_ip_inst_PRE_WAIT]=1'b1;              je3ffcf = 1'b1;         end      end                   en65906[`ddr3_ip_inst_ACT] : begin	dzc8f9c = 1'b0;	ec3e73a = 1'b0;      if (sude125 == 0)  begin	ks1a947[`ddr3_ip_inst_ACT_WAIT]=1'b1;	pu9ce8e = 1'b1;      end      else         if (gdb4932 || eaded4b) begin              ks1a947[`ddr3_ip_inst_WR]=1'b1;              xy3a394 = 1'b1;              xl8e518 = 1'b1;              rgd03dd = 1'b0;         end         else begin              ks1a947[`ddr3_ip_inst_RD]=1'b1;              db94638 = 1'b1;              hb7e9eb = 1'b1;              thc71c4 = 1'b1;              qif75f = 1'b0;         end      end                       en65906[`ddr3_ip_inst_ACT_WAIT] : begin         if (gdb4932 || eaded4b) begin         rgd03dd = 1'b1;             if (qi24cac ) begin              ks1a947[`ddr3_ip_inst_WR]=1'b1;              pu9ce8e = 1'b0;              xy3a394 = 1'b1;              xl8e518 = 1'b1;              rgd03dd = 1'b0;           end           else begin              ks1a947[`ddr3_ip_inst_ACT_WAIT]=1'b1;              pu9ce8e = 1'b1;           end
         end          else if (ana4995  || ay437b5) begin         qif75f = 1'b1;           if (qi24cac  ) begin              ks1a947[`ddr3_ip_inst_RD]=1'b1;              pu9ce8e = 1'b0;              db94638 = 1'b1;              hb7e9eb = 1'b1;              thc71c4 = 1'b1;              qif75f = 1'b0;           end           else begin              ks1a947[`ddr3_ip_inst_ACT_WAIT]=1'b1;              pu9ce8e = 1'b1;           end         end          else  begin	ks1a947[`ddr3_ip_inst_ACT_WAIT]=1'b1;	pu9ce8e = 1'b1;         end
      end                  en65906[`ddr3_ip_inst_WR] : begin         if (ep26765 || me59da0) begin	ks1a947[`ddr3_ip_inst_NOP_C]=1'b1;	xy3a394 = 1'b0;	xl8e518 = 1'b0;	lq4723e = 1'b1;	rgd03dd = 1'b1;	qif75f = 1'b0;         end         else begin	ks1a947[`ddr3_ip_inst_WRW]=1'b1;	xy3a394 = 1'b0;	xl8e518 = 1'b0;	facf40f = 1'b1;	lq4723e = 1'b0;         end
      end                           en65906[`ddr3_ip_inst_WRW] : begin         if (me59da0) begin	ks1a947[`ddr3_ip_inst_NOP_C]= 1'b1;	lq4723e = 1'b1;	facf40f = 1'b0;	rgd03dd = 1'b1;	qif75f = 1'b0;         end         else  begin	ks1a947[`ddr3_ip_inst_WR]= 1'b1;	xy3a394 = 1'b1;	xl8e518 = 1'b1;	facf40f = 1'b0;	lq4723e = 1'b0;         end
      end                  en65906[`ddr3_ip_inst_RD] : begin         if (ep26765 || me59da0) begin	ks1a947[`ddr3_ip_inst_NOP_C]=1'b1;	lq4723e = 1'b1;	db94638  = 1'b0;	hb7e9eb = 1'b0;	thc71c4 = 1'b0;	qif75f = 1'b1;	rgd03dd = 1'b0;         end         else  begin               if (!uicec68 && ir85676 ) begin                   xj61a8e = 1'b1;                  ks1a947[`ddr3_ip_inst_RD]=1'b1;               end       else begin                  xj61a8e = 1'b0;                  ks1a947[`ddr3_ip_inst_RDW]=1'b1;                  wwff3d0 = 1'b1 ;                  db94638 = 1'b0;                  hb7e9eb = 1'b0;                  thc71c4 = 1'b0;                  rgd03dd = 1'b0;                  lq4723e = 1'b0;               end         end      end
                          en65906[`ddr3_ip_inst_RDW] : begin         if (me59da0) begin	ks1a947[`ddr3_ip_inst_NOP_C]=1'b1;	lq4723e = 1'b1;	wwff3d0 = 1'b0;	qif75f = 1'b1;         end
         else begin	ks1a947[`ddr3_ip_inst_RD]=1'b1;	db94638 = 1'b1;	hb7e9eb = 1'b1;	thc71c4 = 1'b1;	wwff3d0 = 1'b0;	lq4723e = 1'b0;         end      end
      default : begin         ks1a947[`ddr3_ip_inst_IDLE]=1'b1;         zza51c8 = 1'b1;         lq4723e = 1'b0;
      end
endcase
end

always@* begin yx51da4<=ou538[0];vx8ed24<=ou538[1];rg76926<=ou538[2];gdb4932<=ou538[3];ana4995<=ou538[4];qi24cac<=ou538[5];qv26560<=ou538[6];rv32b04<=ou538[7];gd95826<=ou538[8];ecac134<=ou538[9];gb609a1<=ou538[10];ng4d0c<=ou538[11];gd26863<=ou538[12];qi3431d<=ou538[13];yza18e8<=ou538[14];dbc744<=ou538[15];dm63a26<=ou538[16];ux1d133<=ou538[17];me59da0<=ou538[18];qt44cec<=ou538[19];ep26765<=ou538[20];ir85676<=ou538[21];ie9d964<=ou538[22];blecb20<=ou538[23];en65906<={rv3528>>1,ou538[24]};yz2c834<={ks1a947>>1,ou538[25]};hb641a4<=ou538[26];zm20d27<=ou538[27];lf693a<=ou538[28];ks349d6<=ou538[29];gda4eb1<=ou538[30];ph2758c<=ou538[31];hq3ac66<=ou538[32];ipd6332<=ou538[33];wlb1994<=ou538[34];xy8cca5<=ou538[35];lq6652b<=ou538[36];db3295a<=ou538[37];zz94ad6<=ou538[38];dba56b6<=ou538[39];sw2b5b7<=ou538[40];ld5adb8<=ou538[41];czd6dc7<=ou538[42];cob6e3d<=ou538[43];pub71e8<=ou538[44];twb8f43<=ou538[45];fnc7a1b<=ou538[46];rv3d0de<=ou538[47];kde86f6<=ou538[48];ay437b5<=ou538[49];fc1bda9<=ou538[50];eaded4b<=ou538[51];zxf6a59<=ou538[52];tjb52ce<=ou538[53];uka9676<=ou538[54];en4b3b1<=ou538[55];os59d8d<=ou538[56];uicec68<=ou538[57];jc76340<=ou538[58];yzb1a03<=ou538[59];mg8d01d<=ou538[60];end
always@* begin swa7[2047]<=tw1b8b9;swa7[2046]<=ofdc5cb;swa7[2044]<=by475a9;swa7[2040]<=end6a5a;swa7[2032]<=cob976c;swa7[2017]<=sucbb60;swa7[1987]<=tu5db00;swa7[1926]<=kded802;swa7[1805]<=db94638;swa7[1804]<=xw6c014;swa7[1803]<=kf26eb0;swa7[1761]<=xy3a394;swa7[1668]<=wwff3d0;swa7[1562]<=ux18e38;swa7[1560]<=cz600a3;swa7[1558]<=rv3528[0];swa7[1550]<=wje88cd;swa7[1475]<=icd1ca3;swa7[1464]<=ec3e73a;swa7[1288]<=facf40f;swa7[1242]<=xj61a8e;swa7[1076]<=thc71c4;swa7[1072]<=ks51d;swa7[1069]<=ks1a947[0];swa7[1056]<=qif75f;swa7[1052]<=qt4466c;swa7[1028]<=osceef7;swa7[1023]<=uie0c97;swa7[902]<=xl8e518;swa7[901]<=mg24dd6;swa7[880]<=pu9ce8e;swa7[874]<=kd6a3b4;swa7[834]<=je3ffcf;swa7[775]<=ux1d119;swa7[732]<=ho47ce7;swa7[621]<=phc351;swa7[528]<=rgd03dd;swa7[514]<=blf9dde;swa7[450]<=zkdf23d;swa7[437]<=uxd476;swa7[417]<=qgc4fff;swa7[387]<=qia3a23;swa7[366]<=dzc8f9c;swa7[310]<=osc186a;swa7[257]<=vv5f3bb;swa7[225]<=ldcd926;swa7[208]<=lf389ff;swa7[193]<=hq14744;swa7[183]<=lq4723e;swa7[155]<=vkb830d;swa7[128]<=jcebe77;swa7[112]<=tw11291;swa7[104]<=hbc713f;swa7[96]<=ep28e8;swa7[91]<=zza51c8;swa7[77]<=mrf7061;swa7[64]<=zxdd7ce;swa7[56]<=bn3d5ba;swa7[38]<=wwdee0c;swa7[19]<=wlbbdc1;swa7[9]<=me777b8;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule































`timescale 1 ns / 100 ps
module kd4b983_ddr3_ip_inst (

   clk,
   rst_n,
   uie0c97,
   
   
   fpbfbde,			 
   shfdef6,			 
   uief7b5,			 
   bl7bda8,			 
   kqded46,			 
   vvf6a31,			 
   ntb518e,			 
   zma8c76,			 
   me463b2,
   wy31d91,
   zz8ec89,
   xw7644e,	 
   fcb2273,	 

   
   tj9139b,			 
   je89cdf,			 
   en4e6fb,			 
   ps737dd,			 
   vx9beeb,			 
   dmdf75f,			 
   lqfbafa,			 
   pfdd7d2,			 
   hoebe97,
   fn5f4bb,
   ayfa5de,
   jpd2ef1,    
   gq9778f,	 

   tw11291,
   yz1d21e,
   vid0675,
   
   sude125,
   ayf0928,
   fp84941,
   sw24a0f,
   fc25078,
   lf283c3,
   kd41e1f,
   gqf0fd,
   ea787e9,
   czc6e18,
   param_trcd, 
   param_trp,  
   param_tras, 
   param_trc,  
   param_trrd,  
   param_trtp, 
   param_twtr,
   vida65e,
   zm833ab,
   zz19d5b,
   eaceade,
   mr756f0,
   sjab784,
   kd5bc24,   

   ayf5998,
   coaccc1,
   wjedd26,
   hb749a7,
   hd8b7c8,
   of5be47,
   tj94e69,
   ay43101,
   zxc8c5b,
   ksb9b7e,
   su6df8f,
   dz7e3c5,
   jr8e646,			 
   dm73237,
   hbf91ea,
   zkdf23d,
   oh1234b,
   ec8d2e6,
   bn3d5ba,
   kqeadd6,
   ngb7589,
   fa4dbd6 ,
   rd_odd,
   sh4e2a7      
);
input                           clk;
input                           rst_n;
input                           uie0c97;
input                           fpbfbde;
input                           shfdef6;
input                           uief7b5;
input                           bl7bda8;
input                           kqded46;
input                           vvf6a31;
input [4:0]                     ntb518e;
input [`ddr3_ip_inst_CS_WIDTH-1:0]           zma8c76;
input [`ddr3_ip_inst_COL_WIDTH -1:0]         me463b2;
input [`ddr3_ip_inst_BANK_WIDTH -1 :0]       wy31d91;
input [`ddr3_ip_inst_ROW_WIDTH -1:0]         zz8ec89;
input                           tj9139b;
input                           je89cdf;
input                           en4e6fb;
input                           ps737dd;
input                           vx9beeb;
input                           dmdf75f;
input [4:0]                     lqfbafa;
input [`ddr3_ip_inst_CS_WIDTH-1:0]           pfdd7d2;
input [`ddr3_ip_inst_COL_WIDTH -1:0]         hoebe97;
input [`ddr3_ip_inst_BANK_WIDTH -1 :0]       fn5f4bb;
input [`ddr3_ip_inst_ROW_WIDTH -1:0]         ayfa5de;
input                           tw11291;
input                           yz1d21e;
input                           vid0675;
input [2:0]                     xw7644e;
input [2:0]                     jpd2ef1;
input                           fcb2273;
input                           gq9778f;
input                           vida65e;
input [`ddr3_ip_inst_AL_WIDTH-1:0]           sude125;
input [`ddr3_ip_inst_CL_WIDTH-1:0]           ayf0928;
input                           fp84941;
input [`ddr3_ip_inst_CWL_WIDTH-1:0]          sw24a0f;
input                           fc25078;
input                           lf283c3;
input                           kd41e1f;
input                           gqf0fd;
input                           ea787e9;
input   [2:0]                   czc6e18;
input                           zm833ab;
input                           zz19d5b;
input                           eaceade;
input                           mr756f0;
input                           sjab784 ;
input                           kd5bc24 ;
input   [`ddr3_ip_inst_TRCD_WIDTH-1:0]       param_trcd;
input   [`ddr3_ip_inst_TRP_WIDTH-1:0]        param_trp;
input   [`ddr3_ip_inst_TRAS_WIDTH-1:0]       param_tras;
input   [`ddr3_ip_inst_TRC_WIDTH-1:0]        param_trc;
input   [`ddr3_ip_inst_TRRD_WIDTH-1:0]       param_trrd;
input   [`ddr3_ip_inst_TRTP_WIDTH-1:0]       param_trtp;
input   [`ddr3_ip_inst_TWTR_WIDTH-1:0]       param_twtr;
output [`ddr3_ip_inst_RL_WIDTH-1:0]          ayf5998;
output [`ddr3_ip_inst_WL_WIDTH-1:0]          coaccc1;
output                          wjedd26 ;
output                          hb749a7  ;
output                          hd8b7c8 ;
output                          of5be47 ;
output                          tj94e69 ;
output                          ay43101;
output [`ddr3_ip_inst_CS_WIDTH -1:0]         zxc8c5b;
output [`ddr3_ip_inst_COL_WIDTH :0]          ksb9b7e;
output [`ddr3_ip_inst_BANK_WIDTH -1 :0]        su6df8f;
output [`ddr3_ip_inst_ROW_WIDTH -1:0]        dz7e3c5;
output                          jr8e646;
output                          dm73237;
output [2:0]                    ngb7589;
output                          hbf91ea;
output                          zkdf23d;
output                          oh1234b;
output                          ec8d2e6;
output [5:0]                    kqeadd6;
output                          bn3d5ba;
output                          fa4dbd6;
output                          rd_odd;
output                          sh4e2a7;
wire   [5:0]                    kqeadd6;
wire   [`ddr3_ip_inst_RL_WIDTH-1:0]          ayf5998;
wire   [`ddr3_ip_inst_WL_WIDTH-1:0]          coaccc1;
wire   [`ddr3_ip_inst_TRCD_WIDTH-1:0]        param_trcd;
wire   [`ddr3_ip_inst_TRP_WIDTH-1:0]         param_trp;
wire   [`ddr3_ip_inst_TRAS_WIDTH-1:0]        param_tras;
wire   [`ddr3_ip_inst_TRC_WIDTH-1:0]         param_trc;
wire   [`ddr3_ip_inst_TRTP_WIDTH-1:0]        param_trtp;
wire   [`ddr3_ip_inst_TWTR_WIDTH-1:0]        param_twtr;
wire   [4:0]                    ntb518e;
wire   [`ddr3_ip_inst_COL_WIDTH -1:0]        me463b2;
wire   [`ddr3_ip_inst_BANK_WIDTH -1 :0]      wy31d91;
wire   [`ddr3_ip_inst_ROW_WIDTH -1:0]        zz8ec89;
wire   [`ddr3_ip_inst_CS_WIDTH -1:0]         zxc8c5b;
wire   [4:0]                    lqfbafa;
wire   [`ddr3_ip_inst_COL_WIDTH -1:0]        hoebe97;
wire   [`ddr3_ip_inst_BANK_WIDTH -1 :0]      fn5f4bb;
wire   [`ddr3_ip_inst_ROW_WIDTH -1:0]        ayfa5de;
wire   [`ddr3_ip_inst_COL_WIDTH :0]          ksb9b7e;
wire   [`ddr3_ip_inst_BANK_WIDTH -1 :0]      su6df8f;
wire   [`ddr3_ip_inst_ROW_WIDTH -1:0]        dz7e3c5;
wire   [`ddr3_ip_inst_AL_WIDTH-1:0]          sude125;
wire   [`ddr3_ip_inst_CL_WIDTH-1:0]          ayf0928;
wire   [`ddr3_ip_inst_CWL_WIDTH-1:0]         sw24a0f;
wire   [2:0]                    czc6e18;
wire [`ddr3_ip_inst_CS_WIDTH-1:0]            pfdd7d2;
wire [`ddr3_ip_inst_CS_WIDTH-1:0]            zma8c76;
reg nt3df7d;
reg yx51da4;
reg gb5e914;
reg nef48a5;
reg epa452b;
reg db2295d;
reg tw14aef;
reg hda577a;
reg [2 : 0] ym2bbd7;
reg jc5deb9;
reg goef5ca;
reg sh7ae50;
reg thd7284;
reg ecb9426;
reg jcca130;
reg fn50983;
reg [2 : 0] zz84c1e;
reg yz260f7;
reg qt44cec;
reg do9c123;
reg db198bd;
reg epa1ade;
reg yzd6f4;
reg rt6b7a4;
reg cz5bd26;
reg gode935;
reg nef49a9;
reg [`ddr3_ip_inst_TRRD_WIDTH - 1 : 0] mga972a;
reg mr5e25b;
reg mrcc5ee;
reg ww62f74;
reg qv17ba1;
reg lsbdd0d;
reg rgee86b;
reg hb7435b;
reg [2047:0] swa7;
wire [34:0] ou538;




localparam kf29c0 = 35,do14e04 = 32'hfdffe06b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;




















ux18a1b_ddr3_ip_inst ou15ddf(
   .clk(clk),   .rst_n(nt3df7d),   .uie0c97(yx51da4),   .tw1b8b9(tw1b8b9),   .ofdc5cb(ofdc5cb),   .by475a9(by475a9),   .end6a5a(end6a5a),   .cob976c(cob976c),   .sucbb60(sucbb60),   .tu5db00(tu5db00),   .kded802(kded802),   .xw6c014(xw6c014),   .cz600a3(cz600a3),   .ks51d(ks51d),   .ep28e8(ep28e8),   .hq14744(hq14744),   .qia3a23(qia3a23),   .ux1d119(ux1d119),   .wje88cd(wje88cd),   .qt4466c(qt4466c),   .bn3d5ba(bn3d5ba),   .tw11291(qt44cec),   .ldcd926(ldcd926),   .sude125(sude125),   .zkdf23d(zkdf23d),   .mg24dd6(mg24dd6),   .kf26eb0(kf26eb0),
   .zz37585(zz37585) ,   .wjedd26(wjedd26) ,   .hb749a7(hb749a7)  ,   .hdb0bf4(hdb0bf4 ) ,   .hd8b7c8(hd8b7c8 ) ,   .of5be47(of5be47 ) ,   .hb7e9eb(hb7e9eb ) ,   .tj94e69(tj94e69 ) ,   .hqa7af3(hqa7af3 ),   .bn3d79b(bn3d79b ) ,   .lqebcde(lqebcde ) ,   .ay43101(ay43101),   .rtf379c(rtf379c),   .lf9bce7(lf9bce7)   );




th6b589_ddr3_ip_inst th5ac4e(
   .clk(clk),   .rst_n(nt3df7d),   .param_trcd( param_trcd ),   .param_trp( param_trp ),   .param_twr( czc6e18),   .param_tras( param_tras ),   .param_trc( param_trc ),   .param_trrd( mga972a ),   .param_trtp( param_trtp ),   .param_twtr( param_twtr ),   .ofdc5cb(ofdc5cb),   .hb749a7(hb749a7),   .hdb0bf4(hdb0bf4),   .tj94e69(tj94e69),   .hqa7af3(hqa7af3),   .wjedd26(wjedd26),   .hd8b7c8(hd8b7c8),   .of5be47(of5be47),   .lqebcde(lqebcde),   .bn3d79b(bn3d79b),   .kqeadd6(kqeadd6),   .mg24dd6(mg24dd6),   .ntbaaee(ntbaaee),   .sude125(sude125),   .ayf0928(ayf0928),   .fp84941(epa1ade),   .sw24a0f(sw24a0f),   .fc25078(yzd6f4),
   .ayf5998(ayf5998),   .coaccc1(coaccc1),   .cob976c(cob976c),   .sucbb60(sucbb60),   .tu5db00(tu5db00),   .kded802(kded802),   .xw6c014(xw6c014),   .cz600a3(cz600a3),   .ks51d(ks51d),   .ep28e8(ep28e8),   .hq14744(hq14744),   .qia3a23(qia3a23),   .ux1d119(ux1d119),   .wje88cd(wje88cd),   .qt4466c(qt4466c),   .bn3d5ba(bn3d5ba),   .ldcd926(ldcd926),   .fa4dbd6(fa4dbd6),   .rd_odd(rd_odd),   .sh4e2a7(sh4e2a7)
);





ld64f41_ddr3_ip_inst db27a0e(
   .clk(clk ),   .rst_n(nt3df7d ),   .vida65e(mr5e25b) ,      .fpbfbde(gb5e914 ),
   .shfdef6(nef48a5 ),
   .uief7b5(epa452b ),
   .bl7bda8(db2295d ),
   .kqded46(tw14aef ),
   .vvf6a31(hda577a ),
   .ntb518e(ntb518e ),
   .zma8c76(zma8c76 ),
   .me463b2(me463b2 ),   .wy31d91(wy31d91 ),   .zz8ec89(zz8ec89 ),   .yz1d21e(do9c123),   .xw7644e(ym2bbd7),   .fcb2273(jc5deb9),
      .tj9139b(goef5ca ),
   .je89cdf(sh7ae50 ),
   .en4e6fb(thd7284 ),
   .ps737dd(ecb9426 ),
   .vx9beeb(jcca130 ),
   .dmdf75f(fn50983 ),
   .lqfbafa(lqfbafa ),
   .pfdd7d2(pfdd7d2 ),
   .hoebe97(hoebe97 ),   .fn5f4bb(fn5f4bb ),   .ayfa5de(ayfa5de ),   .jpd2ef1(zz84c1e),   .gq9778f(yz260f7),   .tj94e69(tj94e69 ),   .of5be47(of5be47 ),      .hd8b7c8(hd8b7c8 ),   .bn3d5ba(bn3d5ba ),   .ldcd926(ldcd926 ),   .lf283c3(rt6b7a4),   .kd41e1f(cz5bd26),   .gqf0fd(gode935),   .ea787e9(nef49a9),   .vid0675(db198bd),   .sh4e2a7(sh4e2a7),   .zm833ab(mrcc5ee),   .zz19d5b(ww62f74),   .eaceade(qv17ba1),   .mr756f0(lsbdd0d),   .sjab784(rgee86b),   .kd5bc24(hb7435b),   .sude125(sude125),    .jr8e646(jr8e646 ),
   .dm73237(dm73237 ),   .qv33cd7(ofdc5cb ),   .tw1b8b9(tw1b8b9 ),   .end6a5a(end6a5a ),   .by475a9(by475a9 ),   .mg24dd6(mg24dd6 ),   .kf26eb0(kf26eb0 ),   .ntbaaee(ntbaaee ),   .ks986bf(ks986bf ),     .kqeadd6(kqeadd6 ),   .zxc8c5b(zxc8c5b ),   .ksb9b7e(ksb9b7e ),   .su6df8f(su6df8f ),   .dz7e3c5(dz7e3c5 ),   .hbf91ea(hbf91ea),   .zkdf23d(zkdf23d),   .ngb7589(ngb7589),   .oh1234b(oh1234b),   .ec8d2e6(ec8d2e6)   );
always@* begin nt3df7d<=ou538[0];yx51da4<=ou538[1];gb5e914<=ou538[2];nef48a5<=ou538[3];epa452b<=ou538[4];db2295d<=ou538[5];tw14aef<=ou538[6];hda577a<=ou538[7];ym2bbd7<={xw7644e>>1,ou538[8]};jc5deb9<=ou538[9];goef5ca<=ou538[10];sh7ae50<=ou538[11];thd7284<=ou538[12];ecb9426<=ou538[13];jcca130<=ou538[14];fn50983<=ou538[15];zz84c1e<={jpd2ef1>>1,ou538[16]};yz260f7<=ou538[17];qt44cec<=ou538[18];do9c123<=ou538[19];db198bd<=ou538[20];epa1ade<=ou538[21];yzd6f4<=ou538[22];rt6b7a4<=ou538[23];cz5bd26<=ou538[24];gode935<=ou538[25];nef49a9<=ou538[26];mga972a<={param_trrd>>1,ou538[27]};mr5e25b<=ou538[28];mrcc5ee<=ou538[29];ww62f74<=ou538[30];qv17ba1<=ou538[31];lsbdd0d<=ou538[32];rgee86b<=ou538[33];hb7435b<=ou538[34];end
always@* begin swa7[2047]<=uie0c97;swa7[2046]<=fpbfbde;swa7[2044]<=shfdef6;swa7[2041]<=uief7b5;swa7[2034]<=bl7bda8;swa7[2021]<=kqded46;swa7[2017]<=fp84941;swa7[1995]<=vvf6a31;swa7[1986]<=fc25078;swa7[1943]<=xw7644e[0];swa7[1925]<=lf283c3;swa7[1908]<=sjab784;swa7[1855]<=jpd2ef1[0];swa7[1838]<=fcb2273;swa7[1803]<=kd41e1f;swa7[1769]<=kd5bc24;swa7[1662]<=gq9778f;swa7[1628]<=tj9139b;swa7[1559]<=gqf0fd;swa7[1501]<=eaceade;swa7[1487]<=vx9beeb;swa7[1276]<=tw11291;swa7[1209]<=je89cdf;swa7[1070]<=ea787e9;swa7[1023]<=rst_n;swa7[1008]<=vid0675;swa7[954]<=mr756f0;swa7[927]<=dmdf75f;swa7[750]<=zz19d5b;swa7[743]<=ps737dd;swa7[504]<=yz1d21e;swa7[375]<=zm833ab;swa7[371]<=en4e6fb;swa7[187]<=vida65e;swa7[93]<=param_trrd[0];end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule
























`timescale 1 ns / 100 ps
module ld64f41_ddr3_ip_inst (

   clk,
   rst_n,
   vida65e,
   
   fpbfbde,			 
   shfdef6,			 
   uief7b5,			 
   bl7bda8,			 
   kqded46,			 
   vvf6a31,			 
   ntb518e,			 
   zma8c76,			 
   me463b2,
   wy31d91,
   zz8ec89,		 
   
   tj9139b,			 
   je89cdf,			 
   en4e6fb,			 
   ps737dd,			 
   vx9beeb,			 
   dmdf75f,			 
   lqfbafa,			 
   pfdd7d2,			 
   hoebe97,
   fn5f4bb,
   ayfa5de, 
   tj94e69,
   of5be47,
   hd8b7c8,
   bn3d5ba,
   ldcd926,
   lf283c3,
   kd41e1f,
   gqf0fd,
   ea787e9,
   yz1d21e,
   vid0675,
   xw7644e,
   jpd2ef1,
   fcb2273,
   gq9778f,
   sh4e2a7,
   zm833ab,
   zz19d5b,
   eaceade,
   mr756f0,
   sjab784,
   kd5bc24, 
   sude125,
 
   jr8e646,			 
   dm73237,   
   qv33cd7,
   tw1b8b9,
   end6a5a,
   by475a9,
   ngb7589, 
   mg24dd6,
   kf26eb0,
   ntbaaee,
   ks986bf,
   kqeadd6,
   zxc8c5b,
   ksb9b7e,
   su6df8f,
   dz7e3c5,
   hbf91ea,
   zkdf23d,
   oh1234b,
   ec8d2e6
   );
input                   clk;
input                   rst_n;
input                   fpbfbde;
input                   shfdef6;
input                   uief7b5;
input                   bl7bda8;
input                   kqded46;
input                   vvf6a31;
input [4:0]             ntb518e;
input [`ddr3_ip_inst_CS_WIDTH-1:0]    zma8c76;
input [`ddr3_ip_inst_COL_WIDTH -1:0] me463b2;
input [`ddr3_ip_inst_BANK_WIDTH -1 :0]  wy31d91;
input [`ddr3_ip_inst_ROW_WIDTH -1:0] zz8ec89;
input                   lf283c3;
input                   kd41e1f;
input                   gqf0fd;
input                   ea787e9;
input                   tj9139b;
input                   je89cdf;
input                   en4e6fb;
input                   ps737dd;
input                   vx9beeb;
input                   dmdf75f;
input [4:0]             lqfbafa;
input [`ddr3_ip_inst_CS_WIDTH-1:0]   pfdd7d2;
input [`ddr3_ip_inst_COL_WIDTH -1:0] hoebe97;
input [`ddr3_ip_inst_BANK_WIDTH -1 :0]  fn5f4bb;
input [`ddr3_ip_inst_ROW_WIDTH -1:0] ayfa5de;
input                   tj94e69;
input                   of5be47;
input                   hd8b7c8;
input                   bn3d5ba;
input                   ldcd926;
input                   yz1d21e;
input                   vid0675;
input [2:0]             xw7644e;
input [2:0]             jpd2ef1;
input                   fcb2273;
input                   gq9778f;
input                   sh4e2a7;
input                   vida65e;
input                   zm833ab;
input                   zz19d5b;
input                   eaceade;
input                   mr756f0;
input                   sjab784;
input                   kd5bc24;
input [`ddr3_ip_inst_AL_WIDTH-1:0]   sude125;
output                  jr8e646;
output                  dm73237;
output                  qv33cd7;
output                  tw1b8b9;
output                  end6a5a;
output                  by475a9;
output [2:0]            ngb7589;
output                  mg24dd6;
output                  kf26eb0;
output                  ntbaaee;
output                  ks986bf;
output [5:0]            kqeadd6;
output [`ddr3_ip_inst_CS_WIDTH -1 :0]  zxc8c5b;
output [`ddr3_ip_inst_COL_WIDTH :0]  ksb9b7e;
output [`ddr3_ip_inst_BANK_WIDTH -1 :0]  su6df8f;
output [`ddr3_ip_inst_ROW_WIDTH -1:0]  dz7e3c5;
output                   hbf91ea;
output                   zkdf23d;
output                   oh1234b;
output                   ec8d2e6;

`define ddr3_ip_inst_IDLEI 0  // 1d

`define ddr3_ip_inst_Q0 1   // 2d

`define ddr3_ip_inst_Q1 2   // 4d

`define ddr3_ip_inst_ACTI 3  // 8d

`define ddr3_ip_inst_PREI 4  // 16d

`define ddr3_ip_inst_RDI 5  // 32 d

`define ddr3_ip_inst_WRI 6  // 64 d
reg [6:0]               su468b4, ou345a0;
reg                     oh1234b, bn16803;
reg                     ec8d2e6, vxa00fc;
reg                     ofdc5cb, zz3f38, sw1f9c6, hbfce31 ;
reg                     tw1b8b9, lf38c7c, shc63e7;
reg                     end6a5a, sj8f9e9, tu7cf4c;
reg                     by475a9, db3d31d, dze98ee;
reg                     su4c776, tu63bb0;
reg                     sj1dd83, byeec1c;
reg                     ho760e3, jrb071b;
reg                     tw838de, zz1c6f2;
reg                     phc351, xj61a8e;
reg                     ykde5f3;
reg                     yxf2f98;
reg [2:0]               ngb7589;
reg                     mg24dd6;
reg                     ntbaaee;
reg [`ddr3_ip_inst_CS_WIDTH -1 :0]   zxc8c5b;
reg [5:0]               kqeadd6;
reg                     wy21bc0;
reg                     mtde00;
reg                     cz6f005;
reg [`ddr3_ip_inst_COL_WIDTH :0]     ksb9b7e;
reg [`ddr3_ip_inst_BANK_WIDTH -1 :0] su6df8f, oub02;
reg [`ddr3_ip_inst_ROW_WIDTH -1:0]   dz7e3c5;
reg [`ddr3_ip_inst_AL_WIDTH-1:0]     yz2c089;
reg                     hbf91ea;
reg                     zkdf23d;
reg                     jr8e646, dm73237;
reg                     ho4db5b;
reg                     me6dadb, me6d6d8;
reg                     th6b6c1, sh5b60e;
reg                     ks986bf;
reg [2:0]               pfd83a0;
reg [2:0]               goc1d07;
reg                     kf26eb0;
wire                    qv33cd7;

`ifdef ddr3_ip_inst_ECP3_SP2

`else

`endif //SP2

`ifdef ddr3_ip_inst_ECP3_SP2                                                                   

`else

`endif
reg mr5e25b;
reg gb5e914;
reg nef48a5;
reg epa452b;
reg db2295d;
reg tw14aef;
reg hda577a;
reg [4 : 0] gqac447;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] ui62239;
reg [`ddr3_ip_inst_COL_WIDTH - 1 : 0] vk111c8;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] ym88e43;
reg [`ddr3_ip_inst_ROW_WIDTH - 1 : 0] tu47219;
reg goef5ca;
reg sh7ae50;
reg thd7284;
reg ecb9426;
reg jcca130;
reg fn50983;
reg [4 : 0] rte63c0;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] wy31e06;
reg [`ddr3_ip_inst_COL_WIDTH - 1 : 0] yz8f031;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] su7818d;
reg [`ddr3_ip_inst_ROW_WIDTH - 1 : 0] rgc0c68;
reg nt6343;
reg dz50ace;
reg rvaa159;
reg me59da0;
reg ep26765;
reg rt6b7a4;
reg cz5bd26;
reg gode935;
reg nef49a9;
reg do9c123;
reg db198bd;
reg [2 : 0] ym2bbd7;
reg [2 : 0] zz84c1e;
reg jc5deb9;
reg yz260f7;
reg xl27d2c;
reg mrcc5ee;
reg ww62f74;
reg qv17ba1;
reg lsbdd0d;
reg rgee86b;
reg hb7435b;
reg [`ddr3_ip_inst_AL_WIDTH - 1 : 0] mrc3d06;
reg [6 : 0] tw1e834;
reg [6 : 0] nef41a3;
reg bna0d1a;
reg bn68d6;
reg rg76926;
reg ksa35b0;
reg sw1ad80;
reg gbd6c01;
reg ieb600d;
reg rvb0069;
reg gd8034e;
reg xy1a74;
reg ird3a3;
reg rg69d1c;
reg cz4e8e2;
reg xj74714;
reg aaa38a6;
reg xl1c531;
reg uve298f;
reg zm14c7d;
reg aaa63ea;
reg qi31f50;
reg uicec68;
reg jc76340;
reg goea060;
reg th50300;
reg lf81807;
reg rvc03f;
reg mr601fe;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] mgff5;
reg [`ddr3_ip_inst_AL_WIDTH - 1 : 0] yz7fa9;
reg ls3fd4c;
reg nefea62;
reg cmf5312;
reg oua9890;
reg cm4c480;
reg [2 : 0] ui62400;
reg [2 : 0] wl12000;
reg [2047:0] swa7;
wire [83:0] ou538;

`define ddr3_ip_inst_IDLEI 0  // 1d

`define ddr3_ip_inst_Q0 1   // 2d

`define ddr3_ip_inst_Q1 2   // 4d

`define ddr3_ip_inst_ACTI 3  // 8d

`define ddr3_ip_inst_PREI 4  // 16d

`define ddr3_ip_inst_RDI 5  // 32 d

`define ddr3_ip_inst_WRI 6  // 64 d

`ifdef ddr3_ip_inst_ECP3_SP2

`else

`endif //SP2

`ifdef ddr3_ip_inst_ECP3_SP2                                                                   

`else

`endif

localparam kf29c0 = 84,do14e04 = 32'hfdffca8b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`define ddr3_ip_inst_IDLEI 0  // 1d


`define ddr3_ip_inst_Q0 1   // 2d


`define ddr3_ip_inst_Q1 2   // 4d


`define ddr3_ip_inst_ACTI 3  // 8d


`define ddr3_ip_inst_PREI 4  // 16d


`define ddr3_ip_inst_RDI 5  // 32 d


`define ddr3_ip_inst_WRI 6  // 64 d


`ifdef ddr3_ip_inst_ECP3_SP2


`else


`endif //SP2


`ifdef ddr3_ip_inst_ECP3_SP2                                                                   


`else


`endif











`define ddr3_ip_inst_IDLEI 0  // 1d



`define ddr3_ip_inst_Q0 1   // 2d



`define ddr3_ip_inst_Q1 2   // 4d



`define ddr3_ip_inst_ACTI 3  // 8d



`define ddr3_ip_inst_PREI 4  // 16d



`define ddr3_ip_inst_RDI 5  // 32 d



`define ddr3_ip_inst_WRI 6  // 64 d




assign                  qv33cd7 = (yz7fa9 == 0) ? rg76926 : gbd6c01;
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       yz2c089          <=  'h0 ;   else       yz2c089          <=  mrc3d06 ;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       jr8e646          <=  1'b0 ;   else if (gb5e914  && oh1234b && (xy1a74 || rg69d1c))       jr8e646          <=  1'b1 ;   else       jr8e646          <=  1'b0 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       dm73237          <=  1'b0 ;   else if (goef5ca  && ec8d2e6 && (xy1a74  || rg69d1c ))       dm73237          <=  1'b1 ;   else       dm73237          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       me6dadb          <=  1'b0 ;   else if (gb5e914  && oh1234b && (xy1a74 || rg69d1c))
       me6dadb          <=  1'b1 ;   else if (dm73237 || (oua9890 && !mr5e25b ))       me6dadb          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       me6d6d8          <=  1'b0 ;   else if (goef5ca  && ec8d2e6 && (xy1a74  || rg69d1c ))
       me6d6d8          <=  1'b1 ;   else if (jr8e646 || (cm4c480 && !mr5e25b ))       me6d6d8          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       th6b6c1          <=  1'b0 ;   else       th6b6c1          <=  nefea62 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       sh5b60e          <=  1'b0 ;   else       sh5b60e          <=  cmf5312 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)    ntbaaee   <=  1'b0 ;   else    ntbaaee   <=  !mg24dd6 ;
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)    hbfce31    <=  1'b0 ;   else    hbfce31    <=  rg76926 ;
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      zxc8c5b        <=  'b0 ;   else if (oh1234b && gb5e914 )       zxc8c5b        <=  ui62239 ;   else if (ec8d2e6 && goef5ca)       zxc8c5b        <=  wy31e06 ;
end





always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      kqeadd6        <=  'b0 ;   else if (oh1234b && gb5e914  ) begin      if (gqac447 == 0)          kqeadd6        <=  6'h20 ;      else          kqeadd6        <=  gqac447 ;   end   else if (ec8d2e6 && goef5ca)  begin      if (rte63c0 == 0)          kqeadd6        <=  6'h20 ;      else          kqeadd6        <=  rte63c0 ;   end
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      yxf2f98        <=  'b0 ;      ykde5f3        <=  'b0 ;   end   else if ((ird3a3 || gd8034e) && ( |kqeadd6[5:1] )) begin      yxf2f98        <=  'b1 ;      ykde5f3        <=  'b1 ;   end   else if ( xl27d2c || ep26765 ) begin      yxf2f98        <=  'b0 ;      ykde5f3        <=  'b0 ;   end
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)         ho4db5b        <=   1'b0;   else if (rvb0069) ho4db5b        <=   1'b1;   else if (nt6343)       ho4db5b        <=   1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ksb9b7e        <=  'b0 ;   else if ((oh1234b && gb5e914) || (do9c123 && !mr5e25b))      ksb9b7e        <=  {hda577a, vk111c8} ;   else if ((ec8d2e6 && goef5ca) || (db198bd && !mr5e25b))      ksb9b7e        <=  {fn50983,yz8f031};
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      su6df8f        <=  'b0 ;   else if ((oh1234b && gb5e914) || (do9c123 && !mr5e25b))      su6df8f        <=  ym88e43 ;   else if ((ec8d2e6 && goef5ca) || (db198bd && !mr5e25b))      su6df8f        <=  su7818d ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      pfd83a0        <=  'b0 ;   else if (bna0d1a && gb5e914)      pfd83a0        <=  ym88e43 ;   else if (bn68d6 && goef5ca)      pfd83a0        <=  su7818d ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      goc1d07        <=  'b0 ;   else      goc1d07        <=  ui62400 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      kf26eb0        <=  1'b1 ;   else if ((ui62400 == wl12000) && ((gb5e914 || goef5ca) && mr5e25b))      kf26eb0        <=  (kf26eb0 ) ;   else if ((ui62400 != wl12000) && ((gb5e914 || goef5ca) && mr5e25b))      kf26eb0        <=  !kf26eb0 ;   else   kf26eb0    <=  kf26eb0 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ks986bf        <=  'b0 ;   else if ((db2295d || tw14aef) && gb5e914)      ks986bf        <=  jc5deb9 ;   else if ((ecb9426 || jcca130) && goef5ca)      ks986bf        <=  yz260f7 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      oub02        <=  'b0 ;   else      oub02        <=  su6df8f ;
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      mg24dd6        <=  1'b1 ;   else if ((su6df8f == mgff5) && (((gb5e914 || goef5ca) && mr5e25b) || ((do9c123 || db198bd ) && !mr5e25b)))      mg24dd6        <=  (mg24dd6 ) ;   else if ((su6df8f != mgff5) && (((gb5e914 || goef5ca) && mr5e25b) || ((do9c123 || db198bd )&& !mr5e25b)))      mg24dd6        <=  !mg24dd6 ;   else   mg24dd6        <=  mg24dd6 ;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ngb7589        <=  'b0 ;   else if ( do9c123)      ngb7589        <=  ym2bbd7 ;   else if ( db198bd)      ngb7589        <=  zz84c1e ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      dz7e3c5        <=  'b0 ;   else if (oh1234b && gb5e914)      dz7e3c5        <=  tu47219 ;   else if (ec8d2e6 && goef5ca)      dz7e3c5        <=  rgc0c68 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      hbf91ea        <=  'b0 ;   else if (oh1234b && gb5e914)      hbf91ea        <=  rt6b7a4 ;   else if (ec8d2e6 && goef5ca)      hbf91ea        <=  gode935 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      zkdf23d        <=  'b0 ;   else if (oh1234b && gb5e914)      zkdf23d        <=  cz5bd26 ;   else if (ec8d2e6 && goef5ca)      zkdf23d        <=  nef49a9 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      wy21bc0   <=  'b0 ;      mtde00   <=  'b0 ;      cz6f005   <=  'b0 ;   end   else if (rvb0069 || sw1ad80 || xy1a74 || rg69d1c) begin      wy21bc0   <=  'b1 ;      mtde00   <=  'b1 ;      cz6f005   <=  'b1 ;   end   else if ((ep26765 && (rvaa159 || dz50ace)) || (!ep26765 && me59da0)) begin      wy21bc0   <=  'b0 ;      mtde00   <=  'b0 ;      cz6f005   <=  'b0 ;   end
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      su468b4           <=  7'b0 ;      oh1234b              <=  1'b0;      ec8d2e6              <=  1'b0;      tw1b8b9       <=  1'b0;      shc63e7     <=  1'b0;      ofdc5cb          <=  1'b0;      sw1f9c6        <=  1'b0;      end6a5a            <=  1'b0;      tu7cf4c          <=  1'b0;      by475a9           <=  1'b0;      dze98ee         <=  1'b0;      su4c776          <=  1'b0;      ho760e3          <=  1'b0;      sj1dd83          <=  1'b0;      tw838de          <=  1'b0;      phc351       <=  1'b0;   end   else begin      su468b4           <=  nef41a3 ;      oh1234b              <=  bna0d1a;      ec8d2e6              <=  bn68d6;      tw1b8b9       <=  ieb600d;      shc63e7     <=  ieb600d;      ofdc5cb          <=  ksa35b0;      sw1f9c6        <=  ksa35b0;      by475a9           <=  ird3a3;      dze98ee         <=  ird3a3;      end6a5a            <=  gd8034e;      tu7cf4c          <=  gd8034e;      su4c776          <=  xj74714;      ho760e3          <=  zm14c7d;      sj1dd83          <=  xl1c531;      tw838de          <=  qi31f50;      phc351       <=  jc76340;   end
end





always @ (tw1e834 or gb5e914  or goef5ca  or mrcc5ee or ww62f74 or hb7435b or          nefea62 or cmf5312  or by475a9 or mr5e25b or lf81807 or rvc03f or mr601fe or qv17ba1 or lsbdd0d          or epa452b or thd7284 or nef48a5 or sh7ae50 or ls3fd4c or rte63c0          or db2295d or ecb9426 or tw14aef or jcca130 or th50300  or goea060 or gqac447 or          cz4e8e2 or aaa38a6 or uve298f or aaa63ea or dm73237 or jr8e646 or  rgee86b          or oh1234b or ec8d2e6 or hbf91ea or uicec68) begin
ou345a0 = 7'b0;
zz3f38 = 1'b0;
lf38c7c = 1'b0;
db3d31d = 1'b0;
sj8f9e9 = 1'b0;
xj61a8e = 1'b0;
bn16803 = oh1234b;
vxa00fc = ec8d2e6;
jrb071b = uve298f;
byeec1c = aaa38a6;
zz1c6f2 = aaa63ea;
tu63bb0 = cz4e8e2;
case (1)        tw1e834[`ddr3_ip_inst_IDLEI] :  begin                        bn16803 = 1'b0;                        vxa00fc = 1'b0;                        zz3f38 = 1'b0;                        lf38c7c = 1'b0;                        db3d31d = 1'b0;                        sj8f9e9 = 1'b0;                        tu63bb0 = 1'b0;                        jrb071b = 1'b0;                        byeec1c = 1'b0;                        zz1c6f2 = 1'b0;                        xj61a8e = 1'b0;                        if (gb5e914 && mr5e25b && !mr601fe) begin                                                    ou345a0[`ddr3_ip_inst_Q0] = 1'b1;                            bn16803 = 1'b1;                        end                        else if (goef5ca && mr5e25b && !mr601fe) begin                                                    ou345a0[`ddr3_ip_inst_Q1] = 1'b1;                            vxa00fc = 1'b1;                        end                        else ou345a0[`ddr3_ip_inst_IDLEI] = 1'b1;                end




`ifdef ddr3_ip_inst_ECP3_SP2
   tw1e834[`ddr3_ip_inst_Q0] :  begin
                   if (mr5e25b && goef5ca  && !lf81807) begin                       jrb071b = 1'b0;                       byeec1c = 1'b0;                       tu63bb0 = 1'b0;                       zz1c6f2 = 1'b0;                       if (!uicec68 && hbf91ea && lsbdd0d && !sh7ae50  && !hb7435b && !th50300 && (rte63c0 == 1)) begin                        xj61a8e = 1'b1;                        ou345a0[`ddr3_ip_inst_Q0] = 1'b1;                       end                       else if (uicec68 && hbf91ea && lsbdd0d && !sh7ae50  && !hb7435b && !th50300 && (rte63c0 == 1)) begin                        xj61a8e = 1'b0;                        ou345a0[`ddr3_ip_inst_RDI] = 1'b1;                        sj8f9e9 =1'b1;                        vxa00fc = 1'b1;                        bn16803 = 1'b0;                       end                       else if (ww62f74 && !sh7ae50 && !hb7435b && !th50300 && (rte63c0 == 1)) begin                        ou345a0[`ddr3_ip_inst_WRI] = 1'b1;                        db3d31d =1'b1;                        vxa00fc = 1'b1;                        bn16803 = 1'b0;                       end                       else ou345a0[`ddr3_ip_inst_IDLEI] = 1'b1;                    end
                  else   if (!mr5e25b || nefea62) begin                         ou345a0[`ddr3_ip_inst_IDLEI] = 1'b1;                         tu63bb0 = 1'b0;                         jrb071b = 1'b0;                         byeec1c = 1'b0;                         zz1c6f2 = 1'b0;                    end
                    else  if (mr5e25b && (gb5e914 )) begin                       jrb071b = 1'b0;                       byeec1c = 1'b0;                       if (nef48a5 && !aaa63ea) begin                        ou345a0[`ddr3_ip_inst_PREI] = 1'b1;                        lf38c7c =1'b1;                        bn16803 = 1'b1;                       end                       else if (epa452b && !cz4e8e2 && !ls3fd4c) begin                        ou345a0[`ddr3_ip_inst_ACTI] = 1'b1;                        zz3f38 =1'b1;                        bn16803 = 1'b1;                       end                       else if (tw14aef && !aaa38a6  && !th50300 && !ls3fd4c) begin                        ou345a0[`ddr3_ip_inst_RDI] = 1'b1;                        sj8f9e9 =1'b1;                        bn16803 = 1'b1;                       end                       else if (db2295d && !uve298f && !th50300  && !ls3fd4c) begin                        ou345a0[`ddr3_ip_inst_WRI] = 1'b1;                        db3d31d =1'b1;                        bn16803 = 1'b1;                       end                       else ou345a0[`ddr3_ip_inst_Q0] = 1'b1;                    end
                    else ou345a0[`ddr3_ip_inst_Q0] = 1'b1;                end

`else
   tw1e834[`ddr3_ip_inst_Q0] :  begin
                   if (mr5e25b && goef5ca  && !lf81807) begin                       jrb071b = 1'b0;                       byeec1c = 1'b0;                       tu63bb0 = 1'b0;                       zz1c6f2 = 1'b0;
                      if (lsbdd0d && !sh7ae50  && !hb7435b && !th50300 && (rte63c0 == 1)) begin                        ou345a0[`ddr3_ip_inst_RDI] = 1'b1;                        sj8f9e9 =1'b1;                        vxa00fc = 1'b1;                        bn16803 = 1'b0;                       end                       else if (ww62f74 && !sh7ae50 && !hb7435b && !th50300 && (rte63c0 == 1)) begin                        ou345a0[`ddr3_ip_inst_WRI] = 1'b1;                        db3d31d =1'b1;                        vxa00fc = 1'b1;                        bn16803 = 1'b0;                       end                       else ou345a0[`ddr3_ip_inst_IDLEI] = 1'b1;                    end
                  else   if (!mr5e25b || nefea62) begin                         ou345a0[`ddr3_ip_inst_IDLEI] = 1'b1;                         tu63bb0 = 1'b0;                         jrb071b = 1'b0;                         byeec1c = 1'b0;                         zz1c6f2 = 1'b0;                    end
                    else  if (mr5e25b && (gb5e914 )) begin                       jrb071b = 1'b0;                       byeec1c = 1'b0;                       if (nef48a5 && !aaa63ea) begin                        ou345a0[`ddr3_ip_inst_PREI] = 1'b1;                        lf38c7c =1'b1;                        bn16803 = 1'b1;                       end                       else if (epa452b && !cz4e8e2 && !ls3fd4c) begin                        ou345a0[`ddr3_ip_inst_ACTI] = 1'b1;                        zz3f38 =1'b1;                        bn16803 = 1'b1;                       end                       else if (tw14aef && !aaa38a6  && !th50300 && !ls3fd4c) begin                        ou345a0[`ddr3_ip_inst_RDI] = 1'b1;                        sj8f9e9 =1'b1;                        bn16803 = 1'b1;                       end                       else if (db2295d && !uve298f && !th50300  && !ls3fd4c) begin                        ou345a0[`ddr3_ip_inst_WRI] = 1'b1;                        db3d31d =1'b1;                        bn16803 = 1'b1;                       end                       else ou345a0[`ddr3_ip_inst_Q0] = 1'b1;                    end
                    else ou345a0[`ddr3_ip_inst_Q0] = 1'b1;                end

`endif //SP2

   tw1e834[`ddr3_ip_inst_ACTI] :  begin                  if (oh1234b) begin                     ou345a0[`ddr3_ip_inst_Q0] = 1'b1;                     zz3f38 = 1'b0;                     tu63bb0 = 1'b1;                  end                  else  begin                     ou345a0[`ddr3_ip_inst_Q1] = 1'b1;                     zz3f38 = 1'b0;                     tu63bb0 = 1'b1;                 end                end
   tw1e834[`ddr3_ip_inst_WRI] :  begin                    if (oh1234b) begin                     ou345a0[`ddr3_ip_inst_Q0] = 1'b1;                     db3d31d = 1'b0;                     jrb071b = 1'b1;                  end                  else  begin                     ou345a0[`ddr3_ip_inst_Q1] = 1'b1;                     db3d31d = 1'b0;                     jrb071b = 1'b1;                 end                end  tw1e834[`ddr3_ip_inst_RDI] :  begin                  if (oh1234b) begin                     ou345a0[`ddr3_ip_inst_Q0] = 1'b1;                     sj8f9e9 = 1'b0;                     byeec1c = 1'b1;                  end                  else  begin                     ou345a0[`ddr3_ip_inst_Q1] = 1'b1;                     sj8f9e9 = 1'b0;                     byeec1c = 1'b1;                 end                end  tw1e834[`ddr3_ip_inst_PREI] :  begin                  if (oh1234b) begin                     ou345a0[`ddr3_ip_inst_Q0] = 1'b1;                     lf38c7c = 1'b0;                     zz1c6f2 = 1'b1;                  end                  else  begin                     ou345a0[`ddr3_ip_inst_Q1] = 1'b1;                     lf38c7c = 1'b0;                     zz1c6f2 = 1'b1;                 end                end




`ifdef ddr3_ip_inst_ECP3_SP2                                                                   
   tw1e834[`ddr3_ip_inst_Q1] :  begin                   if (mr5e25b && gb5e914 && !rvc03f) begin                       jrb071b = 1'b0;                       byeec1c = 1'b0;                       tu63bb0 = 1'b0;                       zz1c6f2 = 1'b0;                       if (!uicec68 && hbf91ea && qv17ba1 && !nef48a5  && !rgee86b && !goea060 && (gqac447 == 1)) begin                        xj61a8e = 1'b1;                        ou345a0[`ddr3_ip_inst_Q1] = 1'b1;                       end                       else if (uicec68 && hbf91ea && qv17ba1 && !nef48a5  && !rgee86b && !goea060 && (gqac447 == 1)) begin                        xj61a8e = 1'b0;                        ou345a0[`ddr3_ip_inst_RDI] = 1'b1;                        sj8f9e9 =1'b1;                        bn16803 = 1'b1;                        vxa00fc = 1'b0;                       end                       else if (mrcc5ee && !nef48a5  && !rgee86b && !goea060 && (gqac447 == 1)) begin                        ou345a0[`ddr3_ip_inst_WRI] = 1'b1;                        db3d31d =1'b1;                        bn16803 = 1'b1;                        vxa00fc = 1'b0;                       end                       else ou345a0[`ddr3_ip_inst_IDLEI] = 1'b1;                    end                    else  if (!mr5e25b || cmf5312 ) begin                         ou345a0[`ddr3_ip_inst_IDLEI] = 1'b1;                         tu63bb0 = 1'b0;                         jrb071b = 1'b0;                         byeec1c = 1'b0;                         zz1c6f2 = 1'b0;                    end
                    else  if (mr5e25b && (goef5ca )) begin                       jrb071b = 1'b0;                       byeec1c = 1'b0;                       if (sh7ae50 && !aaa63ea) begin                        ou345a0[`ddr3_ip_inst_PREI] = 1'b1;                        lf38c7c =1'b1;                        vxa00fc = 1'b1;                       end                       else if (thd7284 && !cz4e8e2 && !ls3fd4c) begin                        ou345a0[`ddr3_ip_inst_ACTI] = 1'b1;                        zz3f38 =1'b1;                        vxa00fc = 1'b1;                       end                       else if (jcca130 && !aaa38a6  && !goea060 && !ls3fd4c) begin                        ou345a0[`ddr3_ip_inst_RDI] = 1'b1;                        sj8f9e9 =1'b1;                        vxa00fc = 1'b1;                       end                       else if (ecb9426 && !uve298f && !goea060  && !ls3fd4c) begin                        ou345a0[`ddr3_ip_inst_WRI] = 1'b1;                        db3d31d =1'b1;                        vxa00fc = 1'b1;                       end                       else ou345a0[`ddr3_ip_inst_Q1] = 1'b1;                    end                    else ou345a0[`ddr3_ip_inst_Q1] = 1'b1;
                end

`else
   tw1e834[`ddr3_ip_inst_Q1] :  begin                                      if (mr5e25b && gb5e914 && !rvc03f) begin                       jrb071b = 1'b0;                       byeec1c = 1'b0;                       tu63bb0 = 1'b0;                       zz1c6f2 = 1'b0;                      if (qv17ba1 && !nef48a5  && !rgee86b && !goea060 && (gqac447 == 1)) begin                        ou345a0[`ddr3_ip_inst_RDI] = 1'b1;                        sj8f9e9 =1'b1;                        bn16803 = 1'b1;                        vxa00fc = 1'b0;                       end                       else if (mrcc5ee && !nef48a5  && !rgee86b && !goea060 && (gqac447 == 1)) begin                        ou345a0[`ddr3_ip_inst_WRI] = 1'b1;                        db3d31d =1'b1;                        bn16803 = 1'b1;                        vxa00fc = 1'b0;                       end                       else ou345a0[`ddr3_ip_inst_IDLEI] = 1'b1;                    end                    else  if (!mr5e25b || cmf5312 ) begin                         ou345a0[`ddr3_ip_inst_IDLEI] = 1'b1;                         tu63bb0 = 1'b0;                         jrb071b = 1'b0;                         byeec1c = 1'b0;                         zz1c6f2 = 1'b0;                    end
                    else  if (mr5e25b && (goef5ca )) begin                       jrb071b = 1'b0;                       byeec1c = 1'b0;                       if (sh7ae50 && !aaa63ea) begin                        ou345a0[`ddr3_ip_inst_PREI] = 1'b1;                        lf38c7c =1'b1;                        vxa00fc = 1'b1;                       end                       else if (thd7284 && !cz4e8e2 && !ls3fd4c) begin                        ou345a0[`ddr3_ip_inst_ACTI] = 1'b1;                        zz3f38 =1'b1;                        vxa00fc = 1'b1;                       end                       else if (jcca130 && !aaa38a6  && !goea060 && !ls3fd4c) begin                        ou345a0[`ddr3_ip_inst_RDI] = 1'b1;                        sj8f9e9 =1'b1;                        vxa00fc = 1'b1;                       end                       else if (ecb9426 && !uve298f && !goea060  && !ls3fd4c) begin                        ou345a0[`ddr3_ip_inst_WRI] = 1'b1;                        db3d31d =1'b1;                        vxa00fc = 1'b1;                       end                       else ou345a0[`ddr3_ip_inst_Q1] = 1'b1;                    end                    else ou345a0[`ddr3_ip_inst_Q1] = 1'b1;
                end


`endif


   default : begin                   ou345a0[`ddr3_ip_inst_IDLEI] = 1'b1;             end
endcase
end
always@* begin mr5e25b<=ou538[0];gb5e914<=ou538[1];nef48a5<=ou538[2];epa452b<=ou538[3];db2295d<=ou538[4];tw14aef<=ou538[5];hda577a<=ou538[6];gqac447<={ntb518e>>1,ou538[7]};ui62239<={zma8c76>>1,ou538[8]};vk111c8<={me463b2>>1,ou538[9]};ym88e43<={wy31d91>>1,ou538[10]};tu47219<={zz8ec89>>1,ou538[11]};goef5ca<=ou538[12];sh7ae50<=ou538[13];thd7284<=ou538[14];ecb9426<=ou538[15];jcca130<=ou538[16];fn50983<=ou538[17];rte63c0<={lqfbafa>>1,ou538[18]};wy31e06<={pfdd7d2>>1,ou538[19]};yz8f031<={hoebe97>>1,ou538[20]};su7818d<={fn5f4bb>>1,ou538[21]};rgc0c68<={ayfa5de>>1,ou538[22]};nt6343<=ou538[23];dz50ace<=ou538[24];rvaa159<=ou538[25];me59da0<=ou538[26];ep26765<=ou538[27];rt6b7a4<=ou538[28];cz5bd26<=ou538[29];gode935<=ou538[30];nef49a9<=ou538[31];do9c123<=ou538[32];db198bd<=ou538[33];ym2bbd7<={xw7644e>>1,ou538[34]};zz84c1e<={jpd2ef1>>1,ou538[35]};jc5deb9<=ou538[36];yz260f7<=ou538[37];xl27d2c<=ou538[38];mrcc5ee<=ou538[39];ww62f74<=ou538[40];qv17ba1<=ou538[41];lsbdd0d<=ou538[42];rgee86b<=ou538[43];hb7435b<=ou538[44];mrc3d06<={sude125>>1,ou538[45]};tw1e834<={su468b4>>1,ou538[46]};nef41a3<={ou345a0>>1,ou538[47]};bna0d1a<=ou538[48];bn68d6<=ou538[49];rg76926<=ou538[50];ksa35b0<=ou538[51];sw1ad80<=ou538[52];gbd6c01<=ou538[53];ieb600d<=ou538[54];rvb0069<=ou538[55];gd8034e<=ou538[56];xy1a74<=ou538[57];ird3a3<=ou538[58];rg69d1c<=ou538[59];cz4e8e2<=ou538[60];xj74714<=ou538[61];aaa38a6<=ou538[62];xl1c531<=ou538[63];uve298f<=ou538[64];zm14c7d<=ou538[65];aaa63ea<=ou538[66];qi31f50<=ou538[67];uicec68<=ou538[68];jc76340<=ou538[69];goea060<=ou538[70];th50300<=ou538[71];lf81807<=ou538[72];rvc03f<=ou538[73];mr601fe<=ou538[74];mgff5<={oub02>>1,ou538[75]};yz7fa9<={yz2c089>>1,ou538[76]};ls3fd4c<=ou538[77];nefea62<=ou538[78];cmf5312<=ou538[79];oua9890<=ou538[80];cm4c480<=ou538[81];ui62400<={pfd83a0>>1,ou538[82]};wl12000<={goc1d07>>1,ou538[83]};end
always@* begin swa7[2047]<=fpbfbde;swa7[2046]<=shfdef6;swa7[2044]<=uief7b5;swa7[2040]<=bl7bda8;swa7[2032]<=kqded46;swa7[2017]<=vvf6a31;swa7[1988]<=oub02[0];swa7[1987]<=ntb518e[0];swa7[1928]<=yz2c089[0];swa7[1926]<=zma8c76[0];swa7[1809]<=ho4db5b;swa7[1805]<=jpd2ef1[0];swa7[1804]<=me463b2[0];swa7[1803]<=tj94e69;swa7[1761]<=yz1d21e;swa7[1748]<=tu63bb0;swa7[1696]<=ho760e3;swa7[1668]<=mr756f0;swa7[1571]<=me6dadb;swa7[1562]<=fcb2273;swa7[1560]<=wy31d91[0];swa7[1558]<=of5be47;swa7[1550]<=vx9beeb;swa7[1475]<=vid0675;swa7[1464]<=gqf0fd;swa7[1448]<=sj1dd83;swa7[1345]<=jrb071b;swa7[1288]<=sjab784;swa7[1287]<=zz1c6f2;swa7[1242]<=db3d31d;swa7[1131]<=goc1d07[0];swa7[1094]<=me6d6d8;swa7[1076]<=gq9778f;swa7[1072]<=zz8ec89[0];swa7[1069]<=hd8b7c8;swa7[1056]<=sude125[0];swa7[1055]<=xj61a8e;swa7[1052]<=dmdf75f;swa7[1028]<=ofdc5cb;swa7[1023]<=vida65e;swa7[994]<=cz6f005;swa7[902]<=xw7644e[0];swa7[901]<=ayfa5de[0];swa7[880]<=ea787e9;swa7[874]<=su4c776;swa7[848]<=byeec1c;swa7[834]<=eaceade;swa7[775]<=ps737dd;swa7[732]<=kd41e1f;swa7[643]<=tw838de;swa7[621]<=tu7cf4c;swa7[565]<=pfd83a0[0];swa7[528]<=kd5bc24;swa7[527]<=phc351;swa7[514]<=vxa00fc;swa7[497]<=mtde00;swa7[450]<=fn5f4bb[0];swa7[437]<=dze98ee;swa7[417]<=zz19d5b;swa7[387]<=en4e6fb;swa7[366]<=lf283c3;swa7[310]<=sj8f9e9;swa7[282]<=sh5b60e;swa7[257]<=bn16803;swa7[248]<=wy21bc0;swa7[225]<=hoebe97[0];swa7[208]<=zm833ab;swa7[193]<=je89cdf;swa7[183]<=ldcd926;swa7[155]<=shc63e7;swa7[141]<=th6b6c1;swa7[128]<=ou345a0[0];swa7[124]<=yxf2f98;swa7[112]<=pfdd7d2[0];swa7[104]<=sh4e2a7;swa7[96]<=tj9139b;swa7[91]<=bn3d5ba;swa7[77]<=lf38c7c;swa7[64]<=su468b4[0];swa7[62]<=ykde5f3;swa7[56]<=lqfbafa[0];swa7[38]<=hbfce31;swa7[19]<=sw1f9c6;swa7[9]<=zz3f38;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule






























`timescale 1 ns / 100 ps
module sj8a9ee_ddr3_ip_inst (

   clk,
   rst_n,
   nt27c94,
   mrf2539,
   gd39a72,
   baa88c8,
   rgc5735,
   tj94e69,
   hb749a7,
   by475a9,
   end6a5a,
   wjedd26,
   hbc8527,
   bn3d2ae,
   vk149f2,
   co8dea7,
   tu69cae,
   ww72b95,
   ngb7589,
   ec8d0c4,
   xwfb35f,
   kdd9afb,
   addr_init_0,
   addr_init_1,
   addr_init_2,
   addr_init_3,
   rtcd7dc,
   fadfb42,
   gbfda13,
   ened09d,
   ea684ed,
   fa42769,
   vx13b4b,
   ym9da5f,
   yxed2f8,
   zxc8c5b,
   uk77c,
   dz507cf,
   qia941f,
   wl_act,
   mg92399,
   dz61c91,
   pue48e,
   yk72473, 
   kqeadd6,
   bn3d5ba,
   hbf91ea, 
   sh4e2a7, 
   
   vida65e,
   

   ddr_cs_n,
   ddr_ras_n,
   ddr_cas_n,
   ddr_we_n,
   ddr_ba,
   ddr_addr,
   ddr_cke,

   mirror_on
   );
input                          clk;
input                          rst_n;
input                          nt27c94;
input                          mrf2539;
input                          gd39a72;
input                          baa88c8;
input                          rgc5735;
input                          tj94e69;
input                          hb749a7;
input                          by475a9;
input                          end6a5a;
input                          wjedd26;
input                          hbc8527;
input                          vk149f2;
input                          co8dea7;
input                          tu69cae;
input                          ww72b95;
input                          fadfb42;
input                          gbfda13;
input                          ened09d;
input                          ea684ed;
input                          fa42769;
input                          vx13b4b;
input                          ym9da5f;
input                          yxed2f8;
input                          ec8d0c4;
input [`ddr3_ip_inst_ROW_WIDTH-1:0]         xwfb35f;
input [`ddr3_ip_inst_COL_WIDTH :0]          kdd9afb;
input [15:0]                   addr_init_0;
input [15:0]                   addr_init_1;
input [15:0]                   addr_init_2;
input [15:0]                   addr_init_3;
input [`ddr3_ip_inst_BANK_WIDTH-1:0]         rtcd7dc;
input                          bn3d2ae;
input [`ddr3_ip_inst_CS_WIDTH-1:0]          zxc8c5b;
input                          uk77c;
input                          dz507cf;
input                          qia941f;
input                          wl_act;
input                          dz61c91;
input                          pue48e;
input [`ddr3_ip_inst_CS_WIDTH-1:0]          yk72473;
input [15:0]                   mg92399;
input                          hbf91ea;
input [5:0]                    kqeadd6;
input                          bn3d5ba;
input [2:0]                    ngb7589;
input                          sh4e2a7;
input                          vida65e;
output [`ddr3_ip_inst_CS_WIDTH-1 :0]        ddr_cs_n;
output                         ddr_ras_n;
output                         ddr_cas_n;
output                         ddr_we_n;
output [`ddr3_ip_inst_BANK_WIDTH-1:0]       ddr_ba;

`ifdef ddr3_ip_inst_ROW_WIDTH_12
output [`ddr3_ip_inst_ROW_WIDTH:0]          ddr_addr ;

`else
output [`ddr3_ip_inst_ROW_WIDTH-1:0]        ddr_addr ;

`endif
output [`ddr3_ip_inst_CKE_WIDTH -1:0]       ddr_cke;
output                         mirror_on;
parameter  fc20203 =     5'h10   ;
parameter  je101b =     5'h08   ;
parameter  wl80da =   5'h04   ;
parameter  bl406d4 =    5'h02   ;
parameter  lf36a6 =     5'h01   ;
parameter  pu1b537 =   7'h40   ;
parameter  dmda9ba =   7'h20   ;
parameter  osd4dd3 =   7'h10   ;
parameter  qia6e98 =   7'h08   ;
parameter  vx374c1 =  7'h04   ;
parameter  rvba60f =  7'h02   ;
parameter  ofd307f =   7'h01   ;
parameter  qi983fc  =  9'h100   ;
parameter  osc1fe1  =  9'h080   ;
parameter  mgff09  =  9'h040   ;
parameter  yx7f848  =  9'h020   ;
parameter  pffc244  =  9'h010   ;
parameter  tue1226  =  9'h008   ;
parameter  tj9133  =  9'h004   ;
parameter  by4899e  =  9'h002   ;
parameter  sh44cf3  =   9'h001   ;
reg [`ddr3_ip_inst_CS_WIDTH-1 :0]   ux2679d, wl33cec ;
reg                    vx9e764, blf3b26  ;
reg                    gq9d936, ldec9b0 ;
reg                    hb64d86, wl26c36 ;
reg [`ddr3_ip_inst_BANK_WIDTH-1:0]   qv361b5, dbb0dad ;

`ifdef ddr3_ip_inst_ROW_WIDTH_12
reg [`ddr3_ip_inst_ROW_WIDTH:0]   ba86d6f, kf36b7a ;

`else
reg [`ddr3_ip_inst_ROW_WIDTH-1:0]   ba86d6f, kf36b7a ;

`endif
reg [`ddr3_ip_inst_CS_WIDTH-1 :0]   en6f53a, cz7a9d4 ;
reg                    sud4ea4, xya7520  ;
reg                    tw3a902, ykd4812 ;
reg                    uxa4090, zm20485 ;
reg [`ddr3_ip_inst_BANK_WIDTH-1:0]   oh242b, oh1215d ;

`ifdef ddr3_ip_inst_ROW_WIDTH_12
reg [`ddr3_ip_inst_ROW_WIDTH:0]   sj90aec, yz85764 ;

`else
reg [`ddr3_ip_inst_ROW_WIDTH-1:0]   sj90aec, yz85764 ;

`endif
reg [`ddr3_ip_inst_CS_WIDTH-1 :0]   xjec90a, zx64856 ;
reg                    ie242b6, gq215b1  ;
reg                    qiad89, cm56c48 ;
reg                    cob6241, uxb1209 ;
reg [`ddr3_ip_inst_BANK_WIDTH-1:0]   do8904c, dm48262 ;

`ifdef ddr3_ip_inst_ROW_WIDTH_12
reg [`ddr3_ip_inst_ROW_WIDTH:0]   en41312, jr9894 ;

`else
reg [`ddr3_ip_inst_ROW_WIDTH-1:0]   en41312, jr9894 ;

`endif
wire [`ddr3_ip_inst_CS_WIDTH-1 :0]   ddr_cs_n ;
wire                    ddr_ras_n  ;
wire                    ddr_cas_n ;
wire                    ddr_we_n ;
wire [`ddr3_ip_inst_BANK_WIDTH-1:0]   ddr_ba ;
wire                    vida65e ;

`ifdef ddr3_ip_inst_ROW_WIDTH_12
wire [`ddr3_ip_inst_ROW_WIDTH:0]   ddr_addr ;

`else
wire [`ddr3_ip_inst_ROW_WIDTH-1:0]   ddr_addr ;

`endif
reg [`ddr3_ip_inst_ROW_WIDTH-1:0]   pu96640 ;
reg [`ddr3_ip_inst_CKE_WIDTH -1:0]  ddr_cke;
reg                    ng99011;
reg                    thc808b;
reg                    dz4045e, an22f6 ;
reg                    fc117b5, db8bdab;
reg                    en5ed5e, zxf6af5;
wire                   mirror_on;
wire                  wlabd76;
wire   [4:0]          cmd;
wire   [6:0]           uif5dad;
wire   [8:0]           iraed69;
wire                   lq76b4d;
wire                   lfb5a6a;
wire                   ngad357;
wire                   zk69abb;
wire                   ne4d5da;

`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12
wire [13:0]            gb6aed2;

`else
wire [12:0]            gb6aed2;

`endif
wire [2:0]             ngb7589;

`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12

`else 

`ifdef ddr3_ip_inst_COL_WIDTH_EQ_11

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ip_inst_COL_WIDTH_EQ_11

`endif

`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12

`endif

`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12

`else

`endif

`ifdef ddr3_ip_inst_COL_WIDTH_EQ_11

`endif

`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12

`endif

`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12

`else

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif
reg byda555;
reg xjd2aaa;
reg qv95557;
reg ntaaabd;
reg bl555ef;
reg nt6343;
reg by57bff;
reg gdb4932;
reg ana4995;
reg of7fed9;
reg kqff6cc;
reg jcfb661;
reg aydb30b;
reg ofd9858;
reg wjcc2c4;
reg bl61624;
reg dob127;
reg [`ddr3_ip_inst_ROW_WIDTH - 1 : 0] sh602a2;
reg [`ddr3_ip_inst_COL_WIDTH : 0] je1515;
reg [15 : 0] co24ed1;
reg [15 : 0] jr27688;
reg [15 : 0] ks3b446;
reg [15 : 0] jcda231;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] uka8aa;
reg ie88c51;
reg ui46289;
reg ie31449;
reg mt8a248;
reg cz51245;
reg do8922d;
reg cm4916a;
reg vi48b50;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] ks1542b;
reg jr2d41f;
reg uv6a0ff;
reg bl507fc;
reg aye5460;
reg [15 : 0] mg1ff3a;
reg vk2a301;
reg ip5180a;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] ofe7447;
reg [5 : 0] eaced00;
reg me59da0;
reg mg2b3b4;
reg xl27d2c;
reg mr5e25b;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] fne3254;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] hd192a6;
reg wjc9537;
reg bl4a9bc;
reg of54de6;
reg qia6f34;
reg vx379a1;
reg ksbcd0e;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] lde6871;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] ec3438f;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] gda1c78;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] nge3c4;
reg ld71e23;
reg oh8f11f;
reg qg788fd;
reg eac47e9;
reg ir23f48;
reg gq1fa45;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] offd229;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] nre914c;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] zk48a67;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] dz4533b;
reg an299de;
reg ui4cef4;
reg me677a1;
reg ie3bd08;
reg osde840;
reg zkf4201;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] sja100a;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] kf8055;
reg [`ddr3_ip_inst_ROW_WIDTH - 1 : 0] jp402ac;
reg vk1566;
reg mgab32;
reg zx55990;
reg aaacc86;
reg vi66430;
reg fp32182;
reg sj90c17;
reg xy860bc;
reg hq305e3;
reg [4 : 0] vvf6fa0;
reg [6 : 0] sj178d0;
reg [8 : 0] aabc685;
reg fne3428;
reg ec1a146;
reg tud0a30;
reg gd85182;
reg zz28c14;
reg [2047:0] swa7;
wire [93:0] ou538;

`ifdef ddr3_ip_inst_ROW_WIDTH_12

`else

`endif

`ifdef ddr3_ip_inst_ROW_WIDTH_12

`else

`endif

`ifdef ddr3_ip_inst_ROW_WIDTH_12

`else

`endif

`ifdef ddr3_ip_inst_ROW_WIDTH_12

`else

`endif

`ifdef ddr3_ip_inst_ROW_WIDTH_12

`else

`endif

`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12

`else

`endif

`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12

`else 

`ifdef ddr3_ip_inst_COL_WIDTH_EQ_11

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ip_inst_COL_WIDTH_EQ_11

`endif

`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12

`endif

`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12

`else

`endif

`ifdef ddr3_ip_inst_COL_WIDTH_EQ_11

`endif

`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12

`endif

`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12

`else

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

localparam kf29c0 = 94,do14e04 = 32'hfdffd42b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`ifdef ddr3_ip_inst_ROW_WIDTH_12


`else


`endif


`ifdef ddr3_ip_inst_ROW_WIDTH_12


`else


`endif


`ifdef ddr3_ip_inst_ROW_WIDTH_12


`else


`endif


`ifdef ddr3_ip_inst_ROW_WIDTH_12


`else


`endif


`ifdef ddr3_ip_inst_ROW_WIDTH_12


`else


`endif


`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12


`else


`endif


`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12


`else 


`ifdef ddr3_ip_inst_COL_WIDTH_EQ_11


`else


`endif


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else 


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else 


`ifdef ddr3_ip_inst_CS_WIDTH_4


`else


`endif


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else 


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else 


`ifdef ddr3_ip_inst_CS_WIDTH_4


`else


`endif


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else 


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else 


`ifdef ddr3_ip_inst_CS_WIDTH_4


`else


`endif


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else 


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else 


`ifdef ddr3_ip_inst_CS_WIDTH_4


`else


`endif


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else


`ifdef ddr3_ip_inst_CS_WIDTH_4


`else


`endif


`endif


`ifdef ddr3_ip_inst_COL_WIDTH_EQ_11


`endif


`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12


`endif


`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12


`else


`endif


`ifdef ddr3_ip_inst_COL_WIDTH_EQ_11


`endif


`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12


`endif


`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12


`else


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else 


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else 


`ifdef ddr3_ip_inst_CS_WIDTH_4


`else


`endif


`endif





`ifdef ddr3_ip_inst_ROW_WIDTH_12



`else



`endif



`ifdef ddr3_ip_inst_ROW_WIDTH_12



`else



`endif




`ifdef ddr3_ip_inst_ROW_WIDTH_12



`else



`endif




`ifdef ddr3_ip_inst_ROW_WIDTH_12



`else



`endif




`ifdef ddr3_ip_inst_ROW_WIDTH_12



`else



`endif


assign ddr_cs_n =(dob127 || aye5460)? gda1c78 : ((mr5e25b)? fne3254 : zk48a67 );



assign ddr_ras_n =(ld71e23 * wjc9537 * an299de);
assign ddr_cas_n =(qg788fd * of54de6 * me677a1);
assign ddr_we_n  =(ir23f48 * vx379a1 * osde840);
assign ddr_ba =(dob127 || aye5460)? offd229 : ((mr5e25b)? lde6871 : sja100a );
assign ddr_addr =(dob127 || aye5460)? sj90aec : ((mr5e25b)? ba86d6f : en41312);

assign                 mirror_on = vi66430 || sj90c17;


`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12



`else



`endif


assign                 lq76b4d = ie88c51 || cz51245;
assign                 lfb5a6a = ui46289 || do8922d;
assign                 ngad357 = ie31449 || cm4916a;
assign                 zk69abb = mt8a248 || vi48b50;
assign                 ne4d5da = byda555 || xjd2aaa;
assign   cmd = {nt6343, by57bff, gdb4932, ana4995, of7fed9};
assign   uif5dad = {fne3428 ,ec1a146 ,tud0a30 ,gd85182 ,((vk2a301 || ip5180a) && aye5460),(dob127 && jr2d41f ), ofd9858};
assign   iraed69 = {bl61624,zz28c14, qv95557, ntaaabd, bl555ef, jcfb661, kqff6cc, aydb30b, wjcc2c4};




`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12
     assign  gb6aed2  =  {je1515[11],mg2b3b4,je1515[10],je1515[`ddr3_ip_inst_COL_WIDTH],je1515[9:0]};


`else 



`ifdef ddr3_ip_inst_COL_WIDTH_EQ_11
     assign  gb6aed2  =  {mg2b3b4,je1515[10],je1515[`ddr3_ip_inst_COL_WIDTH],je1515[9:0]};


`else
     assign  gb6aed2  =  {mg2b3b4,1'b0,        je1515[`ddr3_ip_inst_COL_WIDTH],je1515[9:0]};


`endif



`endif


always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       dz4045e    <=  1'b0;   end   else begin       dz4045e   <=  xl27d2c;   end
end   always @ (negedge rst_n or posedge clk) begin      if (!rst_n) begin         an22f6    <=  1'b0;      end      else begin         an22f6   <=  zx55990;      end   end   assign wlabd76 = (mg2b3b4) ? zx55990 : aaacc86;







always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       pu96640    <=  {`ddr3_ip_inst_ROW_WIDTH{1'b0}};    else if (eaced00 > 1)        if ((gdb4932 || ana4995))  begin            if (mg2b3b4) pu96640[`ddr3_ip_inst_COL_WIDTH -1:0] <=  jp402ac[`ddr3_ip_inst_COL_WIDTH -1:0] +8;            else pu96640[`ddr3_ip_inst_COL_WIDTH -1:0]     <=  jp402ac[`ddr3_ip_inst_COL_WIDTH -1:0] +4;        end
        else if (!me59da0 && mgab32)            pu96640    <=  jp402ac;        else if (me59da0  ) begin            pu96640[`ddr3_ip_inst_COL_WIDTH -1:0] <=  je1515[`ddr3_ip_inst_COL_WIDTH -1:0];            pu96640[`ddr3_ip_inst_ROW_WIDTH -1]   <=  je1515[`ddr3_ip_inst_COL_WIDTH];        end	else if  (!mgab32 && !je1515[`ddr3_ip_inst_COL_WIDTH] ) begin            pu96640[`ddr3_ip_inst_COL_WIDTH -1:0] <=  je1515[`ddr3_ip_inst_COL_WIDTH -1:0];            pu96640[`ddr3_ip_inst_ROW_WIDTH -1]   <=  1'b0;	end        else if  (!mgab32 && je1515[`ddr3_ip_inst_COL_WIDTH] ) begin            pu96640[`ddr3_ip_inst_COL_WIDTH -1:0] <=  je1515[`ddr3_ip_inst_COL_WIDTH -1:0];            pu96640[`ddr3_ip_inst_ROW_WIDTH -1]   <=  1'b0;            	end
   else       pu96640    <=  je1515;
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       ddr_cke    <=  {`ddr3_ip_inst_CKE_WIDTH{1'b0}};   else if (jr2d41f)       ddr_cke    <=  {`ddr3_ip_inst_CKE_WIDTH{1'b1}};   else if (uv6a0ff)       ddr_cke    <=  {`ddr3_ip_inst_CKE_WIDTH{1'b0}};   else if (bl507fc && !uv6a0ff)       ddr_cke    <=  {`ddr3_ip_inst_CKE_WIDTH{1'b1}};
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       thc808b    <=  1'b0;   else if ( me59da0)       thc808b    <=  1'b0;   else if ((eaced00 > 1) && (gdb4932 || ana4995))       thc808b    <=  1'b1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       ng99011    <=  1'b0;   else if ( aye5460 && (vk2a301 || ip5180a))       ng99011    <=  1'b1;   else if ( !(vk2a301 || ip5180a))       ng99011    <=  1'b0;
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       en6f53a    <=  'b1;       sud4ea4   <=  'b1;       tw3a902   <=  'b1;       uxa4090    <=  'b1;       oh242b      <=  'b0;       sj90aec    <=  'b0;       fc117b5     <=  'b0;    end    else begin       en6f53a    <=  nge3c4  ;       sud4ea4   <=  oh8f11f ;       tw3a902   <=  eac47e9 ;       uxa4090    <=  gq1fa45 ;       oh242b      <=  nre914c   ;       sj90aec    <=  yz85764 ;       fc117b5     <=  fp32182;    end
end
always @ (sj178d0 or fne3428 or ec1a146 or tud0a30 or gd85182 or vk2a301 or dob127           or jr2d41f  or ks1542b or ofe7447 or mg1ff3a or ddr_ba or ddr_addr or offd229 or sj90aec           or co24ed1 or jr27688 or ks3b446 or jcda231 or cz51245 or do8922d or cm4916a or vi48b50           ) begin

cz7a9d4  = {`ddr3_ip_inst_CS_WIDTH{1'b1}};
xya7520 = 'h1;
ykd4812 = 'h1;
zm20485  = 'h1;
oh1215d  =  'h0;
yz85764  =  'h0;
db8bdab = 'h0;      case (sj178d0)        pu1b537 : begin         xya7520 =  'h0;         ykd4812 =  'h0;         zm20485  =  'h0;         yz85764  =  co24ed1;         oh1215d    =  3'b0 ;         if (cz51245) begin          db8bdab = 1'b1;

`ifdef ddr3_ip_inst_CS_WIDTH_2
         cz7a9d4  = 2'b01;


`else 
         cz7a9d4  = 4'b0101;


`endif
         end         else begin          db8bdab = 1'b0;

`ifdef ddr3_ip_inst_CS_WIDTH_2
         cz7a9d4  = 2'b10;


`else 



`ifdef ddr3_ip_inst_CS_WIDTH_4
         cz7a9d4  = 4'b1010;


`else
         cz7a9d4  = 1'b0;


`endif



`endif
         end       end       dmda9ba : begin         xya7520 =  'h0;         ykd4812 =  'h0;         zm20485  =  'h0;         yz85764  =  jr27688;         oh1215d    =  3'b001 ;         if (do8922d) begin          db8bdab = 1'b1;

`ifdef ddr3_ip_inst_CS_WIDTH_2
         cz7a9d4  = 2'b01;


`else 
         cz7a9d4  = 4'b0101;


`endif
         end         else begin          db8bdab = 1'b0;

`ifdef ddr3_ip_inst_CS_WIDTH_2
         cz7a9d4  = 2'b10;


`else 



`ifdef ddr3_ip_inst_CS_WIDTH_4
         cz7a9d4  = 4'b1010;


`else
         cz7a9d4  = 1'b0;


`endif



`endif
         end
       end       osd4dd3 : begin         xya7520 =  'h0;         ykd4812 =  'h0;         zm20485  =  'h0;         yz85764  =  ks3b446;         oh1215d    =  3'b010 ;         if (cm4916a) begin          db8bdab = 1'b1;

`ifdef ddr3_ip_inst_CS_WIDTH_2
         cz7a9d4  = 2'b01;


`else 
         cz7a9d4  = 4'b0101;


`endif
         end         else begin          db8bdab = 1'b0;

`ifdef ddr3_ip_inst_CS_WIDTH_2
         cz7a9d4  = 2'b10;


`else 



`ifdef ddr3_ip_inst_CS_WIDTH_4
         cz7a9d4  = 4'b1010;


`else
         cz7a9d4  = 1'b0;


`endif



`endif
         end
       end
       qia6e98 : begin         xya7520 =  'h0;         ykd4812 =  'h0;         zm20485  =  'h0;         yz85764  =  jcda231;         oh1215d    =  3'b011 ;         if (vi48b50) begin          db8bdab = 1'b1;

`ifdef ddr3_ip_inst_CS_WIDTH_2
         cz7a9d4  = 2'b01;


`else 
         cz7a9d4  = 4'b0101;


`endif
         end         else begin          db8bdab = 1'b0;

`ifdef ddr3_ip_inst_CS_WIDTH_2
         cz7a9d4  = 2'b10;


`else 



`ifdef ddr3_ip_inst_CS_WIDTH_4
         cz7a9d4  = 4'b1010;


`else
         cz7a9d4  = 1'b0;


`endif



`endif
         end
       end
       vx374c1 : begin           xya7520 =  'h0;           ykd4812 =  'h0;           zm20485  =  'h0;           yz85764  =  mg1ff3a;           if (vk2a301)             oh1215d    =  3'b001 ;           else             oh1215d    =  3'b010 ;



`ifdef ddr3_ip_inst_CS_WIDTH_2
          if (!ofe7447[1])             db8bdab = 1'b1;          else             db8bdab = 1'b0;


`else



`ifdef ddr3_ip_inst_CS_WIDTH_4
             if (!ofe7447[1] || !ofe7447[3])                db8bdab = 1'b1;             else                db8bdab = 1'b0;


`else
                db8bdab = 1'b0;


`endif



`endif
           cz7a9d4  =  ofe7447;       end       rvba60f : begin

         cz7a9d4  = {`ddr3_ip_inst_CS_WIDTH{1'b0}} ;         xya7520 =  'h1;         ykd4812 =  'h1;         zm20485  =  'h1;         oh1215d    =   offd229;         yz85764  =   sj90aec;       end       ofd307f : begin         cz7a9d4  = {`ddr3_ip_inst_CS_WIDTH{1'b0}};         xya7520 =  'h1;         ykd4812 =  'h1;         zm20485  =  'h0;         yz85764  = 'h400 ;       end       default: begin

         cz7a9d4  = {`ddr3_ip_inst_CS_WIDTH{1'b1}} ;         xya7520 =  'h1;         ykd4812 =  'h1;         zm20485  =  'h1;         oh1215d    =  offd229 ;         yz85764  =  sj90aec;       end      endcase
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       ux2679d    <=  'b1;       vx9e764   <=  'b1;       gq9d936   <=  'b1;       hb64d86    <=  'b1;       qv361b5      <=  'b0;       ba86d6f    <=  'b0;    end    else begin       ux2679d    <=  hd192a6  ;       vx9e764   <=  bl4a9bc ;       gq9d936   <=  qia6f34 ;       hb64d86    <=  ksbcd0e ;       qv361b5      <=  ec3438f   ;       ba86d6f    <=  kf36b7a ;    end
end

always @ (vvf6fa0 or eaced00 or me59da0 or jp402ac           or zx55990 or mg2b3b4 or ks1542b or ngb7589 or lde6871           or ba86d6f or sh602a2 or je1515 or uka8aa or  hq305e3 or gb6aed2) begin
wl33cec  = {`ddr3_ip_inst_CS_WIDTH{1'b1}};
blf3b26 = 'h1;
ldec9b0 = 'h1;
wl26c36  = 'h1;
dbb0dad  =  'h0;
kf36b7a  =  'h0;      case (vvf6fa0)        fc20203 : begin         wl33cec  =  ks1542b;         blf3b26 =  'h0;         ldec9b0 =  'h1;         wl26c36  =  'h0;         dbb0dad    =  uka8aa ;         kf36b7a  =  ba86d6f;         dbb0dad    =  uka8aa ;        end       je101b : begin         wl33cec  =  ks1542b;         blf3b26 =  'h0;         ldec9b0 =  'h1;         wl26c36  =  'h1;         dbb0dad    =  uka8aa ;         kf36b7a  =  sh602a2;       end       wl80da : begin         wl33cec  =  ks1542b;         blf3b26 =  'h1;         ldec9b0 =  'h0;         wl26c36  =  'h0;         dbb0dad    =  uka8aa ;
 if( eaced00 >1) begin            kf36b7a[9:0] =  jp402ac[9:0];            kf36b7a[12]  = mg2b3b4;


`ifdef ddr3_ip_inst_COL_WIDTH_EQ_11
            kf36b7a[11]  = jp402ac[10];


`endif



`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12
            kf36b7a[11]  = jp402ac[10];            kf36b7a[13]  = jp402ac[11];


`endif
            if (zx55990 || jp402ac[`ddr3_ip_inst_ROW_WIDTH - 1]) begin               kf36b7a[10]  =  je1515[`ddr3_ip_inst_COL_WIDTH];                      end            else begin               kf36b7a[10]  =  1'b0;            end end         else begin


`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12
            kf36b7a[13:0]  = gb6aed2;


`else
            kf36b7a[12:0]  = gb6aed2;


`endif
         end       end
       bl406d4 : begin         wl33cec  =  ks1542b;         blf3b26 =  'h1;         ldec9b0 =  'h0;         wl26c36  =  'h1;         dbb0dad    =  uka8aa ; if( eaced00 >1) begin            kf36b7a[9:0]  =  jp402ac[9:0];            kf36b7a[12]  = mg2b3b4   ;


`ifdef ddr3_ip_inst_COL_WIDTH_EQ_11
            kf36b7a[11]  = jp402ac[10];


`endif



`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12
            kf36b7a[11]  = jp402ac[10];            kf36b7a[13]  = jp402ac[11];


`endif
            if (hq305e3 || jp402ac[`ddr3_ip_inst_ROW_WIDTH -1]) begin               kf36b7a[10]  =  je1515[`ddr3_ip_inst_COL_WIDTH];                      end            else    begin               kf36b7a[10]  =  1'b0;            end         end         else begin


`ifdef ddr3_ip_inst_COL_WIDTH_EQ_12
            kf36b7a[13:0]  = gb6aed2;


`else
            kf36b7a[12:0]  = gb6aed2;


`endif
         end       end
       lf36a6 : begin         wl33cec  = {`ddr3_ip_inst_CS_WIDTH{1'b0}} ;         blf3b26 =  'h1;         ldec9b0 =  'h1;         wl26c36  =  'h1;         dbb0dad    =   lde6871;         kf36b7a  =   ba86d6f;       end       default: begin         wl33cec  = {`ddr3_ip_inst_CS_WIDTH{1'b0}} ;         blf3b26 =  'h1;         ldec9b0 =  'h1;         wl26c36  =  'h1;         dbb0dad    =  lde6871 ;         kf36b7a  =  ba86d6f;       end      endcase
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       xjec90a    <=  'b1;       ie242b6   <=  'b1;       qiad89   <=  'b1;       cob6241    <=  'b1;       do8904c      <=  'b0;       en41312    <=  'b0;       en5ed5e    <=  'b0;    end    else begin       xjec90a    <=  dz4533b  ;       ie242b6   <=  ui4cef4 ;       qiad89   <=  ie3bd08 ;       cob6241    <=  zkf4201 ;       do8904c      <=  kf8055   ;       en41312    <=  jr9894 ;       en5ed5e    <=  xy860bc;    end
end

always @ (aabc685 or ks1542b or ngb7589 or sja100a or en41312           or je1515 or uka8aa or xjd2aaa) begin
zx64856  = {`ddr3_ip_inst_CS_WIDTH{1'b1}};
gq215b1 = 'h1;
cm56c48 = 'h1;
uxb1209  = 'h1;
dm48262  =  'h0;
jr9894  =  'h0;
zxf6af5 = 1'b0;      case (aabc685)        osc1fe1  : begin         gq215b1 =  'h0;         cm56c48 =  'h0;         uxb1209  =  'h0;         dm48262    =  uka8aa ;         jr9894  =  {ngb7589,je1515[9:0]};
         if (xjd2aaa) begin          zxf6af5 = 1'b1;

`ifdef ddr3_ip_inst_CS_WIDTH_2
         zx64856  = 2'b01;


`else 
         zx64856  = 4'b0101;


`endif
         end         else begin          zxf6af5 = 1'b0;

`ifdef ddr3_ip_inst_CS_WIDTH_2
         zx64856  = 2'b10;


`else 



`ifdef ddr3_ip_inst_CS_WIDTH_4
         zx64856  = 4'b1010;


`else
         zx64856  = 1'b0;


`endif



`endif
         end
       end       mgff09  : begin         zx64856  =  'h0;         gq215b1 =  'h0;         cm56c48 =  'h0;         uxb1209  =  'h1;         jr9894  =  'h600 ;       end       yx7f848  : begin         zx64856  =  'h0;         gq215b1 =  'h0;         cm56c48 =  'h0;         uxb1209  =  'h1;         jr9894  =  'h600 ;       end       pffc244  : begin         zx64856  =  'h0;         gq215b1 =  'h1;         cm56c48 =  'h1;         uxb1209  =  'h1;         jr9894  =  'h600 ;       end       tue1226  : begin         gq215b1 =  'h0;         cm56c48 =  'h1;         uxb1209  =  'h0;         dm48262    =  uka8aa ;         jr9894[10] = 1'b1;         zx64856  =  'b0;       end       tj9133  : begin         zx64856  =  'h0;         gq215b1 =  'h1;         cm56c48 =  'h1;         uxb1209  =  'h1;         jr9894  =  'h600 ;       end       by4899e  : begin         zx64856  = 'h0;         gq215b1 =  'h1;         cm56c48 =  'h1;         uxb1209  =  'h1;         jr9894  =  'h600 ;       end       sh44cf3  : begin         zx64856  = {`ddr3_ip_inst_CS_WIDTH{1'b0}};         gq215b1 =  'h1;         cm56c48 =  'h1;         uxb1209  =  'h0;         jr9894  = 'h400 ;       end       qi983fc  : begin         zx64856  = {`ddr3_ip_inst_CS_WIDTH{1'b0}};         gq215b1 =  'h1;         cm56c48 =  'h1;         uxb1209  =  'h0;         jr9894  =  'h0 ;      end       default: begin         zx64856  = {`ddr3_ip_inst_CS_WIDTH{1'b0}} ;         gq215b1 =  'h1;         cm56c48 =  'h1;         uxb1209  =  'h1;         dm48262    =  sja100a ;         jr9894  =  en41312;       end      endcase
end

always@* begin byda555<=ou538[0];xjd2aaa<=ou538[1];qv95557<=ou538[2];ntaaabd<=ou538[3];bl555ef<=ou538[4];nt6343<=ou538[5];by57bff<=ou538[6];gdb4932<=ou538[7];ana4995<=ou538[8];of7fed9<=ou538[9];kqff6cc<=ou538[10];jcfb661<=ou538[11];aydb30b<=ou538[12];ofd9858<=ou538[13];wjcc2c4<=ou538[14];bl61624<=ou538[15];dob127<=ou538[16];sh602a2<={xwfb35f>>1,ou538[17]};je1515<={kdd9afb>>1,ou538[18]};co24ed1<={addr_init_0>>1,ou538[19]};jr27688<={addr_init_1>>1,ou538[20]};ks3b446<={addr_init_2>>1,ou538[21]};jcda231<={addr_init_3>>1,ou538[22]};uka8aa<={rtcd7dc>>1,ou538[23]};ie88c51<=ou538[24];ui46289<=ou538[25];ie31449<=ou538[26];mt8a248<=ou538[27];cz51245<=ou538[28];do8922d<=ou538[29];cm4916a<=ou538[30];vi48b50<=ou538[31];ks1542b<={zxc8c5b>>1,ou538[32]};jr2d41f<=ou538[33];uv6a0ff<=ou538[34];bl507fc<=ou538[35];aye5460<=ou538[36];mg1ff3a<={mg92399>>1,ou538[37]};vk2a301<=ou538[38];ip5180a<=ou538[39];ofe7447<={yk72473>>1,ou538[40]};eaced00<={kqeadd6>>1,ou538[41]};me59da0<=ou538[42];mg2b3b4<=ou538[43];xl27d2c<=ou538[44];mr5e25b<=ou538[45];fne3254<={ux2679d>>1,ou538[46]};hd192a6<={wl33cec>>1,ou538[47]};wjc9537<=ou538[48];bl4a9bc<=ou538[49];of54de6<=ou538[50];qia6f34<=ou538[51];vx379a1<=ou538[52];ksbcd0e<=ou538[53];lde6871<={qv361b5>>1,ou538[54]};ec3438f<={dbb0dad>>1,ou538[55]};gda1c78<={en6f53a>>1,ou538[56]};nge3c4<={cz7a9d4>>1,ou538[57]};ld71e23<=ou538[58];oh8f11f<=ou538[59];qg788fd<=ou538[60];eac47e9<=ou538[61];ir23f48<=ou538[62];gq1fa45<=ou538[63];offd229<={oh242b>>1,ou538[64]};nre914c<={oh1215d>>1,ou538[65]};zk48a67<={xjec90a>>1,ou538[66]};dz4533b<={zx64856>>1,ou538[67]};an299de<=ou538[68];ui4cef4<=ou538[69];me677a1<=ou538[70];ie3bd08<=ou538[71];osde840<=ou538[72];zkf4201<=ou538[73];sja100a<={do8904c>>1,ou538[74]};kf8055<={dm48262>>1,ou538[75]};jp402ac<={pu96640>>1,ou538[76]};vk1566<=ou538[77];mgab32<=ou538[78];zx55990<=ou538[79];aaacc86<=ou538[80];vi66430<=ou538[81];fp32182<=ou538[82];sj90c17<=ou538[83];xy860bc<=ou538[84];hq305e3<=ou538[85];vvf6fa0<={cmd>>1,ou538[86]};sj178d0<={uif5dad>>1,ou538[87]};aabc685<={iraed69>>1,ou538[88]};fne3428<=ou538[89];ec1a146<=ou538[90];tud0a30<=ou538[91];gd85182<=ou538[92];zz28c14<=ou538[93];end
always@* begin swa7[2047]<=mrf2539;swa7[2046]<=gd39a72;swa7[2045]<=qiad89;swa7[2044]<=baa88c8;swa7[2043]<=cm56c48;swa7[2041]<=rgc5735;swa7[2038]<=cob6241;swa7[2035]<=tj94e69;swa7[2029]<=cz7a9d4[0];swa7[2028]<=uxb1209;swa7[2022]<=hb749a7;swa7[2011]<=sud4ea4;swa7[2009]<=do8904c[0];swa7[1996]<=by475a9;swa7[1974]<=xya7520;swa7[1971]<=dm48262[0];swa7[1945]<=end6a5a;swa7[1943]<=blf3b26;swa7[1922]<=gbfda13;swa7[1901]<=tw3a902;swa7[1895]<=pu96640[0];swa7[1857]<=zxf6af5;swa7[1842]<=wjedd26;swa7[1839]<=gq9d936;swa7[1797]<=ened09d;swa7[1791]<=zx64856[0];swa7[1778]<=ux2679d[0];swa7[1776]<=addr_init_3[0];swa7[1759]<=oh242b[0];swa7[1755]<=ykd4812;swa7[1742]<=ng99011;swa7[1667]<=wlabd76;swa7[1652]<=an22f6;swa7[1637]<=hbc8527;swa7[1631]<=ldec9b0;swa7[1622]<=tu69cae;swa7[1546]<=ea684ed;swa7[1535]<=ie242b6;swa7[1531]<=dbb0dad[0];swa7[1509]<=wl33cec[0];swa7[1504]<=rtcd7dc[0];swa7[1471]<=oh1215d[0];swa7[1468]<=addr_init_1[0];swa7[1463]<=uxa4090;swa7[1437]<=thc808b;swa7[1391]<=kdd9afb[0];swa7[1312]<=dz507cf;swa7[1286]<=cmd[0];swa7[1256]<=fc117b5;swa7[1226]<=bn3d2ae;swa7[1215]<=hb64d86;swa7[1197]<=ww72b95;swa7[1153]<=wl_act;swa7[1050]<=iraed69[0];swa7[1044]<=fa42769;swa7[1037]<=pue48e;swa7[1023]<=nt27c94;swa7[1022]<=gq215b1;swa7[1014]<=en6f53a[0];swa7[971]<=vx9e764;swa7[961]<=fadfb42;swa7[928]<=en5ed5e;swa7[895]<=xjec90a[0];swa7[889]<=vida65e;swa7[888]<=addr_init_2[0];swa7[879]<=zm20485;swa7[838]<=ne4d5da;swa7[826]<=dz4045e;swa7[811]<=co8dea7;swa7[765]<=qv361b5[0];swa7[734]<=addr_init_0[0];swa7[695]<=xwfb35f[0];swa7[656]<=uk77c;swa7[576]<=qia941f;swa7[525]<=uif5dad[0];swa7[518]<=dz61c91;swa7[464]<=db8bdab;swa7[444]<=sh4e2a7;swa7[419]<=zk69abb;swa7[405]<=vk149f2;swa7[382]<=wl26c36;swa7[347]<=ec8d0c4;swa7[328]<=zxc8c5b[0];swa7[259]<=mg92399[0];swa7[222]<=hbf91ea;swa7[209]<=ngad357;swa7[164]<=yxed2f8;swa7[111]<=bn3d5ba;swa7[104]<=lfb5a6a;swa7[82]<=ym9da5f;swa7[55]<=kqeadd6[0];swa7[52]<=lq76b4d;swa7[41]<=vx13b4b;swa7[27]<=yk72473[0];end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule































`timescale 1 ns / 100 ps
module mg88f1d_ddr3_ip_inst (

   clk,
   rst_n,
   datain,
   dmsel,
   hd8b7c8,
   of5be47,
   zkdf23d,
   ayf5998,
   coaccc1,
   DataRdy2Data,

   wl_act,
   je3ab0e,
   xwd5872,
   

  datain_valid,      
  ddr_dq_out,
  dqs_out,        
  dqs_out_en,     
  dqs_out_en_erly, 
  dq_out_en,      
  ddr_dqm,
  pio_read,
  cal_bc4 
   );
input                                 clk;
input                                 rst_n;
input   [`ddr3_ip_inst_DSIZE -1:0]                 datain;
input   [`ddr3_ip_inst_USER_DM -1:0]               dmsel;
input                                 hd8b7c8;
input                                 of5be47;
input                                 zkdf23d;
input [`ddr3_ip_inst_RL_WIDTH-1:0]                 ayf5998;
input [`ddr3_ip_inst_WL_WIDTH-1:0]                 coaccc1;
input   [1:0]        DataRdy2Data;
input                                 wl_act;
input                                 je3ab0e;
input [`ddr3_ip_inst_DQS_WIDTH-1:0]                xwd5872;
output                                datain_valid;
output  [`ddr3_ip_inst_DSIZE -1:0]                 ddr_dq_out;
output  [`ddr3_ip_inst_DQS_WIDTH-1:0]              dqs_out;
output                                dqs_out_en;
output                                dqs_out_en_erly;
output                                dq_out_en;
output  [`ddr3_ip_inst_USER_DM -1:0]               ddr_dqm;
output                                pio_read;
output                                cal_bc4 ;
reg [3:0]                             uvc9d77;
reg [3:0]                             of4ebbd;
reg [3:0]                             of75dec;
reg [3:0]                             mtaef65;
reg [3:0]                             qg77b2d;
reg [3:0]                             xybd968;
reg [3:0]                             ldecb43;
reg [3:0]                             gb65a1e;
reg [3:0]                             ph2d0f4;
reg [3:0]                             os687a7;
reg [`ddr3_ip_inst_DSIZE -1:0]                     ddr_dq_out  ;
reg [`ddr3_ip_inst_USER_DM -1:0]                   ddr_dqm ;
reg                                   tuf4e43,zma721b,kf390da ;
reg                                   hbc86d4;
reg                                   dqs_out_en ;
wire                                  dqs_out_en_erly   ;
reg [`ddr3_ip_inst_RL_WIDTH-1:0]                   tuda98a;
reg [`ddr3_ip_inst_WL_WIDTH-1:0]                   med4c53;
reg                                   aaa6298;
reg                                   qi314c0;
reg                                   yz8a600;
reg                                   su53005;
reg                                   wy98028;
reg                                   lqc0141;
reg                                   ksa0a;
reg                                   gq5051;
reg                                   zz28288;
reg                                   sh41447;
reg                                   oua23c;
reg                                   sh511e1;
reg                                   aa88f0d;
reg                                   jc47869;
reg                                   wl3c34a;
wire                                  xwe1a54;
wire                                  uxd2a2;
wire                                  jc69514;
wire                                  vv4a8a3;
wire                                  sh5451e;
wire                                  baa28f5;
wire                                  do147ab;
wire                                  ksa3d5b;
wire                                  xy1ead9;
wire                                  suf56cb;
reg                                   ohab658;
reg                                   en5b2c4;
reg                                   uvd9624;
reg                                   uicb125;
reg                                   ne58929;
reg                                   mec494a;
reg                                   wy24a51;
reg                                   ls25288;
reg                                   gd29443;
reg                                   xj4a21d;
wire                                  mr510ef;
wire                                  ec8877d;
wire                                  kq43be8;
wire                                  ep1df40;
wire                                  suefa04;
wire                                  me7d021;
wire                                  wje8108;
wire                                  vv40845;
wire                                  ri422f;
wire                                  gq2117a;
wire                                  sj8bd1;
wire                                  zx45e8d;
wire                                  datain_valid;
reg                                   yx7a37a;
reg                                   qgd1bd5, gq8dea8;
reg  [`ddr3_ip_inst_DQS_WIDTH-1:0]                 dqs_out ;
wire                                  sh7aa0c;
wire                                  rgd5064;
wire                                  pio_read  ;
wire                                  dq_out_en ;
reg                                   bnc8dd, th646ef, sj2377f, fc1bbfc, hbddfe3;
reg                                   qgeff1e, yx7f8f1, pffc78c;
reg                                   vve3c66;
wire                                  cal_bc4 ;
reg                                   rgf19ba ;
wire                                  je8cdd3, dm66e9b;
reg [`ddr3_ip_inst_DSIZE - 1 : 0] vx374db;
reg [`ddr3_ip_inst_USER_DM - 1 : 0] rvba6df;
reg rvaa159;
reg dz50ace;
reg ir85676;
reg [`ddr3_ip_inst_RL_WIDTH - 1 : 0] kd54550;
reg [`ddr3_ip_inst_WL_WIDTH - 1 : 0] pua2a85;
reg [1 : 0] sh4b951;
reg aye5460;
reg su5ca8c;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] db8b1f0;
reg [3 : 0] ho58f87;
reg [3 : 0] thc7c3a;
reg [3 : 0] wy3e1d6;
reg [3 : 0] ayf0eb1;
reg [3 : 0] co87589;
reg [3 : 0] vk3ac49;
reg [3 : 0] qtd624a;
reg [3 : 0] irb1254;
reg [3 : 0] ls892a4;
reg [3 : 0] os49522;
reg pf4a910;
reg wj54886;
reg epa4434;
reg db221a5;
reg [`ddr3_ip_inst_RL_WIDTH - 1 : 0] ou10d2e;
reg [`ddr3_ip_inst_WL_WIDTH - 1 : 0] ri86970;
reg gq34b82;
reg bna5c11;
reg ym2e08e;
reg gb70470;
reg uk82384;
reg je11c21;
reg fp8e10a;
reg yx70857;
reg ph842bd;
reg qi215ee;
reg swaf71;
reg tu57b88;
reg jebdc43;
reg byee21b;
reg fn710da;
reg mg886d6;
reg ww436b0;
reg zm1b581;
reg fadac0a;
reg gbd6053;
reg hdb029c;
reg fp814e6;
reg oua736;
reg qg539b1;
reg ls9cd89;
reg zxe6c4a;
reg oh36257;
reg mtb12bd;
reg ri895ec;
reg nr4af62;
reg fa57b16;
reg babd8b3;
reg rtec59b;
reg ea62cdf;
reg db166f9;
reg gqb37ce;
reg bn9be71;
reg zkdf38f;
reg hbf9c7a;
reg kqce3d7;
reg nr71eb9;
reg ep8f5cf;
reg qt7ae7d;
reg dzd73ec;
reg gqb9f66;
reg dmcfb31;
reg cm7d98a;
reg zxecc51;
reg ne6628e;
reg qi31472;
reg yz8a390;
reg uv51c85;
reg ph8e42c;
reg yk72167;
reg oh90b39;
reg sj859cc;
reg ux2ce65;
reg yk6732c;
reg cb39960;
reg yxccb05;
reg uv6582d;
reg wl2c16c;
reg uv60b65;
reg uk5b2c;
reg [2047:0] swa7;
wire [90:0] ou538;

localparam kf29c0 = 91,do14e04 = 32'hfdffd84b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;











assign je8cdd3 =  !(pf4a910 || wj54886);
assign dm66e9b =  !pf4a910 ;
assign      xwe1a54 = ((ho58f87 == ri86970) && ri86970 != 0 );
assign      uxd2a2 = ((thc7c3a == ri86970) && ri86970 != 0 );
assign      jc69514 = ((wy3e1d6 == ri86970) && ri86970 != 0 );
assign      vv4a8a3 = ((ayf0eb1 == ri86970) && ri86970 != 0 );
assign      sh5451e = ((co87589 == ri86970) && ri86970 != 0 );


assign      mr510ef = (ho58f87 == 4'b0 ) ? 0: 1;
assign      ec8877d = (thc7c3a == 4'b0 ) ? 0: 1;
assign      kq43be8 = (wy3e1d6 == 4'b0 ) ? 0: 1;
assign      ep1df40 = (ayf0eb1 == 4'b0 ) ? 0: 1;
assign      suefa04 = (co87589 == 4'b0 ) ? 0: 1;
assign      me7d021 = !gqb37ce && !bn9be71 && !zkdf38f && !hbf9c7a && !kqce3d7 ;

assign      wje8108 = (vk3ac49 == 4'b0 ) ? 0: 1;
assign      vv40845 = (qtd624a == 4'b0 ) ? 0: 1;
assign      ri422f = (irb1254 == 4'b0 ) ? 0: 1;
assign      gq2117a = (ls892a4 == 4'b0 ) ? 0: 1;
assign      sj8bd1 = (os49522 == 4'b0 ) ? 0: 1;
assign      baa28f5 = (ho58f87 == (pua2a85 - 3));
assign      do147ab = (thc7c3a == (pua2a85 - 3));
assign      ksa3d5b = (wy3e1d6 == (pua2a85 - 3));
assign      xy1ead9 = (ayf0eb1 == (pua2a85 - 3));
assign      suf56cb = (co87589 == (pua2a85 - 3));

assign      zx45e8d = !ep8f5cf && !qt7ae7d && !dzd73ec && !gqb9f66 && !dmcfb31 ;
assign      sh7aa0c=gq34b82 || bna5c11 || ym2e08e || gb70470 || uk82384;
                                       
assign      cal_bc4 = yk72167;
assign      rgd5064=mg886d6 || ww436b0 || zm1b581 || fadac0a || gbd6053;



assign      datain_valid = zxecc51;
assign      pio_read = zxe6c4a || oh36257 || mtb12bd || ri895ec || nr4af62;
assign      dqs_out_en_erly = !dqs_out[0];
assign      dq_out_en = dqs_out_en;




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin        ddr_dq_out    <=  'b0;        ddr_dqm       <=  'b0;   end  else if ((sh4b951 == 0) && datain_valid) begin        ddr_dq_out    <=  vx374db;        ddr_dqm       <=  rvba6df;   end   else if ((sh4b951 == 1) && (pf4a910 || wj54886)) begin        ddr_dq_out    <=  vx374db;        ddr_dqm       <=  rvba6df;   end   else if ((sh4b951 == 2 ) &&  (pf4a910 || wj54886))  begin        ddr_dq_out    <=  vx374db;        ddr_dqm       <=  rvba6df;   end   else begin        ddr_dq_out    <=  ddr_dq_out ;        ddr_dqm       <=  ddr_dqm;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	tuda98a  <=  'b0;   else if (kd54550 > 2)	tuda98a  <=  (kd54550-2);
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	med4c53  <=  'b0;   else if (pua2a85 > 2)	med4c53  <=  (pua2a85-2);
end






always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	uvc9d77  <=  'b0;  else if (gq34b82)	uvc9d77  <=  'b0;  else if ((rvaa159 && (nr71eb9 ||kqce3d7)) || gqb37ce)     uvc9d77  <= ho58f87 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	of4ebbd  <=  'b0;   else if (bna5c11)	of4ebbd  <=  'b0;   else if ((rvaa159 && gqb37ce) || bn9be71)     of4ebbd  <= thc7c3a + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	of75dec  <=  'b0;   else if (ym2e08e)	of75dec  <=  'b0;   else if ((rvaa159 && bn9be71) || zkdf38f)     of75dec  <= wy3e1d6 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	mtaef65  <=  'b0;  else if (gb70470)	mtaef65  <=  'b0;   else if ((rvaa159 && zkdf38f) || hbf9c7a)     mtaef65  <= ayf0eb1 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	qg77b2d  <=  'b0;   else if (uk82384)	qg77b2d  <=  'b0;   else if ((rvaa159 && hbf9c7a) ||  kqce3d7)     qg77b2d  <= co87589 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	xybd968  <=  'b0;   else if (zxe6c4a)	xybd968  <=  'b0;   else if ((dz50ace && (cm7d98a || dmcfb31)) || ep8f5cf)     xybd968  <= vk3ac49 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	ldecb43  <=  'b0;   else if (oh36257)	ldecb43  <=  'b0;   else if ((dz50ace && ep8f5cf) || qt7ae7d)     ldecb43  <= qtd624a + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	gb65a1e  <=  'b0;  else if (mtb12bd)	gb65a1e  <=  'b0;   else if ((dz50ace && qt7ae7d) || dzd73ec)     gb65a1e  <= irb1254 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	ph2d0f4  <=  'b0;   else if (ri895ec)	ph2d0f4  <=  'b0;   else if ((dz50ace && dzd73ec) || gqb9f66)     ph2d0f4  <= ls892a4 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	os687a7  <=  'b0;   else if (nr4af62)	os687a7  <=  'b0;   else if ((dz50ace && gqb9f66) || dmcfb31)     os687a7  <= os49522 + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	tuf4e43  <=  'b0;   else if (yz8a390)	tuf4e43  <=  'b1;   else	tuf4e43  <=  'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	hbc86d4  <=  'b0;   else if (uv51c85)	hbc86d4  <=  'b1;   else	hbc86d4  <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin  if (!rst_n) begin	dqs_out <=  'b0;            dqs_out_en <=  1'b1;  end  else if ( aye5460 && su5ca8c)  begin           dqs_out <= db8b1f0;           dqs_out_en <= 1'b0;  end  else  case(pua2a85)     3:  if (yk72167) begin                dqs_out <= {`ddr3_ip_inst_DQS_WIDTH{pf4a910 || db221a5}};                dqs_out_en <= !pf4a910 ;          end          else   begin               dqs_out <= {`ddr3_ip_inst_DQS_WIDTH{pf4a910 || wj54886 || db221a5}};               dqs_out_en <= !(pf4a910 || wj54886);         end     4:  if (sj859cc) begin              dqs_out <= {`ddr3_ip_inst_DQS_WIDTH{pf4a910 || db221a5}};              dqs_out_en <= !pf4a910 ;          end          else   begin              dqs_out <= {`ddr3_ip_inst_DQS_WIDTH{pf4a910 || wj54886 || db221a5}};              dqs_out_en <= !(pf4a910 || wj54886);         end     5: if (ux2ce65) begin              dqs_out <= {`ddr3_ip_inst_DQS_WIDTH{pf4a910 || db221a5}};              dqs_out_en <= !pf4a910 ;          end          else  begin              dqs_out <= {`ddr3_ip_inst_DQS_WIDTH{pf4a910 || wj54886 || db221a5}};              dqs_out_en <= !(pf4a910 || wj54886);          end     6:  if (yk6732c) begin              dqs_out <= {`ddr3_ip_inst_DQS_WIDTH{pf4a910 || db221a5}};              dqs_out_en <= !pf4a910 ;          end          else  begin              dqs_out <= {`ddr3_ip_inst_DQS_WIDTH{pf4a910 || wj54886 || db221a5}};              dqs_out_en <= !(pf4a910 || wj54886);         end     7: if (cb39960) begin              dqs_out <= {`ddr3_ip_inst_DQS_WIDTH{pf4a910 || db221a5}};              dqs_out_en <= !pf4a910 ;        end        else  begin             dqs_out <= {`ddr3_ip_inst_DQS_WIDTH{pf4a910 || wj54886 || db221a5}};             dqs_out_en <= !(pf4a910 || wj54886);        end     default:if (yk72167)  begin             dqs_out <= {`ddr3_ip_inst_DQS_WIDTH{pf4a910 || db221a5}};             dqs_out_en <= !pf4a910 ;          end          else    begin             dqs_out <= {`ddr3_ip_inst_DQS_WIDTH{pf4a910 || wj54886 || db221a5}};             dqs_out_en <= !(pf4a910 || wj54886);          end  endcase
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin     zma721b  <=  'b0;     kf390da  <=  'b0;   end   else begin     zma721b  <=  pf4a910;     kf390da  <=  (pf4a910 || wj54886);   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin     ohab658  <=  1'b0;     mec494a  <=  1'b0;   end   else if ((vk3ac49 == ou10d2e)&& (|vk3ac49))  begin     ohab658  <=  1'b1;     mec494a  <=  1'b1;   end   else begin     ohab658  <=  1'b0;     mec494a  <=  1'b0;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin     en5b2c4  <=  1'b0;     wy24a51  <=  1'b0;   end   else if ((qtd624a == ou10d2e) && (|qtd624a)) begin     en5b2c4  <=  1'b1;     wy24a51  <=  1'b1;   end   else begin     en5b2c4  <=  1'b0;     wy24a51  <=  1'b0;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin     uvd9624  <=  1'b0;     ls25288  <=  1'b0;   end   else if ((irb1254 == ou10d2e)  && (|irb1254))begin     uvd9624  <=  1'b1;     ls25288  <=  1'b1;   end   else begin     uvd9624  <=  1'b0;     ls25288  <=  1'b0;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin     uicb125  <=  1'b0;     gd29443  <=  1'b0;   end   else if ((ls892a4 == ou10d2e) && (|ls892a4)) begin     uicb125  <=  1'b1;     gd29443  <=  1'b1;   end   else begin     uicb125  <=  1'b0;     gd29443  <=  1'b0;  end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin     ne58929  <=  1'b0;     xj4a21d  <=  1'b0;   end   else if ((os49522 == ou10d2e) && (|os49522))begin     ne58929  <=  1'b1;     xj4a21d  <=  1'b1;   end   else begin     ne58929  <=  1'b0;     xj4a21d  <=  1'b0;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	aaa6298  <=  1'b0;   else if ((ho58f87 == ri86970) && (|ho58f87) )     aaa6298  <=  1'b1;   else	aaa6298  <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)     qi314c0  <=  1'b0;   else if ((thc7c3a == ri86970) && (|thc7c3a) )     qi314c0  <=  1'b1;   else     qi314c0  <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)     yz8a600  <=  1'b0;   else if ((wy3e1d6 == ri86970) && (|wy3e1d6) )     yz8a600  <=  1'b1;   else     yz8a600  <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)     su53005  <=  1'b0;   else if ((ayf0eb1 == ri86970) && (|ayf0eb1) )     su53005  <=  1'b1;   else     su53005  <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)     wy98028  <=  1'b0;   else if ((co87589 == ri86970) && (|co87589) )     wy98028  <=  1'b1;   else     wy98028  <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	vve3c66 <=  1'b0;   else if (rvaa159 && pf4a910)	vve3c66 <=  1'b1;   else	vve3c66 <=  1'b0;
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      th646ef <=  1'b0;   else if (rvaa159  || dz50ace)      th646ef <=  ir85676;   else      th646ef <=  yk72167;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin      sj2377f <=  1'b0;      fc1bbfc <=  1'b0;      hbddfe3 <=  1'b0;      qgeff1e <=  1'b0;      yx7f8f1 <=  1'b0;      pffc78c <=  1'b0;   end   else begin      sj2377f <=  yk72167;      fc1bbfc <=  oh90b39;      hbddfe3 <=  sj859cc;      qgeff1e <=  ux2ce65;      yx7f8f1 <=  yk6732c;      pffc78c <=  cb39960;  end
end
always @ (negedge rst_n or posedge clk) begin if (!rst_n) begin     qgd1bd5  <= 1'b0;     gq8dea8  <= 1'b0; end else begin     qgd1bd5 <= rvaa159;     gq8dea8 <= ne6628e; end
end

always @ (negedge rst_n or posedge clk) begin if (!rst_n)     rgf19ba  <= 1'b0;  else if (!pio_read) begin  case (kd54550)   3: rgf19ba  <= (yk72167);   4: rgf19ba  <= (oh90b39);   5:  rgf19ba  <= (oh90b39);   6: rgf19ba  <= (sj859cc);   7: rgf19ba  <= (ux2ce65);   8: rgf19ba  <= (yk6732c);   9: rgf19ba  <= (cb39960);   10: rgf19ba  <= (yxccb05);   default:rgf19ba  <= (yk72167); endcase
end
end
always @ (negedge rst_n or posedge clk) begin if (!rst_n) begin      lqc0141 <=  1'b0;      ksa0a <=  1'b0;      gq5051 <=  1'b0;      zz28288 <=  1'b0;      sh41447 <=  1'b0;      oua23c <=  1'b0;      sh511e1 <=  1'b0;      aa88f0d <=  1'b0;      jc47869 <=  1'b0;      wl3c34a <=  1'b0;
 end else if (pua2a85 > 3) begin      lqc0141 <=  hdb029c ;      ksa0a <=  fp814e6 ;      gq5051 <=  oua736 ;      zz28288 <=  qg539b1 ;      sh41447 <=  ls9cd89 ;      oua23c <=  je11c21 ;      sh511e1 <=  fp8e10a ;      aa88f0d <=  yx70857 ;      jc47869 <=  ph842bd ;      wl3c34a <=  qi215ee ; end
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      yx7a37a <=  1'b0;   else begin   case(pua2a85)     3: case({sh4b951, ir85676})        3'b011: yx7a37a <=  ne6628e;        3'b010: yx7a37a <=  ne6628e || qi31472;        3'b101: yx7a37a <=  rvaa159;        3'b100: yx7a37a <=  rvaa159 || ne6628e ;        default : yx7a37a <=  1'b0;        endcase     5: case({sh4b951, oh90b39})        3'b011: yx7a37a <=  (je11c21 || fp8e10a || yx70857 ||ph842bd ||qi215ee );        3'b010: yx7a37a <=  (je11c21 || swaf71 || fp8e10a || tu57b88 ||                      yx70857 || jebdc43 || ph842bd || byee21b ||                      qi215ee || fn710da  );        3'b101: yx7a37a <=  (hdb029c ||fp814e6 || oua736 ||qg539b1 || ls9cd89  );        3'b100: yx7a37a <=  (hdb029c || je11c21 ||fp814e6 || fp8e10a ||                          oua736 || yx70857 || qg539b1 || ph842bd ||                          ls9cd89 || qi215ee  )  ;        default : yx7a37a <=  1'b0;        endcase      4: case({sh4b951, yk72167})        3'b011: yx7a37a <=  (je11c21 || fp8e10a || yx70857 ||ph842bd ||qi215ee );        3'b010: yx7a37a <=  (je11c21 || swaf71 || fp8e10a || tu57b88 ||                      yx70857 || jebdc43 || ph842bd || byee21b ||                      qi215ee || fn710da  );        3'b101: yx7a37a <=  (hdb029c ||fp814e6 || oua736 ||qg539b1 || ls9cd89  );        3'b100: yx7a37a <=  (hdb029c || je11c21 ||fp814e6 || fp8e10a ||                          oua736 || yx70857 || qg539b1 || ph842bd ||                          ls9cd89 || qi215ee  )  ;        default : yx7a37a <=  1'b0;        endcase      6: case({sh4b951, sj859cc})        3'b011: yx7a37a <=  (je11c21 || fp8e10a || yx70857 ||ph842bd ||qi215ee );        3'b010: yx7a37a <=  (je11c21 || swaf71 || fp8e10a || tu57b88 ||                      yx70857 || jebdc43 || ph842bd || byee21b ||                      qi215ee || fn710da  );        3'b101: yx7a37a <=  (hdb029c ||fp814e6 || oua736 ||qg539b1 || ls9cd89  );        3'b100: yx7a37a <=  (hdb029c || je11c21 ||fp814e6 || fp8e10a ||                          oua736 || yx70857 || qg539b1 || ph842bd ||                          ls9cd89 || qi215ee  )  ;        default : yx7a37a <=  1'b0;        endcase      7: case({sh4b951, ux2ce65})        3'b011: yx7a37a <=  (je11c21 || fp8e10a || yx70857 ||ph842bd ||qi215ee );        3'b010: yx7a37a <=  (je11c21 || swaf71 || fp8e10a || tu57b88 ||                      yx70857 || jebdc43 || ph842bd || byee21b ||                      qi215ee || fn710da  );        3'b101: yx7a37a <=  (hdb029c ||fp814e6 || oua736 ||qg539b1 || ls9cd89  );        3'b100: yx7a37a <=  (hdb029c || je11c21 ||fp814e6 || fp8e10a ||                          oua736 || yx70857 || qg539b1 || ph842bd ||                          ls9cd89 || qi215ee  )  ;        default : yx7a37a <=  1'b0;        endcase       default:case({sh4b951, ir85676})        3'b011: yx7a37a <=  ne6628e;        3'b010: yx7a37a <=  ne6628e || qi31472;        3'b101: yx7a37a <=  rvaa159;        3'b100: yx7a37a <=  rvaa159 || ne6628e ;        default : yx7a37a <=  1'b0;        endcase   endcase   end
end
always@* begin vx374db<={datain>>1,ou538[0]};rvba6df<={dmsel>>1,ou538[1]};rvaa159<=ou538[2];dz50ace<=ou538[3];ir85676<=ou538[4];kd54550<={ayf5998>>1,ou538[5]};pua2a85<={coaccc1>>1,ou538[6]};sh4b951<={DataRdy2Data>>1,ou538[7]};aye5460<=ou538[8];su5ca8c<=ou538[9];db8b1f0<={xwd5872>>1,ou538[10]};ho58f87<={uvc9d77>>1,ou538[11]};thc7c3a<={of4ebbd>>1,ou538[12]};wy3e1d6<={of75dec>>1,ou538[13]};ayf0eb1<={mtaef65>>1,ou538[14]};co87589<={qg77b2d>>1,ou538[15]};vk3ac49<={xybd968>>1,ou538[16]};qtd624a<={ldecb43>>1,ou538[17]};irb1254<={gb65a1e>>1,ou538[18]};ls892a4<={ph2d0f4>>1,ou538[19]};os49522<={os687a7>>1,ou538[20]};pf4a910<=ou538[21];wj54886<=ou538[22];epa4434<=ou538[23];db221a5<=ou538[24];ou10d2e<={tuda98a>>1,ou538[25]};ri86970<={med4c53>>1,ou538[26]};gq34b82<=ou538[27];bna5c11<=ou538[28];ym2e08e<=ou538[29];gb70470<=ou538[30];uk82384<=ou538[31];je11c21<=ou538[32];fp8e10a<=ou538[33];yx70857<=ou538[34];ph842bd<=ou538[35];qi215ee<=ou538[36];swaf71<=ou538[37];tu57b88<=ou538[38];jebdc43<=ou538[39];byee21b<=ou538[40];fn710da<=ou538[41];mg886d6<=ou538[42];ww436b0<=ou538[43];zm1b581<=ou538[44];fadac0a<=ou538[45];gbd6053<=ou538[46];hdb029c<=ou538[47];fp814e6<=ou538[48];oua736<=ou538[49];qg539b1<=ou538[50];ls9cd89<=ou538[51];zxe6c4a<=ou538[52];oh36257<=ou538[53];mtb12bd<=ou538[54];ri895ec<=ou538[55];nr4af62<=ou538[56];fa57b16<=ou538[57];babd8b3<=ou538[58];rtec59b<=ou538[59];ea62cdf<=ou538[60];db166f9<=ou538[61];gqb37ce<=ou538[62];bn9be71<=ou538[63];zkdf38f<=ou538[64];hbf9c7a<=ou538[65];kqce3d7<=ou538[66];nr71eb9<=ou538[67];ep8f5cf<=ou538[68];qt7ae7d<=ou538[69];dzd73ec<=ou538[70];gqb9f66<=ou538[71];dmcfb31<=ou538[72];cm7d98a<=ou538[73];zxecc51<=ou538[74];ne6628e<=ou538[75];qi31472<=ou538[76];yz8a390<=ou538[77];uv51c85<=ou538[78];ph8e42c<=ou538[79];yk72167<=ou538[80];oh90b39<=ou538[81];sj859cc<=ou538[82];ux2ce65<=ou538[83];yk6732c<=ou538[84];cb39960<=ou538[85];yxccb05<=ou538[86];uv6582d<=ou538[87];wl2c16c<=ou538[88];uv60b65<=ou538[89];uk5b2c<=ou538[90];end
always@* begin swa7[2047]<=dmsel[0];swa7[2046]<=hd8b7c8;swa7[2044]<=of5be47;swa7[2040]<=zkdf23d;swa7[2033]<=ayf5998[0];swa7[2019]<=coaccc1[0];swa7[1999]<=zz28288;swa7[1991]<=DataRdy2Data[0];swa7[1981]<=suf56cb;swa7[1958]<=ne58929;swa7[1950]<=sh41447;swa7[1947]<=xwe1a54;swa7[1934]<=wl_act;swa7[1914]<=ohab658;swa7[1892]<=os687a7[0];swa7[1868]<=mec494a;swa7[1852]<=oua23c;swa7[1851]<=qg77b2d[0];swa7[1847]<=uxd2a2;swa7[1820]<=je3ab0e;swa7[1819]<=sj2377f;swa7[1783]<=do147ab;swa7[1780]<=en5b2c4;swa7[1737]<=tuf4e43;swa7[1733]<=vve3c66;swa7[1689]<=wy24a51;swa7[1657]<=sh511e1;swa7[1654]<=xybd968[0];swa7[1649]<=sh7aa0c;swa7[1647]<=jc69514;swa7[1610]<=hbc86d4;swa7[1608]<=kq43be8;swa7[1593]<=xwd5872[0];swa7[1590]<=fc1bbfc;swa7[1582]<=dm66e9b;swa7[1523]<=ksa0a;swa7[1519]<=ksa3d5b;swa7[1513]<=uvd9624;swa7[1436]<=qgd1bd5;swa7[1426]<=zma721b;swa7[1419]<=rgf19ba;swa7[1404]<=wy98028;swa7[1330]<=ls25288;swa7[1267]<=aa88f0d;swa7[1260]<=ldecb43[0];swa7[1251]<=rgd5064;swa7[1246]<=vv4a8a3;swa7[1225]<=xj4a21d;swa7[1199]<=qi314c0;swa7[1173]<=tuda98a[0];swa7[1169]<=ep1df40;swa7[1163]<=wje8108;swa7[1139]<=uvc9d77[0];swa7[1132]<=hbddfe3;swa7[1113]<=gq2117a;swa7[1023]<=datain[0];swa7[999]<=gq5051;swa7[990]<=xy1ead9;swa7[979]<=uicb125;swa7[973]<=wl3c34a;swa7[946]<=ph2d0f4[0];swa7[925]<=mtaef65[0];swa7[909]<=th646ef;swa7[891]<=baa28f5;swa7[866]<=pffc78c;swa7[824]<=gq8dea8;swa7[805]<=kf390da;swa7[804]<=ec8877d;swa7[791]<=je8cdd3;swa7[761]<=lqc0141;swa7[718]<=yx7a37a;swa7[702]<=su53005;swa7[612]<=gd29443;swa7[599]<=aaa6298;swa7[581]<=me7d021;swa7[556]<=ri422f;swa7[486]<=jc47869;swa7[473]<=gb65a1e[0];swa7[462]<=of75dec[0];swa7[454]<=bnc8dd;swa7[445]<=sh5451e;swa7[433]<=yx7f8f1;swa7[402]<=mr510ef;swa7[359]<=zx45e8d;swa7[351]<=yz8a600;swa7[299]<=med4c53[0];swa7[290]<=suefa04;swa7[278]<=vv40845;swa7[231]<=of4ebbd[0];swa7[216]<=qgeff1e;swa7[179]<=sj8bd1;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule































`timescale 1 ns / 100 ps
module th6b589_ddr3_ip_inst (

   clk,
   rst_n,
   param_trcd,
   param_trp,
   param_twr,
   param_tras,
   param_trc,
   param_trrd,
   param_trtp,
   param_twtr,
   ofdc5cb,
   hb749a7,
   hdb0bf4,
   tj94e69,
   hqa7af3,
   wjedd26,
   hd8b7c8,
   of5be47,
   lqebcde,
   bn3d79b,
   
   kqeadd6,
   mg24dd6,
   ntbaaee,
   sude125, 
   ayf0928,
   fp84941,
   sw24a0f,
   fc25078,   
   

   ayf5998, 
   coaccc1,
   cob976c,
   sucbb60,
   tu5db00,
   kded802, 
   xw6c014,
   cz600a3,
   ks51d,
   ep28e8,
   hq14744,
   qia3a23,
      
   ux1d119,
   wje88cd,
   qt4466c,
   bn3d5ba, 
   ldcd926,
   fa4dbd6,
   rd_odd,
   sh4e2a7
);
input                           clk;
input                           rst_n;
input                           ofdc5cb;
input                           hb749a7;
input                           hdb0bf4;
input                           tj94e69;
input                           hqa7af3;
input                           wjedd26;
input                           hd8b7c8;
input                           of5be47;
input                           lqebcde;
input                           bn3d79b;
input [5:0]                     kqeadd6;
input                           mg24dd6;
input                           ntbaaee;
input [`ddr3_ip_inst_AL_WIDTH-1:0]           sude125;
input [`ddr3_ip_inst_CL_WIDTH-1:0]           ayf0928;
input                           fp84941;
input [`ddr3_ip_inst_CWL_WIDTH-1:0]          sw24a0f;
input                           fc25078;
input   [`ddr3_ip_inst_TRCD_WIDTH-1:0]       param_trcd;
input   [`ddr3_ip_inst_TRP_WIDTH-1:0]        param_trp;
input   [2:0]                   param_twr;
input   [`ddr3_ip_inst_TRAS_WIDTH-1:0]       param_tras;
input   [`ddr3_ip_inst_TRC_WIDTH-1:0]        param_trc;
input   [`ddr3_ip_inst_TRRD_WIDTH-1:0]       param_trrd;
input   [`ddr3_ip_inst_TRTP_WIDTH-1:0]       param_trtp;
input   [`ddr3_ip_inst_TWTR_WIDTH-1:0]       param_twtr;
output [`ddr3_ip_inst_RL_WIDTH-1:0]          ayf5998;
output [`ddr3_ip_inst_WL_WIDTH-1:0]          coaccc1;
output                          cob976c ;
output                          sucbb60 ;
output                          tu5db00 ;
output                          kded802 ;
output                          xw6c014 ;
output                          cz600a3 ;
output                          ks51d ;
output                          ep28e8 ;
output                          hq14744 ;
output                          qia3a23 ;
output                          ux1d119 ;
output                          wje88cd ;
output                          qt4466c ;
output                          bn3d5ba ;
output                          ldcd926 ;
output                          fa4dbd6;
output                          rd_odd ;
output                          sh4e2a7;
reg     [`ddr3_ip_inst_TRCD_WIDTH-1:0]       wwc1908;
reg     [`ddr3_ip_inst_TRCD_WIDTH-1:0]       bnc841;
reg     [`ddr3_ip_inst_TRP_WIDTH-1:0]        th6420f;
reg     [`ddr3_ip_inst_TWR_WIDTH+4 :0]       qi2107f;
reg     [`ddr3_ip_inst_TWR_WIDTH+4 :0]       ux83f9;
reg     [`ddr3_ip_inst_TRAS_WIDTH-1:0]       kd41fcc;
reg     [`ddr3_ip_inst_TRC_WIDTH-1:0]        gqfe65;
reg     [`ddr3_ip_inst_TRRD_WIDTH-1:0]       cz7f328;
reg     [`ddr3_ip_inst_TRTP_WIDTH+3:0]       zxf9945;
reg     [`ddr3_ip_inst_TRTP_WIDTH+3:0]       alcca2f;
reg     [`ddr3_ip_inst_TWTR_WIDTH+3:0]       kd6517d;
reg     [`ddr3_ip_inst_TWTR_WIDTH+3:0]       zz28bed;
reg     [`ddr3_ip_inst_RL_WIDTH-1:0]         pf45f6e;
reg     [`ddr3_ip_inst_RL_WIDTH-1:0]         vk2fb77;
reg     [`ddr3_ip_inst_RL_WIDTH-1:0]         kq7dbbb;
reg     [`ddr3_ip_inst_RL_WIDTH-1:0]         kdeddd9;
reg                             zx6eecc;
reg                             qg77667;
reg                             cbbb339;
reg     [`ddr3_ip_inst_CL_WIDTH-1:0]         yxd99cd;
reg     [`ddr3_ip_inst_CL_WIDTH-1:0]         yxcce6c;
reg     [`ddr3_ip_inst_CWL_WIDTH-1:0]        su67365;
reg     [`ddr3_ip_inst_RL_WIDTH-1:0]         ayf5998;
reg     [`ddr3_ip_inst_WL_WIDTH-1:0]         coaccc1;
reg     [5:0]                   xw6ca2f;
reg                             bn3d5ba;
reg                             hd28bd5;
reg                             bl45eae;
reg                             ng2f577;
reg                             wj7abba;
reg                             wje88cd;
reg                             qt4466c;
wire                            fa4dbd6;
reg                             dbba8a9, ayd454e;
reg                             nga2a71, uk1538b;
reg                             ldcd926;
reg                             sh4e2a7;
reg                             pf71645;
reg                             rv8b22e;
reg                             os59177;
reg                             blc8bb9;
reg                             th45dcf;
reg                             aa2ee7f;
reg                             yk773f9;
reg                             mgb9fc9;
reg                             cob976c;
reg                             sucbb60;
reg                             tu5db00;
reg                             ks51d;
reg                             ep28e8;
reg                             xw6c014;
reg                             cz600a3;
reg                             hq14744;
reg                             qia3a23 ;
reg                             ux1d119;
reg                             kded802;
wire                            rd_odd;
reg                             zzb5db4;
reg                             wlaeda7;
reg                             tu76d3d;
reg                             ukb69ea;

`ifdef ddr3_ip_inst_ECP3_SP2

`else

`endif
reg [`ddr3_ip_inst_TRCD_WIDTH - 1 : 0] epb4f50;
reg [`ddr3_ip_inst_TRP_WIDTH - 1 : 0] jea7a85;
reg [2 : 0] fc352e5;
reg [`ddr3_ip_inst_TRAS_WIDTH - 1 : 0] icea15e;
reg [`ddr3_ip_inst_TRC_WIDTH - 1 : 0] jp50af0;
reg [`ddr3_ip_inst_TRRD_WIDTH - 1 : 0] mga972a;
reg [`ddr3_ip_inst_TRTP_WIDTH - 1 : 0] gq2bc34;
reg [`ddr3_ip_inst_TWTR_WIDTH - 1 : 0] wj5e1a1;
reg rg76926;
reg by57bff;
reg sw3430a;
reg nt6343;
reg bnc284;
reg of7fed9;
reg rvaa159;
reg dz50ace;
reg lf84dce;
reg qv26e77;
reg [5 : 0] eaced00;
reg ie9d964;
reg oscef79;
reg [`ddr3_ip_inst_AL_WIDTH - 1 : 0] mrc3d06;
reg [`ddr3_ip_inst_CL_WIDTH - 1 : 0] ribde40;
reg epa1ade;
reg [`ddr3_ip_inst_CWL_WIDTH - 1 : 0] ne79018;
reg yzd6f4;
reg [`ddr3_ip_inst_TRCD_WIDTH - 1 : 0] vv40616;
reg [`ddr3_ip_inst_TRCD_WIDTH - 1 : 0] ph30b6;
reg [`ddr3_ip_inst_TRP_WIDTH - 1 : 0] wl185b7;
reg [`ddr3_ip_inst_TWR_WIDTH + 4 : 0] nrc2dbd;
reg [`ddr3_ip_inst_TWR_WIDTH + 4 : 0] db16dee;
reg [`ddr3_ip_inst_TRAS_WIDTH - 1 : 0] ksb6f77;
reg [`ddr3_ip_inst_TRC_WIDTH - 1 : 0] bab7bb8;
reg [`ddr3_ip_inst_TRRD_WIDTH - 1 : 0] hqbddc2;
reg [`ddr3_ip_inst_TRTP_WIDTH + 3 : 0] lqeee13;
reg [`ddr3_ip_inst_TRTP_WIDTH + 3 : 0] ic7709b;
reg [`ddr3_ip_inst_TWTR_WIDTH + 3 : 0] pub84d9;
reg [`ddr3_ip_inst_TWTR_WIDTH + 3 : 0] vvc26ca;
reg [`ddr3_ip_inst_RL_WIDTH - 1 : 0] tj13657;
reg [`ddr3_ip_inst_RL_WIDTH - 1 : 0] hd9b2be;
reg [`ddr3_ip_inst_RL_WIDTH - 1 : 0] shd95f6;
reg [`ddr3_ip_inst_RL_WIDTH - 1 : 0] facafb5;
reg tu57daa;
reg kfbed53;
reg hbf6a9c;
reg [`ddr3_ip_inst_CL_WIDTH - 1 : 0] fpb54e6;
reg [`ddr3_ip_inst_CL_WIDTH - 1 : 0] phaa736;
reg [`ddr3_ip_inst_CWL_WIDTH - 1 : 0] kq539b6;
reg [5 : 0] pu9cdb1;
reg fne6d8a;
reg kf36c57;
reg aab62bc;
reg epb15e1;
reg gd8af0c;
reg by57864;
reg ukbc323;
reg hoe1918;
reg xlc8c2;
reg nr64617;
reg wl230bf;
reg mt185fc;
reg ldc2fe5;
reg mt17f2e;
reg hdbf975;
reg jpfcbae;
reg aye5d77;
reg qi2ebb8;
reg yx75dc1;
reg ohaee0d;
reg [2047:0] swa7;
wire [68:0] ou538;

`ifdef ddr3_ip_inst_ECP3_SP2

`else

`endif

localparam kf29c0 = 69,do14e04 = 32'hfdffc70b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`ifdef ddr3_ip_inst_ECP3_SP2


`else


`endif






















always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      zzb5db4 <= 1'b1;   end   else if (by57bff) begin      zzb5db4 <= ie9d964;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      wlaeda7 <= 1'b1;      tu76d3d        <= 1'b0;   end   else begin      wlaeda7 <= aye5d77;      tu76d3d        <= by57bff;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      ukb69ea    <= 1'b0;   end   else if (yx75dc1) begin      ukb69ea    <= ~(aye5d77 ^ qi2ebb8);   end
end





always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      wwc1908 <=  'b0;      hd28bd5 <=  'b0;   end   else if (xlc8c2) begin      wwc1908 <=  'b0;      hd28bd5 <=  'b0;   end   else if ( (by57bff && !fne6d8a ) || |vv40616 )  begin      wwc1908 <=  vv40616 + 1;      hd28bd5 <=  'b1;   end
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)           bnc841 <=  'b0;   else if (nr64617) bnc841 <=  'b0;   else if ((by57bff && fne6d8a) || |ph30b6 )      bnc841 <=  ph30b6 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                            pf71645 <=  1'b0;   else if (vv40616 == (epb4f50 -2)) pf71645 <=  1'b1;   else                                   pf71645 <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                            rv8b22e <=  1'b0;   else if (ph30b6 == (epb4f50 -2)) rv8b22e <=  1'b1;   else                                   rv8b22e <=  1'b0;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                kd41fcc <=  'b0;   else if (mt185fc )       kd41fcc <=  'b0;   else if (by57bff || |ksb6f77)  kd41fcc <=  ksb6f77 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                          blc8bb9 <=  1'b0;
   else if (ksb6f77 == (icea15e -3)) blc8bb9 <=  1'b1;   else                                 blc8bb9 <=  1'b0;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                 gqfe65 <=  'b0;   else if (tu5db00)          gqfe65 <=  'b0;   else if (by57bff && |bab7bb8)    gqfe65 <=  'b1;   else if ((by57bff || |bab7bb8) ) gqfe65 <=  bab7bb8 + 1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                 cz7f328 <=  'b0;   else if (tu5db00)          cz7f328 <=  'b0;   else if (by57bff && |hqbddc2)    cz7f328 <=  'b1;    else if ((by57bff || |hqbddc2) ) cz7f328 <=  hqbddc2 + 1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin          sucbb60 <=  1'b0;          tu5db00 <=  1'b0;   end
   else if (( ohaee0d && (bab7bb8  == jp50af0  -2)) ||            (!ohaee0d && (hqbddc2 >= mga972a -1) && !tu5db00))  begin         sucbb60 <=  1'b1;         tu5db00 <=  1'b1;   end   else begin         sucbb60 <=  1'b0;         tu5db00 <=  1'b0;   end
end





always @ (negedge rst_n or posedge clk) begin   if (!rst_n)               th6420f <=  'b0;   else if (cz600a3 )       th6420f <=  'b0;   else if (nt6343 || |wl185b7)  th6420f <=  wl185b7 + 1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin         xw6c014 <=  1'b0;         cz600a3 <=  1'b0;   end
   else if (wl185b7 == (jea7a85 -1)) begin        xw6c014 <=  1'b1;        cz600a3 <=  1'b1;   end   else begin       xw6c014 <=  1'b0;       cz600a3 <=  1'b0;   end
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      qi2107f <=  'b0;
   else if ((wl230bf && !(rvaa159 || lf84dce)) || (!bn3d5ba && !ldcd926 && (rvaa159 || lf84dce)) )      qi2107f <=  'b0;   else if ((rvaa159 || lf84dce) && |nrc2dbd )      qi2107f <=  'b1;     else if (((rvaa159 && ldcd926 ) || ((rvaa159 || lf84dce) && bn3d5ba && !ldcd926))|| |nrc2dbd)      qi2107f <=  nrc2dbd + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      kd6517d <=  'b0;     
     else if ((mt17f2e && !rvaa159) || (!bn3d5ba && !ldcd926 && (rvaa159 || lf84dce)) )      kd6517d <=  'b0;          else if (rvaa159 &&  ldcd926 &&  |pub84d9)      kd6517d <=  'b1;                    else if (((rvaa159 && ldcd926 ) || ((rvaa159 || lf84dce) && bn3d5ba && !ldcd926))|| |pub84d9)      kd6517d <=  pub84d9 + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)               zxf9945 <=  'b0;   else if (ldc2fe5 )      zxf9945 <=  'b0;   else if (dz50ace && |lqeee13)  zxf9945 <=  'b1;   else if (dz50ace || |lqeee13)  zxf9945 <=  lqeee13 + 1;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)             pf45f6e <=  'b0;   else if (hdbf975 )  pf45f6e <=  'b0;   else if (dz50ace && |tj13657) pf45f6e <=  'b1;   else if (dz50ace || |tj13657) pf45f6e <=  tj13657 + 1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                           yk773f9 <=  1'b0;
   else if ((tj13657 == (hd9b2be )) && !dz50ace)   yk773f9 <=  1'b1;   else                                  yk773f9 <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)             kq7dbbb <=  'b0;   else if (jpfcbae )   kq7dbbb <=  'b0;   else if (dz50ace && |shd95f6  )   kq7dbbb <=  'b1;   else if (dz50ace || |shd95f6 )  kq7dbbb <=  shd95f6 + 1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                        mgb9fc9 <=  1'b0;   else if (shd95f6 == (facafb5 -2) && !dz50ace)  mgb9fc9 <=  1'b1;   else                               mgb9fc9 <=  1'b0;
end








always @ (negedge rst_n or posedge clk) begin   if (!rst_n)   cob976c <=  'b0;   else if (oscef79 ) begin       if (xlc8c2 || nr64617)            cob976c <=  'b1;       else if ( rvaa159 || dz50ace)  cob976c <=  'b0;   end   else if (vv40616 == (epb4f50 -2)) cob976c <=  1'b1;   else if (ph30b6 == (epb4f50 -2)) cob976c <=  1'b1;   else                                   cob976c <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)          bl45eae <=  'b0;   else if (wl230bf )   bl45eae <=  'b1;   else if (rvaa159 || by57bff)  bl45eae <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)        ng2f577 <=  'b0;   else if (mt17f2e)ng2f577 <=  'b1;   else if (nt6343 || bnc284 || by57bff || sw3430a || rvaa159 || dz50ace)     ng2f577 <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)        wj7abba <=  'b0;   else if (ldc2fe5)wj7abba <=  'b1;   else if (nt6343 || bnc284 || by57bff || sw3430a || rvaa159 || dz50ace)     wj7abba <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)            kded802 <=  1'b0;   else if (mt185fc)    kded802 <=  1'b1;      else                   kded802 <=  1'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)          wje88cd <=  'b0;   else if (hdbf975)wje88cd <=  'b1;
   else if (by57bff || dz50ace)  wje88cd <=  'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                  qt4466c <=  'b0;   else if (jpfcbae)         qt4466c <=  'b1;   else if (rvaa159 || nt6343 || by57bff || dz50ace)   qt4466c <=  'b0;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                 ldcd926 <=  'b0;   else if (eaced00 == 'b1)  ldcd926 <=  'b1;   else                        ldcd926 <=  'b0;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)          xw6ca2f <=  'b0;   else if (of7fed9 || by57bff) xw6ca2f <=  eaced00;   else if (( dz50ace || rvaa159 ) && !ldcd926)     xw6ca2f <=  pu9cdb1 - 1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)              bn3d5ba <=  'b0;   else if (ldcd926) bn3d5ba <=  'b0;   else if ((pu9cdb1 == 'h1) && (dz50ace ||rvaa159))     bn3d5ba <=  'b1;   else                     bn3d5ba <=  'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)               sh4e2a7 <=  'b0;   else if (ldcd926)  sh4e2a7 <=  'b0;   else if ((pu9cdb1 == 'h2) && (dz50ace ||rvaa159))     sh4e2a7 <=  'b1;   else                      sh4e2a7 <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       zx6eecc <=  1'b0;       qg77667 <=  1'b0;       cbbb339 <=  1'b0;   end   else begin   case(mrc3d06)    0: begin        zx6eecc <=  1'b1;        qg77667 <=  1'b0;        cbbb339 <=  1'b0;       end    1: begin        zx6eecc <=  1'b0;        qg77667 <=  1'b1;        cbbb339 <=  1'b0;      end    2: begin       zx6eecc <=  1'b0;       qg77667 <=  1'b0;       cbbb339 <=  1'b1;       end    default:begin        zx6eecc <=  1'b1;        qg77667 <=  1'b0;        cbbb339 <=  1'b0;       end   endcase   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       yxcce6c <=  'b0;   else              yxcce6c <=  ribde40;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      su67365 <=  'b0;   else             su67365 <=  ne79018;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin     coaccc1 <=  'b0;     dbba8a9 <= 1'b0;   end   else if (kfbed53) begin     if (yzd6f4 || epa1ade)         coaccc1 <=  phaa736 +2;     else         coaccc1 <=  phaa736 +3;     if (rvaa159 || lf84dce)         if (yzd6f4)  dbba8a9 <= epa1ade;         else dbba8a9 <= !epa1ade;     else if (dz50ace || qv26e77)   dbba8a9 <= 1'b0;     else dbba8a9 <= 1'b0;
   end   else if (hbf6a9c) begin     if (yzd6f4)       if (epa1ade) coaccc1 <= phaa736 +1 ;       else  coaccc1 <= phaa736 +2 ;     else coaccc1 <= phaa736 +2 ;     if (rvaa159 || lf84dce)       if (yzd6f4) dbba8a9 <= !epa1ade;       else dbba8a9 <= epa1ade;     else if (dz50ace || qv26e77)        dbba8a9 <= 1'b0;     else dbba8a9 <= 1'b0;   end   else begin     coaccc1 <=   kq539b6;     if (rvaa159 || lf84dce)        dbba8a9 <= yzd6f4;     else if (dz50ace || qv26e77)        dbba8a9 <= 1'b0;     else dbba8a9 <= 1'b0;   end
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin     ayf5998 <=  'b0;     nga2a71 <= 1'b0;   end   else if (kfbed53) begin    if (epa1ade) begin     ayf5998 <= (phaa736 + phaa736 - 1);     if (dz50ace || qv26e77)        nga2a71 <= 1'b1;     else if (rvaa159 || lf84dce)        nga2a71 <= 1'b0;     else nga2a71 <= 1'b0;    end    else begin     ayf5998 <= (phaa736 + phaa736 );     if (dz50ace || qv26e77)        nga2a71 <= 1'b1;     else if (rvaa159 || lf84dce)        nga2a71 <= 1'b0;     else nga2a71 <= 1'b0;    end   end   else if (hbf6a9c) begin    if (epa1ade) begin     ayf5998 <= (phaa736 + phaa736 - 2);     nga2a71 <= 1'b0;    end    else begin     ayf5998 <= (phaa736 + phaa736 - 1);        nga2a71 <= 1'b0;    end   end   else begin     ayf5998 <=   phaa736;     if (dz50ace || qv26e77)        nga2a71 <= epa1ade;     else if (rvaa159 || lf84dce)        nga2a71 <= 1'b0;     else nga2a71 <= 1'b0;   end
end

 always @ (negedge rst_n or posedge clk) begin   if (!rst_n)     yxd99cd <= 1'b0;   else if (tu57daa)     yxd99cd <= 1'b0;   else     yxd99cd <= phaa736 - 1;
end


 always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin     uk1538b <= 1'b0;     ayd454e <= 1'b0;   end   else begin     uk1538b <= ukbc323 ;     ayd454e <= gd8af0c;   end
end
assign  rd_odd = ukbc323 || hoe1918;
assign  fa4dbd6 = gd8af0c || by57864;

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  ux83f9 <= 'b0;
     else         ux83f9 <= (fc352e5 +coaccc1 +4 );
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin             os59177 <= 1'b0;             ks51d <= 1'b0;             ep28e8 <= 1'b0;   end
   else  if (!rvaa159 && (nrc2dbd == db16dee -1)) begin          os59177 <= 1'b1;          ks51d <= 1'b1;          ep28e8 <= 1'b1;   end   else   begin         os59177 <= 1'b0;         ks51d <= 1'b0;         ep28e8 <= 1'b0;  end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)          hq14744 <=  'b0;   else if (wl230bf ||(nrc2dbd == (db16dee -1)))   hq14744 <=  'b1;
   else if (rvaa159 || by57bff)  hq14744 <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  alcca2f <= 'b0;
   else         alcca2f <= gq2bc34 + fpb54e6;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin            th45dcf <= 'b0;   end   else if (lqeee13 == (ic7709b -1)) begin      th45dcf <= 1'b1;   end   else begin         th45dcf <= 'b0;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)        ux1d119 <=  'b0;   else if (ldc2fe5 || (lqeee13 == (ic7709b -1)))ux1d119 <=  'b1;   else if (nt6343 || bnc284 || by57bff || sw3430a || rvaa159 || dz50ace)     ux1d119 <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  zz28bed <= 'b0;   else         zz28bed <=  (wj5e1a1 + coaccc1 +2) ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      aa2ee7f <= 'b0;   end
   else  if ((pub84d9 == (vvc26ca -2)) && !rvaa159)begin       aa2ee7f <=  1'b1 ;   end   else begin      aa2ee7f <=  1'b0 ;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)        qia3a23 <=  'b0;
   else if ( (mt17f2e  || (pub84d9 == vvc26ca -2)) && !rvaa159 ) qia3a23 <=  'b1;   else if (nt6343 || bnc284 || by57bff || sw3430a || rvaa159 || dz50ace)     qia3a23 <=  'b0;
end



`ifdef ddr3_ip_inst_ECP3_SP2

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  kdeddd9 <= 'b0;   else         kdeddd9 <=  (ayf5998- coaccc1 +4) ;
end

`else

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  kdeddd9 <= 'b0;   else         kdeddd9 <=  (ayf5998- coaccc1 +3) ;
end

`endif

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  vk2fb77 <= 'b0;   else         vk2fb77 <=  (ayf5998 +2) ;
end
always@* begin epb4f50<={param_trcd>>1,ou538[0]};jea7a85<={param_trp>>1,ou538[1]};fc352e5<={param_twr>>1,ou538[2]};icea15e<={param_tras>>1,ou538[3]};jp50af0<={param_trc>>1,ou538[4]};mga972a<={param_trrd>>1,ou538[5]};gq2bc34<={param_trtp>>1,ou538[6]};wj5e1a1<={param_twtr>>1,ou538[7]};rg76926<=ou538[8];by57bff<=ou538[9];sw3430a<=ou538[10];nt6343<=ou538[11];bnc284<=ou538[12];of7fed9<=ou538[13];rvaa159<=ou538[14];dz50ace<=ou538[15];lf84dce<=ou538[16];qv26e77<=ou538[17];eaced00<={kqeadd6>>1,ou538[18]};ie9d964<=ou538[19];oscef79<=ou538[20];mrc3d06<={sude125>>1,ou538[21]};ribde40<={ayf0928>>1,ou538[22]};epa1ade<=ou538[23];ne79018<={sw24a0f>>1,ou538[24]};yzd6f4<=ou538[25];vv40616<={wwc1908>>1,ou538[26]};ph30b6<={bnc841>>1,ou538[27]};wl185b7<={th6420f>>1,ou538[28]};nrc2dbd<={qi2107f>>1,ou538[29]};db16dee<={ux83f9>>1,ou538[30]};ksb6f77<={kd41fcc>>1,ou538[31]};bab7bb8<={gqfe65>>1,ou538[32]};hqbddc2<={cz7f328>>1,ou538[33]};lqeee13<={zxf9945>>1,ou538[34]};ic7709b<={alcca2f>>1,ou538[35]};pub84d9<={kd6517d>>1,ou538[36]};vvc26ca<={zz28bed>>1,ou538[37]};tj13657<={pf45f6e>>1,ou538[38]};hd9b2be<={vk2fb77>>1,ou538[39]};shd95f6<={kq7dbbb>>1,ou538[40]};facafb5<={kdeddd9>>1,ou538[41]};tu57daa<=ou538[42];kfbed53<=ou538[43];hbf6a9c<=ou538[44];fpb54e6<={yxd99cd>>1,ou538[45]};phaa736<={yxcce6c>>1,ou538[46]};kq539b6<={su67365>>1,ou538[47]};pu9cdb1<={xw6ca2f>>1,ou538[48]};fne6d8a<=ou538[49];kf36c57<=ou538[50];aab62bc<=ou538[51];epb15e1<=ou538[52];gd8af0c<=ou538[53];by57864<=ou538[54];ukbc323<=ou538[55];hoe1918<=ou538[56];xlc8c2<=ou538[57];nr64617<=ou538[58];wl230bf<=ou538[59];mt185fc<=ou538[60];ldc2fe5<=ou538[61];mt17f2e<=ou538[62];hdbf975<=ou538[63];jpfcbae<=ou538[64];aye5d77<=ou538[65];qi2ebb8<=ou538[66];yx75dc1<=ou538[67];ohaee0d<=ou538[68];end
always@* begin swa7[2047]<=param_trp[0];swa7[2046]<=param_twr[0];swa7[2044]<=param_tras[0];swa7[2040]<=param_trc[0];swa7[2032]<=param_trrd[0];swa7[2016]<=param_trtp[0];swa7[1985]<=param_twtr[0];swa7[1927]<=aa2ee7f;swa7[1922]<=ofdc5cb;swa7[1867]<=mg24dd6;swa7[1807]<=yk773f9;swa7[1804]<=su67365[0];swa7[1797]<=hb749a7;swa7[1761]<=cbbb339;swa7[1686]<=ntbaaee;swa7[1623]<=ayd454e;swa7[1567]<=mgb9fc9;swa7[1561]<=xw6ca2f[0];swa7[1558]<=th6420f[0];swa7[1547]<=hdb0bf4;swa7[1542]<=kd6517d[0];swa7[1505]<=blc8bb9;swa7[1490]<=bn3d79b;swa7[1475]<=yxd99cd[0];swa7[1413]<=wwc1908[0];swa7[1409]<=zxf9945[0];swa7[1400]<=rv8b22e;swa7[1324]<=sude125[0];swa7[1200]<=fp84941;swa7[1199]<=nga2a71;swa7[1086]<=zzb5db4;swa7[1074]<=hd28bd5;swa7[1068]<=qi2107f[0];swa7[1047]<=tj94e69;swa7[1037]<=zz28bed[0];swa7[1023]<=param_trcd[0];swa7[963]<=th45dcf;swa7[933]<=kqeadd6[0];swa7[902]<=yxcce6c[0];swa7[880]<=qg77667;swa7[811]<=dbba8a9;swa7[779]<=bnc841[0];swa7[771]<=alcca2f[0];swa7[752]<=os59177;swa7[745]<=lqebcde;swa7[706]<=fc25078;swa7[704]<=cz7f328[0];swa7[700]<=pf71645;swa7[600]<=ayf0928[0];swa7[503]<=ukb69ea;swa7[440]<=zx6eecc;swa7[405]<=wj7abba;swa7[372]<=of5be47;swa7[353]<=sw24a0f[0];swa7[352]<=gqfe65[0];swa7[350]<=uk1538b;swa7[251]<=tu76d3d;swa7[220]<=kdeddd9[0];swa7[202]<=ng2f577;swa7[186]<=hd8b7c8;swa7[176]<=kd41fcc[0];swa7[125]<=wlaeda7;swa7[110]<=kq7dbbb[0];swa7[101]<=bl45eae;swa7[93]<=wjedd26;swa7[88]<=ux83f9[0];swa7[55]<=vk2fb77[0];swa7[46]<=hqa7af3;swa7[27]<=pf45f6e[0];end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule






















`timescale 1 ns / 100 ps
module zma2a8e_ddr3_ip_inst (

    clk,			              
    rst_n,	
    sjab784,
    kd5bc24,
    eaceade,
    mr756f0,
    zm833ab,
    zz19d5b,
    doa7687,
    ou3b43a,

    psda1d1,
    dmd0e8a,
    mtbb7c7,
    blc8ddb,
    
    fpbfbde,
    tj9139b,
    
    jr8e646,
    dm73237,
    

    uief7b5,
    en4e6fb,
    kqded46,
    vx9beeb,
    bl7bda8,
    ps737dd,
    shfdef6,
    je89cdf,
    fc357ec,
    ohabf62    
    
);
input                                 clk;
input                                 rst_n;
input                                 sjab784;
input                                 kd5bc24;
input                                 eaceade;
input                                 mr756f0;
input                                 zm833ab;
input                                 zz19d5b;
input                                 doa7687;
input                                 ou3b43a;
input                                 fpbfbde;
input                                 tj9139b;
input                                 jr8e646;
input                                 dm73237;
input                                 psda1d1;
input [3:0]                           dmd0e8a;
input                                 mtbb7c7;
input                                 blc8ddb;
output                                fc357ec;
output                                ohabf62;
output                                uief7b5;
output                                en4e6fb;
output                                kqded46;
output                                vx9beeb;
output                                bl7bda8;
output                                ps737dd ;
output                                shfdef6;
output                                je89cdf;
reg                                   uief7b5, en6098d;
reg                                   en4e6fb, ir26363;
reg                                   kqded46, sw8d8e1;
reg                                   vx9beeb, by6384b;
reg                                   bl7bda8, fae12df;
reg                                   ps737dd, qt4b7de ;
wire                                  shfdef6;
wire                                  je89cdf;
wire                                  lqfbd6a;
wire                                  psda1d1;
reg [3:0]                             icf5a91;
wire                                  mtbb7c7;
reg                                   qt6a44b;
reg                                   tu5225c;
wire                                  ohabf62;
reg                                   fc357ec;
reg                                   mr4b8ba;
reg [`ddr3_ip_inst_TRFC_WIDTH-1:0]                 ww5c5d4;
reg rgee86b;
reg hb7435b;
reg qv17ba1;
reg lsbdd0d;
reg mrcc5ee;
reg ww62f74;
reg zk6cc65;
reg ne6632a;
reg qi31952;
reg [3 : 0] ba8ca91;
reg hqa2df7;
reg jr945be;
reg gb5e914;
reg goef5ca;
reg bn16fbb;
reg vkb7ddf;
reg uiea5f3;
reg zk52f98;
reg ec97cc3;
reg uxbe619;
reg nrf30cd;
reg co9866f;
reg ipc3379;
reg [3 : 0] tj19bcd;
reg ldcde6e;
reg uv6f377;
reg zk79bbc;
reg [`ddr3_ip_inst_TRFC_WIDTH - 1 : 0] blcdde3;
reg [2047:0] swa7;
wire [27:0] ou538;

localparam kf29c0 = 28,do14e04 = 32'hfdffe0cb;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;



assign   ohabf62 = ipc3379;
assign   shfdef6 = zk6cc65;
assign   je89cdf = ne6632a;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      by6384b  <= 'b0;   else if ( lsbdd0d && goef5ca)      by6384b  <= 'b1;   else       by6384b  <= 'b0;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      vx9beeb  <= 'b0;   else      vx9beeb  <= uxbe619;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      sw8d8e1  <= 'b0;   else if ( qv17ba1 && gb5e914)      sw8d8e1  <= 'b1;   else       sw8d8e1  <= 'b0;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      kqded46  <= 'b0;   else      kqded46  <= ec97cc3;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      fae12df  <= 'b0;   else if ( mrcc5ee && gb5e914)      fae12df  <= 'b1;   else      fae12df  <= 'b0;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      bl7bda8  <= 'b0;   else      bl7bda8  <= nrf30cd;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      qt4b7de  <= 'b0;   else if ( ww62f74 && goef5ca)      qt4b7de  <= 'b1;   else      qt4b7de  <= 'b0;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      ps737dd  <= 'b0;   else      ps737dd  <= co9866f;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      en6098d         <= 1'b0;   else if (rgee86b && bn16fbb)      en6098d         <= 1'b0;   else if (rgee86b && gb5e914)      en6098d         <= 1'b1;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      uief7b5  <= 'b0;   else      uief7b5  <= uiea5f3;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      ir26363         <= 1'b0;   else if (hb7435b && vkb7ddf)      ir26363         <= 1'b0;   else if (hb7435b && goef5ca)      ir26363         <= 1'b1;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      en4e6fb  <= 'b0;   else      en4e6fb  <= zk52f98;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      mr4b8ba        <= 1'b0;   else if (tj19bcd>0)      mr4b8ba        <= 1'b1;   else      mr4b8ba        <= 1'b0;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)     icf5a91   <= 'b0;   else if (ba8ca91 >1 && qi31952 && !zk79bbc)     icf5a91   <= ba8ca91;   else if (jr945be && zk79bbc)     icf5a91   <= tj19bcd -1;   else if (!zk79bbc)     icf5a91   <= 'b0;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      qt6a44b <= 1'b0;   else if ((tj19bcd ==1) && zk79bbc && hqa2df7)      qt6a44b <= 1'b1;   else     qt6a44b <= 1'b0;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      tu5225c <= 1'b0;   else if ((tj19bcd ==1) && zk79bbc && jr945be)      tu5225c <= 1'b1;   else     tu5225c <= 1'b0;
end
assign      lqfbd6a = (blcdde3 == `ddr3_ip_inst_TRFC); 
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ww5c5d4 <=  'b0;   else if ( ipc3379 )      ww5c5d4 <=  'b0;   else if ((ba8ca91  >1 && uv6f377 )|| (ba8ca91  < 2 && jr945be  )|| |blcdde3)      ww5c5d4 <=  blcdde3 + 1;
end


always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      fc357ec <=  'b0;   else if (ba8ca91  >1)      fc357ec <=  ldcde6e;   else      fc357ec <=  hqa2df7;
end
always@* begin rgee86b<=ou538[0];hb7435b<=ou538[1];qv17ba1<=ou538[2];lsbdd0d<=ou538[3];mrcc5ee<=ou538[4];ww62f74<=ou538[5];zk6cc65<=ou538[6];ne6632a<=ou538[7];qi31952<=ou538[8];ba8ca91<={dmd0e8a>>1,ou538[9]};hqa2df7<=ou538[10];jr945be<=ou538[11];gb5e914<=ou538[12];goef5ca<=ou538[13];bn16fbb<=ou538[14];vkb7ddf<=ou538[15];uiea5f3<=ou538[16];zk52f98<=ou538[17];ec97cc3<=ou538[18];uxbe619<=ou538[19];nrf30cd<=ou538[20];co9866f<=ou538[21];ipc3379<=ou538[22];tj19bcd<={icf5a91>>1,ou538[23]};ldcde6e<=ou538[24];uv6f377<=ou538[25];zk79bbc<=ou538[26];blcdde3<={ww5c5d4>>1,ou538[27]};end
always@* begin swa7[2047]<=kd5bc24;swa7[2046]<=eaceade;swa7[2044]<=mr756f0;swa7[2040]<=zm833ab;swa7[2033]<=zz19d5b;swa7[2024]<=qt4b7de;swa7[2018]<=doa7687;swa7[2001]<=lqfbd6a;swa7[1988]<=ou3b43a;swa7[1954]<=icf5a91[0];swa7[1929]<=psda1d1;swa7[1860]<=qt6a44b;swa7[1811]<=dmd0e8a[0];swa7[1789]<=sw8d8e1;swa7[1673]<=tu5225c;swa7[1574]<=mtbb7c7;swa7[1530]<=by6384b;swa7[1299]<=mr4b8ba;swa7[1247]<=dm73237;swa7[1101]<=blc8ddb;swa7[1023]<=sjab784;swa7[1012]<=fae12df;swa7[894]<=ir26363;swa7[623]<=jr8e646;swa7[551]<=ww5c5d4[0];swa7[447]<=en6098d;swa7[311]<=tj9139b;swa7[155]<=fpbfbde;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule






























`timescale 1 ns / 100 ps
module wy3b2ea_ddr3_ip_inst (

   clk,
   rst_n,
   ec8d0c4,
   ay43101,
   icc404c,
   yz1d21e,
   vid0675,
   fpbfbde,
   tj9139b,
   gdbbc78,
   

   zk79cda,
   tu73699,
   vida65e,
   je99794,
   ip5e518
   );
input           clk;
input           rst_n;
input           ec8d0c4;
input           ay43101;
input           icc404c;
input           yz1d21e;
input           vid0675;
input           fpbfbde;
input           tj9139b;
input           gdbbc78;
output          zk79cda;
output          tu73699;
output          vida65e;
output          je99794;
output          ip5e518;

`define ddr3_ip_inst_IDLE_M 0

`define ddr3_ip_inst_FLOW 1

`define ddr3_ip_inst_SPECL 2

`define ddr3_ip_inst_INIT 3
reg [3:0]       hq89144, jc48a22;
reg             vida65e, rv2889e;
reg             je99794, tj227b4;
reg             ip5e518, fp9ed37;
reg             zk79cda, epb4dfe;
reg             tu73699, jr37fa9;
reg             vxbfd4e, psfea76;
wire            suf53b2;
reg dob127;
reg of4ec80;
reg ne76404;
reg do9c123;
reg db198bd;
reg gb5e914;
reg goef5ca;
reg ba307bc;
reg [3 : 0] je1bb54;
reg [3 : 0] nrddaa3;
reg ofed51e;
reg ip6a8f5;
reg mr547ad;
reg eca3d6d;
reg ba1eb69;
reg ykf5b4b;
reg ngada59;
reg ui6d2ca;
reg [2047:0] swa7;
wire [17:0] ou538;

`define ddr3_ip_inst_IDLE_M 0

`define ddr3_ip_inst_FLOW 1

`define ddr3_ip_inst_SPECL 2

`define ddr3_ip_inst_INIT 3

localparam kf29c0 = 18,do14e04 = 32'hfdffd48b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`define ddr3_ip_inst_IDLE_M 0


`define ddr3_ip_inst_FLOW 1


`define ddr3_ip_inst_SPECL 2


`define ddr3_ip_inst_INIT 3











`define ddr3_ip_inst_IDLE_M 0



`define ddr3_ip_inst_FLOW 1



`define ddr3_ip_inst_SPECL 2



`define ddr3_ip_inst_INIT 3





assign          suf53b2 = ne76404 || ngada59;
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      vxbfd4e           <=  'b0 ;   else if (tu73699)      vxbfd4e           <=  'b1 ;  else if (ne76404)      vxbfd4e           <=  'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      psfea76           <=  'b0 ;   else      psfea76           <=  ne76404 ;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      hq89144           <=  4'b0 ;      vida65e           <=  1'b0 ;      je99794        <=  1'b0 ;      ip5e518          <=  1'b0 ;      tu73699   <=  1'b0 ;      zk79cda      <=  1'b0 ;   end   else begin      hq89144           <=  nrddaa3 ;      vida65e           <=  ofed51e ;      je99794        <=  ip6a8f5 ;      ip5e518          <=  mr547ad ;      tu73699   <=  ba1eb69 ;      zk79cda      <=  eca3d6d ;   end
end







always @ (je1bb54 or do9c123 or db198bd or ba307bc or          gb5e914 or goef5ca or of4ec80 or dob127 or ne76404          or ykf5b4b or ui6d2ca or vida65e or je99794 or ip5e518 or tu73699 or zk79cda) begin
jc48a22 = 4'b0;
rv2889e = vida65e;
tj227b4 = je99794;
fp9ed37 = ip5e518;
jr37fa9 = tu73699;
epb4dfe = zk79cda;
case (1)        je1bb54[`ddr3_ip_inst_IDLE_M] :  begin                    rv2889e = 1'b0;                    tj227b4 = 1'b0;                    fp9ed37 = 1'b0;
                    if (dob127) begin                      jc48a22[`ddr3_ip_inst_INIT] = 1'b1;                    end                    else jc48a22[`ddr3_ip_inst_IDLE_M] = 1'b1;                  end



   je1bb54[`ddr3_ip_inst_FLOW] :  begin                    if (of4ec80) begin                      if (do9c123 || db198bd || ba307bc) begin                         jc48a22[`ddr3_ip_inst_SPECL] = 1'b1;                         rv2889e = 1'b0;                         tj227b4 = 1'b0;                         fp9ed37 = 1'b1;                         jr37fa9 = 1'b1;                      end                      else begin                         epb4dfe = 1'b0;                         jc48a22[`ddr3_ip_inst_FLOW] = 1'b1;                      end                    end                    else begin                      epb4dfe = 1'b0;                      jc48a22[`ddr3_ip_inst_FLOW] = 1'b1;                    end                  end



   je1bb54[`ddr3_ip_inst_SPECL] : begin                   if (!ykf5b4b && ((gb5e914 || goef5ca ) && !db198bd  && !do9c123)) begin                         jc48a22[`ddr3_ip_inst_FLOW] = 1'b1;                         rv2889e = 1'b1;                         tj227b4 = 1'b1;                         fp9ed37 = 1'b0;                         epb4dfe = 1'b1;                         jr37fa9 = 1'b0;                   end                   else if (!ykf5b4b && !ui6d2ca && (do9c123 || db198bd || ba307bc)) begin                         jc48a22[`ddr3_ip_inst_SPECL] = 1'b1;                         rv2889e = 1'b0;                         tj227b4 = 1'b0;                         fp9ed37 = 1'b1;                         jr37fa9 = 1'b1;                    end                    else begin                      jr37fa9 = 1'b0;                      jc48a22[`ddr3_ip_inst_SPECL] = 1'b1;                    end                  end



   je1bb54[`ddr3_ip_inst_INIT] :  begin                   if (!dob127) begin                      if (do9c123 || db198bd || ba307bc) begin                        jc48a22[`ddr3_ip_inst_SPECL] = 1'b1;                        fp9ed37 = 1'b1;                        jr37fa9 = 1'b1;                      end                      else if ((gb5e914 || goef5ca) && !db198bd  && !do9c123) begin                        jc48a22[`ddr3_ip_inst_FLOW] = 1'b1;                        rv2889e = 1'b1;                        tj227b4 = 1'b1;                        epb4dfe = 1'b1;                      end                      else jc48a22[`ddr3_ip_inst_INIT] = 1'b1;                  end                  else jc48a22[`ddr3_ip_inst_INIT] = 1'b1;                  end
        default : begin                    jc48a22[`ddr3_ip_inst_IDLE_M] = 1'b1;                    epb4dfe = 1'b0;                    jr37fa9 = 1'b0;                 end endcase end

always@* begin dob127<=ou538[0];of4ec80<=ou538[1];ne76404<=ou538[2];do9c123<=ou538[3];db198bd<=ou538[4];gb5e914<=ou538[5];goef5ca<=ou538[6];ba307bc<=ou538[7];je1bb54<={hq89144>>1,ou538[8]};nrddaa3<={jc48a22>>1,ou538[9]};ofed51e<=ou538[10];ip6a8f5<=ou538[11];mr547ad<=ou538[12];eca3d6d<=ou538[13];ba1eb69<=ou538[14];ykf5b4b<=ou538[15];ngada59<=ou538[16];ui6d2ca<=ou538[17];end
always@* begin swa7[2047]<=ay43101;swa7[2046]<=icc404c;swa7[2044]<=yz1d21e;swa7[2040]<=vid0675;swa7[2032]<=fpbfbde;swa7[2017]<=tj9139b;swa7[1987]<=gdbbc78;swa7[1927]<=hq89144[0];swa7[1865]<=psfea76;swa7[1806]<=jc48a22[0];swa7[1682]<=suf53b2;swa7[1565]<=rv2889e;swa7[1082]<=tj227b4;swa7[1023]<=ec8d0c4;swa7[932]<=vxbfd4e;swa7[466]<=jr37fa9;swa7[233]<=epb4dfe;swa7[116]<=fp9ed37;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule   





























`timescale 1 ns / 100 ps
module zz940e2_ddr3_ip_inst (
    
    sclk,			   
    rst_n,
    init_done,
    wl_act,
    mt17fbd,
    db27666,
    ou3b336,
    db9e308,
    ng8c233,
    shedca3,
    an8cd7,
    ea728e6,
    hd94730,
    qia3987,
    vx1cc39,
    ble61ce,

    
    mem_odt_out,
    cntl_odt_out

    );
input                        sclk;
input                        rst_n;
input                        init_done;
input                        wl_act;
input   [`ddr3_ip_inst_CS_WIDTH-1 : 0]    mt17fbd;
input                        db27666;
input                        ou3b336;
input                        db9e308;
input                        ng8c233;
input                        shedca3;
input                        an8cd7;
input   [3:0]                ea728e6;
input   [1:0]                hd94730;
input   [`ddr3_ip_inst_CS_WIDTH-1 : 0]    qia3987;
input                        vx1cc39;
input                        ble61ce;
output  [`ddr3_ip_inst_CS_WIDTH-1 : 0]    mem_odt_out;
output                       cntl_odt_out;

`define ddr3_ip_inst_LOW 1'b0
parameter    mg1fab5   = 2;
parameter    kdfd5a9   = 3;
wire  [`ddr3_ip_inst_CS_WIDTH-1 : 0]      mem_odt_out;
reg                          cntl_odt_out;
reg                          vxb5309;
reg                          ksa984e;
reg                          ww4c270;
reg                          bl61380;
reg                          fp9c07;
reg   [1:0]                  yx4e03f;
reg   [1:0]                  uv701fd;
reg                          ep80fec;
reg                          mt7f65;
reg                          tw3fb2c;
reg                          alfd962;
reg                          jpecb15;
reg                          qt658ae;
reg                          qv2c574;
reg                          ww62ba5;
reg                          ou15d29;
reg                          sjae948;
reg                          pf74a45;

`ifdef ddr3_ip_inst_CS_WIDTH_1
wire  [`ddr3_ip_inst_CS_WIDTH-1 : 0]      vxa522f;
wire                         ir2917f;

`else
reg   [`ddr3_ip_inst_CS_WIDTH-1 : 0]      vxa522f;
reg                          ir2917f;

`endif
reg                          ri2ff5f;
reg                          gb7fafb;
wire  [1:0]                  alfd7dc;
wire                         dmebee4;
wire  [1:0]                  zx5f723;
wire                         fafb91e;
wire                         shdc8f2;
wire                         bye4794;
reg   [3:0]                  ep23ca3;
reg                          ba1e51d;
wire  [`ddr3_ip_inst_CS_WIDTH-1 : 0]      wjf28ea;
wire                         vx94754;
wire                         yma3aa7;
reg   [`ddr3_ip_inst_CS_WIDTH-1 : 0]      gd1d539;

`ifdef ddr3_ip_inst_CS_WIDTH_4  // Both slots have double ranks

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`ifdef ddr3_ip_inst_DUAL_RANK   // There is only one slot. (1DIMM, 2 RANKS)

`else //Both slot1 and slot2 have single rank 

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_1 // One slot with one rank

`endif
reg meea9cd;
reg aye5460;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] xya734c;
reg ux39a62;
reg nrcd315;
reg fa698ae;
reg ic4c572;
reg qg62b90;
reg sw15c81;
reg [3 : 0] yzae408;
reg [1 : 0] ea72044;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] kf90221;
reg rv8110d;
reg ir886e;
reg wj44375;
reg uk21bac;
reg wldd60;
reg fn6eb05;
reg of7582f;
reg [1 : 0] ksac17d;
reg [1 : 0] cz60be9;
reg gq5f4c;
reg ba2fa61;
reg go7d30b;
reg ble9858;
reg cm4c2c6;
reg xj61630;
reg xyb187;
reg lq58c3b;
reg yxc61da;
reg pu30ed5;
reg sw876ab;
reg sw3b559;
reg vidaac9;
reg [1 : 0] dmd564b;
reg mtab25b;
reg [1 : 0] me592dc;
reg kdc96e1;
reg ip4b70c;
reg wj5b865;
reg [3 : 0] mrdc32d;
reg jce196d;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] ntcb6a;
reg kd65b57;
reg vx2dabc;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] go6d5e6;
reg [2047:0] swa7;
wire [45:0] ou538;

`define ddr3_ip_inst_LOW 1'b0

`ifdef ddr3_ip_inst_CS_WIDTH_1

`else

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4  // Both slots have double ranks

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`ifdef ddr3_ip_inst_DUAL_RANK   // There is only one slot. (1DIMM, 2 RANKS)

`else //Both slot1 and slot2 have single rank 

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_1 // One slot with one rank

`endif

localparam kf29c0 = 46,do14e04 = 32'hfdffe44b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`define ddr3_ip_inst_LOW 1'b0


`ifdef ddr3_ip_inst_CS_WIDTH_1


`else


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_4  // Both slots have double ranks


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`ifdef ddr3_ip_inst_DUAL_RANK   // There is only one slot. (1DIMM, 2 RANKS)


`else //Both slot1 and slot2 have single rank 


`endif


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_1 // One slot with one rank


`endif



























`define ddr3_ip_inst_LOW 1'b0














`ifdef ddr3_ip_inst_CS_WIDTH_1



`else



`endif




always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      gd1d539 <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};   end   else begin      gd1d539 <= kf90221;   end
end


always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      ri2ff5f <= 1'b0;   end   else if (fa698ae) begin      ri2ff5f <= 1'b1;   end   else if (ksac17d == 2'b01) begin      ri2ff5f <= 1'b0;   end
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      gb7fafb <= 1'b0;   end   else if (ic4c572) begin      gb7fafb <= 1'b1;   end   else if (cz60be9 == 2'b01) begin      gb7fafb <= 1'b0;   end
end








always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      vxb5309    <= 1'b0;      ksa984e    <= 1'b0;      ww4c270   <= 1'b0;   end   else begin      vxb5309    <=  ux39a62 & ~nrcd315 & ~wldd60;      ksa984e    <=  ux39a62 &  nrcd315 & ~wldd60;            ww4c270   <=  ux39a62 &  vx2dabc & ~ir886e;   end
end
assign yma3aa7  = 1'b0;  




assign  alfd7dc         = qg62b90 ? `ddr3_ip_inst_TODTH4 : `ddr3_ip_inst_TODTH8 ;


assign  zx5f723         = qg62b90 ? mg1fab5 : kdfd5a9 ;

always @ (negedge rst_n or posedge sclk) begin   if (!rst_n)
      yx4e03f     <= 2'b0;      else if (fa698ae)      yx4e03f     <= dmd564b;   else if (aye5460)      yx4e03f     <= 2'b0;   else if (ksac17d != 2'b0)      yx4e03f     <= ksac17d - 1'b1;
end

assign shdc8f2 = |(ksac17d);
always @ (negedge rst_n or posedge sclk) begin   if (!rst_n)
      uv701fd     <= 2'b0;      else if (ic4c572)      uv701fd     <= me592dc;   else if (aye5460)      uv701fd     <= 2'b0;   else if (cz60be9 != 2'b0)      uv701fd     <= cz60be9 - 1'b1;
end

assign bye4794 = |(cz60be9) ;











always @ (negedge rst_n or posedge sclk) begin   if (!rst_n)      ep23ca3 <= 4'h0;   else      ep23ca3 <= yzae408 + ea72044 - 2;
end
always @ (negedge rst_n or posedge sclk) begin   if (!rst_n) begin      ep80fec  <= `ddr3_ip_inst_LOW;      mt7f65  <= `ddr3_ip_inst_LOW;      tw3fb2c  <= `ddr3_ip_inst_LOW;      alfd962  <= `ddr3_ip_inst_LOW;      jpecb15  <= `ddr3_ip_inst_LOW;      qt658ae  <= `ddr3_ip_inst_LOW;      qv2c574  <= `ddr3_ip_inst_LOW;      ww62ba5  <= `ddr3_ip_inst_LOW;      ou15d29  <= `ddr3_ip_inst_LOW;      sjae948 <= `ddr3_ip_inst_LOW;   end   else begin      ep80fec  <= wj5b865;      mt7f65  <= gq5f4c;      tw3fb2c  <= ba2fa61;      alfd962  <= go7d30b;      jpecb15  <= ble9858;      qt658ae  <= cm4c2c6;      qv2c574  <= xj61630;      ww62ba5  <= xyb187;      ou15d29  <= lq58c3b;      sjae948 <= yxc61da;   end
end
always @ (mrdc32d or          go7d30b or ble9858 or cm4c2c6 or xj61630 or  xyb187 or lq58c3b or yxc61da or pu30ed5) begin   case (mrdc32d[3:0])      4'd3:  pf74a45 = go7d30b;      4'd4:  pf74a45 = ble9858;      4'd5:  pf74a45 = cm4c2c6;      4'd6:  pf74a45 = xj61630;      4'd7:  pf74a45 = xyb187;      4'd8:  pf74a45 = lq58c3b;      4'd9:  pf74a45 = yxc61da;      4'd10: pf74a45 = pu30ed5;      default : pf74a45 = 1'b0;   endcase
end
always @ (negedge rst_n or posedge sclk) begin   if (!rst_n)      ba1e51d <=  1'b0 ;   else            ba1e51d <=  1'b0 ;
end









`ifdef ddr3_ip_inst_CS_WIDTH_4  // Both slots have double ranks



 always @ (vidaac9 or sw3b559 or go6d5e6) begin   begin
      case ({vidaac9,sw3b559,go6d5e6})         6'b011110 : begin                   vxa522f  = 4'b1001;     ir2917f = 1'b0;             end         6'b011101 : begin               vxa522f  = 4'b1001;         ir2917f = 1'b0;             end         6'b011011 : begin               vxa522f  = 4'b0110;         ir2917f = 1'b0;             end         6'b010111 : begin               vxa522f  = 4'b0110;         ir2917f = 1'b0;             end         6'b101110 : begin               vxa522f  = 4'b1000;         ir2917f = 1'b1;             end         6'b101101 : begin               vxa522f  = 4'b1000;         ir2917f = 1'b1;             end         6'b101011 : begin               vxa522f  = 4'b0010;         ir2917f = 1'b1;             end         6'b100111 : begin               vxa522f  = 4'b0010;         ir2917f = 1'b1;             end         default   : begin             vxa522f  = 4'b0000;             ir2917f = 1'b0;             end      endcase   end
end


`endif




`ifdef ddr3_ip_inst_CS_WIDTH_2



`ifdef ddr3_ip_inst_DUAL_RANK   // There is only one slot. (1DIMM, 2 RANKS)

always @ (vidaac9 or sw3b559 or kf90221) begin   begin      case ({vidaac9,sw3b559,kf90221})         4'b0110 : begin                 vxa522f  = 2'b01;   ir2917f = 1'b0;           end         4'b0101 : begin             vxa522f  = 2'b01;       ir2917f = 1'b0;           end         4'b1010 : begin             vxa522f  = 2'b00;       ir2917f = 1'b1;           end         4'b1001 : begin             vxa522f  = 2'b00;       ir2917f = 1'b1;           end         default : begin           vxa522f  = 2'b00;           ir2917f = 1'b0;           end      endcase   end
end


`else //Both slot1 and slot2 have single rank 



always @ (vidaac9 or sw3b559 or kf90221) begin   begin      case ({vidaac9,sw3b559,kf90221})         4'b0110 : begin                 vxa522f  = 2'b11;   ir2917f = 1'b0;           end         4'b0101 : begin             vxa522f  = 2'b11;       ir2917f = 1'b0;           end         4'b1010 : begin             vxa522f  = 2'b10;       ir2917f = 1'b1;           end         4'b1001 : begin             vxa522f  = 2'b01;       ir2917f = 1'b1;           end         default : begin           vxa522f  = 2'b00;           ir2917f = 1'b0;           end      endcase   end
end

`endif



`endif




`ifdef ddr3_ip_inst_CS_WIDTH_1 // One slot with one rank


assign vxa522f  = sw3b559 & ~kf90221;
assign ir2917f = 1'b0;


`endif


assign wjf28ea    = (ip4b70c | jce196d)  ? vxa522f  : {`ddr3_ip_inst_CS_WIDTH{1'b0}};
assign vx94754   = (jce196d)                 ? ir2917f : 1'h0;

assign mem_odt_out = (ntcb6a | xya734c) ;


always @ (negedge rst_n or posedge sclk) begin   if (!rst_n)      cntl_odt_out <= 1'b0;   else      cntl_odt_out <= kd65b57 ;
end

always@* begin meea9cd<=ou538[0];aye5460<=ou538[1];xya734c<={mt17fbd>>1,ou538[2]};ux39a62<=ou538[3];nrcd315<=ou538[4];fa698ae<=ou538[5];ic4c572<=ou538[6];qg62b90<=ou538[7];sw15c81<=ou538[8];yzae408<={ea728e6>>1,ou538[9]};ea72044<={hd94730>>1,ou538[10]};kf90221<={qia3987>>1,ou538[11]};rv8110d<=ou538[12];ir886e<=ou538[13];wj44375<=ou538[14];uk21bac<=ou538[15];wldd60<=ou538[16];fn6eb05<=ou538[17];of7582f<=ou538[18];ksac17d<={yx4e03f>>1,ou538[19]};cz60be9<={uv701fd>>1,ou538[20]};gq5f4c<=ou538[21];ba2fa61<=ou538[22];go7d30b<=ou538[23];ble9858<=ou538[24];cm4c2c6<=ou538[25];xj61630<=ou538[26];xyb187<=ou538[27];lq58c3b<=ou538[28];yxc61da<=ou538[29];pu30ed5<=ou538[30];sw876ab<=ou538[31];sw3b559<=ou538[32];vidaac9<=ou538[33];dmd564b<={alfd7dc>>1,ou538[34]};mtab25b<=ou538[35];me592dc<={zx5f723>>1,ou538[36]};kdc96e1<=ou538[37];ip4b70c<=ou538[38];wj5b865<=ou538[39];mrdc32d<={ep23ca3>>1,ou538[40]};jce196d<=ou538[41];ntcb6a<={wjf28ea>>1,ou538[42]};kd65b57<=ou538[43];vx2dabc<=ou538[44];go6d5e6<={gd1d539>>1,ou538[45]};end
always@* begin swa7[2047]<=wl_act;swa7[2046]<=mt17fbd[0];swa7[2044]<=db27666;swa7[2040]<=ou3b336;swa7[2033]<=db9e308;swa7[2019]<=ng8c233;swa7[1991]<=shedca3;swa7[1934]<=an8cd7;swa7[1898]<=ksa984e;swa7[1821]<=ea728e6[0];swa7[1749]<=ww4c270;swa7[1707]<=yx4e03f[0];swa7[1666]<=ww62ba5;swa7[1630]<=ba1e51d;swa7[1595]<=hd94730[0];swa7[1506]<=gd1d539[0];swa7[1450]<=bl61380;swa7[1440]<=qt658ae;swa7[1384]<=alfd962;swa7[1370]<=mt7f65;swa7[1366]<=uv701fd[0];swa7[1284]<=ou15d29;swa7[1212]<=wjf28ea[0];swa7[1142]<=qia3987[0];swa7[1125]<=fafb91e;swa7[1041]<=pf74a45;swa7[1023]<=init_done;swa7[949]<=vxb5309;swa7[853]<=fp9c07;swa7[833]<=qv2c574;swa7[815]<=ep23ca3[0];swa7[753]<=yma3aa7;swa7[720]<=jpecb15;swa7[692]<=tw3fb2c;swa7[685]<=ep80fec;swa7[562]<=zx5f723[0];swa7[520]<=sjae948;swa7[474]<=ble61ce;swa7[407]<=bye4794;swa7[376]<=vx94754;swa7[281]<=dmebee4;swa7[237]<=vx1cc39;swa7[203]<=shdc8f2;swa7[140]<=alfd7dc[0];swa7[70]<=gb7fafb;swa7[35]<=ri2ff5f;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule
































`timescale 1 ns / 100 ps
module lqd590b_ddr3_ip_inst (

   clk,
   rst_n,
   tu73699,
   
   bab439,
   th5a1cb,			
   jcd0e5e,
   co872f2,
   wl39791,
   wwcbc8c,
   al5e460,
   off2304, 
   co1fa44, 
   je8c12e,
   al60972,
   ri4b94,
   ls25ca3,
   aa2e51a,
   ui728d0,
   fp94680,
   aaa3407,
   qi1a038,
   lqfbd6a,

   icc404c,   			
   ba991bb,			   
   blc8ddb,
   qg46edf,
   qia941f,
   
   baa88c8, 
   ir23214, 
   hbc8527, 
   vk149f2, 
   nt27c94,
   mrf2539,
   tj94e69,
   ip5e518,
   tu69cae,
   ww72b95,
   gd39a72, 
   hqa7af3,
   th644a6,
   tj22537,
   oh129be,
   xl94df5,
   ksa6fae,
   zz37d71,
   sjbeb8e,
   qgf5c74,
   bn3d2ae,
   zz37585,
   dz507cf,
   ksb3c61,
`ifdef ddr3_ip_inst_DIR_SREF_EXT
   sref_ent_cmd,
   sref_ext_cmd,
`endif
   dzc7a55
   );
input            clk;
input            rst_n;
input            tu73699;
input            ip5e518;
input            bab439;
input            th5a1cb;
input            jcd0e5e;
input            co872f2;
input            wl39791;
input            wwcbc8c;
input            al5e460;
input            off2304;
input [3:0]      co1fa44;
input            je8c12e;
input            al60972;
input            ri4b94;
input            ls25ca3;
input            aa2e51a;
input            ui728d0;
input            fp94680;
input            aaa3407;
input            qi1a038;
input            lqfbd6a;
output           icc404c;
output           ba991bb;
output           blc8ddb;
output           qg46edf;
output           baa88c8;
output           ir23214;
output           hbc8527;
output           vk149f2;
output           nt27c94;
output           mrf2539;
output           tu69cae;
output           ww72b95;
output           gd39a72;
output           tj94e69;
output           zz37585;
output           bn3d2ae;
output           hqa7af3;
output           th644a6;
output           dz507cf;
output           qia941f;
output           tj22537;
output           oh129be;
output           xl94df5;
output           ksa6fae;
output           zz37d71;
output           sjbeb8e;
output           qgf5c74;
output           ksb3c61;

`ifdef ddr3_ip_inst_DIR_SREF_EXT
output           sref_ent_cmd;
output           sref_ext_cmd;

`endif
output           dzc7a55;

`define ddr3_ip_inst_IDLE_SP 0

`define ddr3_ip_inst_PRE_WAIT_SP 1

`define ddr3_ip_inst_PRE_SP 2

`define ddr3_ip_inst_SREF_ENT 3

`define ddr3_ip_inst_SREF_EXT 4

`define ddr3_ip_inst_TCKESR_S 5

`define ddr3_ip_inst_T512 6

`define ddr3_ip_inst_PWR_ENT 7

`define ddr3_ip_inst_PWR_EXT 8

`define ddr3_ip_inst_PWR_WAIT 9

`define ddr3_ip_inst_TPD_S 10

`define ddr3_ip_inst_CKE_LOW 11

`define ddr3_ip_inst_TXPDLL_S 12

`define ddr3_ip_inst_LMR_S 13

`define ddr3_ip_inst_REF_S 14

`define ddr3_ip_inst_ZQCLONG 15

`define ddr3_ip_inst_ZQCSHORT 16

`define ddr3_ip_inst_TZQOPER_S 17

`define ddr3_ip_inst_TZQS_S 18

`define ddr3_ip_inst_TMRD_S 19

`define ddr3_ip_inst_N_LMR 20

`define ddr3_ip_inst_L2L 21
reg              icc404c, psfea76 ;
reg              ba991bb, wwcb9e8;
reg              blc8ddb, yxe7a00;
reg              qg46edf, ipe802e;
reg              baa88c8, aabae;
reg              ir23214, ks2eb89;
reg              hbc8527, uxae24d;
reg              vk149f2, hq89366;
reg              nt27c94, vi4d991;
reg              mrf2539, ho6645a;
reg              xl94df5, hd91697;
reg              ksa6fae, hb5a5ff;
reg              tu69cae, ie97ff7;
reg              ww72b95, kqffdce;
reg              gd39a72, shf7382;
reg              zz37d71, eace0a9;
reg              zz37585, zza51c8;
reg              hqa7af3, je3ffcf;
reg              tj94e69, hbc713f;
reg              tj22537, pu1245;
reg              oh129be, ay49156;
reg              sjbeb8e, zx45583;
reg              dz507cf, ui560f3;
reg              qgf5c74, pu83cc6;
reg              qia941f, vvf3192;
reg              th644a6, wjc64b8;
reg              bn325c5, ks92e2f;
reg              ou97179, rib8bc8;
reg              nec5e43, fc2f21b;
reg              jc790da, zxc86d2;
reg              ww43696, zm1b4b1;
reg              fada58a, dzd2c52;
reg              ls96297, uxb14ba;
reg [21:0]       ep8a5d4, ps52ea5;
reg              bn3d2ae, bnba958;
reg              kqd4ac6, nta5630;
reg              uk2b187, zk58c38;
reg              gbc61c2;
reg              ba30e15;
reg              ksb3c61, jr38559;
reg              zxc2ace;
reg              dzc7a55, cbab3b1;
reg              sref_ent_cmd;
reg              sref_ext_cmd;
wire             ne76300;

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`else

`endif
reg [3:0]  epb1803;
reg        je8c01d;

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`else

`endif

`ifdef ddr3_ip_inst_ENB_REF_PRE

`else

`endif

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`endif

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`else

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`endif

`endif

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`else

`endif
reg al600ea;
reg uk755;
reg hd3aa8;
reg gd1d546;
reg meeaa35;
reg th551a9;
reg jea8d4f;
reg os46a7a;
reg je353d0;
reg [3 : 0] yz26a5c;
reg ld4f410;
reg uv7a087;
reg lqd043d;
reg wy821eb;
reg ym10f59;
reg sw87ac8;
reg rv3d640;
reg jceb206;
reg os59032;
reg ipc3379;
reg pf40c8e;
reg ngada59;
reg jr323bf;
reg zz91dff;
reg db8effe;
reg cm77ff6;
reg rvbffb0;
reg icffd86;
reg psfec30;
reg vvf6182;
reg rvb0c17;
reg je860bf;
reg zm305fb;
reg qi82fda;
reg an17ed0;
reg phbf685;
reg xwfb42f;
reg hb641a4;
reg ld5adb8;
reg zz94ad6;
reg ng2f695;
reg xj7b4aa;
reg jcda557;
reg jpd2aba;
reg ir955d7;
reg bnaaebd;
reg ho575ef;
reg phbaf7a;
reg vvd7bd6;
reg zmbdeb7;
reg ykef5bb;
reg gb7add8;
reg ald6ec4;
reg ngb7625;
reg epbb12b;
reg pfd895d;
reg cmc4aee;
reg vk25771;
reg gq2bb8b;
reg vi5dc59;
reg zkee2ca;
reg [21 : 0] pf71652;
reg [21 : 0] rv8b296;
reg os594b7;
reg zkca5b9;
reg by52dcb;
reg vk96e5b;
reg zmb72db;
reg ukb96db;
reg gocb6d8;
reg gb5b6c1;
reg icdb60c;
reg ykdb060;
reg zxd8300;
reg [3 : 0] icc1807;
reg tjc039;
reg [2047:0] swa7;
wire [75:0] ou538;

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`endif

`define ddr3_ip_inst_IDLE_SP 0

`define ddr3_ip_inst_PRE_WAIT_SP 1

`define ddr3_ip_inst_PRE_SP 2

`define ddr3_ip_inst_SREF_ENT 3

`define ddr3_ip_inst_SREF_EXT 4

`define ddr3_ip_inst_TCKESR_S 5

`define ddr3_ip_inst_T512 6

`define ddr3_ip_inst_PWR_ENT 7

`define ddr3_ip_inst_PWR_EXT 8

`define ddr3_ip_inst_PWR_WAIT 9

`define ddr3_ip_inst_TPD_S 10

`define ddr3_ip_inst_CKE_LOW 11

`define ddr3_ip_inst_TXPDLL_S 12

`define ddr3_ip_inst_LMR_S 13

`define ddr3_ip_inst_REF_S 14

`define ddr3_ip_inst_ZQCLONG 15

`define ddr3_ip_inst_ZQCSHORT 16

`define ddr3_ip_inst_TZQOPER_S 17

`define ddr3_ip_inst_TZQS_S 18

`define ddr3_ip_inst_TMRD_S 19

`define ddr3_ip_inst_N_LMR 20

`define ddr3_ip_inst_L2L 21

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`else

`endif

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`else

`endif

`ifdef ddr3_ip_inst_ENB_REF_PRE

`else

`endif

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`endif

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`else

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`endif

`endif

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`else

`endif

localparam kf29c0 = 76,do14e04 = 32'hfdffd14b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`ifdef ddr3_ip_inst_DIR_SREF_EXT


`endif


`define ddr3_ip_inst_IDLE_SP 0


`define ddr3_ip_inst_PRE_WAIT_SP 1


`define ddr3_ip_inst_PRE_SP 2


`define ddr3_ip_inst_SREF_ENT 3


`define ddr3_ip_inst_SREF_EXT 4


`define ddr3_ip_inst_TCKESR_S 5


`define ddr3_ip_inst_T512 6


`define ddr3_ip_inst_PWR_ENT 7


`define ddr3_ip_inst_PWR_EXT 8


`define ddr3_ip_inst_PWR_WAIT 9


`define ddr3_ip_inst_TPD_S 10


`define ddr3_ip_inst_CKE_LOW 11


`define ddr3_ip_inst_TXPDLL_S 12


`define ddr3_ip_inst_LMR_S 13


`define ddr3_ip_inst_REF_S 14


`define ddr3_ip_inst_ZQCLONG 15


`define ddr3_ip_inst_ZQCSHORT 16


`define ddr3_ip_inst_TZQOPER_S 17


`define ddr3_ip_inst_TZQS_S 18


`define ddr3_ip_inst_TMRD_S 19


`define ddr3_ip_inst_N_LMR 20


`define ddr3_ip_inst_L2L 21


`ifdef ddr3_ip_inst_DIR_SREF_EXT


`else


`endif


`ifdef ddr3_ip_inst_DIR_SREF_EXT


`else


`endif


`ifdef ddr3_ip_inst_ENB_REF_PRE


`else


`endif


`ifdef ddr3_ip_inst_DIR_SREF_EXT


`endif


`ifdef ddr3_ip_inst_DIR_SREF_EXT


`else


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_4


`else


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else


`endif


`endif


`ifdef ddr3_ip_inst_DIR_SREF_EXT


`else


`endif












`ifdef ddr3_ip_inst_DIR_SREF_EXT



`endif





`define ddr3_ip_inst_IDLE_SP 0



`define ddr3_ip_inst_PRE_WAIT_SP 1



`define ddr3_ip_inst_PRE_SP 2



`define ddr3_ip_inst_SREF_ENT 3



`define ddr3_ip_inst_SREF_EXT 4



`define ddr3_ip_inst_TCKESR_S 5



`define ddr3_ip_inst_T512 6



`define ddr3_ip_inst_PWR_ENT 7



`define ddr3_ip_inst_PWR_EXT 8



`define ddr3_ip_inst_PWR_WAIT 9



`define ddr3_ip_inst_TPD_S 10



`define ddr3_ip_inst_CKE_LOW 11



`define ddr3_ip_inst_TXPDLL_S 12



`define ddr3_ip_inst_LMR_S 13



`define ddr3_ip_inst_REF_S 14



`define ddr3_ip_inst_ZQCLONG 15



`define ddr3_ip_inst_ZQCSHORT 16



`define ddr3_ip_inst_TZQOPER_S 17



`define ddr3_ip_inst_TZQS_S 18



`define ddr3_ip_inst_TMRD_S 19



`define ddr3_ip_inst_N_LMR 20



`define ddr3_ip_inst_L2L 21








always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      ep8a5d4   <=  20'b0;      baa88c8              <=  1'b0;      ir23214              <=  1'b0;      hbc8527              <=  1'b0;      vk149f2              <=  1'b0;      nt27c94              <=  1'b0;      mrf2539             <=  1'b0;      tu69cae             <=  1'b0;      ww72b95             <=  1'b0;      gd39a72             <=  1'b0;      bn325c5         <=  1'b0;      ou97179     <=  1'b0;      jc790da         <=  1'b0;      ww43696         <=  1'b0;      fada58a         <=  1'b0;      zz37585             <=  1'b0;      hqa7af3         <=  1'b0;      tj94e69              <=  1'b0;      tj22537           <=  1'b0;      oh129be             <=  1'b0;      sjbeb8e              <=  1'b0;      dz507cf          <=  1'b0;      qgf5c74           <=  1'b0;      ls96297         <=  1'b0;      qia941f    <=  1'b0;      xl94df5          <=  1'b0;      ksa6fae             <=  1'b0;      zz37d71             <=  1'b0;      th644a6         <=  1'b0;      ba991bb       <=  1'b0;
      blc8ddb    <=  1'b0;      qg46edf        <=  1'b0;      bn3d2ae          <=  1'b0;      kqd4ac6        <=  1'b0;      icc404c     <=  1'b0;      uk2b187           <=  1'b0;      ksb3c61          <=  1'b0;      dzc7a55          <=  1'b0;   end   else begin      ep8a5d4   <=  rv8b296 ;      baa88c8              <=  cm77ff6 ;      ir23214              <=  rvbffb0 ;      hbc8527              <=  icffd86 ;      vk149f2              <=  psfec30 ;      nt27c94              <=  vvf6182 ;      mrf2539             <=  rvb0c17 ;      tu69cae             <=  qi82fda ;      ww72b95             <=  an17ed0 ;      gd39a72              <=  phbf685 ;      bn325c5         <=  vvd7bd6 ;      ou97179     <=  ykef5bb  ;      nec5e43     <=  ald6ec4  ;      jc790da         <=  epbb12b ;      ww43696         <=  cmc4aee  ;      fada58a         <=  gq2bb8b  ;      zz37585             <=  hb641a4 ;      hqa7af3         <=  ld5adb8 ;      tj94e69              <=  zz94ad6 ;      tj22537           <=  ng2f695 ;      oh129be             <=  xj7b4aa ;      sjbeb8e              <=  jcda557 ;      dz507cf          <=  jpd2aba ;      qgf5c74           <=  ir955d7 ;      ls96297         <=  zkee2ca;      qia941f    <=  bnaaebd;      xl94df5          <=  je860bf;      ksa6fae             <=  zm305fb;      zz37d71             <=  xwfb42f;      th644a6         <=  ho575ef;      ba991bb       <=  jr323bf ;
      blc8ddb    <=  zz91dff ;      qg46edf        <=  db8effe ;      bn3d2ae          <=  os594b7;      kqd4ac6        <=  by52dcb;      uk2b187           <=  zmb72db;      icc404c     <=  ngada59;      ksb3c61          <=  gb5b6c1;      dzc7a55          <=  ykdb060;   end
end








`ifdef ddr3_ip_inst_DIR_SREF_EXT

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      gbc61c2   <=  'b0;   else      gbc61c2   <=  'b0;
end


`else

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      gbc61c2   <=  'b0;   else if (hd3aa8)       gbc61c2   <=  'b1;   else if (ir23214)      gbc61c2   <=  'b0;
end


`endif


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ba30e15   <=  'b0;   else if (meeaa35)       ba30e15   <=  'b1;   else if (vk149f2)      ba30e15   <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      zxc2ace   <=  'b0;   else if (je353d0)       zxc2ace   <=  'b1;   else if (gd39a72)      zxc2ace   <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      sref_ent_cmd <= 1'b0;   else      sref_ent_cmd <= (rv8b296[`ddr3_ip_inst_SREF_ENT] == 1'b1) ? 1'b1 : 1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      sref_ext_cmd <= 1'b0;   else      sref_ext_cmd <= (rv8b296[`ddr3_ip_inst_SREF_EXT] == 1'b1) ? 1'b1 : 1'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      epb1803   <=  'b0;   else if (yz26a5c == 4'h1)      epb1803   <=  4'h1;   else if (icc1807 == yz26a5c)      epb1803   <=  'b0;   else if (je353d0)      epb1803   <= icc1807 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      je8c01d   <=  'b0;   else if (icc1807 == 4'h1)      je8c01d   <= 'b1;   else      je8c01d <= 'b0;
end









`ifdef ddr3_ip_inst_DIR_SREF_EXT

assign  ne76300 = hd3aa8;

`else

assign  ne76300 = 1'b0;

`endif


always @ (pf71652 or pf40c8e or je353d0 or uk755 or zxd8300          or th551a9 or jea8d4f or os46a7a or gd1d546 or phbaf7a or          zmbdeb7 or ngb7625 or pfd895d or vk25771          or ld4f410 or vi5dc59 or uv7a087 or lqd043d or ipc3379          or wy821eb or ym10f59 or sw87ac8 or rv3d640          or dz507cf or jceb206 or os59032 or qgf5c74 or mrf2539          or ukb96db or gocb6d8 or vk96e5b or al600ea or icdb60c or zkca5b9          or icc404c or qia941f or hqa7af3 or ww72b95  or tj22537 or nt27c94 or tj94e69          or ksa6fae or xl94df5 or zz37d71 or ba991bb or qg46edf or oh129be or blc8ddb          or ksb3c61 or th644a6 or tu69cae or sjbeb8e or zkca5b9 or dzc7a55 or tjc039 or gb7add8) begin
zza51c8 = 1'b0;
ps52ea5 = 20'b0;
aabae = 1'b0;
ks2eb89 = 1'b0;
uxae24d = 1'b0;
hq89366 = 1'b0;
bnba958 = 1'b0;
shf7382 = 1'b0;
psfea76 = icc404c;
vvf3192 = qia941f;
je3ffcf = hqa7af3;
wjc64b8 = th644a6;
dzd2c52 = vk25771;
zm1b4b1 = pfd895d;
rib8bc8 = zmbdeb7;
fc2f21b = gb7add8;
ks92e2f = phbaf7a;
zxc86d2 = ngb7625;
uxb14ba = vi5dc59;
kqffdce = ww72b95;
pu1245 = tj22537;
zk58c38 = vk96e5b;
vi4d991 = nt27c94;
ho6645a = mrf2539;
ui560f3 = dz507cf;
hbc713f = tj94e69;
hb5a5ff = ksa6fae;
hd91697 = xl94df5;
eace0a9 = zz37d71;
wwcb9e8 = ba991bb;
ipe802e = qg46edf;
pu83cc6 = qgf5c74;
ay49156 = oh129be;
yxe7a00 = blc8ddb;
jr38559 = ksb3c61;
ie97ff7 = tu69cae;
zx45583 = sjbeb8e;
nta5630 = zkca5b9;
cbab3b1 = dzc7a55;
case (1)        pf71652[`ddr3_ip_inst_IDLE_SP] :  begin                    wwcb9e8 = 1'b0;                    yxe7a00 = 1'b0;                    ipe802e = 1'b0;                    bnba958 = 1'b0;                    zza51c8 = 1'b1;                    aabae = 1'b0;                    ks2eb89 = 1'b0;                    uxae24d = 1'b0;                    hq89366 = 1'b0;                    vi4d991 = 1'b0;                    ho6645a = 1'b0;                    ie97ff7 = 1'b0;                    kqffdce = 1'b0;                    shf7382 = 1'b0;                    je3ffcf = 1'b0;                    hbc713f = 1'b0;                    pu1245 = 1'b0;                    ay49156 = 1'b0;                    zx45583 = 1'b0;                    ui560f3 = 1'b0;                    pu83cc6 = 1'b0;                    ks92e2f = 1'b0;                    rib8bc8 = 1'b0;                    fc2f21b = 1'b0;                    zxc86d2 = 1'b0;                    zm1b4b1 = 1'b0;                    dzd2c52 = 1'b0;                    uxb14ba = 1'b0;                    vvf3192 = 1'b0;                    hd91697 = 1'b0;                    hb5a5ff = 1'b0;                    eace0a9 = 1'b0;                    wjc64b8 = 1'b0;                    nta5630 = 1'b0;                    zk58c38 = 1'b0;                    psfea76 = 1'b0;                    jr38559 = 1'b0;                    cbab3b1 = 1'b0;                    if (pf40c8e || al600ea) begin                       if (icdb60c && ipc3379) begin  


`ifdef ddr3_ip_inst_ENB_REF_PRE
                            ps52ea5[`ddr3_ip_inst_PRE_SP] = 1'b1;                            hbc713f = 1'b1;                            je3ffcf = 1'b0;                            ks92e2f = 1'b1;


`else
          if (tjc039) begin                            ps52ea5[`ddr3_ip_inst_PRE_SP] = 1'b1;                            hbc713f = 1'b1;                            je3ffcf = 1'b0;                            ks92e2f = 1'b1;  end  else begin                            ps52ea5[`ddr3_ip_inst_REF_S] = 1'b1;                            shf7382 = 1'b1;                            ks92e2f = 1'b0;                            je3ffcf = 1'b0;                            uxb14ba = 1'b0;                          end


`endif

                       end                       else if (uk755) begin                          ps52ea5[`ddr3_ip_inst_PRE_WAIT_SP] = 1'b1;                          ks92e2f = 1'b1;                           rib8bc8 = 1'b1;                          zza51c8 = 1'b0;                          je3ffcf = 1'b1;                          vvf3192 = 1'b1;                       end


`ifdef ddr3_ip_inst_DIR_SREF_EXT
                       else if (hd3aa8) begin                          ps52ea5[`ddr3_ip_inst_SREF_EXT] = 1'b1;                          fc2f21b = 1'b0;                          zza51c8 = 1'b0;                          je3ffcf = 1'b0;                          vvf3192 = 1'b1;                       end

`endif
                       else if (th551a9) begin                          ps52ea5[`ddr3_ip_inst_PRE_WAIT_SP] = 1'b1;                          zxc86d2 = 1'b1;                          zza51c8 = 1'b0;                          je3ffcf = 1'b1;                          vvf3192 = 1'b1;                       end                       else if (jea8d4f) begin                          ps52ea5[`ddr3_ip_inst_PRE_WAIT_SP] = 1'b1;                          zm1b4b1 = 1'b1;                          zza51c8 = 1'b0;                          je3ffcf = 1'b1;                          vvf3192 = 1'b1;                       end                       else if (os46a7a) begin                          ps52ea5[`ddr3_ip_inst_PRE_WAIT_SP] = 1'b1;                          dzd2c52 = 1'b1;                          zza51c8 = 1'b0;                          je3ffcf = 1'b1;                          vvf3192 = 1'b1;                       end                       else if (gd1d546) begin                          ps52ea5[`ddr3_ip_inst_PWR_WAIT] = 1'b1;                          zza51c8 = 1'b0;                          wjc64b8 = 1'b1;                          vvf3192 = 1'b1;                       end                       else  ps52ea5[`ddr3_ip_inst_IDLE_SP] = 1'b1 ;                    end                    else ps52ea5[`ddr3_ip_inst_IDLE_SP] = 1'b1;                 end                    pf71652[`ddr3_ip_inst_PRE_WAIT_SP] :  begin    bnba958 = 1'b0;    if (vi5dc59) begin       if (ld4f410) begin          if (phbaf7a) begin              ps52ea5[`ddr3_ip_inst_REF_S] = 1'b1;
              shf7382 = 1'b1;              ks92e2f = 1'b0;              je3ffcf = 1'b0;              uxb14ba = 1'b0;          end
          else if (ngb7625) begin              ps52ea5[`ddr3_ip_inst_LMR_S] = 1'b1;              vi4d991 = 1'b1;              zxc86d2 = 1'b0;              je3ffcf = 1'b0;              uxb14ba = 1'b0;          end          else if (pfd895d) begin              ps52ea5[`ddr3_ip_inst_ZQCLONG] = 1'b1;              ie97ff7 = 1'b1;              zm1b4b1 = 1'b0;              je3ffcf = 1'b0;              uxb14ba = 1'b0;          end          else if (vk25771) begin              ps52ea5[`ddr3_ip_inst_ZQCSHORT] = 1'b1;              kqffdce = 1'b1;              dzd2c52 = 1'b0;              je3ffcf = 1'b0;              uxb14ba = 1'b0;          end          else begin            ps52ea5[`ddr3_ip_inst_PRE_WAIT_SP] = 1'b1;            je3ffcf = 1'b1;          end       end       else begin         ps52ea5[`ddr3_ip_inst_PRE_WAIT_SP] = 1'b1;         je3ffcf = 1'b1;       end    end    else if (ld4f410) begin         ps52ea5[`ddr3_ip_inst_PRE_SP] = 1'b1;         hbc713f = 1'b1;         je3ffcf = 1'b0;     end     else begin         ps52ea5[`ddr3_ip_inst_PRE_WAIT_SP] = 1'b1;         je3ffcf = 1'b1;     end    end                pf71652[`ddr3_ip_inst_PRE_SP] :  begin        ps52ea5[`ddr3_ip_inst_PRE_WAIT_SP] = 1'b1;        je3ffcf = 1'b1;        hbc713f = 1'b0;        uxb14ba = 1'b1;        bnba958 = 1'b1;    end                    pf71652[`ddr3_ip_inst_SREF_ENT] :  begin        aabae = 1'b0;        pu1245 = 1'b1;        ps52ea5[`ddr3_ip_inst_TCKESR_S] = 1'b1;    end                    pf71652[`ddr3_ip_inst_SREF_EXT] :  begin       ps52ea5[`ddr3_ip_inst_T512] = 1'b1;       ay49156 = 1'b1;       ks2eb89 = 1'b0;
    end                    pf71652[`ddr3_ip_inst_TCKESR_S] :  begin      if ((uv7a087 && ukb96db) ||          ( zkca5b9 && ukb96db)) begin         ps52ea5[`ddr3_ip_inst_SREF_EXT] = 1'b1;         ks2eb89 = 1'b1;         pu1245 = 1'b0;         nta5630 = 1'b0;         ui560f3 = 1'b0;      end      else if (uv7a087) begin

`ifdef ddr3_ip_inst_DIR_SREF_EXT
          ps52ea5[`ddr3_ip_inst_IDLE_SP] = 1'b1;          ay49156 = 1'b0;          zza51c8 = 1'b1;
          psfea76 = 1'b1;          wwcb9e8= 1'b1;

`else
        ps52ea5[`ddr3_ip_inst_TCKESR_S] = 1'b1;        pu1245 = 1'b1;        nta5630 = 1'b1;


`endif
      end      else begin        ps52ea5[`ddr3_ip_inst_TCKESR_S] = 1'b1;        pu1245 = 1'b1;      end    end                    pf71652[`ddr3_ip_inst_T512] :  begin      if (lqd043d) begin          ps52ea5[`ddr3_ip_inst_IDLE_SP] = 1'b1;          ay49156 = 1'b0;          zza51c8 = 1'b1;          vvf3192 = 1'b0;          psfea76 = 1'b1;          wwcb9e8= 1'b1;      end      else ps52ea5[`ddr3_ip_inst_T512] = 1'b1;
    end                    pf71652[`ddr3_ip_inst_PWR_ENT] :  begin        ps52ea5[`ddr3_ip_inst_TPD_S] = 1'b1;        uxae24d = 1'b0;        zx45583 = 1'b1;    end                    pf71652[`ddr3_ip_inst_PWR_EXT] :  begin       if (dz507cf) begin          ps52ea5[`ddr3_ip_inst_PWR_EXT] = 1'b1;          ui560f3 = 1'b0;       end       else begin          ps52ea5[`ddr3_ip_inst_TXPDLL_S] = 1'b1;          pu83cc6 = 1'b1;          hq89366= 1'b1;
       end
    end                    pf71652[`ddr3_ip_inst_PWR_WAIT] :  begin        if(sw87ac8) begin            ps52ea5[`ddr3_ip_inst_CKE_LOW] = 1'b1;            ui560f3 = 1'b1;            wjc64b8 = 1'b0;        end        else begin            ps52ea5[`ddr3_ip_inst_PWR_WAIT] = 1'b1;        end    end                    pf71652[`ddr3_ip_inst_TPD_S] :  begin      if ((rv3d640 && gocb6d8) ||          ( vk96e5b && gocb6d8)) begin          ps52ea5[`ddr3_ip_inst_PWR_EXT] = 1'b1;          zx45583 = 1'b0;          zk58c38 = 1'b0;       end      else if (rv3d640) begin        ps52ea5[`ddr3_ip_inst_TPD_S] = 1'b1;        zx45583 = 1'b1;        zk58c38 = 1'b1;      end       else begin          ps52ea5[`ddr3_ip_inst_TPD_S] = 1'b1;       end    end                pf71652[`ddr3_ip_inst_CKE_LOW] :  begin        ps52ea5[`ddr3_ip_inst_PWR_ENT] = 1'b1;        uxae24d = 1'b1;        jr38559 = 1'b1;    end                    pf71652[`ddr3_ip_inst_TXPDLL_S] :  begin      hq89366= 1'b0;      jr38559 = 1'b0;      if (os59032) begin             ps52ea5[`ddr3_ip_inst_IDLE_SP] = 1'b1;             zza51c8 = 1'b0;             pu83cc6 = 1'b0;             vvf3192 = 1'b0;             ipe802e = 1'b1;             psfea76 = 1'b1;      end      else begin             ps52ea5[`ddr3_ip_inst_TXPDLL_S] = 1'b1;      end    end                




    pf71652[`ddr3_ip_inst_LMR_S] :  begin      vi4d991 = 1'b0;

`ifdef ddr3_ip_inst_CS_WIDTH_4
       ps52ea5[`ddr3_ip_inst_N_LMR] = 1'b1;

`else



`ifdef ddr3_ip_inst_CS_WIDTH_2
         ps52ea5[`ddr3_ip_inst_N_LMR] = 1'b1;


`else
        ps52ea5[`ddr3_ip_inst_TMRD_S] = 1'b1;        eace0a9 = 1'b1;


`endif



`endif
    end    pf71652[`ddr3_ip_inst_N_LMR] :  begin      ho6645a = 1'b1;      ps52ea5[`ddr3_ip_inst_L2L] = 1'b1;   end    pf71652[`ddr3_ip_inst_L2L] :  begin      ps52ea5[`ddr3_ip_inst_TMRD_S] = 1'b1;      eace0a9 = 1'b1;      ho6645a = 1'b0;    end                    pf71652[`ddr3_ip_inst_TMRD_S] :  begin      if (jceb206) begin        ps52ea5[`ddr3_ip_inst_IDLE_SP] = 1'b1;        zza51c8 = 1'b1;        eace0a9 = 1'b0;        psfea76 = 1'b1;      end      else begin         ps52ea5[`ddr3_ip_inst_TMRD_S] = 1'b1;         eace0a9 = 1'b1;      end    end                    pf71652[`ddr3_ip_inst_REF_S] :  begin       shf7382 = 1'b0;       if (ykef5bb) begin   if (ipc3379) begin                 ps52ea5[`ddr3_ip_inst_SREF_ENT] = 1'b1;             aabae = 1'b1;             rib8bc8 = 1'b0;             je3ffcf = 1'b0;             uxb14ba = 1'b0;


`ifdef ddr3_ip_inst_DIR_SREF_EXT
             ui560f3 = 1'b0;


`else
             ui560f3 = 1'b1;


`endif
  end  else begin             ps52ea5[`ddr3_ip_inst_REF_S] = 1'b1;  end       end       else begin          ps52ea5[`ddr3_ip_inst_IDLE_SP] = 1'b1;          zza51c8 = 1'b1;          yxe7a00 = 1'b1;          psfea76 = 1'b1;       end    end

                    pf71652[`ddr3_ip_inst_ZQCLONG] :  begin        ps52ea5[`ddr3_ip_inst_TZQOPER_S] = 1'b1;        ie97ff7 = 1'b0;        hd91697 = 1'b1;    end                    pf71652[`ddr3_ip_inst_ZQCSHORT] :  begin        ps52ea5[`ddr3_ip_inst_TZQS_S] = 1'b1;        kqffdce = 1'b0;        hb5a5ff = 1'b1;    end                    pf71652[`ddr3_ip_inst_TZQOPER_S] :  begin        if (wy821eb) begin          ps52ea5[`ddr3_ip_inst_IDLE_SP] = 1'b1;          zza51c8 = 1'b1;          hd91697 = 1'b0;          vvf3192 = 1'b0;          psfea76 = 1'b1;          cbab3b1 = 1'b1;
        end        else begin          ps52ea5[`ddr3_ip_inst_TZQOPER_S] = 1'b1;          hd91697 = 1'b1;        end    end                    pf71652[`ddr3_ip_inst_TZQS_S] :  begin        if (ym10f59) begin          ps52ea5[`ddr3_ip_inst_IDLE_SP] = 1'b1;          zza51c8 = 1'b1;          hb5a5ff = 1'b0;          cbab3b1 = 1'b1;          vvf3192 = 1'b0;          psfea76 = 1'b1;
        end        else begin          ps52ea5[`ddr3_ip_inst_TZQS_S] = 1'b1;          hb5a5ff = 1'b1;        end    end
    default: begin       ps52ea5[`ddr3_ip_inst_IDLE_SP] = 1'b1;        psfea76 = 1'b0;        vvf3192 = 1'b0;    end
endcase
end

always@* begin al600ea<=ou538[0];uk755<=ou538[1];hd3aa8<=ou538[2];gd1d546<=ou538[3];meeaa35<=ou538[4];th551a9<=ou538[5];jea8d4f<=ou538[6];os46a7a<=ou538[7];je353d0<=ou538[8];yz26a5c<={co1fa44>>1,ou538[9]};ld4f410<=ou538[10];uv7a087<=ou538[11];lqd043d<=ou538[12];wy821eb<=ou538[13];ym10f59<=ou538[14];sw87ac8<=ou538[15];rv3d640<=ou538[16];jceb206<=ou538[17];os59032<=ou538[18];ipc3379<=ou538[19];pf40c8e<=ou538[20];ngada59<=ou538[21];jr323bf<=ou538[22];zz91dff<=ou538[23];db8effe<=ou538[24];cm77ff6<=ou538[25];rvbffb0<=ou538[26];icffd86<=ou538[27];psfec30<=ou538[28];vvf6182<=ou538[29];rvb0c17<=ou538[30];je860bf<=ou538[31];zm305fb<=ou538[32];qi82fda<=ou538[33];an17ed0<=ou538[34];phbf685<=ou538[35];xwfb42f<=ou538[36];hb641a4<=ou538[37];ld5adb8<=ou538[38];zz94ad6<=ou538[39];ng2f695<=ou538[40];xj7b4aa<=ou538[41];jcda557<=ou538[42];jpd2aba<=ou538[43];ir955d7<=ou538[44];bnaaebd<=ou538[45];ho575ef<=ou538[46];phbaf7a<=ou538[47];vvd7bd6<=ou538[48];zmbdeb7<=ou538[49];ykef5bb<=ou538[50];gb7add8<=ou538[51];ald6ec4<=ou538[52];ngb7625<=ou538[53];epbb12b<=ou538[54];pfd895d<=ou538[55];cmc4aee<=ou538[56];vk25771<=ou538[57];gq2bb8b<=ou538[58];vi5dc59<=ou538[59];zkee2ca<=ou538[60];pf71652<={ep8a5d4>>1,ou538[61]};rv8b296<={ps52ea5>>1,ou538[62]};os594b7<=ou538[63];zkca5b9<=ou538[64];by52dcb<=ou538[65];vk96e5b<=ou538[66];zmb72db<=ou538[67];ukb96db<=ou538[68];gocb6d8<=ou538[69];gb5b6c1<=ou538[70];icdb60c<=ou538[71];ykdb060<=ou538[72];zxd8300<=ou538[73];icc1807<={epb1803>>1,ou538[74]};tjc039<=ou538[75];end
always@* begin swa7[2047]<=bab439;swa7[2046]<=th5a1cb;swa7[2044]<=jcd0e5e;swa7[2040]<=co872f2;swa7[2033]<=wl39791;swa7[2019]<=wwcbc8c;swa7[2018]<=ne76300;swa7[1994]<=zx45583;swa7[1990]<=al5e460;swa7[1988]<=epb1803[0];swa7[1981]<=uxae24d;swa7[1965]<=hb5a5ff;swa7[1940]<=ui560f3;swa7[1939]<=qi1a038;swa7[1933]<=off2304;swa7[1929]<=je8c01d;swa7[1914]<=hq89366;swa7[1883]<=ie97ff7;swa7[1832]<=pu83cc6;swa7[1831]<=lqfbd6a;swa7[1819]<=co1fa44[0];swa7[1785]<=hbc713f;swa7[1781]<=vi4d991;swa7[1778]<=ui728d0;swa7[1740]<=fada58a;swa7[1719]<=kqffdce;swa7[1634]<=uxb14ba;swa7[1616]<=vvf3192;swa7[1615]<=ip5e518;swa7[1591]<=je8c12e;swa7[1579]<=kqd4ac6;swa7[1528]<=zxc2ace;swa7[1522]<=pu1245;swa7[1515]<=ho6645a;swa7[1508]<=fp94680;swa7[1470]<=zza51c8;swa7[1432]<=dzd2c52;swa7[1406]<=ba30e15;swa7[1391]<=shf7382;swa7[1286]<=ou97179;swa7[1271]<=ipe802e;swa7[1221]<=ep8a5d4[0];swa7[1184]<=wjc64b8;swa7[1182]<=psfea76;swa7[1135]<=al60972;swa7[1111]<=nta5630;swa7[1051]<=nec5e43;swa7[1023]<=tu73699;swa7[1009]<=cbab3b1;swa7[997]<=ay49156;swa7[990]<=ks2eb89;swa7[982]<=hd91697;swa7[969]<=aaa3407;swa7[892]<=je3ffcf;swa7[889]<=aa2e51a;swa7[870]<=zm1b4b1;swa7[817]<=ls96297;swa7[789]<=bnba958;swa7[764]<=jr38559;swa7[735]<=eace0a9;swa7[703]<=gbc61c2;swa7[643]<=ks92e2f;swa7[635]<=yxe7a00;swa7[525]<=rib8bc8;swa7[495]<=aabae;swa7[444]<=ls25ca3;swa7[435]<=ww43696;swa7[394]<=ps52ea5[0];swa7[351]<=zk58c38;swa7[321]<=bn325c5;swa7[317]<=wwcb9e8;swa7[222]<=ri4b94;swa7[217]<=zxc86d2;swa7[175]<=uk2b187;swa7[108]<=jc790da;swa7[54]<=fc2f21b;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule































`timescale 1 ns / 100 ps
module bn94624_ddr3_ip_inst (

   clk,
   rst_n,
   param_trp ,
   param_tckesr ,
   param_tzqoper ,
   param_tzqs,
   param_tmrd,
   param_tpd,
   param_twr,  
   param_txpdll,
   param_tcke,
   kdc3f48, 
   ayf5998,   
   tu73699,
   ip5e518,
   ykde3c4,
   xwf1e20,			
   gd8f103,
   ea7881d,
   mec40e9,
   tw20748,
   tj3a43,
   yz1d21e,
   dze90f5,
   xw487af,			
   go43d7a,
   xy1ebd0,
   suf5e83,
   tjaf419,
   sh7a0ce,
   vid0675,     
   an237a8,   
   co1fa44,   
    

   baa88c8,
   ir23214,
   hbc8527,
   vk149f2,
   nt27c94,
   mrf2539,
   tj94e69,
   gd39a72,   
   tu69cae,
   ww72b95,
   bn3d2ae,
   icc404c, 			
   ba991bb,		   
   blc8ddb,
   qg46edf,
   qia941f,
   dz507cf,
   mtbb7c7,		 
   ykdbe3d,			 
   bydf1e9,
   wjf8f4a,
   dzc7a55,
   ksb3c61,
   ic466bd,
   sj335e9,
`ifdef ddr3_ip_inst_DIR_SREF_EXT
   sref_ent_cmd,
   sref_ext_cmd,
`endif
   oh1234b,
   ec8d2e6      
   );
input                             clk;
input                             rst_n;
input [`ddr3_ip_inst_TRP_WIDTH-1:0]            param_trp ;
input [`ddr3_ip_inst_TCKESR_WIDTH-1:0]         param_tckesr ;
input [`ddr3_ip_inst_TZQOPER_WIDTH-1:0]        param_tzqoper ;
input [`ddr3_ip_inst_TZQS_WIDTH-1:0]           param_tzqs;
input [`ddr3_ip_inst_TMRD_WIDTH-1:0]           param_tmrd;
input [`ddr3_ip_inst_TPD_WIDTH-1:0]            param_tpd;
input [`ddr3_ip_inst_TWR_WIDTH-1:0]            param_twr;
input [`ddr3_ip_inst_TXPDLL_WIDTH-1:0]         param_txpdll;
input [`ddr3_ip_inst_TCKE_WIDTH-1:0]           param_tcke;
input                             kdc3f48;
input [`ddr3_ip_inst_RL_WIDTH-1:0]             ayf5998;
input                             tu73699;
input                             ip5e518;
input                             ykde3c4;
input                             xwf1e20;
input                             gd8f103;
input                             ea7881d;
input                             mec40e9;
input                             tw20748;
input                             tj3a43;
input                             yz1d21e;
input                             dze90f5;
input                             xw487af;
input                             go43d7a;
input                             xy1ebd0;
input                             suf5e83;
input                             tjaf419;
input                             sh7a0ce;
input                             vid0675;
input                             an237a8;
input [3:0]                       co1fa44;
output                            baa88c8;
output                            ir23214;
output                            hbc8527;
output                            vk149f2;
output                            nt27c94;
output                            mrf2539;
output                            tj94e69;
output                            gd39a72;
output                            tu69cae;
output                            ww72b95;
output                            bn3d2ae;
output                            icc404c;
output                            ba991bb;
output                            blc8ddb;
output                            qg46edf;
output                            qia941f;
output                            dz507cf;
output                            mtbb7c7;
output                            ykdbe3d;
output                            bydf1e9;
output                            wjf8f4a;
output                            dzc7a55;
output                            ksb3c61;
output                            sj335e9;
output                            ic466bd;

`ifdef ddr3_ip_inst_DIR_SREF_EXT
output                            sref_ent_cmd;
output                            sref_ext_cmd;

`endif
output                            oh1234b;
output                            ec8d2e6;
wire [`ddr3_ip_inst_TRP_WIDTH-1:0]             param_trp ;
wire [`ddr3_ip_inst_TCKESR_WIDTH-1:0]          param_tckesr ;
wire [`ddr3_ip_inst_TZQOPER_WIDTH-1:0]         param_tzqoper ;
wire [`ddr3_ip_inst_TZQS_WIDTH-1:0]            param_tzqs;
wire [`ddr3_ip_inst_TMRD_WIDTH-1:0]            param_tmrd;
wire [`ddr3_ip_inst_TPD_WIDTH-1:0]             param_tpd;
wire [`ddr3_ip_inst_TWR_WIDTH-1:0]             param_twr;
wire [`ddr3_ip_inst_TXPDLL_WIDTH-1:0]          param_txpdll;
wire [`ddr3_ip_inst_TCKE_WIDTH-1:0]            param_tcke;
wire [`ddr3_ip_inst_RL_WIDTH-1:0]              ayf5998;

`ifdef ddr3_ip_inst_DIR_SREF_EXT
wire                              sref_ent_cmd;
wire                              sref_ext_cmd;

`endif

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`endif
reg nt3df7d;
reg epa4d4b;
reg al600ea;
reg pf40c8e;
reg hq83de2;
reg fc1ef12;
reg gbf7893;
reg ukbc49c;
reg ipe24e0;
reg ep12704;
reg pu93824;
reg do9c123;
reg ose091b;
reg zm48d8;
reg wy246c3;
reg qv23619;
reg pu1b0cc;
reg fnd8662;
reg gbc3317;
reg db198bd;
reg twb9e7;
reg [3 : 0] yz26a5c;
reg [2047:0] swa7;
wire [21:0] ou538;

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`endif

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`endif


`ifdef ddr3_ip_inst_DIR_SREF_EXT

`endif



localparam kf29c0 = 22,do14e04 = 32'hfdffd48b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`ifdef ddr3_ip_inst_DIR_SREF_EXT


`endif


`ifdef ddr3_ip_inst_DIR_SREF_EXT


`endif


`ifdef ddr3_ip_inst_DIR_SREF_EXT


`endif








`ifdef ddr3_ip_inst_DIR_SREF_EXT



`endif



`ifdef ddr3_ip_inst_DIR_SREF_EXT



`endif






 lqd590b_ddr3_ip_inst al653d7(
   .clk( clk ),   .rst_n( nt3df7d ),   .tu73699( al600ea ),   .bab439( bab439 ),   .th5a1cb( th5a1cb ),
   .jcd0e5e( jcd0e5e ),   .co872f2( co872f2 ),   .wl39791( wl39791 ),   .wwcbc8c( wwcbc8c ),   .al5e460( al5e460 ),   .off2304( off2304 ),   .je8c12e( je8c12e ),   .al60972( al60972 ),   .ri4b94( ri4b94 ),   .ls25ca3( ls25ca3 ),   .aa2e51a( aa2e51a ),   .ui728d0( ui728d0 ),   .fp94680( fp94680 ),   .aaa3407( aaa3407 ),   .qi1a038( qi1a038 ),   .ip5e518(pf40c8e),   .lqfbd6a(lqfbd6a),   .co1fa44 (yz26a5c  ),
   .icc404c( icc404c ),
   .ba991bb( ba991bb ),
   .blc8ddb( blc8ddb ),   .qg46edf( qg46edf ),   .qia941f( qia941f ),   .baa88c8( baa88c8 ) ,   .ir23214( ir23214 ) ,   .hbc8527( hbc8527 ) ,   .vk149f2( vk149f2 ),   .nt27c94( nt27c94 ),   .mrf2539 ( mrf2539  ),   .tj94e69( tj94e69 ),   .tu69cae( tu69cae ),   .ww72b95( ww72b95 ),   .gd39a72( gd39a72 ),   .hqa7af3( hqa7af3 ),   .th644a6( th644a6 ),   .tj22537( tj22537 ),   .oh129be( oh129be ),   .xl94df5( xl94df5 ),   .ksa6fae( ksa6fae ),   .zz37d71( zz37d71 ),   .sjbeb8e( sjbeb8e ),   .qgf5c74( qgf5c74 ),   .bn3d2ae( bn3d2ae ),   .zz37585(jcd04f9),   .dz507cf( dz507cf ),   .ksb3c61( ksb3c61 ),

`ifdef ddr3_ip_inst_DIR_SREF_EXT
   .sref_ent_cmd (sref_ent_cmd),   .sref_ext_cmd (sref_ext_cmd),

`endif
   .dzc7a55(dzc7a55)   );



  sw884f0_ddr3_ip_inst tu42780(
   .clk( clk ),   .rst_n( nt3df7d ),   .param_trp( param_trp ) ,   .param_tckesr( param_tckesr) ,   .param_tzqoper( param_tzqoper ) ,   .param_twr( param_twr ),   .param_tzqs( param_tzqs ),   .param_tmrd( param_tmrd ),   .param_tpd( param_tpd ),   .param_txpdll( param_txpdll ),   .param_tcke( param_tcke ),   .hqa7af3( hqa7af3 ),   .tj22537( tj22537 ),   .oh129be( oh129be ),   .xl94df5( xl94df5 ),   .ksa6fae( ksa6fae ),   .zz37d71( zz37d71 ),   .sjbeb8e( sjbeb8e ),   .kdc3f48( epa4d4b ),   .ayf5998(ayf5998),   .qgf5c74( qgf5c74 ),   .th644a6( th644a6 ),   .gd39a72( gd39a72 ),   .gdbbc78( off2304 ),
   .je8c12e( je8c12e ),   .al60972( al60972 ),   .ri4b94( ri4b94 ),   .ls25ca3( ls25ca3 ),   .aa2e51a( aa2e51a ),   .ui728d0( ui728d0 ),   .fp94680( fp94680 ),   .aaa3407( aaa3407 ),   .qi1a038( qi1a038 ) ,   .lqfbd6a(lqfbd6a)   );

sh607d0_ddr3_ip_inst lf3e85(
   .clk(clk ),   .rst_n(nt3df7d ),   .ip5e518(pf40c8e),   .ykde3c4(hq83de2 ),   .xwf1e20(fc1ef12 ),
   .gd8f103(gbf7893 ),   .ea7881d(ukbc49c ),   .mec40e9(ipe24e0 ),   .tw20748(ep12704 ),   .tj3a43(pu93824 ),   .yz1d21e(do9c123 ),   .dze90f5(ose091b ),   .xw487af(zm48d8 ),
   .go43d7a(wy246c3 ),   .xy1ebd0(qv23619 ),   .suf5e83(pu1b0cc ),   .tjaf419(fnd8662 ),   .sh7a0ce(gbc3317 ),   .vid0675(db198bd ),   .an237a8(twb9e7 ),   .nt27c94(nt27c94 ),   .tu69cae(tu69cae ),   .ww72b95(ww72b95 ),   .ba991bb( ba991bb ),
   .blc8ddb( blc8ddb ),   .qg46edf( qg46edf ),

   .mtbb7c7(mtbb7c7 ),
   .ykdbe3d(ykdbe3d ),
   .bydf1e9(bydf1e9 ),   .wjf8f4a(wjf8f4a ),   .dzc7a55(dzc7a55 ),   .zx6184c(bab439 ),   .rt61336(th5a1cb ),   .go4cdbf(jcd0e5e ),   .kf36fcb(co872f2 ),   .wl39791(wl39791 ),   .wwcbc8c(wwcbc8c ),   .al5e460(al5e460 ),   .gdbbc78(off2304 ),   .sj335e9(sj335e9),   .ic466bd(ic466bd),   .oh1234b(oh1234b),   .ec8d2e6(ec8d2e6)
   );
 always@* begin nt3df7d<=ou538[0];epa4d4b<=ou538[1];al600ea<=ou538[2];pf40c8e<=ou538[3];hq83de2<=ou538[4];fc1ef12<=ou538[5];gbf7893<=ou538[6];ukbc49c<=ou538[7];ipe24e0<=ou538[8];ep12704<=ou538[9];pu93824<=ou538[10];do9c123<=ou538[11];ose091b<=ou538[12];zm48d8<=ou538[13];wy246c3<=ou538[14];qv23619<=ou538[15];pu1b0cc<=ou538[16];fnd8662<=ou538[17];gbc3317<=ou538[18];db198bd<=ou538[19];twb9e7<=ou538[20];yz26a5c<={co1fa44>>1,ou538[21]};end
always@* begin swa7[2047]<=kdc3f48;swa7[2046]<=tu73699;swa7[2044]<=ip5e518;swa7[2040]<=ykde3c4;swa7[2032]<=xwf1e20;swa7[2017]<=gd8f103;swa7[1987]<=ea7881d;swa7[1927]<=mec40e9;swa7[1865]<=suf5e83;swa7[1806]<=tw20748;swa7[1682]<=tjaf419;swa7[1565]<=tj3a43;swa7[1317]<=sh7a0ce;swa7[1172]<=an237a8;swa7[1082]<=yz1d21e;swa7[1023]<=rst_n;swa7[932]<=xy1ebd0;swa7[586]<=vid0675;swa7[466]<=go43d7a;swa7[297]<=co1fa44[0];swa7[233]<=xw487af;swa7[116]<=dze90f5;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule































`timescale 1 ns / 100 ps
module sw884f0_ddr3_ip_inst (

   clk,
   rst_n,
   param_trp ,
   param_tckesr ,
   param_tzqoper ,
   param_twr,
   param_tzqs,
   param_tmrd,
   param_tpd,
   param_txpdll,
   param_tcke,
   hqa7af3,
   th644a6,
   tj22537,
   oh129be,
   xl94df5,
   ksa6fae,
   zz37d71,
   sjbeb8e,
   kdc3f48,
   ayf5998,
   qgf5c74,
   gd39a72,
   gdbbc78,
   

   je8c12e,
   al60972,
   ri4b94,
   ls25ca3,
   aa2e51a,
   ui728d0,
   fp94680,
   aaa3407,
   qi1a038,
   lqfbd6a      
   );
input                             clk;
input                             rst_n;
input [`ddr3_ip_inst_TRP_WIDTH-1:0]            param_trp ;
input [`ddr3_ip_inst_TCKESR_WIDTH-1:0]         param_tckesr ;
input [`ddr3_ip_inst_TZQOPER_WIDTH-1:0]        param_tzqoper ;
input [`ddr3_ip_inst_TZQS_WIDTH-1:0]           param_tzqs;
input [`ddr3_ip_inst_TMRD_WIDTH-1:0]           param_tmrd;
input [`ddr3_ip_inst_TPD_WIDTH-1:0]            param_tpd;
input [`ddr3_ip_inst_TWR_WIDTH-1:0]            param_twr;
input [`ddr3_ip_inst_TXPDLL_WIDTH-1:0]         param_txpdll;
input [`ddr3_ip_inst_TCKE_WIDTH-1:0]           param_tcke;
input                             hqa7af3;
input                             tj22537;
input                             oh129be;
input                             xl94df5;
input                             ksa6fae;
input                             zz37d71;
input                             sjbeb8e;
input                             kdc3f48;
input [`ddr3_ip_inst_RL_WIDTH-1:0]             ayf5998;
input                             qgf5c74;
input                             th644a6;
input                             gd39a72;
input                             gdbbc78;
output                            je8c12e;
output                            al60972;
output                            ri4b94;
output                            ls25ca3;
output                            aa2e51a;
output                            ui728d0;
output                            fp94680;
output                            aaa3407;
output                            qi1a038;
output                            lqfbd6a;
reg [`ddr3_ip_inst_TRP_WIDTH-1:0]              th6420f ;
reg [`ddr3_ip_inst_TCKESR_WIDTH-1:0]           of7a253 ;
reg [`ddr3_ip_inst_TZQOPER_WIDTH-1:0]          osd129d ;
reg [`ddr3_ip_inst_TZQS_WIDTH-1:0]             vk894e9;
reg [`ddr3_ip_inst_TMRD_WIDTH-1:0]             th4a74a;
reg [`ddr3_ip_inst_TPD_WIDTH-1:0]              ea53a57;
reg [`ddr3_ip_inst_TXPDLL_WIDTH-1:0]           sw9d2b9;
reg [`ddr3_ip_inst_TWR_WIDTH+`ddr3_ip_inst_RL_WIDTH+1:0]    hbe95c9;
reg [`ddr3_ip_inst_TWR_WIDTH+`ddr3_ip_inst_RL_WIDTH+1:0]    fn4ae4f;
reg [8:0]                         tu5727e;
reg [`ddr3_ip_inst_TRFC_WIDTH-1:0]             ecb93f2;
reg                               je8c12e;
wire                              al60972;
wire                              ri4b94;
reg                               ls25ca3;
reg                               aa2e51a;
reg                               ui728d0;
wire                              fp94680;
wire                              aaa3407;
wire                              qi1a038;
reg                               bleca43;
reg                               lqfbd6a;
reg [`ddr3_ip_inst_TRP_WIDTH - 1 : 0] jea7a85;
reg [`ddr3_ip_inst_TCKESR_WIDTH - 1 : 0] ps487ad;
reg [`ddr3_ip_inst_TZQOPER_WIDTH - 1 : 0] ui43d6a;
reg [`ddr3_ip_inst_TWR_WIDTH - 1 : 0] fc352e5;
reg [`ddr3_ip_inst_TZQS_WIDTH - 1 : 0] eaf5a83;
reg [`ddr3_ip_inst_TMRD_WIDTH - 1 : 0] jead419;
reg [`ddr3_ip_inst_TPD_WIDTH - 1 : 0] uv6a0cb;
reg [`ddr3_ip_inst_TXPDLL_WIDTH - 1 : 0] bl5065c;
reg [`ddr3_ip_inst_TCKE_WIDTH - 1 : 0] vk832e7;
reg bnc284;
reg mecb9df;
reg ww5cef8;
reg ipe77c0;
reg co3be04;
reg tudf020;
reg kdf8102;
reg fac0814;
reg epa4d4b;
reg [`ddr3_ip_inst_RL_WIDTH - 1 : 0] kd54550;
reg yz28d3;
reg qv95557;
reg ba307bc;
reg [`ddr3_ip_inst_TRP_WIDTH - 1 : 0] wl185b7;
reg [`ddr3_ip_inst_TCKESR_WIDTH - 1 : 0] qtd38c0;
reg [`ddr3_ip_inst_TZQOPER_WIDTH - 1 : 0] ls9c605;
reg [`ddr3_ip_inst_TZQS_WIDTH - 1 : 0] dze302b;
reg [`ddr3_ip_inst_TMRD_WIDTH - 1 : 0] qv1815e;
reg [`ddr3_ip_inst_TPD_WIDTH - 1 : 0] psc0af5;
reg [`ddr3_ip_inst_TXPDLL_WIDTH - 1 : 0] uk57ab;
reg [`ddr3_ip_inst_TWR_WIDTH + `ddr3_ip_inst_RL_WIDTH + 1 : 0] ec2bd58;
reg [`ddr3_ip_inst_TWR_WIDTH + `ddr3_ip_inst_RL_WIDTH + 1 : 0] gb5eac1;
reg [8 : 0] mef560d;
reg [`ddr3_ip_inst_TRFC_WIDTH - 1 : 0] sjab068;
reg jc58344;
reg [2047:0] swa7;
wire [33:0] ou538;

localparam kf29c0 = 34,do14e04 = 32'hfdffd30b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


assign      al60972  = (qtd38c0 == ps487ad -1);
assign      ri4b94 = ( mef560d[8] == 1'b1 );
assign      fp94680 = (psc0af5 == uv6a0cb -1) ;
assign      aaa3407 = (qv1815e == jead419 -1);
assign      qi1a038 = epa4d4b? ( uk57ab == vk832e7 -1) : ( jc58344 );



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      th6420f <=  'b0;   else if (je8c12e )      th6420f <=  'b0;   else if ( bnc284)      th6420f <=  wl185b7 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      je8c12e <=  1'b0;   else if (wl185b7 == (jea7a85 -2))      je8c12e <=  1'b1;   else      je8c12e <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      of7a253 <=  'b0;   else if (al60972 )      of7a253 <=  'b0;   else if ( ww5cef8)      of7a253 <=  qtd38c0 + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      osd129d <=  'b0;   else if (ls25ca3 )      osd129d <=  'b0;   else if ( co3be04)      osd129d <=  ls9c605 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ls25ca3 <=  1'b0;   else if (ls9c605 == (ui43d6a -2))      ls25ca3 <=  1'b1;   else      ls25ca3 <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      vk894e9 <=  'b0;   else if (aa2e51a )      vk894e9 <=  'b0;   else if ( tudf020)      vk894e9 <=  dze302b + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      aa2e51a <=  1'b0;   else if (dze302b == (eaf5a83 -2))      aa2e51a <=  1'b1;   else      aa2e51a <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ea53a57 <=  'b0;   else if (fp94680 )      ea53a57 <=  'b0;   else if ( fac0814)      ea53a57 <=  psc0af5 + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      th4a74a <=  'b0;   else if (aaa3407 )      th4a74a <=  'b0;   else if ( kdf8102)      th4a74a <=  qv1815e + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      sw9d2b9 <=  'b0;   else if (qi1a038 )      sw9d2b9 <=  'b0;   else if ( yz28d3)      sw9d2b9 <=  uk57ab + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      bleca43 <=  1'b0;   else if ( uk57ab == (bl5065c -2))      bleca43 <=  1'b1;   else      bleca43 <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      fn4ae4f <=  'b0;   else      fn4ae4f <=  kd54550 + fc352e5 +2 ;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      hbe95c9 <=  'b0;   else if ( ui728d0 )      hbe95c9 <=  'b0;   else if ( mecb9df )      hbe95c9 <=  ec2bd58 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)    ui728d0    <=  1'b0;   else if ( ec2bd58 == (gb5eac1 -2) )    ui728d0  <=  1'b1;   else    ui728d0    <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      tu5727e <=  'b0;   else if ( ri4b94 )      tu5727e <=  'b0;   else if ( ipe77c0 )      tu5727e <=  mef560d + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ecb93f2 <=  'b0;   else if ( lqfbd6a )      ecb93f2 <=  'b0;
   else if ( (ba307bc && (sjab068 == 'b0)) || qv95557 || |sjab068)      ecb93f2 <=  sjab068 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      lqfbd6a <=  1'b0;
   else if ( sjab068 == `ddr3_ip_inst_TRFC -1 )       lqfbd6a <=  1'b1;   else      lqfbd6a <=  1'b0;
end

always@* begin jea7a85<={param_trp>>1,ou538[0]};ps487ad<={param_tckesr>>1,ou538[1]};ui43d6a<={param_tzqoper>>1,ou538[2]};fc352e5<={param_twr>>1,ou538[3]};eaf5a83<={param_tzqs>>1,ou538[4]};jead419<={param_tmrd>>1,ou538[5]};uv6a0cb<={param_tpd>>1,ou538[6]};bl5065c<={param_txpdll>>1,ou538[7]};vk832e7<={param_tcke>>1,ou538[8]};bnc284<=ou538[9];mecb9df<=ou538[10];ww5cef8<=ou538[11];ipe77c0<=ou538[12];co3be04<=ou538[13];tudf020<=ou538[14];kdf8102<=ou538[15];fac0814<=ou538[16];epa4d4b<=ou538[17];kd54550<={ayf5998>>1,ou538[18]};yz28d3<=ou538[19];qv95557<=ou538[20];ba307bc<=ou538[21];wl185b7<={th6420f>>1,ou538[22]};qtd38c0<={of7a253>>1,ou538[23]};ls9c605<={osd129d>>1,ou538[24]};dze302b<={vk894e9>>1,ou538[25]};qv1815e<={th4a74a>>1,ou538[26]};psc0af5<={ea53a57>>1,ou538[27]};uk57ab<={sw9d2b9>>1,ou538[28]};ec2bd58<={hbe95c9>>1,ou538[29]};gb5eac1<={fn4ae4f>>1,ou538[30]};mef560d<={tu5727e>>1,ou538[31]};sjab068<={ecb93f2>>1,ou538[32]};jc58344<=ou538[33];end
always@* begin swa7[2047]<=param_tckesr[0];swa7[2046]<=param_tzqoper[0];swa7[2044]<=param_twr[0];swa7[2040]<=param_tzqs[0];swa7[2032]<=param_tmrd[0];swa7[2016]<=param_tpd[0];swa7[1985]<=param_txpdll[0];swa7[1922]<=param_tcke[0];swa7[1796]<=hqa7af3;swa7[1732]<=hbe95c9[0];swa7[1572]<=ecb93f2[0];swa7[1544]<=th644a6;swa7[1457]<=ea53a57[0];swa7[1417]<=fn4ae4f[0];swa7[1302]<=gdbbc78;swa7[1115]<=of7a253[0];swa7[1105]<=kdc3f48;swa7[1096]<=bleca43;swa7[1041]<=tj22537;swa7[1023]<=param_trp[0];swa7[866]<=sw9d2b9[0];swa7[786]<=tu5727e[0];swa7[728]<=th4a74a[0];swa7[651]<=gd39a72;swa7[557]<=th6420f[0];swa7[552]<=sjbeb8e;swa7[364]<=vk894e9[0];swa7[325]<=qgf5c74;swa7[276]<=zz37d71;swa7[182]<=osd129d[0];swa7[162]<=ayf5998[0];swa7[138]<=ksa6fae;swa7[69]<=xl94df5;swa7[34]<=oh129be;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule































`timescale 1 ns / 100 ps
module sh607d0_ddr3_ip_inst (

   clk,
   rst_n,
   ip5e518,
   ykde3c4,
   xwf1e20,			
   gd8f103,
   ea7881d,
   mec40e9,
   tw20748,
   tj3a43,
   yz1d21e,
   dze90f5,
   xw487af,			
   go43d7a,
   xy1ebd0,
   suf5e83,
   tjaf419,
   sh7a0ce,
   vid0675,      
   an237a8, 
   nt27c94,
   tu69cae,
   ww72b95,
   ba991bb ,			   
   blc8ddb ,
   qg46edf ,
    

   mtbb7c7,		 
   ykdbe3d,			 
   bydf1e9,
   wjf8f4a,
   dzc7a55, 
   zx6184c,
   rt61336,
   go4cdbf,
   kf36fcb,  
   wl39791,
   wwcbc8c,
   al5e460,
   gdbbc78,
   sj335e9,
   ic466bd,
   oh1234b,
   ec8d2e6 			 
   );
input          clk;
input          rst_n;
input          ip5e518;
input          ykde3c4;
input          xwf1e20;
input          gd8f103;
input          ea7881d;
input          mec40e9;
input          tw20748;
input          tj3a43;
input          yz1d21e;
input          dze90f5;
input          xw487af;
input          go43d7a;
input          xy1ebd0;
input          suf5e83;
input          tjaf419;
input          sh7a0ce;
input          vid0675;
input          an237a8;
input          nt27c94;
input          tu69cae;
input          ww72b95;
input          ba991bb;
input          blc8ddb ;
input          qg46edf;
output          gdbbc78;
output          mtbb7c7;
output          ykdbe3d;
output          bydf1e9;
output          wjf8f4a;
input           dzc7a55;
output          zx6184c;
output          rt61336;
output          go4cdbf;
output          kf36fcb;
output          wl39791;
output          wwcbc8c;
output          al5e460;
output          sj335e9;
output          ic466bd;
output          oh1234b;
output          ec8d2e6;

`define ddr3_ip_inst_IDLESP 0

`define ddr3_ip_inst_Q0SP 1

`define ddr3_ip_inst_Q1SP 2

`define ddr3_ip_inst_REFF 3

`define ddr3_ip_inst_SRE_SP 4

`define ddr3_ip_inst_SRX_SP 5

`define ddr3_ip_inst_PDE_SP 6

`define ddr3_ip_inst_PDX_SP 7

`define ddr3_ip_inst_MRS_SP 8         

`define ddr3_ip_inst_ZQCL_SP 9         

`define ddr3_ip_inst_ZQCS_SP 10         
reg [11:0]              su468b4, ou345a0;
reg                     oh1234b, bn16803;
reg                     ec8d2e6, vxa00fc;
reg                     gdbbc78, dmeb72c;
reg                     zx6184c, gd2b45;
reg                     rt61336, doad160;
reg                     go4cdbf, rt45818 ;
reg                     kf36fcb, sh6063d;
reg                     wl39791, qv18f6f;
reg                     wwcbc8c, db3dbe6;
reg                     al5e460, sh6f9bc;
reg                     ne7cde5, jpe6f2b;
reg                     rv3795f, ecbcafe;
reg                     me6dadb, me6d6d8;
reg                     th6b6c1, sh5b60e;
reg                     mtbb7c7, do893da, cm49ed2;
reg                     ykdbe3d;
reg                     bydf1e9;
reg                     wjf8f4a;
reg                     nrd23fa, lf91fd6;
reg                     mr4b8ba;
wire                    sj335e9;
wire                    ic466bd;
reg pf40c8e;
reg hq83de2;
reg fc1ef12;
reg gbf7893;
reg ukbc49c;
reg ipe24e0;
reg ep12704;
reg pu93824;
reg do9c123;
reg ose091b;
reg zm48d8;
reg wy246c3;
reg qv23619;
reg pu1b0cc;
reg fnd8662;
reg gbc3317;
reg db198bd;
reg twb9e7;
reg byda555;
reg wjcc2c4;
reg bl61624;
reg uid4b10;
reg jr945be;
reg pha5880;
reg nedf52c;
reg [11 : 0] tw1e834;
reg [11 : 0] nef41a3;
reg bna0d1a;
reg bn68d6;
reg lqee54a;
reg do3a105;
reg fad082b;
reg zz8415a;
reg tw20ad6;
reg mg56b2;
reg sw2b590;
reg ld5ac80;
reg czd6407;
reg zmb203c;
reg wl901e3;
reg ir80f1d;
reg nefea62;
reg cmf5312;
reg oua9890;
reg cm4c480;
reg shed93c;
reg jc6c9e4;
reg rt64f22;
reg zz27916;
reg zk79bbc;
reg [2047:0] swa7;
wire [49:0] ou538;

`define ddr3_ip_inst_IDLESP 0

`define ddr3_ip_inst_Q0SP 1

`define ddr3_ip_inst_Q1SP 2

`define ddr3_ip_inst_REFF 3

`define ddr3_ip_inst_SRE_SP 4

`define ddr3_ip_inst_SRX_SP 5

`define ddr3_ip_inst_PDE_SP 6

`define ddr3_ip_inst_PDX_SP 7

`define ddr3_ip_inst_MRS_SP 8         

`define ddr3_ip_inst_ZQCL_SP 9         

`define ddr3_ip_inst_ZQCS_SP 10         

localparam kf29c0 = 50,do14e04 = 32'hfdffca8b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`define ddr3_ip_inst_IDLESP 0


`define ddr3_ip_inst_Q0SP 1


`define ddr3_ip_inst_Q1SP 2


`define ddr3_ip_inst_REFF 3


`define ddr3_ip_inst_SRE_SP 4


`define ddr3_ip_inst_SRX_SP 5


`define ddr3_ip_inst_PDE_SP 6


`define ddr3_ip_inst_PDX_SP 7


`define ddr3_ip_inst_MRS_SP 8         


`define ddr3_ip_inst_ZQCL_SP 9         


`define ddr3_ip_inst_ZQCS_SP 10         











`define ddr3_ip_inst_IDLESP 0



`define ddr3_ip_inst_Q0SP 1



`define ddr3_ip_inst_Q1SP 2



`define ddr3_ip_inst_REFF 3



`define ddr3_ip_inst_SRE_SP 4



`define ddr3_ip_inst_SRX_SP 5



`define ddr3_ip_inst_PDE_SP 6



`define ddr3_ip_inst_PDX_SP 7



`define ddr3_ip_inst_MRS_SP 8         



`define ddr3_ip_inst_ZQCL_SP 9         



`define ddr3_ip_inst_ZQCS_SP 10         




assign  ic466bd = ( oh1234b && (nedf52c || wjf8f4a || bydf1e9  || shed93c))                        || (ykdbe3d && nefea62 );
assign  sj335e9 =( ec8d2e6 && (nedf52c || wjf8f4a || bydf1e9 || jc6c9e4))                      || (ykdbe3d && cmf5312 );




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       wjf8f4a          <=  1'b0 ;   else if ((go4cdbf || kf36fcb)&& pf40c8e)       wjf8f4a          <=  1'b1 ;   else       wjf8f4a          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       bydf1e9          <=  1'b0 ;   else if ((zx6184c || rt61336)&& pf40c8e)       bydf1e9          <=  1'b1 ;   else       bydf1e9          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       ykdbe3d          <=  1'b0 ;     else if (byda555 && pf40c8e)       ykdbe3d          <=  1'b1 ;   else       ykdbe3d          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       mtbb7c7          <=  1'b0 ;       do893da         <=  1'b0 ;       cm49ed2         <=  1'b0 ;   end   else if ((gdbbc78)&& pf40c8e) begin       mtbb7c7          <=  1'b1 ;       do893da         <=  1'b1 ;       cm49ed2         <=  1'b1 ;   end   else begin       mtbb7c7          <=  1'b0 ;       do893da         <=  1'b0 ;       cm49ed2         <=  1'b0 ;
   end
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       nrd23fa          <=  1'b0 ;   else if (( oh1234b && (gdbbc78 || wl39791 || zx6184c || rt61336 ||        go4cdbf || kf36fcb || wwcbc8c || al5e460 ))&& pf40c8e)       nrd23fa          <=  1'b1 ;   else       nrd23fa          <=  1'b0 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       lf91fd6          <=  1'b0 ;   else if (( ec8d2e6 && (gdbbc78 || wl39791 || zx6184c || rt61336 ||        go4cdbf || kf36fcb || wwcbc8c || al5e460 )) && pf40c8e)       lf91fd6          <=  1'b1 ;   else       lf91fd6          <=  1'b0 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       me6dadb          <=  1'b0 ;   else if (rt64f22)       me6dadb          <=  1'b1 ;   else if (zz27916 || !pf40c8e  || jr945be)       me6dadb          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       me6d6d8          <=  1'b0 ;   else if (zz27916)       me6d6d8          <=  1'b1 ;   else if (rt64f22 || !pf40c8e  || jr945be)       me6d6d8          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       th6b6c1          <=  1'b0 ;       sh5b60e          <=  1'b0 ;   end   else begin       th6b6c1          <=  nefea62 ;       sh5b60e          <=  cmf5312 ;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       mr4b8ba  <= 1'b0;   else if (zx6184c || go4cdbf || gdbbc78 || wl39791 || wwcbc8c || al5e460)       mr4b8ba  <= 1'b1;   else if (uid4b10 || pha5880 || jr945be || byda555 || nedf52c)       mr4b8ba  <= 1'b0;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      su468b4           <=  12'b0 ;      oh1234b              <=  1'b0;      ec8d2e6              <=  1'b0;      gdbbc78        <=  1'b0;      zx6184c   <=  1'b0;      rt61336   <=  1'b0;      go4cdbf     <=  1'b0;      kf36fcb     <=  1'b0;      wl39791             <=  1'b0;      wwcbc8c         <=  1'b0;      al5e460        <=  1'b0;      ne7cde5       <=  1'b0;      rv3795f        <=  1'b0;   end   else begin      su468b4           <=  nef41a3 ;      oh1234b              <=  bna0d1a;      ec8d2e6              <=  bn68d6;      gdbbc78        <=  lqee54a;      zx6184c    <=  do3a105;      rt61336    <=  fad082b;      go4cdbf      <=  zz8415a;      kf36fcb      <=  tw20ad6;      wl39791             <=  mg56b2;      wwcbc8c         <=  sw2b590;      al5e460        <=  ld5ac80;      ne7cde5       <=  zmb203c;      rv3795f        <=  ir80f1d ;   end
end





always @ (tw1e834 or do9c123  or db198bd  or nefea62 or cmf5312 or          hq83de2 or fc1ef12 or gbf7893 or ukbc49c or          ipe24e0 or ep12704 or pu93824  or twb9e7 or oua9890 or          ose091b or zm48d8 or wy246c3 or qv23619 or          pu1b0cc or fnd8662 or gbc3317 or wl901e3 or cm4c480 or          czd6407  or zk79bbc or oh1234b or ec8d2e6 or gdbbc78 or czd6407 or wl901e3 or           pf40c8e          ) begin
ou345a0 = 12'b0;
gd2b45 = 1'b0;
doad160 = 1'b0;
rt45818 = 1'b0;
sh6063d = 1'b0;
qv18f6f = 1'b0;
db3dbe6 = 1'b0;
sh6f9bc = 1'b0;
bn16803= oh1234b;
vxa00fc= ec8d2e6;
dmeb72c = gdbbc78;
jpe6f2b =czd6407;
ecbcafe = wl901e3;
case (1)        tw1e834[`ddr3_ip_inst_IDLESP] :  begin                        bn16803 = 1'b0;                        vxa00fc = 1'b0;                        dmeb72c = 1'b0;                        gd2b45 = 1'b0;                        doad160 = 1'b0;                        rt45818 = 1'b0;                        sh6063d = 1'b0;                        qv18f6f = 1'b0;                        db3dbe6 = 1'b0;                        sh6f9bc = 1'b0;                        jpe6f2b = 1'b0;                        ecbcafe = 1'b0;
                        if ((do9c123 || twb9e7) && !zk79bbc && pf40c8e) begin                            ou345a0[`ddr3_ip_inst_Q0SP] = 1'b1;                            bn16803 = 1'b1;                        end                        else if ((db198bd || twb9e7) && !zk79bbc && pf40c8e) begin                            ou345a0[`ddr3_ip_inst_Q1SP] = 1'b1;                            vxa00fc = 1'b1;                        end                        else ou345a0[`ddr3_ip_inst_IDLESP] = 1'b1;                end


   tw1e834[`ddr3_ip_inst_Q0SP] :  begin                   if (pf40c8e) begin                    if (db198bd && nefea62 && zk79bbc)                       begin                        ou345a0[`ddr3_ip_inst_Q1SP] = 1'b1;                        bn16803 = 1'b0;                        vxa00fc = 1'b1;                        jpe6f2b = 1'b0;                        ecbcafe = 1'b0;                    end                     else if ((nefea62 || oua9890 )&& !zk79bbc && !twb9e7 ) begin                        ou345a0[`ddr3_ip_inst_IDLESP] = 1'b1;                        bn16803 = 1'b0;                        vxa00fc = 1'b1;                    end                    else if (do9c123 ) begin                       if (hq83de2  && !zk79bbc) begin                        ou345a0[`ddr3_ip_inst_SRE_SP] = 1'b1;                        gd2b45 =1'b1;                        bn16803 = 1'b1;                       end                       else if (fc1ef12 && !czd6407) begin                        ou345a0[`ddr3_ip_inst_SRX_SP] = 1'b1;                        doad160 =1'b1;                        bn16803 = 1'b1;
                       end                       else if (gbf7893  && !zk79bbc) begin                        ou345a0[`ddr3_ip_inst_PDE_SP] = 1'b1;                        rt45818 =1'b1;                        bn16803 = 1'b1;                       end                       else if (ukbc49c && !wl901e3) begin                        ou345a0[`ddr3_ip_inst_PDX_SP] = 1'b1;                        sh6063d =1'b1;                        bn16803 = 1'b1;                       end                       else if (ipe24e0  && !zk79bbc) begin                        ou345a0[`ddr3_ip_inst_MRS_SP] = 1'b1;                        qv18f6f =1'b1;                        bn16803 = 1'b1;                       end                       else if (ep12704  && !zk79bbc) begin                        ou345a0[`ddr3_ip_inst_ZQCL_SP] = 1'b1;                        db3dbe6 =1'b1;                        bn16803 = 1'b1;                       end                       else if (pu93824  && !zk79bbc) begin                        ou345a0[`ddr3_ip_inst_ZQCS_SP] = 1'b1;                        sh6f9bc =1'b1;                        bn16803 = 1'b1;                       end                       else if (twb9e7  && !zk79bbc) begin                        ou345a0[`ddr3_ip_inst_REFF] = 1'b1;                        dmeb72c =1'b1;                        bn16803 = 1'b1;                       end                       else ou345a0[`ddr3_ip_inst_Q0SP] = 1'b1;                    end                      else if (twb9e7  && !zk79bbc) begin                      ou345a0[`ddr3_ip_inst_REFF] = 1'b1;                      dmeb72c =1'b1;                      bn16803 = 1'b1;                    end                    else if (!twb9e7  && !zk79bbc) begin                          ou345a0[`ddr3_ip_inst_Q0SP] = 1'b1;                    end                    else begin                          ou345a0[`ddr3_ip_inst_Q0SP] = 1'b1;                    end                 end 
                 else  begin                        ou345a0[`ddr3_ip_inst_IDLESP] = 1'b1;                        jpe6f2b = 1'b0;                        ecbcafe = 1'b0;                 end                end
 tw1e834[`ddr3_ip_inst_SRE_SP] :  begin                  if (oh1234b) begin                     ou345a0[`ddr3_ip_inst_Q0SP] = 1'b1;                     gd2b45 = 1'b0;                  end                  else  begin                     ou345a0[`ddr3_ip_inst_Q1SP] = 1'b1;                     gd2b45 = 1'b0;                 end                end
tw1e834[`ddr3_ip_inst_SRX_SP] :  begin                  if (oh1234b) begin                     ou345a0[`ddr3_ip_inst_Q0SP] = 1'b1;                     doad160 = 1'b0;                     jpe6f2b = 1'b1;                  end                  else  begin                     ou345a0[`ddr3_ip_inst_Q1SP] = 1'b1;                     doad160 = 1'b0;                     jpe6f2b = 1'b1;                 end                end
 tw1e834[`ddr3_ip_inst_PDE_SP] :  begin                  if (oh1234b) begin                     ou345a0[`ddr3_ip_inst_Q0SP] = 1'b1;                     rt45818 = 1'b0;                  end                  else  begin                     ou345a0[`ddr3_ip_inst_Q1SP] = 1'b1;                     rt45818 = 1'b0;                 end                end
 tw1e834[`ddr3_ip_inst_PDX_SP] :  begin                  if (oh1234b) begin                     ou345a0[`ddr3_ip_inst_Q0SP] = 1'b1;                     sh6063d = 1'b0;                     ecbcafe = 1'b1;                  end                  else  begin                     ou345a0[`ddr3_ip_inst_Q1SP] = 1'b1;                     sh6063d = 1'b0;                     ecbcafe = 1'b1;                 end                end
 tw1e834[`ddr3_ip_inst_MRS_SP] :  begin                  if (oh1234b) begin                     ou345a0[`ddr3_ip_inst_Q0SP] = 1'b1;                     qv18f6f = 1'b0;                  end                  else  begin                     ou345a0[`ddr3_ip_inst_Q1SP] = 1'b1;                     qv18f6f = 1'b0;                 end                end
 tw1e834[`ddr3_ip_inst_ZQCL_SP] :  begin                  if (oh1234b) begin                     ou345a0[`ddr3_ip_inst_Q0SP] = 1'b1;                     db3dbe6 = 1'b0;                  end                  else  begin                     ou345a0[`ddr3_ip_inst_Q1SP] = 1'b1;                     db3dbe6 = 1'b0;                 end                end
  tw1e834[`ddr3_ip_inst_ZQCS_SP] :  begin                  if (oh1234b) begin                     ou345a0[`ddr3_ip_inst_Q0SP] = 1'b1;                     sh6f9bc = 1'b0;                  end                  else  begin                     ou345a0[`ddr3_ip_inst_Q1SP] = 1'b1;                     sh6f9bc = 1'b0;                 end                end  tw1e834[`ddr3_ip_inst_REFF] :  begin                  if (oh1234b) begin                     ou345a0[`ddr3_ip_inst_Q0SP] = 1'b1;                     dmeb72c = 1'b0;                  end                  else  begin                     ou345a0[`ddr3_ip_inst_Q1SP] = 1'b1;                     dmeb72c = 1'b0;                 end                end


   tw1e834[`ddr3_ip_inst_Q1SP] :  begin                   if (pf40c8e) begin                     if (do9c123 && cmf5312 && zk79bbc)                       begin                        ou345a0[`ddr3_ip_inst_Q0SP] = 1'b1;                        bn16803 = 1'b1;                        vxa00fc = 1'b0;                        jpe6f2b = 1'b0;                        ecbcafe = 1'b0;                    end                     else if ((cmf5312 ||cm4c480 )&& !zk79bbc && !twb9e7) begin                        ou345a0[`ddr3_ip_inst_IDLESP] = 1'b1;                        bn16803 = 1'b0;                        vxa00fc = 1'b1;                    end                    else if (db198bd ) begin                       if (ose091b  && !zk79bbc) begin                        ou345a0[`ddr3_ip_inst_SRE_SP] = 1'b1;                        gd2b45 =1'b1;                        vxa00fc = 1'b1;                       end                       else if (zm48d8 && !czd6407) begin                        ou345a0[`ddr3_ip_inst_SRX_SP] = 1'b1;                        doad160 =1'b1;                        vxa00fc = 1'b1;                       end                       else if (wy246c3  && !zk79bbc) begin                        ou345a0[`ddr3_ip_inst_PDE_SP] = 1'b1;                        rt45818 =1'b1;                        vxa00fc = 1'b1;                       end                       else if (qv23619 && !wl901e3) begin                        ou345a0[`ddr3_ip_inst_PDX_SP] = 1'b1;                        sh6063d =1'b1;                        vxa00fc = 1'b1;                       end                       else if (pu1b0cc  && !zk79bbc) begin                        ou345a0[`ddr3_ip_inst_MRS_SP] = 1'b1;                        qv18f6f =1'b1;                        vxa00fc = 1'b1;                       end                       else if (fnd8662  && !zk79bbc) begin                        ou345a0[`ddr3_ip_inst_ZQCL_SP] = 1'b1;                        db3dbe6 =1'b1;                        vxa00fc = 1'b1;                       end                       else if (gbc3317  && !zk79bbc) begin                        ou345a0[`ddr3_ip_inst_ZQCS_SP] = 1'b1;                        sh6f9bc =1'b1;                        vxa00fc = 1'b1;                       end                        else if (twb9e7  && !zk79bbc) begin                        ou345a0[`ddr3_ip_inst_REFF] = 1'b1;                        dmeb72c =1'b1;                        vxa00fc = 1'b1;                       end                       else ou345a0[`ddr3_ip_inst_Q1SP] = 1'b1;                    end                    else if (twb9e7  && !zk79bbc) begin                        ou345a0[`ddr3_ip_inst_REFF] = 1'b1;                        dmeb72c =1'b1;                        vxa00fc = 1'b1;                    end                    else if (!twb9e7  && !zk79bbc) begin                          ou345a0[`ddr3_ip_inst_Q1SP] = 1'b1;                    end                    else ou345a0[`ddr3_ip_inst_Q1SP] = 1'b1;                 end                 else begin                        ou345a0[`ddr3_ip_inst_IDLESP] = 1'b1;                        jpe6f2b = 1'b0;                        ecbcafe = 1'b0;                     end                end   default : begin                   ou345a0[`ddr3_ip_inst_IDLESP] = 1'b1;             end
endcase
end
always@* begin pf40c8e<=ou538[0];hq83de2<=ou538[1];fc1ef12<=ou538[2];gbf7893<=ou538[3];ukbc49c<=ou538[4];ipe24e0<=ou538[5];ep12704<=ou538[6];pu93824<=ou538[7];do9c123<=ou538[8];ose091b<=ou538[9];zm48d8<=ou538[10];wy246c3<=ou538[11];qv23619<=ou538[12];pu1b0cc<=ou538[13];fnd8662<=ou538[14];gbc3317<=ou538[15];db198bd<=ou538[16];twb9e7<=ou538[17];byda555<=ou538[18];wjcc2c4<=ou538[19];bl61624<=ou538[20];uid4b10<=ou538[21];jr945be<=ou538[22];pha5880<=ou538[23];nedf52c<=ou538[24];tw1e834<={su468b4>>1,ou538[25]};nef41a3<={ou345a0>>1,ou538[26]};bna0d1a<=ou538[27];bn68d6<=ou538[28];lqee54a<=ou538[29];do3a105<=ou538[30];fad082b<=ou538[31];zz8415a<=ou538[32];tw20ad6<=ou538[33];mg56b2<=ou538[34];sw2b590<=ou538[35];ld5ac80<=ou538[36];czd6407<=ou538[37];zmb203c<=ou538[38];wl901e3<=ou538[39];ir80f1d<=ou538[40];nefea62<=ou538[41];cmf5312<=ou538[42];oua9890<=ou538[43];cm4c480<=ou538[44];shed93c<=ou538[45];jc6c9e4<=ou538[46];rt64f22<=ou538[47];zz27916<=ou538[48];zk79bbc<=ou538[49];end
always@* begin swa7[2047]<=ykde3c4;swa7[2046]<=xwf1e20;swa7[2044]<=gd8f103;swa7[2040]<=ea7881d;swa7[2032]<=mec40e9;swa7[2017]<=tw20748;swa7[1987]<=tj3a43;swa7[1926]<=yz1d21e;swa7[1805]<=db3dbe6;swa7[1804]<=dze90f5;swa7[1803]<=qg46edf;swa7[1761]<=rt45818;swa7[1668]<=me6d6d8;swa7[1562]<=sh6f9bc;swa7[1560]<=xw487af;swa7[1558]<=dzc7a55;swa7[1550]<=vid0675;swa7[1475]<=sh6063d;swa7[1464]<=gd2b45;swa7[1288]<=th6b6c1;swa7[1076]<=ne7cde5;swa7[1072]<=go43d7a;swa7[1069]<=su468b4[0];swa7[1056]<=do893da;swa7[1052]<=an237a8;swa7[1023]<=ip5e518;swa7[902]<=qv18f6f;swa7[901]<=blc8ddb;swa7[880]<=doad160;swa7[834]<=me6dadb;swa7[775]<=sh7a0ce;swa7[732]<=dmeb72c;swa7[528]<=sh5b60e;swa7[514]<=mr4b8ba;swa7[450]<=ba991bb;swa7[417]<=ecbcafe;swa7[387]<=tjaf419;swa7[366]<=vxa00fc;swa7[257]<=lf91fd6;swa7[225]<=ww72b95;swa7[208]<=rv3795f;swa7[193]<=suf5e83;swa7[183]<=bn16803;swa7[128]<=nrd23fa;swa7[112]<=tu69cae;swa7[104]<=jpe6f2b;swa7[96]<=xy1ebd0;swa7[91]<=ou345a0[0];swa7[64]<=cm49ed2;swa7[56]<=nt27c94;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule   





























`timescale 1 ns / 100 ps
module ddr3_sdram_core_ddr3_ip_inst (

  clk,
  rst_n,
  param_trcd,
  param_trp,
  param_twr,
  param_tras,
  param_trc,
  param_trrd,
  param_trtp,
  param_twtr,
  param_tckesr,
  param_tzqoper,
  param_tzqs,
  param_tmrd,
  param_tpd,
  param_txpdll,
  param_tcke,
  param_txpr,
  param_tmod,
  param_tzqinit,
  addr_init_0,
  addr_init_1,
  addr_init_2,
  addr_init_3,
  wl_phase_dly_cnt,

  phy_init_act, 
  wl_act,
  wl_done,                             
 

  init_start,
  cmd,
  addr,
  cmd_burst_cnt,
  cmd_valid,
  ofly_burst_len,
  
`ifdef ddr3_ip_inst_EXT_AUTO_REF
  ext_auto_ref,                      
  ext_auto_ref_ack,                   
`endif 
  

  trefi,                           
  ar_burst_cnt, 
  

  datain,
  dmsel,
  DataRdy2Data,
  

  pio_read,
  cal_bc4,
  ddr_cs_n,
  ddr_ras_n,
  ddr_cas_n,
  ddr_we_n,
  ddr_ba,
  ddr_addr,
  ddr_cke,
  datain_valid, 


  cmd_rdy,                             
  init_done,   
  

  ddr_dq_out,
  ddr_wr_lat_odd,
  dqs_out,
  dqs_out_en,
  dqs_out_en_erly,
  dq_out_en,
  ddr_dqm,
  
  mem_odt_out,
  cntl_odt_out ,
  rd_odd,   
`ifdef ddr3_ip_inst_DIR_SREF_EXT
  sref_ent_cmd,
  sref_ext_cmd,
`endif
  mirror_on

)
 ;
input                           rst_n;
input                           clk;
input [`ddr3_ip_inst_TRCD_WIDTH-1:0]         param_trcd;
input [`ddr3_ip_inst_TRP_WIDTH-1:0]          param_trp;
input [`ddr3_ip_inst_TWR_WIDTH-1:0]          param_twr;
input [`ddr3_ip_inst_TRAS_WIDTH-1:0]         param_tras;
input [`ddr3_ip_inst_TRC_WIDTH-1:0]          param_trc;
input [`ddr3_ip_inst_TRRD_WIDTH-1:0]         param_trrd;
input [`ddr3_ip_inst_TRTP_WIDTH-1:0]         param_trtp;
input [`ddr3_ip_inst_TWTR_WIDTH-1:0]         param_twtr;
input [`ddr3_ip_inst_TCKESR_WIDTH-1:0]       param_tckesr ;
input [`ddr3_ip_inst_TZQOPER_WIDTH-1:0]      param_tzqoper ;
input [`ddr3_ip_inst_TZQS_WIDTH-1:0]         param_tzqs;
input [`ddr3_ip_inst_TMRD_WIDTH-1:0]         param_tmrd;
input [`ddr3_ip_inst_TPD_WIDTH-1:0]          param_tpd;
input [`ddr3_ip_inst_TXPDLL_WIDTH-1:0]       param_txpdll;
input [`ddr3_ip_inst_TCKE_WIDTH-1:0]         param_tcke;
input [`ddr3_ip_inst_TXPR_WIDTH-1:0]         param_txpr;
input [`ddr3_ip_inst_TMOD_WIDTH-1:0]         param_tmod;
input [`ddr3_ip_inst_TZQINIT_WIDTH-1:0]      param_tzqinit;
input [15:0]                    addr_init_0;
input [15:0]                    addr_init_1;
input [15:0]                    addr_init_2;
input [15:0]                    addr_init_3;
input [7:0]                     wl_phase_dly_cnt;
input                           init_start;
input                           phy_init_act;
input                           wl_act;
input                           wl_done;
input [`ddr3_ip_inst_DSIZE -1:0]             datain;
input [`ddr3_ip_inst_USER_DM -1:0]           dmsel;
input [1:0]        DataRdy2Data;
input [3:0]                     cmd;
input [`ddr3_ip_inst_ADDR_WIDTH-1:0]         addr;
input [4:0]                     cmd_burst_cnt;
input                           cmd_valid;
input                           ofly_burst_len;
input [15:0]                    trefi;
input [2:0]                     ar_burst_cnt;
output                          pio_read;
output                          cal_bc4;
output [`ddr3_ip_inst_CS_WIDTH -1:0]         ddr_cs_n;
output                          ddr_ras_n;
output                          ddr_cas_n;
output                          ddr_we_n;
output [`ddr3_ip_inst_BANK_WIDTH-1:0]        ddr_ba;

`ifdef ddr3_ip_inst_ROW_WIDTH_12
output [`ddr3_ip_inst_ROW_WIDTH:0]           ddr_addr ;

`else
output [`ddr3_ip_inst_ROW_WIDTH-1:0]         ddr_addr ;

`endif
output                          datain_valid;
output [`ddr3_ip_inst_DSIZE -1:0]            ddr_dq_out;
output                          ddr_wr_lat_odd;
output [`ddr3_ip_inst_DQS_WIDTH-1:0]         dqs_out;
output                          dqs_out_en;
output                          dqs_out_en_erly;
output                          dq_out_en;
output [`ddr3_ip_inst_USER_DM -1:0]          ddr_dqm;
output [`ddr3_ip_inst_CKE_WIDTH -1:0]        ddr_cke;

`ifdef ddr3_ip_inst_EXT_AUTO_REF
input                           ext_auto_ref;
output                          ext_auto_ref_ack;

`endif
output                          cmd_rdy;
output                          init_done;
output [`ddr3_ip_inst_CS_WIDTH-1 : 0]        mem_odt_out;
output                          cntl_odt_out;
output                          rd_odd;
output                          mirror_on;

`ifdef ddr3_ip_inst_DIR_SREF_EXT
output                          sref_ent_cmd;
output                          sref_ext_cmd;

`endif
wire [`ddr3_ip_inst_CKE_WIDTH -1:0]         ddr_cke;
wire                           datain_valid;
wire                           ec5a0a;
reg                            yx7a37a;
wire [4:0]                     ntb518e;
wire [`ddr3_ip_inst_COL_WIDTH -1:0]         me463b2;
wire [`ddr3_ip_inst_BANK_WIDTH -1 :0]       wy31d91;
wire [`ddr3_ip_inst_ROW_WIDTH -1:0]         zz8ec89;
wire [4:0]                     lqfbafa;
wire [`ddr3_ip_inst_COL_WIDTH -1:0]         hoebe97;
wire [`ddr3_ip_inst_BANK_WIDTH -1 :0]       fn5f4bb;
wire [`ddr3_ip_inst_ROW_WIDTH -1:0]         ayfa5de;
wire [`ddr3_ip_inst_AL_WIDTH-1:0]           sude125;
wire [`ddr3_ip_inst_CL_WIDTH-1:0]           ayf0928;
wire                           fp84941;
wire                           fc25078;
wire [`ddr3_ip_inst_CWL_WIDTH-1:0]          sw24a0f;
wire [`ddr3_ip_inst_DQS_WIDTH-1:0]          xwd5872;
wire [15:0]                    mg92399;
wire [`ddr3_ip_inst_TRCD_WIDTH-1:0]         param_trcd;
wire [`ddr3_ip_inst_TRP_WIDTH-1:0]          param_trp;
wire [`ddr3_ip_inst_TWR_WIDTH-1:0]          param_twr;
wire [`ddr3_ip_inst_TRAS_WIDTH-1:0]         param_tras;
wire [`ddr3_ip_inst_TRC_WIDTH-1:0]          param_trc;
wire [`ddr3_ip_inst_TRTP_WIDTH-1:0]         param_trtp;
wire [`ddr3_ip_inst_TWTR_WIDTH-1:0]         param_twtr;
wire [`ddr3_ip_inst_TCKESR_WIDTH-1:0]       param_tckesr ;
wire [`ddr3_ip_inst_TZQOPER_WIDTH-1:0]      param_tzqoper ;
wire [`ddr3_ip_inst_TZQS_WIDTH-1:0]         param_tzqs;
wire [`ddr3_ip_inst_TMRD_WIDTH-1:0]         param_tmrd;
wire [`ddr3_ip_inst_TPD_WIDTH-1:0]          param_tpd;
wire [`ddr3_ip_inst_TXPDLL_WIDTH-1:0]       param_txpdll;
wire [`ddr3_ip_inst_TCKE_WIDTH-1:0]         param_tcke;
wire [`ddr3_ip_inst_TXPR_WIDTH-1:0]         param_txpr;
wire [`ddr3_ip_inst_TMOD_WIDTH-1:0]         param_tmod;
wire [`ddr3_ip_inst_TZQINIT_WIDTH-1:0]      param_tzqinit;
wire [15:0]                    addr_init_0;
wire [15:0]                    addr_init_1;
wire [15:0]                    addr_init_2;
wire [15:0]                    addr_init_3;
wire [`ddr3_ip_inst_DSIZE -1:0]             datain;
wire [`ddr3_ip_inst_USER_DM -1:0]           dmsel;
wire [1:0]               DataRdy2Data;
wire [`ddr3_ip_inst_CS_WIDTH -1:0]          ddr_cs_n;
wire [`ddr3_ip_inst_CS_WIDTH -1:0]          lqf1846;
wire [`ddr3_ip_inst_CS_WIDTH -1:0]          zma8c76;
wire [`ddr3_ip_inst_CS_WIDTH -1:0]          pfdd7d2;
wire [`ddr3_ip_inst_BANK_WIDTH-1:0]         ddr_ba;

`ifdef ddr3_ip_inst_ROW_WIDTH_12
wire [`ddr3_ip_inst_ROW_WIDTH:0]          ddr_addr ;

`else
wire [`ddr3_ip_inst_ROW_WIDTH-1:0]          ddr_addr ;

`endif
wire [`ddr3_ip_inst_DSIZE -1:0]             ddr_dq_out;
wire [`ddr3_ip_inst_DQS_WIDTH-1:0]          dqs_out;
wire [`ddr3_ip_inst_USER_DM -1:0]           ddr_dqm;
wire                           ddr_wr_lat_odd;
wire                           cal_bc4;
wire [3:0]                     cmd;
wire [`ddr3_ip_inst_ADDR_WIDTH-1:0]         addr;
wire [4:0]                     cmd_burst_cnt;
wire [15:0]                    trefi;
wire [2:0]                     ar_burst_cnt;
wire [2:0]                     czc6e18;
wire [3:0]                     co1fa44;
wire                           dz61c91;
wire                           xy83af4;
wire [`ddr3_ip_inst_CS_WIDTH-1:0]           ep1d7a2;
wire [`ddr3_ip_inst_CS_WIDTH-1:0]           xwebd15;
wire                           je3ab0e;
wire   [`ddr3_ip_inst_CS_WIDTH-1 : 0]       mem_odt_out;
wire                           cntl_odt_out;
wire                           ic466bd;
wire                           sj335e9;
wire                           kdc3f48;
wire                           qtd99b1;
wire                           bn376f8;
reg                            init_done;
wire                           pio_read;
wire                           db27666;
wire                           ou3b336;
wire                           nec05b3;
wire [2:0]                     xw7644e;
wire [2:0]                     jpd2ef1;
wire                           qt6f598;
wire                           uv7acc4;
wire                           mirror_on;

`ifdef ddr3_ip_inst_DIR_SREF_EXT
wire                           sref_ent_cmd;
wire                           sref_ext_cmd;

`endif
wire                           db9e308;
wire                           ng8c233;
reg  [4:0]                     lq4d0a5;
wire                           dq_out_en;
wire                           ho42951;

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`endif

`ifdef ddr3_ip_inst_EXT_AUTO_REF

`endif
reg [`ddr3_ip_inst_TRRD_WIDTH - 1 : 0] mga972a;
reg [7 : 0] zza5452;
reg al4bd22;
reg aye5460;
reg vk8c054;
reg pha0ca2;
reg faf4194;
reg jr6516;
reg psd5ac6;
reg zxecc51;
reg [4 : 0] gqac447;
reg [`ddr3_ip_inst_COL_WIDTH - 1 : 0] vk111c8;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] ym88e43;
reg [`ddr3_ip_inst_ROW_WIDTH - 1 : 0] tu47219;
reg [4 : 0] rte63c0;
reg [`ddr3_ip_inst_COL_WIDTH - 1 : 0] yz8f031;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] su7818d;
reg [`ddr3_ip_inst_ROW_WIDTH - 1 : 0] rgc0c68;
reg [`ddr3_ip_inst_AL_WIDTH - 1 : 0] mrc3d06;
reg [`ddr3_ip_inst_CL_WIDTH - 1 : 0] ribde40;
reg epa1ade;
reg yzd6f4;
reg [`ddr3_ip_inst_CWL_WIDTH - 1 : 0] ne79018;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] db8b1f0;
reg [15 : 0] mg1ff3a;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] gdb172d;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] ui62239;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] wy31e06;
reg [2 : 0] ice5b30;
reg [3 : 0] yz26a5c;
reg vk2a301;
reg ps66032;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] hq30192;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] ep80c92;
reg su5ca8c;
reg mtbeefa;
reg wjf77d4;
reg epa4d4b;
reg ux95fc1;
reg bn328b7;
reg ux39a62;
reg nrcd315;
reg ykc19ec;
reg [2 : 0] ym2bbd7;
reg [2 : 0] zz84c1e;
reg fp3d879;
reg xjec3cf;
reg fa698ae;
reg ic4c572;
reg [4 : 0] rg79ff1;
reg necff8b;
reg [2047:0] swa7;
wire [50:0] ou538;

`ifdef ddr3_ip_inst_ROW_WIDTH_12

`else

`endif

`ifdef ddr3_ip_inst_EXT_AUTO_REF

`endif

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`endif

`ifdef ddr3_ip_inst_ROW_WIDTH_12

`else

`endif

`ifdef ddr3_ip_inst_DIR_SREF_EXT

`endif



`ifdef ddr3_ip_inst_DIR_SREF_EXT

`endif


`ifdef ddr3_ip_inst_EXT_AUTO_REF

`endif


localparam kf29c0 = 51,do14e04 = 32'hfdffe30b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`ifdef ddr3_ip_inst_ROW_WIDTH_12


`else


`endif


`ifdef ddr3_ip_inst_EXT_AUTO_REF


`endif


`ifdef ddr3_ip_inst_DIR_SREF_EXT


`endif


`ifdef ddr3_ip_inst_ROW_WIDTH_12


`else


`endif


`ifdef ddr3_ip_inst_DIR_SREF_EXT


`endif


`ifdef ddr3_ip_inst_DIR_SREF_EXT


`endif


`ifdef ddr3_ip_inst_EXT_AUTO_REF


`endif


`ifdef ddr3_ip_inst_ROW_WIDTH_12



`else



`endif



`ifdef ddr3_ip_inst_EXT_AUTO_REF



`endif




`ifdef ddr3_ip_inst_DIR_SREF_EXT



`endif





`ifdef ddr3_ip_inst_ROW_WIDTH_12



`else



`endif



`ifdef ddr3_ip_inst_DIR_SREF_EXT



`endif

assign dq_out_en = ~necff8b;
assign datain_valid = psd5ac6;

always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      init_done            <= 1'b0;   end   else begin      init_done            <= bn328b7;   end
end

zma2a8e_ddr3_ip_inst tj9bc81(
    .clk(clk ) ,
    .rst_n(rst_n ),    .sjab784(sjab784 ),    .kd5bc24(kd5bc24 ),    .eaceade(eaceade ),    .mr756f0(mr756f0 ),    .zm833ab(zm833ab ),    .zz19d5b(zz19d5b ),    .doa7687(doa7687),    .ou3b43a(ou3b43a),    .fpbfbde(fpbfbde ),    .tj9139b(tj9139b ),
    .jr8e646(jr8e646 ),    .dm73237(dm73237 ),    .dmd0e8a(yz26a5c),    .psda1d1(gdbbc78),    .mtbb7c7(mtbb7c7),    .blc8ddb(blc8ddb),
    .uief7b5(uief7b5 ),    .en4e6fb(en4e6fb ),    .kqded46(kqded46 ),    .vx9beeb(vx9beeb ),    .bl7bda8(bl7bda8 ),    .ps737dd(ps737dd ),    .shfdef6(shfdef6),    .je89cdf(je89cdf),    .fc357ec(fc357ec ),    .ohabf62(ohabf62)
);

cz419bf_ddr3_ip_inst bn84919(       .clk                 (clk ),    .rst_n              (rst_n ),    .phy_init_act       (al4bd22 ),
      .fpbfbde          (fpbfbde ),
   .shfdef6         (shfdef6 ),
   .uief7b5            (uief7b5 ),
   .bl7bda8             (bl7bda8 ),
   .kqded46              (kqded46 ),
   .vvf6a31          (vvf6a31 ),
   .ntb518e         (gqac447 ),
   .zma8c76              (ui62239 ),
   .me463b2            (vk111c8 ),   .wy31d91             (ym88e43 ),   .zz8ec89            (tu47219 ),
   .xw7644e             (ym2bbd7),   .fcb2273         (fcb2273),
      .tj9139b          (tj9139b),
   .je89cdf         (je89cdf ),
   .en4e6fb            (en4e6fb ),
   .ps737dd             (ps737dd ),
   .vx9beeb              (vx9beeb ),
   .dmdf75f          (dmdf75f ),
   .lqfbafa         (rte63c0 ),
   .pfdd7d2              (wy31e06 ),
   .hoebe97            (yz8f031 ),   .fn5f4bb             (su7818d ),   .ayfa5de            (rgc0c68 ),   .jpd2ef1             (zz84c1e),   .gq9778f         (gq9778f),   .gdbbc78            (gdbbc78 ),   .ykde3c4      (ykde3c4 ),   .xwf1e20      (xwf1e20 ),
   .gd8f103        (gd8f103 ),   .ea7881d        (ea7881d ),   .mec40e9               (mec40e9 ),   .tw20748           (tw20748 ),   .tj3a43          (tj3a43 ),   .yz1d21e        (yz1d21e ),   .dze90f5      (dze90f5 ),   .xw487af      (xw487af ),
   .go43d7a        (go43d7a ),   .xy1ebd0        (xy1ebd0 ),   .suf5e83               (suf5e83 ),   .tjaf419           (tjaf419 ),   .sh7a0ce          (sh7a0ce ),   .vid0675        (vid0675 ),   .zm833ab         (zm833ab ),   .zz19d5b         (zz19d5b ),   .eaceade          (eaceade ),   .mr756f0          (mr756f0 ),   .sjab784        (sjab784 ),   .kd5bc24        (kd5bc24 ),   .sude125                  (mrc3d06 ),   .ayf0928                  (ribde40 ),   .fp84941              (epa1ade),   .sw24a0f                 (ne79018 ),   .fc25078             (yzd6f4 ),   .lf283c3               (ipd604d ),   .kd41e1f               (cb9ac09 ),   .gqf0fd               (jc7cd89 ),   .ea787e9               (ykef9b1 ),   .kdc3f48                (epa4d4b ),   .addr_init_0         (addr_init_0 ),   .addr_init_1         (addr_init_1 ),   .addr_init_2         (addr_init_2 ),   .addr_init_3         (addr_init_3 ),   .czc6e18            (ice5b30 ),   .co1fa44      (yz26a5c  ),   .param_trcd          (param_trcd ),   .param_trp           (param_trp ),   .param_twr           (param_twr ),   .param_tras          (param_tras ),   .param_trc           (param_trc ),   .param_trrd          (mga972a ),   .param_trtp          (param_trtp ),   .param_twtr          (param_twtr ),   .param_tckesr        (param_tckesr ) ,   .param_tzqoper       (param_tzqoper ) ,   .param_tzqs          (param_tzqs ),   .param_tmrd          (param_tmrd ),   .param_tpd           (param_tpd ),   .param_txpdll        (param_txpdll ),   .param_tcke          (param_tcke ),   .param_txpr          (param_txpr ),   .param_tmod          (param_tmod ),   .param_tzqinit       (param_tzqinit ) ,

   .datain              (datain ),   .dmsel               (dmsel ),   .DataRdy2Data        (DataRdy2Data ),
   .je3ab0e         (su5ca8c ),   .xwd5872          (db8b1f0 ),   .wl_act              (aye5460 ),   .dz61c91          (vk2a301 ),   .pue48e        (ps66032 ),   .yk72473               (hq30192 ),   .mg92399         (mg1ff3a ),   .wl_done             (vk8c054 ),

   .jr8e646           (jr8e646 ),
   .dm73237           (dm73237 ),   .ba991bb           (ba991bb ),
   .blc8ddb       (blc8ddb ),   .qg46edf           (qg46edf),   .bn376f8       (bn376f8 ),   .mtbb7c7       (mtbb7c7 ),
   .ykdbe3d            (ykdbe3d ),
   .bydf1e9           (bydf1e9 ),   .wjf8f4a         ( ),   .dzc7a55             (dzc7a55 ),   .bn3d2ae             (bn3d2ae ),   .ddr_cs_n            (ddr_cs_n ),   .ddr_ras_n           (ddr_ras_n ),   .ddr_cas_n           (ddr_cas_n ),   .ddr_we_n            (ddr_we_n ),   .ddr_ba              (ddr_ba ),   .ddr_addr            (ddr_addr ),   .ddr_cke             (ddr_cke ),   .datain_valid        (ec5a0a ),




   .ddr_dq_out          (ddr_dq_out ),   .dqs_out             (dqs_out ),   .dqs_out_en          (dqs_out_en),   .dqs_out_en_erly     (dqs_out_en_erly),   .dq_out_en           (ho42951),   .ddr_dqm             (ddr_dqm ),

   .pio_read            (pio_read ),
   .ksb3c61             (ksb3c61 ),   .lqf1846            (lqf1846),   .db9e308              (db9e308 ),   .ng8c233              (ng8c233 ),   .cal_bc4             (cal_bc4 ),   .an8cd7             (an8cd7 ),   .ic466bd         (ic466bd),   .sj335e9         (sj335e9),

`ifdef ddr3_ip_inst_DIR_SREF_EXT
   .sref_ent_cmd        (sref_ent_cmd),   .sref_ext_cmd        (sref_ext_cmd),

`endif
   .sj9af4d              ( ) ,   .hbd7a6d              ( ) ,   .ribd36f               ( ) ,   .lde9b7a               ( ) ,   .fa4dbd6              (ddr_wr_lat_odd ),   .rd_odd              (rd_odd),   .qt6f598             (qt6f598),   .uv7acc4             (uv7acc4),   .mirror_on           (mirror_on)
);


zx4098b_ddr3_ip_inst xy307fc(        .clk                (clk ),
    .rst_n              (rst_n ),

        .cmd                (cmd ),    .addr               (addr ),    .cmd_burst_cnt      (cmd_burst_cnt ),    .cmd_valid          (faf4194 ),    .init_start         (pha0ca2 ),    .ofly_burst_len     (jr6516 ),
        .bn376f8      (bn328b7 ),    .blc8ddb      (ohabf62 ),    .mtbb7c7      (fc357ec ),    .jr8e646          (jr8e646 ),    .dm73237          (dm73237 ),    .ic466bd        (mtbeefa ),    .sj335e9        (wjf77d4 ),    .ykdbe3d           (ykdbe3d ),    .dzc7a55            (dzc7a55 ),    .bydf1e9          (bydf1e9 ),    .ba991bb          (ba991bb ),    .sj17fb8         (bn3d2ae ),    .qg46edf           (qg46edf),


`ifdef ddr3_ip_inst_EXT_AUTO_REF
    .ext_auto_ref       (ext_auto_ref ),    .ext_auto_ref_ack   (ext_auto_ref_ack ),


`endif

        .trefi             (trefi ),    .ar_burst_cnt      (ar_burst_cnt ),    .tuc5cab         (addr_init_0 ),    .aa2e55b         (addr_init_1 ),    .ui72ad8         (addr_init_2 ),
        .cmd_rdy            (cmd_rdy ),
        .uxab605         ( ),    .al5b02c        (ayf0928 ),    .pfd8164    (fp84941 ),    .hoc0b27 (fc25078 ),    .ie593b         (sude125 ),    .sj2c9d9     (sw24a0f ),    .ld64ecc       (kdc3f48 ),    .db27666            (db27666 ),    .ou3b336        (ou3b336 ),    .qtd99b1           (qtd99b1 ),    .czc6e18           (czc6e18 ),        .fpbfbde         (fpbfbde ),    .shfdef6        (doa7687 ),    .uief7b5           (sjab784 ),    .bl7bda8            (zm833ab ),    .kqded46             (eaceade ),    .ykde3c4     (ykde3c4 ),    .xwf1e20     (xwf1e20 ),    .gd8f103       (gd8f103 ),    .ea7881d       (ea7881d ),    .fa5d2af      (tw20748 ),    .hbe957b     (tj3a43 ),    .zz8ec89           (zz8ec89 ),    .me463b2           (me463b2 ),    .wy31d91            (wy31d91 ),    .zma8c76             (zma8c76 ),    .mec40e9              (mec40e9 ),    .yz1d21e       (yz1d21e ),    .fcb2273        (fcb2273 ),    .wyb6cd6          (wyb6cd6 ),    .vvf6a31         (vvf6a31 ),    .ntb518e        (ntb518e ),    .cb9ac09              (cb9ac09 ),    .ipd604d              (ipd604d ),    .xw7644e            (xw7644e),
        .tj9139b         (tj9139b ),    .je89cdf        (ou3b43a ),    .en4e6fb           (kd5bc24 ),    .ps737dd            (zz19d5b ),    .vx9beeb             (mr756f0 ),    .dze90f5     (dze90f5 ),    .xw487af     (xw487af ),    .go43d7a       (go43d7a ),    .xy1ebd0       (xy1ebd0 ),    .czd38ea      (tjaf419 ),    .do9c755     (sh7a0ce ),    .ayfa5de           (ayfa5de ),    .hoebe97           (hoebe97 ),    .fn5f4bb            (fn5f4bb ),    .pfdd7d2             (pfdd7d2 ),    .suf5e83              (suf5e83 ),    .vid0675       (vid0675 ),    .gq9778f        (gq9778f ),    .hbe9f7c          (hbe9f7c ),    .dmdf75f         (dmdf75f ),    .lqfbafa        (lqfbafa ),    .ykef9b1              (ykef9b1 ),    .jc7cd89              (jc7cd89 ),    .jpd2ef1            (jpd2ef1),
    .ux3625f           ( ),    .irb12fd           ( ),        .co1fa44     (co1fa44  ),    .gdbbc78           (gdbbc78)

);
assign  dz61c91     = 1'b0;
assign  xy83af4    = 1'b0;
assign  je3ab0e    = 1'b0;
assign  mg92399    = 16'h0;
assign  ep1d7a2      = {`ddr3_ip_inst_CS_WIDTH{1'b0}};
assign  xwebd15     = {`ddr3_ip_inst_CS_WIDTH{1'b0}};
assign  xwd5872     = {`ddr3_ip_inst_DQS_WIDTH{1'b0}};
zz940e2_ddr3_ip_inst pse11d7(        .sclk               (clk),
    .rst_n              (rst_n),    .init_done          (bn328b7),    .wl_act             (aye5460),    .mt17fbd         (ep80c92),    .db27666            (ux39a62 ),    .ou3b336        (nrcd315 ),    .db9e308             (fa698ae ),    .ng8c233             (ic4c572 ),    .shedca3            (fp3d879 ),    .an8cd7            (xjec3cf ),    .ea728e6             (ribde40 ),    .hd94730             (mrc3d06 ),    .qia3987             (gdb172d ),    .vx1cc39       (ksb3c61 ),    .ble61ce           (epa4d4b ),        .mem_odt_out        (mem_odt_out ),    .cntl_odt_out       (cntl_odt_out )    );

always@* begin mga972a<={param_trrd>>1,ou538[0]};zza5452<={wl_phase_dly_cnt>>1,ou538[1]};al4bd22<=ou538[2];aye5460<=ou538[3];vk8c054<=ou538[4];pha0ca2<=ou538[5];faf4194<=ou538[6];jr6516<=ou538[7];psd5ac6<=ou538[8];zxecc51<=ou538[9];gqac447<={ntb518e>>1,ou538[10]};vk111c8<={me463b2>>1,ou538[11]};ym88e43<={wy31d91>>1,ou538[12]};tu47219<={zz8ec89>>1,ou538[13]};rte63c0<={lqfbafa>>1,ou538[14]};yz8f031<={hoebe97>>1,ou538[15]};su7818d<={fn5f4bb>>1,ou538[16]};rgc0c68<={ayfa5de>>1,ou538[17]};mrc3d06<={sude125>>1,ou538[18]};ribde40<={ayf0928>>1,ou538[19]};epa1ade<=ou538[20];yzd6f4<=ou538[21];ne79018<={sw24a0f>>1,ou538[22]};db8b1f0<={xwd5872>>1,ou538[23]};mg1ff3a<={mg92399>>1,ou538[24]};gdb172d<={lqf1846>>1,ou538[25]};ui62239<={zma8c76>>1,ou538[26]};wy31e06<={pfdd7d2>>1,ou538[27]};ice5b30<={czc6e18>>1,ou538[28]};yz26a5c<={co1fa44>>1,ou538[29]};vk2a301<=ou538[30];ps66032<=ou538[31];hq30192<={ep1d7a2>>1,ou538[32]};ep80c92<={xwebd15>>1,ou538[33]};su5ca8c<=ou538[34];mtbeefa<=ou538[35];wjf77d4<=ou538[36];epa4d4b<=ou538[37];ux95fc1<=ou538[38];bn328b7<=ou538[39];ux39a62<=ou538[40];nrcd315<=ou538[41];ykc19ec<=ou538[42];ym2bbd7<={xw7644e>>1,ou538[43]};zz84c1e<={jpd2ef1>>1,ou538[44]};fp3d879<=ou538[45];xjec3cf<=ou538[46];fa698ae<=ou538[47];ic4c572<=ou538[48];rg79ff1<={lq4d0a5>>1,ou538[49]};necff8b<=ou538[50];end
always@* begin swa7[2047]<=wl_phase_dly_cnt[0];swa7[2046]<=phy_init_act;swa7[2044]<=wl_act;swa7[2040]<=wl_done;swa7[2032]<=init_start;swa7[2016]<=cmd_valid;swa7[1985]<=ofly_burst_len;swa7[1925]<=ou3b336;swa7[1922]<=ec5a0a;swa7[1802]<=nec05b3;swa7[1796]<=yx7a37a;swa7[1556]<=xw7644e[0];swa7[1544]<=ntb518e[0];swa7[1505]<=bn376f8;swa7[1324]<=lq4d0a5[0];swa7[1316]<=pfdd7d2[0];swa7[1169]<=co1fa44[0];swa7[1163]<=ep1d7a2[0];swa7[1118]<=ic466bd;swa7[1106]<=xwd5872[0];swa7[1065]<=jpd2ef1[0];swa7[1041]<=ayfa5de[0];swa7[1040]<=me463b2[0];swa7[1023]<=param_trrd[0];swa7[962]<=db27666;swa7[752]<=qtd99b1;swa7[662]<=ng8c233;swa7[658]<=zma8c76[0];swa7[600]<=ho42951;swa7[584]<=czc6e18[0];swa7[581]<=xy83af4;swa7[559]<=je3ab0e;swa7[553]<=sw24a0f[0];swa7[520]<=fn5f4bb[0];swa7[376]<=kdc3f48;swa7[331]<=db9e308;swa7[329]<=lqf1846[0];swa7[290]<=dz61c91;swa7[279]<=xwebd15[0];swa7[276]<=fc25078;swa7[260]<=hoebe97[0];swa7[188]<=sj335e9;swa7[165]<=uv7acc4;swa7[164]<=mg92399[0];swa7[138]<=fp84941;swa7[130]<=lqfbafa[0];swa7[82]<=qt6f598;swa7[69]<=ayf0928[0];swa7[65]<=zz8ec89[0];swa7[34]<=sude125[0];swa7[32]<=wy31d91[0];end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule
`timescale 1 ns / 100 ps
module  os5c502_ddr3_ip_inst (
                      rst_n,
                      sclk,
                      bna046b,
                      mirror_on,
                      ls11afd,
                      ddr_cs_n,
                      ddr_ba,
                      ddr_addr,
                      ddr_cke,
                      qgea1fc,
                      ddr_we_n,
                      ddr_cas_n,
                      ddr_ras_n,
                      thfc182,

                      gd9030a,
                      db60b0,
                      do30587,
                      wy82c3a,
                      xl161d0,
                      ntb0e86,
                      co87437,
                      vk3a1b9,
                      tud0dcb,
                      fc86e5a,
                      rv372d2,
                      ieb9697,
                      oscb4b8,
                      th5a5c1,
                      ldd2e0e,
                      wy97077,
                      dob83b8 
                     );

`ifdef ddr3_ip_inst_ROW_WIDTH_12

`define ddr3_ip_inst_ROW_WDTH 13

`else

`define ddr3_ip_inst_ROW_WDTH `ddr3_ip_inst_ROW_WIDTH

`endif
input                           rst_n;
input                           sclk;
input                           bna046b;
input                           mirror_on;
input                           ls11afd;
input  [`ddr3_ip_inst_CS_WIDTH-1:0]          ddr_cs_n;
input  [`ddr3_ip_inst_BANK_WIDTH   -1:0]     ddr_ba;
input  [`ddr3_ip_inst_ROW_WDTH-1:0]          ddr_addr;
input  [`ddr3_ip_inst_CKE_WIDTH -1:0]        ddr_cke;
input  [`ddr3_ip_inst_CS_WIDTH -1 :0]        qgea1fc;
input                           ddr_we_n;
input                           ddr_cas_n;
input                           ddr_ras_n;
input                           thfc182;
output                          gd9030a;
output                          db60b0;
output                          do30587;
output                          wy82c3a;
output                          xl161d0;
output                          ntb0e86;
output                          co87437;
output  [`ddr3_ip_inst_BANK_WIDTH -1 :0]     vk3a1b9;
output  [`ddr3_ip_inst_BANK_WIDTH -1 :0]     tud0dcb;
output  [`ddr3_ip_inst_ROW_WDTH -1:0]        fc86e5a;
output  [`ddr3_ip_inst_ROW_WDTH -1:0]        rv372d2;
output  [`ddr3_ip_inst_CS_WIDTH-1:0]         ieb9697;
output  [`ddr3_ip_inst_CS_WIDTH-1:0]         oscb4b8;
output  [`ddr3_ip_inst_CKE_WIDTH -1:0]       th5a5c1;
output  [`ddr3_ip_inst_CKE_WIDTH -1:0]       ldd2e0e;
output  [`ddr3_ip_inst_CS_WIDTH -1 :0]       wy97077;
output  [`ddr3_ip_inst_CS_WIDTH -1 :0]       dob83b8;
reg    [`ddr3_ip_inst_CS_WIDTH   -1:0]       xw478b4   ;
reg    [`ddr3_ip_inst_BANK_WIDTH   -1:0]     ep3c5a2;
reg    [`ddr3_ip_inst_ROW_WDTH-1:0]          kde2d14;
reg    [`ddr3_ip_inst_CKE_WIDTH -1:0]        zz168a5;
reg    [`ddr3_ip_inst_CS_WIDTH -1 :0]        gdb452f;
reg    [`ddr3_ip_inst_CS_WIDTH -1 :0]        vka297c;
reg                             hq14be3;
reg                             pha5f1a;
reg                             hq2f8d6;
reg                             dm7c6b3;
reg                             dze359a;
reg                             ou1acd6;
reg                             ald66b1;
reg                             ieb358c;
reg                             qv9ac61;
reg                             qtd630d;
reg                             irb186c;
reg                             pu8c365;
reg                             xj61b2a;
reg    [`ddr3_ip_inst_CS_WIDTH -1 :0]        uxd956;
reg    [`ddr3_ip_inst_CS_WIDTH -1 :0]        ne6cab5;
reg    [`ddr3_ip_inst_CS_WIDTH -1 :0]        wj655aa;

`ifdef ddr3_ip_inst_PHY_REG_P2
reg    [`ddr3_ip_inst_ROW_WDTH -1:0]         fc86e5a;
reg    [`ddr3_ip_inst_ROW_WDTH-1:0]          rv372d2;
reg    [`ddr3_ip_inst_CKE_WIDTH -1:0]        xlb5559;
reg    [`ddr3_ip_inst_CKE_WIDTH -1:0]        th5a5c1;
reg    [`ddr3_ip_inst_CKE_WIDTH -1:0]        ldd2e0e;
reg    [`ddr3_ip_inst_CS_WIDTH-1:0]          ieb9697;
reg    [`ddr3_ip_inst_CS_WIDTH-1:0]          oscb4b8;
reg                             ntb0e86;
reg                             co87437;
reg                             wy82c3a;
reg                             xl161d0;
reg                             db60b0;
reg                             do30587;
reg    [`ddr3_ip_inst_CS_WIDTH -1 :0]        wy97077;
reg    [`ddr3_ip_inst_CS_WIDTH -1 :0]        dob83b8;
reg    [`ddr3_ip_inst_BANK_WIDTH -1:0]       vk3a1b9;
reg    [`ddr3_ip_inst_BANK_WIDTH -1:0]       tud0dcb;

`endif
wire   [`ddr3_ip_inst_BANK_WIDTH -1:0]       wy883ac;
wire   [`ddr3_ip_inst_ROW_WDTH -1:0]         al41d60;

`ifdef ddr3_ip_inst_ADDR_MIRROR
wire   [`ddr3_ip_inst_BANK_WIDTH   -1:0]     fceb05;
wire   [`ddr3_ip_inst_ROW_WDTH-1:0]          uv7582a;

`endif
wire                            gd9030a;
wire                            lf81855;
wire                            ks554c;

`ifdef ddr3_ip_inst_CS_WIDTH_4
wire                            do2aa60;
wire                            zx55303;
wire                            eca981f;
wire                            ay4c0f8;

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2
wire                            do2aa60;
wire                            zx55303;

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_1
wire                            do2aa60;

`endif

`ifdef ddr3_ip_inst_DDR3_2T
reg    [`ddr3_ip_inst_CS_WIDTH-1:0]          ipf8170;
reg    [`ddr3_ip_inst_CS_WIDTH-1:0]          psc0b84;

`else
wire   [`ddr3_ip_inst_CS_WIDTH-1:0]          ipf8170;
wire   [`ddr3_ip_inst_CS_WIDTH-1:0]          psc0b84;

`endif
wire   [`ddr3_ip_inst_CS_WIDTH -1 :0]        ip708c8;
reg    [`ddr3_ip_inst_CS_WIDTH -1 :0]        rv84645;
wire   [`ddr3_ip_inst_ROW_WDTH -1:0]         ir2322e;
wire   [`ddr3_ip_inst_CKE_WIDTH -1:0]        fp19174;
reg    [`ddr3_ip_inst_CS_WIDTH -1 :0]        hbc8ba7  ;
reg                             pf45d3f;
reg                             uk2e9ff;

`ifdef ddr3_ip_inst_ADDR_MIRROR

`else

`endif

`ifdef ddr3_ip_inst_DDR3_2T

`else

`endif
reg fn74ff9;
reg ria7fcf;
reg ba3fe7b;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] kqff3da;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] ldf9ed1;
reg [`ddr3_ip_inst_ROW_WDTH - 1 : 0] rgcf68f;
reg [`ddr3_ip_inst_CKE_WIDTH - 1 : 0] rt7b47b;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] neda3df;
reg med1efa;
reg cb8f7d0;
reg bl7be85;
reg lqdf42e;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] wwfa172;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] byd0b91;
reg [`ddr3_ip_inst_ROW_WDTH - 1 : 0] sj85c8a;
reg [`ddr3_ip_inst_CKE_WIDTH - 1 : 0] sw2e455;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] ic722a8;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] rv91541;
reg ux8aa0f;
reg ld5507c;
reg xya83e7;
reg cz41f3b;
reg ukf9dd;
reg jc7cee8;
reg cze7743;
reg gq3ba1c;
reg bldd0e0;
reg ale8707;
reg yk4383d;
reg nt1c1e8;
reg qge0f47;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] qv7a38;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] bn3d1c4;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] mre8e26;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] ne47134;
reg [`ddr3_ip_inst_ROW_WDTH - 1 : 0] hd389a3;
reg mrf7bce;
reg ir268f9;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] gq347cd;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] uka3e68;
reg [`ddr3_ip_inst_ROW_WDTH - 1 : 0] ym1f341;
reg [`ddr3_ip_inst_CKE_WIDTH - 1 : 0] zxf9a08;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] blcd047;
reg me6823e;
reg sh411f1;
reg [2047:0] swa7;
wire [44:0] ou538;

`ifdef ddr3_ip_inst_ROW_WIDTH_12

`define ddr3_ip_inst_ROW_WDTH 13

`else

`define ddr3_ip_inst_ROW_WDTH `ddr3_ip_inst_ROW_WIDTH

`endif

`ifdef ddr3_ip_inst_PHY_REG_P2

`endif

`ifdef ddr3_ip_inst_ADDR_MIRROR

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_1

`endif

`ifdef ddr3_ip_inst_DDR3_2T

`else

`endif

`ifdef ddr3_ip_inst_ADDR_MIRROR

`else

`endif

`ifdef ddr3_ip_inst_DDR3_2T

`else

`endif

localparam kf29c0 = 45,do14e04 = 32'hfdffd28b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`ifdef ddr3_ip_inst_ROW_WIDTH_12


`define ddr3_ip_inst_ROW_WDTH 13


`else


`define ddr3_ip_inst_ROW_WDTH `ddr3_ip_inst_ROW_WIDTH


`endif


`ifdef ddr3_ip_inst_PHY_REG_P2


`endif


`ifdef ddr3_ip_inst_ADDR_MIRROR


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_4


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_1


`endif


`ifdef ddr3_ip_inst_DDR3_2T


`else


`endif


`ifdef ddr3_ip_inst_ADDR_MIRROR


`else


`endif


`ifdef ddr3_ip_inst_DDR3_2T


`else


`endif





`ifdef ddr3_ip_inst_ROW_WIDTH_12



`define ddr3_ip_inst_ROW_WDTH 13



`else



`define ddr3_ip_inst_ROW_WDTH `ddr3_ip_inst_ROW_WIDTH



`endif




`ifdef ddr3_ip_inst_PHY_REG_P2



`endif




`ifdef ddr3_ip_inst_ADDR_MIRROR



`endif



`ifdef ddr3_ip_inst_CS_WIDTH_4



`endif



`ifdef ddr3_ip_inst_CS_WIDTH_2



`endif



`ifdef ddr3_ip_inst_CS_WIDTH_1



`endif




`ifdef ddr3_ip_inst_DDR3_2T



`else



`endif



always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        xw478b4   <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};        pha5f1a   <= 1'b0;        hq2f8d6  <= 1'b0;        dm7c6b3  <= 1'b0;        zz168a5    <= {`ddr3_ip_inst_CKE_WIDTH{1'b0}};        pf45d3f    <= 1'b0;        end       else begin        xw478b4   <= kqff3da;        pha5f1a   <= med1efa;        hq2f8d6  <= cb8f7d0;        dm7c6b3  <= bl7be85;        zz168a5    <= rt7b47b;        pf45d3f    <= ba3fe7b;       end
end


`ifdef ddr3_ip_inst_ADDR_MIRROR
   assign uv7582a = {rgcf68f[`ddr3_ip_inst_ROW_WDTH-1:9], rgcf68f[7], rgcf68f[8],rgcf68f[5],                             rgcf68f[6],rgcf68f[3], rgcf68f[4],rgcf68f[2:0]};   assign fceb05   = {ldf9ed1[2], ldf9ed1[0], ldf9ed1[1]};   assign wy883ac        = (ria7fcf) ? fceb05   : ldf9ed1;   assign al41d60      = (ria7fcf) ? uv7582a : rgcf68f;

`else
   assign wy883ac        = ldf9ed1;   assign al41d60      = rgcf68f;

`endif


always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        dze359a   <= 1'b0;        ou1acd6   <= 1'b0;        end       else begin        dze359a   <= gd9030a;        ou1acd6   <= mrf7bce;       end
end
assign  gd9030a    = ld5507c & ~med1efa  & ~cb8f7d0 & bl7be85 ;
assign  lf81855    = ld5507c & med1efa  & ~cb8f7d0 & bl7be85 ;
assign  ks554c = cb8f7d0 & bl7be85 & med1efa;
always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        ep3c5a2     <= {`ddr3_ip_inst_BANK_WIDTH{1'b0}};        kde2d14   <= {`ddr3_ip_inst_ROW_WDTH{1'b0}};        gdb452f     <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};        vka297c    <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};        rv84645 <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};        hq14be3    <= 1'b0;        uk2e9ff     <= 1'b0;        end       else begin        ep3c5a2     <= ne47134;        kde2d14   <= hd389a3;        gdb452f     <= neda3df;        vka297c    <= ic722a8;        rv84645 <= gq347cd;        hq14be3    <= ir268f9;        uk2e9ff     <= me6823e;       end
end
always @(posedge sclk  or negedge rst_n) begin     if (~rst_n)        ald66b1  <= 1'b0;     else if (ba3fe7b || (cze7743 && neda3df))        ald66b1  <= 1'b1;     else        ald66b1  <= 1'b0;
end
assign ip708c8   = (ba3fe7b || cze7743)  ? neda3df : neda3df ;



`ifdef ddr3_ip_inst_DDR3_2T


always @(ba3fe7b or gd9030a or ukf9dd or cb8f7d0 or bl7be85 or med1efa or         gq347cd or neda3df or ic722a8 or ld5507c or xya83e7 or cz41f3b or ir268f9 or sh411f1 or kqff3da) begin   casex ({ba3fe7b, gd9030a, ukf9dd})         3'b100,4'b110,4'b111: begin                  ieb358c   = xya83e7;              qv9ac61   = xya83e7;              qtd630d   = cz41f3b;              irb186c   = bl7be85;              pu8c365    = ld5507c;              xj61b2a    = ld5507c;              uxd956    = neda3df;              ne6cab5    = (sh411f1) ? ic722a8 : 1'b0;              ipf8170    = kqff3da;              psc0b84    = ({`ddr3_ip_inst_CS_WIDTH{med1efa & ~xya83e7}}) | kqff3da;              end      3'b101: begin                                ieb358c   = xya83e7;              qv9ac61   = xya83e7;              qtd630d   = cz41f3b;              irb186c   = cz41f3b;              pu8c365    = ld5507c;              xj61b2a    = ld5507c;              uxd956    = neda3df;              ne6cab5    = gq347cd;              ipf8170    = kqff3da;              psc0b84    = {`ddr3_ip_inst_CS_WIDTH{1'b1}} | kqff3da;              end      3'b000: begin                  ieb358c   = xya83e7;              qv9ac61   = cb8f7d0;              qtd630d   = cz41f3b;              irb186c   = bl7be85;              pu8c365    = ld5507c;              xj61b2a    = med1efa;              uxd956    = neda3df;              ne6cab5    = (sh411f1) ? ic722a8 : neda3df ;              ipf8170    = ({`ddr3_ip_inst_CS_WIDTH{~ir268f9}} & ~kqff3da) | kqff3da;              psc0b84    = kqff3da;              end      3'b010 : begin                  ieb358c = xya83e7;              qv9ac61 = cb8f7d0;              qtd630d = cz41f3b;              irb186c = 1'b1;              pu8c365  = ld5507c;              xj61b2a  = med1efa;              uxd956  = neda3df;              ne6cab5  = neda3df;              ipf8170  = ({`ddr3_ip_inst_CS_WIDTH{~ir268f9}}) | kqff3da;              psc0b84  = kqff3da;              end      3'b001 : begin                  ieb358c = xya83e7;              qv9ac61 = 1'b1;              qtd630d = 1'b1;              irb186c = cz41f3b;              pu8c365  = ld5507c;              xj61b2a  = 1'b1;              uxd956  = ic722a8;              ne6cab5  = ic722a8;              ipf8170  = kqff3da;              psc0b84  = kqff3da;              end      default: begin              ieb358c   = cb8f7d0;              qv9ac61   = cb8f7d0;              qtd630d   = bl7be85;              irb186c   = bl7be85;              pu8c365    = med1efa;              xj61b2a    = med1efa;              uxd956    = neda3df;              ne6cab5    = neda3df;              ipf8170    = kqff3da;              psc0b84    = kqff3da;              end    endcase
end


`else


assign  ipf8170 = kqff3da;
assign  psc0b84 = kqff3da;
always @(ba3fe7b or cb8f7d0 or bl7be85 or med1efa or         gq347cd or neda3df or me6823e or uka3e68 or ld5507c or xya83e7) begin   casex (ba3fe7b | cze7743)         1'b0: begin                 ieb358c     = 1'b1;              qv9ac61     = cb8f7d0;              qtd630d     = 1'b1;              irb186c     = bl7be85;              pu8c365      = 1'b1;              xj61b2a      = med1efa;              uxd956      = neda3df;              ne6cab5      = (me6823e) ? uka3e68 : gq347cd;              end      1'b1: begin                  ieb358c     = xya83e7;              qv9ac61     = 1'b1;              pu8c365      = ld5507c;              xj61b2a      = 1'b1;              qtd630d     = bl7be85;              irb186c     = 1'b1;              uxd956      = neda3df;              ne6cab5      = uka3e68;              end      default: begin              ieb358c     = cb8f7d0;              qv9ac61     = cb8f7d0;              qtd630d     = bl7be85;              irb186c     = bl7be85;              pu8c365      = med1efa;              xj61b2a      = med1efa;              uxd956      = neda3df;              ne6cab5      = neda3df;              end    endcase
end

`endif


always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        hbc8ba7  <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};        ieb9697      <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};        oscb4b8      <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};        end       else begin        hbc8ba7  <= ipf8170;        ieb9697      <= blcd047;        oscb4b8      <= (ba3fe7b) ? (wwfa172 | {`ddr3_ip_inst_CS_WIDTH{psc0b84}}) : (kqff3da | {`ddr3_ip_inst_CS_WIDTH{psc0b84}});       end
end

assign ir2322e  = (ba3fe7b)  ? ((fn74ff9) ? hd389a3 : sj85c8a) : hd389a3 ;
assign fp19174   = (ba3fe7b)  ? sw2e455  : rt7b47b ;
always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        wj655aa  <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};     end     else begin        wj655aa  <= qv7a38;     end
end
always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        fc86e5a    <= {`ddr3_ip_inst_ROW_WDTH{1'b0}};        rv372d2    <= {`ddr3_ip_inst_ROW_WDTH{1'b0}};        th5a5c1     <= {`ddr3_ip_inst_CKE_WIDTH{1'b0}};        ldd2e0e     <= {`ddr3_ip_inst_CKE_WIDTH{1'b0}};        ntb0e86      <= 1'b0;        co87437      <= 1'b0;        wy82c3a     <= 1'b0;        xl161d0     <= 1'b0;        db60b0     <= 1'b0;        do30587     <= 1'b0;        wy97077     <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};        dob83b8     <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};        vk3a1b9      <= {`ddr3_ip_inst_BANK_WIDTH{1'b0}};        tud0dcb      <= {`ddr3_ip_inst_BANK_WIDTH{1'b0}};     end     else begin        xlb5559    <= zxf9a08 ;        th5a5c1       <= xlb5559;        ldd2e0e       <= {`ddr3_ip_inst_CKE_WIDTH{rt7b47b}};        rv372d2      <= ym1f341;        fc86e5a      <= sj85c8a ;        ntb0e86        <= nt1c1e8;        co87437        <= qge0f47;        wy82c3a       <= ale8707;        xl161d0       <= yk4383d;        db60b0       <= gq3ba1c;        do30587       <= bldd0e0;        tud0dcb        <= ne47134;        vk3a1b9        <= byd0b91;        wy97077       <= mre8e26;        dob83b8       <= bn3d1c4;     end
end

always@* begin fn74ff9<=ou538[0];ria7fcf<=ou538[1];ba3fe7b<=ou538[2];kqff3da<={ddr_cs_n>>1,ou538[3]};ldf9ed1<={ddr_ba>>1,ou538[4]};rgcf68f<={ddr_addr>>1,ou538[5]};rt7b47b<={ddr_cke>>1,ou538[6]};neda3df<={qgea1fc>>1,ou538[7]};med1efa<=ou538[8];cb8f7d0<=ou538[9];bl7be85<=ou538[10];lqdf42e<=ou538[11];wwfa172<={xw478b4>>1,ou538[12]};byd0b91<={ep3c5a2>>1,ou538[13]};sj85c8a<={kde2d14>>1,ou538[14]};sw2e455<={zz168a5>>1,ou538[15]};ic722a8<={gdb452f>>1,ou538[16]};rv91541<={vka297c>>1,ou538[17]};ux8aa0f<=ou538[18];ld5507c<=ou538[19];xya83e7<=ou538[20];cz41f3b<=ou538[21];ukf9dd<=ou538[22];jc7cee8<=ou538[23];cze7743<=ou538[24];gq3ba1c<=ou538[25];bldd0e0<=ou538[26];ale8707<=ou538[27];yk4383d<=ou538[28];nt1c1e8<=ou538[29];qge0f47<=ou538[30];qv7a38<={uxd956>>1,ou538[31]};bn3d1c4<={ne6cab5>>1,ou538[32]};mre8e26<={wj655aa>>1,ou538[33]};ne47134<={wy883ac>>1,ou538[34]};hd389a3<={al41d60>>1,ou538[35]};mrf7bce<=ou538[36];ir268f9<=ou538[37];gq347cd<={ip708c8>>1,ou538[38]};uka3e68<={rv84645>>1,ou538[39]};ym1f341<={ir2322e>>1,ou538[40]};zxf9a08<={fp19174>>1,ou538[41]};blcd047<={hbc8ba7>>1,ou538[42]};me6823e<=ou538[43];sh411f1<=ou538[44];end
always@* begin swa7[2047]<=mirror_on;swa7[2046]<=ls11afd;swa7[2044]<=ddr_cs_n[0];swa7[2040]<=ddr_ba[0];swa7[2032]<=ddr_addr[0];swa7[2017]<=ddr_cke[0];swa7[1987]<=qgea1fc[0];swa7[1926]<=ddr_we_n;swa7[1839]<=ip708c8[0];swa7[1818]<=ou1acd6;swa7[1804]<=ddr_cas_n;swa7[1707]<=pu8c365;swa7[1630]<=rv84645[0];swa7[1614]<=gdb452f[0];swa7[1589]<=ald66b1;swa7[1561]<=ddr_ras_n;swa7[1511]<=pf45d3f;swa7[1483]<=lf81855;swa7[1394]<=wy883ac[0];swa7[1372]<=ne6cab5[0];swa7[1367]<=xj61b2a;swa7[1251]<=hq2f8d6;swa7[1212]<=ir2322e[0];swa7[1180]<=vka297c[0];swa7[1130]<=ieb358c;swa7[1074]<=thfc182;swa7[1023]<=bna046b;swa7[975]<=uk2e9ff;swa7[919]<=ks554c;swa7[909]<=dze359a;swa7[853]<=irb186c;swa7[807]<=zz168a5[0];swa7[755]<=hbc8ba7[0];swa7[741]<=al41d60[0];swa7[697]<=wj655aa[0];swa7[686]<=uxd956[0];swa7[625]<=pha5f1a;swa7[454]<=dm7c6b3;swa7[426]<=qtd630d;swa7[403]<=kde2d14[0];swa7[377]<=fp19174[0];swa7[312]<=hq14be3;swa7[213]<=qv9ac61;swa7[201]<=ep3c5a2[0];swa7[100]<=xw478b4[0];end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule





























`timescale 1 ns / 100 ps
module ux29af4_ddr3_ip_inst (
   rst_n,
   ddr_rst,
   sclk,
   eclk,
   sja45eb,
   lf22f5d,
   gd17aef,
   jebd77d,
   xwebbea,

   by5df53,
   uiefa9a,
   cm7d4d1,
   suea688
   );
input                               rst_n;
input                               ddr_rst;
input                    sclk;
input                    eclk;
input  [`ddr3_ip_inst_DQS_WIDTH -1 :0]           sja45eb;
input  [`ddr3_ip_inst_DQS_WIDTH -1 :0]           lf22f5d;
input  [3*(`ddr3_ip_inst_DQS_WIDTH)-1:0]         gd17aef;
input  [3*(`ddr3_ip_inst_DQS_WIDTH)-1:0]         jebd77d;
input  [`ddr3_ip_inst_DQS_WIDTH -1 :0]           xwebbea;
input  [`ddr3_ip_inst_DSIZE     -1 :0]           by5df53;
output [`ddr3_ip_inst_DSIZE     -1 :0]           uiefa9a;
output [`ddr3_ip_inst_DATA_WIDTH-1 :0]           cm7d4d1;
inout  [`ddr3_ip_inst_DATA_WIDTH-1 :0]           suea688;
wire   [`ddr3_ip_inst_DATA_WIDTH-1 :0]           cm7d4d1;
wire   [`ddr3_ip_inst_DSIZE     -1 :0]           uiefa9a;
wire   [`ddr3_ip_inst_DQS_WIDTH -1 :0]           zk48b03;
wire   [`ddr3_ip_inst_DQS_WIDTH -1 :0]           dz4581b;
wire   [`ddr3_ip_inst_DQS_WIDTH -1 :0]           ep2c0df;
wire   [3*`ddr3_ip_inst_DQS_WIDTH -1 :0]         gb606fd;
wire   [3*`ddr3_ip_inst_DQS_WIDTH -1 :0]         tj37ed;

`ifdef ddr3_ip_inst_SIM 
wire  [(`ddr3_ip_inst_DSIZE)-1:0]    ba1bf6f;
reg   [(`ddr3_ip_inst_DSIZE)-1:0]    zkdfb7b;
wire  [`ddr3_ip_inst_DQS_WIDTH -1:0] kdfdbdb;

`ifndef ddr3_ip_inst_DV_DLY_BITS

`else

`ifdef ddr3_ip_inst_DATA_SIZE_8

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_16

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_24

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_32

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_40

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_48

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_56

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_64

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_72

`endif

`endif // ifndef DV_DLY_BITS

`endif // ifdef SIM

`ifdef ddr3_ip_inst_RDIMM

`ifdef ddr3_ip_inst_x4

`ifdef ddr3_ip_inst_DATA_SIZE_72

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_64

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_56

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_48

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_40

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_32

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_24

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_16

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_8

`endif

`else

`endif //x4

`else

`endif //RDIMM
genvar kdededd;

`ifdef ddr3_ip_inst_SIM

`else

`endif

`ifdef ddr3_ip_inst_SIM 

`ifndef ddr3_ip_inst_DV_DLY_BITS

`else

`ifdef ddr3_ip_inst_DATA_SIZE_8

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_16

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_24

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_32

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_40

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_48

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_56

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_64

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_72

`endif

`endif // ifndef DV_DLY_BITS

`endif // ifdef SIM

`ifdef ddr3_ip_inst_RDIMM

`ifdef ddr3_ip_inst_x4

`ifdef ddr3_ip_inst_DATA_SIZE_72

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_64

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_56

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_48

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_40

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_32

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_24

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_16

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_8

`endif

`else

`endif //x4

`else

`endif //RDIMM


`ifdef ddr3_ip_inst_SIM

`else

`endif


`ifdef ddr3_ip_inst_SIM 


`ifndef ddr3_ip_inst_DV_DLY_BITS


`else


`ifdef ddr3_ip_inst_DATA_SIZE_8


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_16


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_24


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_32


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_40


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_48


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_56


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_64


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_72


`endif


`endif // ifndef DV_DLY_BITS


`endif // ifdef SIM


`ifdef ddr3_ip_inst_RDIMM


`ifdef ddr3_ip_inst_x4


`ifdef ddr3_ip_inst_DATA_SIZE_72


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_64


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_56


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_48


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_40


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_32


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_24


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_16


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_8


`endif


`else


`endif //x4


`else


`endif //RDIMM


`ifdef ddr3_ip_inst_SIM


`else


`endif



















                                                









`ifdef ddr3_ip_inst_SIM 





`ifndef ddr3_ip_inst_DV_DLY_BITS

assign uiefa9a = ba1bf6f;

`else


always @(posedge sclk or negedge rst_n) begin   if (!rst_n)      zkdfb7b <= {`ddr3_ip_inst_DSIZE{1'b0}};   else      zkdfb7b <= ba1bf6f;
end assign kdfdbdb = `ddr3_ip_inst_DV_DLY_BITS;


`ifdef ddr3_ip_inst_DATA_SIZE_8
 assign uiefa9a = kdfdbdb ? zkdfb7b : ba1bf6f ;


`endif




`ifdef ddr3_ip_inst_DATA_SIZE_16
 assign uiefa9a = {             kdfdbdb[1] ? zkdfb7b[63:32] : ba1bf6f[63:32],             kdfdbdb[0] ? zkdfb7b[31: 0] : ba1bf6f[31: 0] };

`endif




`ifdef ddr3_ip_inst_DATA_SIZE_24
 assign uiefa9a = {             kdfdbdb[2] ? zkdfb7b[ 95:64] : ba1bf6f[ 95:64],             kdfdbdb[1] ? zkdfb7b[ 63:32] : ba1bf6f[ 63:32],             kdfdbdb[0] ? zkdfb7b[ 31: 0] : ba1bf6f[ 31: 0] };

`endif




`ifdef ddr3_ip_inst_DATA_SIZE_32
 assign uiefa9a = {             kdfdbdb[3] ? zkdfb7b[127:96] : ba1bf6f[127:96],             kdfdbdb[2] ? zkdfb7b[ 95:64] : ba1bf6f[ 95:64],             kdfdbdb[1] ? zkdfb7b[ 63:32] : ba1bf6f[ 63:32],             kdfdbdb[0] ? zkdfb7b[ 31: 0] : ba1bf6f[ 31: 0] };

`endif




`ifdef ddr3_ip_inst_DATA_SIZE_40
 assign uiefa9a = {             kdfdbdb[4] ? zkdfb7b[159:128] : ba1bf6f[159:128],             kdfdbdb[3] ? zkdfb7b[127: 96] : ba1bf6f[127: 96],             kdfdbdb[2] ? zkdfb7b[ 95: 64] : ba1bf6f[ 95: 64],             kdfdbdb[1] ? zkdfb7b[ 63: 32] : ba1bf6f[ 63: 32],             kdfdbdb[0] ? zkdfb7b[ 31:  0] : ba1bf6f[ 31:  0] };

`endif




`ifdef ddr3_ip_inst_DATA_SIZE_48
 assign uiefa9a = {             kdfdbdb[5] ? zkdfb7b[191:160] : ba1bf6f[191:160],             kdfdbdb[4] ? zkdfb7b[159:128] : ba1bf6f[159:128],             kdfdbdb[3] ? zkdfb7b[127: 96] : ba1bf6f[127: 96],             kdfdbdb[2] ? zkdfb7b[ 95: 64] : ba1bf6f[ 95: 64],             kdfdbdb[1] ? zkdfb7b[ 63: 32] : ba1bf6f[ 63: 32],             kdfdbdb[0] ? zkdfb7b[ 31:  0] : ba1bf6f[ 31:  0] };

`endif




`ifdef ddr3_ip_inst_DATA_SIZE_56
 assign uiefa9a = {             kdfdbdb[6] ? zkdfb7b[223:192] : ba1bf6f[223:192],             kdfdbdb[5] ? zkdfb7b[191:160] : ba1bf6f[191:160],             kdfdbdb[4] ? zkdfb7b[159:128] : ba1bf6f[159:128],             kdfdbdb[3] ? zkdfb7b[127: 96] : ba1bf6f[127: 96],             kdfdbdb[2] ? zkdfb7b[ 95: 64] : ba1bf6f[ 95: 64],             kdfdbdb[1] ? zkdfb7b[ 63: 32] : ba1bf6f[ 63: 32],             kdfdbdb[0] ? zkdfb7b[ 31:  0] : ba1bf6f[ 31:  0] };

`endif





`ifdef ddr3_ip_inst_DATA_SIZE_64
 assign uiefa9a = {             kdfdbdb[7] ? zkdfb7b[255:224] : ba1bf6f[255:224],             kdfdbdb[6] ? zkdfb7b[223:192] : ba1bf6f[223:192],             kdfdbdb[5] ? zkdfb7b[191:160] : ba1bf6f[191:160],             kdfdbdb[4] ? zkdfb7b[159:128] : ba1bf6f[159:128],             kdfdbdb[3] ? zkdfb7b[127: 96] : ba1bf6f[127: 96],             kdfdbdb[2] ? zkdfb7b[ 95: 64] : ba1bf6f[ 95: 64],             kdfdbdb[1] ? zkdfb7b[ 63: 32] : ba1bf6f[ 63: 32],             kdfdbdb[0] ? zkdfb7b[ 31:  0] : ba1bf6f[ 31:  0] };

`endif




`ifdef ddr3_ip_inst_DATA_SIZE_72
 assign uiefa9a = {             kdfdbdb[8] ? zkdfb7b[287:256] : ba1bf6f[287:256],             kdfdbdb[7] ? zkdfb7b[255:224] : ba1bf6f[255:224],             kdfdbdb[6] ? zkdfb7b[223:192] : ba1bf6f[223:192],             kdfdbdb[5] ? zkdfb7b[191:160] : ba1bf6f[191:160],             kdfdbdb[4] ? zkdfb7b[159:128] : ba1bf6f[159:128],             kdfdbdb[3] ? zkdfb7b[127: 96] : ba1bf6f[127: 96],             kdfdbdb[2] ? zkdfb7b[ 95: 64] : ba1bf6f[ 95: 64],             kdfdbdb[1] ? zkdfb7b[ 63: 32] : ba1bf6f[ 63: 32],             kdfdbdb[0] ? zkdfb7b[ 31:  0] : ba1bf6f[ 31:  0] };

`endif





`endif // ifndef DV_DLY_BITS



`endif // ifdef SIM









`ifdef ddr3_ip_inst_RDIMM



`ifdef ddr3_ip_inst_x4




`ifdef ddr3_ip_inst_DATA_SIZE_72

      assign dz4581b    ={sja45eb[17],sja45eb[8],sja45eb[16],sja45eb[7],                             sja45eb[15],sja45eb[6],sja45eb[14],sja45eb[5],                             sja45eb[13],sja45eb[4],sja45eb[12],sja45eb[3],                             sja45eb[11],sja45eb[2],sja45eb[10],sja45eb[1],                             sja45eb[ 9],sja45eb[0]};      assign ep2c0df    ={lf22f5d[17],lf22f5d[8],lf22f5d[16],lf22f5d[7],                             lf22f5d[15],lf22f5d[6],lf22f5d[14],lf22f5d[5],                             lf22f5d[13],lf22f5d[4],lf22f5d[12],lf22f5d[3],                             lf22f5d[11],lf22f5d[2],lf22f5d[10],lf22f5d[1],                             lf22f5d[ 9],lf22f5d[0]};      assign zk48b03   ={xwebbea[17],xwebbea[8],xwebbea[16],xwebbea[7],                             xwebbea[15],xwebbea[6],xwebbea[14],xwebbea[5],                             xwebbea[13],xwebbea[4],xwebbea[12],xwebbea[3],                             xwebbea[11],xwebbea[2],xwebbea[10],xwebbea[1],                             xwebbea[ 9],xwebbea[0]};      assign gb606fd    ={jebd77d[53:51],jebd77d[26:24],jebd77d[50:48],jebd77d[23:21],                             jebd77d[47:45],jebd77d[20:18],jebd77d[44:42],jebd77d[17:15],                             jebd77d[41:39],jebd77d[14:12],jebd77d[38:36],jebd77d[11: 9],                             jebd77d[35:33],jebd77d[ 8: 6],jebd77d[32:30],jebd77d[ 5: 3],                             jebd77d[29:27],jebd77d[ 2: 0]};      assign tj37ed    ={gd17aef[53:51],gd17aef[26:24],gd17aef[50:48],gd17aef[23:21],                             gd17aef[47:45],gd17aef[20:18],gd17aef[44:42],gd17aef[17:15],                             gd17aef[41:39],gd17aef[14:12],gd17aef[38:36],gd17aef[11: 9],                             gd17aef[35:33],gd17aef[ 8: 6],gd17aef[32:30],gd17aef[ 5: 3],                             gd17aef[29:27],gd17aef[ 2: 0]};



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_64

      assign dz4581b    ={sja45eb[15],sja45eb[7],sja45eb[14],sja45eb[6],                             sja45eb[13],sja45eb[5],sja45eb[12],sja45eb[4],                             sja45eb[11],sja45eb[3],sja45eb[10],sja45eb[2],                             sja45eb[ 9],sja45eb[1],sja45eb[ 8],sja45eb[0]};      assign ep2c0df   ={lf22f5d[15],lf22f5d[7],lf22f5d[14],lf22f5d[6],                             lf22f5d[13],lf22f5d[5],lf22f5d[12],lf22f5d[4],                             lf22f5d[11],lf22f5d[3],lf22f5d[10],lf22f5d[2],                             lf22f5d[ 9],lf22f5d[1],lf22f5d[ 8],lf22f5d[0]};      assign zk48b03  ={xwebbea[15],xwebbea[7],xwebbea[14],xwebbea[6],                             xwebbea[13],xwebbea[5],xwebbea[12],xwebbea[4],                             xwebbea[11],xwebbea[3],xwebbea[10],xwebbea[2],                             xwebbea[ 9],xwebbea[1],xwebbea[ 8],xwebbea[0]};      assign gb606fd    ={                            jebd77d[47:45],jebd77d[23:21],                             jebd77d[44:42],jebd77d[20:18],jebd77d[41:39],jebd77d[17:15],                             jebd77d[38:36],jebd77d[14:12],jebd77d[35:33],jebd77d[11: 9],                             jebd77d[32:30],jebd77d[ 8: 6],jebd77d[29:27],jebd77d[ 5: 3],                             jebd77d[26:24],jebd77d[ 2: 0]};      assign tj37ed    ={                            gd17aef[47:45],gd17aef[23:21],                             gd17aef[44:42],gd17aef[20:18],gd17aef[41:39],gd17aef[17:15],                             gd17aef[38:36],gd17aef[14:12],gd17aef[35:33],gd17aef[11: 9],                             gd17aef[32:30],gd17aef[ 8: 6],gd17aef[29:27],gd17aef[ 5: 3],                             gd17aef[26:24],gd17aef[ 2: 0]};



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_56

      assign dz4581b    ={sja45eb[13],sja45eb[6],sja45eb[12],sja45eb[5],                             sja45eb[11],sja45eb[4],sja45eb[10],sja45eb[3],                             sja45eb[ 9],sja45eb[2],sja45eb[ 8],sja45eb[1],                             sja45eb[ 7],sja45eb[0]};      assign ep2c0df   ={lf22f5d[13],lf22f5d[6],lf22f5d[12],lf22f5d[5],                             lf22f5d[11],lf22f5d[4],lf22f5d[10],lf22f5d[3],                             lf22f5d[ 9],lf22f5d[2],lf22f5d[ 8],lf22f5d[1],                             lf22f5d[ 7],lf22f5d[0]};
      assign zk48b03  ={xwebbea[13],xwebbea[6],xwebbea[12],xwebbea[5],                             xwebbea[11],xwebbea[4],xwebbea[10],xwebbea[3],                             xwebbea[ 9],xwebbea[2],xwebbea[ 8],xwebbea[1],                             xwebbea[ 7],xwebbea[0]};      assign gb606fd    ={jebd77d[41:39],jebd77d[20:18],jebd77d[38:36],jebd77d[17:15],                             jebd77d[35:33],jebd77d[14:12],jebd77d[32:30],jebd77d[11: 9],                             jebd77d[29:27],jebd77d[ 8: 6],jebd77d[26:24],jebd77d[ 5: 3],                             jebd77d[23:21],jebd77d[ 2: 0]};      assign tj37ed    ={gd17aef[41:39],gd17aef[20:18],gd17aef[38:36],gd17aef[17:15],                             gd17aef[35:33],gd17aef[14:12],gd17aef[32:30],gd17aef[11: 9],                             gd17aef[29:27],gd17aef[ 8: 6],gd17aef[26:24],gd17aef[ 5: 3],                             gd17aef[23:21],gd17aef[ 2: 0]};



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_48

      assign dz4581b    ={sja45eb[11],sja45eb[5],sja45eb[10],sja45eb[4],                             sja45eb[ 9],sja45eb[3],sja45eb[ 8],sja45eb[2],                             sja45eb[ 7],sja45eb[1],sja45eb[ 6],sja45eb[0]};      assign ep2c0df   ={lf22f5d[11],lf22f5d[5],lf22f5d[10],lf22f5d[4],                             lf22f5d[ 9],lf22f5d[3],lf22f5d[ 8],lf22f5d[2],                             lf22f5d[ 7],lf22f5d[1],lf22f5d[ 6],lf22f5d[0]};
      assign zk48b03  ={xwebbea[11],xwebbea[5],xwebbea[10],xwebbea[4],                             xwebbea[ 9],xwebbea[3],xwebbea[ 8],xwebbea[2],                             xwebbea[ 7],xwebbea[1],xwebbea[ 6],xwebbea[0]};      assign gb606fd    ={jebd77d[35:33],jebd77d[17:15],                             jebd77d[32:30],jebd77d[14:12],jebd77d[29:27],jebd77d[11: 9],                             jebd77d[26:24],jebd77d[ 8: 6],jebd77d[23:21],jebd77d[ 5: 3],                             jebd77d[20:18],jebd77d[ 2: 0]};      assign tj37ed    ={gd17aef[35:33],gd17aef[17:15],                             gd17aef[32:30],gd17aef[14:12],gd17aef[29:27],gd17aef[11: 9],                             gd17aef[26:24],gd17aef[ 8: 6],gd17aef[23:21],gd17aef[ 5: 3],                             gd17aef[20:18],gd17aef[ 2: 0]};



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_40

      assign dz4581b    ={sja45eb[9],sja45eb[4],sja45eb[8],sja45eb[3],                             sja45eb[7],sja45eb[2],sja45eb[6],sja45eb[1],                             sja45eb[5],sja45eb[0]};      assign ep2c0df   ={lf22f5d[9],lf22f5d[4],lf22f5d[8],lf22f5d[3],                             lf22f5d[7],lf22f5d[2],lf22f5d[6],lf22f5d[1],                             lf22f5d[5],lf22f5d[0]};      assign zk48b03  ={xwebbea[9],xwebbea[4],xwebbea[8],xwebbea[3],                             xwebbea[7],xwebbea[2],xwebbea[6],xwebbea[1],                             xwebbea[5],xwebbea[0]};      assign gb606fd    ={jebd77d[29:27],jebd77d[14:12],jebd77d[26:24],jebd77d[11: 9],                             jebd77d[23:21],jebd77d[ 8: 6],jebd77d[20:18],jebd77d[ 5: 3],                             jebd77d[17:15],jebd77d[ 2: 0]};      assign tj37ed    ={gd17aef[29:27],gd17aef[14:12],gd17aef[26:24],gd17aef[11: 9],                             gd17aef[23:21],gd17aef[ 8: 6],gd17aef[20:18],gd17aef[ 5: 3],                             gd17aef[17:15],gd17aef[ 2: 0]};



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_32

      assign dz4581b    ={sja45eb[7],sja45eb[3],sja45eb[6],sja45eb[2],                             sja45eb[5],sja45eb[1],sja45eb[4],sja45eb[0]};      assign ep2c0df   ={lf22f5d[7],lf22f5d[3],lf22f5d[6],lf22f5d[2],                             lf22f5d[5],lf22f5d[1],lf22f5d[4],lf22f5d[0]};      assign zk48b03  ={xwebbea[7],xwebbea[3],xwebbea[6],xwebbea[2],                             xwebbea[5],xwebbea[1],xwebbea[4],xwebbea[0]};      assign gb606fd    ={jebd77d[23:21],jebd77d[11: 9],                             jebd77d[20:18],jebd77d[ 8: 6],jebd77d[17:15],jebd77d[ 5: 3],                             jebd77d[14:12],jebd77d[ 2: 0]};      assign tj37ed    ={gd17aef[23:21],gd17aef[11: 9],                             gd17aef[20:18],gd17aef[ 8: 6],gd17aef[17:15],gd17aef[ 5: 3],                             gd17aef[14:12],gd17aef[ 2: 0]};



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_24

      assign dz4581b    ={sja45eb[5],sja45eb[2],sja45eb[4],sja45eb[1],                             sja45eb[3],sja45eb[0]};      assign ep2c0df   ={lf22f5d[5],lf22f5d[2],lf22f5d[4],lf22f5d[1],                             lf22f5d[3],lf22f5d[0]};      assign zk48b03  ={xwebbea[5],xwebbea[2],xwebbea[4],xwebbea[1],                             xwebbea[3],xwebbea[0]};      assign gb606fd    ={jebd77d[17:15],jebd77d[ 8: 6],jebd77d[14:12],jebd77d[ 5: 3],                             jebd77d[11: 9],jebd77d[ 2: 0]};      assign tj37ed    ={gd17aef[17:15],gd17aef[ 8: 6],gd17aef[14:12],gd17aef[ 5: 3],                             gd17aef[11: 9],gd17aef[ 2: 0]};



`endif





`ifdef ddr3_ip_inst_DATA_SIZE_16

      assign dz4581b    ={sja45eb[3],sja45eb[1],sja45eb[2],sja45eb[0]};      assign ep2c0df   ={lf22f5d[3],lf22f5d[1],lf22f5d[2],lf22f5d[0]};      assign zk48b03  ={xwebbea[3],xwebbea[1],xwebbea[2],xwebbea[0]};      assign gb606fd    ={jebd77d[11:9],jebd77d[5:3],jebd77d[8:6],jebd77d[2:0]};      assign tj37ed    ={gd17aef[11:9],gd17aef[5:3],gd17aef[8:6],gd17aef[2:0]};



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_8
      assign dz4581b    = sja45eb;      assign ep2c0df   = lf22f5d;      assign zk48b03  = xwebbea;      assign gb606fd    = jebd77d;      assign tj37ed    = gd17aef;


`endif




`else
    assign dz4581b    = sja45eb;    assign ep2c0df   = lf22f5d;    assign zk48b03  = xwebbea;    assign gb606fd    = jebd77d;    assign tj37ed    = gd17aef;


`endif //x4



`else
    assign dz4581b    = sja45eb;    assign ep2c0df   = lf22f5d;    assign zk48b03  = xwebbea;    assign gb606fd    = jebd77d;    assign tj37ed    = gd17aef;

`endif //RDIMM

   generate     for (kdededd=0; kdededd<`ddr3_ip_inst_DATA_WIDTH; kdededd=kdededd+1)       begin: she7c8f  ie3e47d_ddr3_ip_inst ie3e47d             (.sclk       (sclk),              .eclk       (eclk),              .rst_n      (rst_n),              .ddr_rst    (ddr_rst),              .sja45eb     (dz4581b[kdededd/`ddr3_ip_inst_DQSW]),              .lf22f5d    (ep2c0df[kdededd/`ddr3_ip_inst_DQSW]),              .mgbcab2   (tj37ed[3*(kdededd/`ddr3_ip_inst_DQSW)]),              .me5644b   (tj37ed[3*(kdededd/`ddr3_ip_inst_DQSW)+1]),              .ng8961f   (tj37ed[3*(kdededd/`ddr3_ip_inst_DQSW)+2]),              .gbc3eab   (gb606fd[3*(kdededd/`ddr3_ip_inst_DQSW)]),              .zkd5700   (gb606fd[3*(kdededd/`ddr3_ip_inst_DQSW)+1]),              .uie00e9   (gb606fd[3*(kdededd/`ddr3_ip_inst_DQSW)+2]),              .xwebbea   (zk48b03[kdededd/`ddr3_ip_inst_DQSW]),
              .tu48d78 (by5df53[kdededd]),              .jraf0c3 (by5df53[kdededd+  `ddr3_ip_inst_DATA_WIDTH]),              .yz18785 (by5df53[kdededd+2*`ddr3_ip_inst_DATA_WIDTH]),              .suf0b62 (by5df53[kdededd+3*`ddr3_ip_inst_DATA_WIDTH]),


`ifdef ddr3_ip_inst_SIM
              .ho6c46e  (ba1bf6f[4*kdededd]),              .mg8dcc2  (ba1bf6f[4*kdededd+1]),              .ym98473  (ba1bf6f[4*kdededd+2]),              .jr8e67a  (ba1bf6f[4*kdededd+3]),

`else
              .ho6c46e  (uiefa9a[4*kdededd]),              .mg8dcc2  (uiefa9a[4*kdededd+1]),              .ym98473  (uiefa9a[4*kdededd+2]),              .jr8e67a  (uiefa9a[4*kdededd+3]),

`endif
              .cm7d4d1       (cm7d4d1[kdededd]),              .suea688         (suea688[kdededd])     );       end   endgenerate
endmodule
`timescale 1 ns / 100 ps
module ie3e47d_ddr3_ip_inst (
                 sclk,
                 eclk,
                 rst_n,
                 ddr_rst,
                 sja45eb,
                 lf22f5d,
                 mgbcab2,
                 me5644b,
                 ng8961f,
                 gbc3eab,
                 zkd5700,
                 uie00e9,
                 xwebbea,



                 tu48d78,
                 jraf0c3,
                 yz18785,
                 suf0b62,
                 ho6c46e,
                 mg8dcc2,
                 ym98473,
                 jr8e67a,
                 cm7d4d1,
                 suea688
                 );
input                 sclk;
input                 eclk;
input                 rst_n;
input                 ddr_rst;
input                 sja45eb;
input                 lf22f5d;
input                 mgbcab2;
input                 me5644b;
input                 ng8961f;
input                 gbc3eab;
input                 zkd5700;
input                 uie00e9;
input                 tu48d78;
input                 jraf0c3;
input                 yz18785;
input                 suf0b62;
input                 xwebbea;
output                ho6c46e;
output                mg8dcc2;
output                ym98473;
output                jr8e67a;
output                cm7d4d1;
inout                 suea688;
wire                  tu523fc;
wire                  hd91fe2;
wire                  oh8ff16;
wire                  of7f8b4;
wire                  nrfc5a4;
wire                  cm7d4d1;
wire                  db16935;


















  IDDRX2DQA mtb49af(.D(oh8ff16), .DQSR90(sja45eb), .ECLK(eclk), .SCLK(sclk), .RST(ddr_rst),                         .RDPNTR2(ng8961f), .RDPNTR1(me5644b), .RDPNTR0(mgbcab2), .WRPNTR2(uie00e9), .WRPNTR1(zkd5700),  .WRPNTR0(gbc3eab), .Q0(ho6c46e), .Q1(mg8dcc2), .Q2(ym98473), .Q3(jr8e67a), .QWL(cm7d4d1));


  ODDRX2DQA  #(.GSR("ENABLED"))  suc410b (.D0(tu48d78), .D1(jraf0c3), .D2(yz18785), .D3(suf0b62), .RST(ddr_rst), .ECLK(eclk), .SCLK(sclk), .DQSW270(lf22f5d), .Q(tu523fc));



assign #`ddr3_ip_inst_DQ_TRC_DEL hd91fe2   = tu523fc;
assign #`ddr3_ip_inst_DQ_TRC_DEL nrfc5a4 = xwebbea;
assign #`ddr3_ip_inst_DQ_TRC_DEL oh8ff16      = db16935;
BB jcebf54 (.I(hd91fe2), .T(nrfc5a4), .O(of7f8b4), .B(suea688))     ;
DELAYG #(.DEL_MODE("DQS_ALIGNED_X2"),.DEL_VALUE(0))       eca3f0d (.A(of7f8b4), .Z(db16935));
endmodule





`timescale 1 ns / 100 ps
module zke1a4e_ddr3_ip_inst (
    ddr_rst,
    eclk,
    sclk,
    lf22f5d,
    ic728cd,

    nt94668
);
input                        ddr_rst;
input                        eclk;
input                        sclk;
input  [`ddr3_ip_inst_DQS_WIDTH -1 :0]    lf22f5d;
input  [`ddr3_ip_inst_USER_DM   -1 :0]    ic728cd;
output [`ddr3_ip_inst_DQS_WIDTH -1 :0]    nt94668;
wire   [`ddr3_ip_inst_DQS_WIDTH -1 :0]    nt94668;
wire   [`ddr3_ip_inst_DQS_WIDTH -1 :0]    ep360fc;
genvar kdededd;
reg je83f2e;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] uk1f972;
reg [`ddr3_ip_inst_USER_DM - 1 : 0] xjfcb91;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] ice5c8f;
reg [2047:0] swa7;
wire [3:0] ou538;



localparam kf29c0 = 4,do14e04 = 32'hfdffc70b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;




generate     for (kdededd=0; kdededd<`ddr3_ip_inst_DQS_WIDTH; kdededd=kdededd+1)       begin: she7c8f             ODDRX2DQA  #(.GSR("ENABLED"))             gb51fa1       (.D0(ic728cd[kdededd/(8/`ddr3_ip_inst_DQSW)]),          .D1(ic728cd[kdededd/(8/`ddr3_ip_inst_DQSW)+   `ddr3_ip_inst_DATA_WIDTH/8]),  .D2(ic728cd[kdededd/(8/`ddr3_ip_inst_DQSW)+ 2*`ddr3_ip_inst_DATA_WIDTH/8]),  .D3(ic728cd[kdededd/(8/`ddr3_ip_inst_DQSW)+ 3*`ddr3_ip_inst_DATA_WIDTH/8]),          .RST(ddr_rst), .ECLK(eclk), .SCLK(sclk), .DQSW270(lf22f5d[kdededd]), .Q(ep360fc[kdededd]));
       end   endgenerate      OB ec98669  [`ddr3_ip_inst_DQS_WIDTH -1:0] (.I(ep360fc), .O(nt94668)) ;
always@* begin je83f2e<=ou538[0];uk1f972<={lf22f5d>>1,ou538[1]};xjfcb91<={ic728cd>>1,ou538[2]};ice5c8f<={ep360fc>>1,ou538[3]};end
always@* begin swa7[2047]<=lf22f5d[0];swa7[2046]<=ic728cd[0];swa7[2044]<=ep360fc[0];swa7[1023]<=ddr_rst;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule






`timescale 1 ns / 100 ps
module rge1e69_ddr3_ip_inst (
    
    rst_n,
    ddr_rst,
    hbcd28b,
    
    sclk,
    eclk,
    wj5179f,
    jr8bcfd,
    al5e7ee,
    pff3f74,
    qv9fba6,
    qtfdd35,
    faee9ad,
    pf74d6b,

    swa6b5f,
    je35af9,
    xyad7cb,
    dz6be5b,
    zx5f2df,
    hbf96fe,

    end6a5a,
    gb5bfb1,

    gd17aef,
    jebd77d,

    
    dqsdel  , 

    
    ohb1ad7,
    lf22f5d,
    sja45eb,
    rt5af46,
    zxd7a37,
    fcbd1bf,

    xwebbea,

    
    ic46fd4

);
input                          rst_n;
input                          ddr_rst;
input                          hbcd28b;
input                          sclk;
input                          eclk;
input   [`ddr3_ip_inst_DQS_WIDTH-1:0]       dqsdel;
input   [8*(`ddr3_ip_inst_DQS_WIDTH)-1:0]   wj5179f;
input                          jr8bcfd;
input   [`ddr3_ip_inst_DQS_WIDTH-1:0]       al5e7ee;
input   [`ddr3_ip_inst_DQS_WIDTH-1:0]       pff3f74;
input                          qv9fba6;
input                          qtfdd35;
input   [`ddr3_ip_inst_DQS_WIDTH-1:0]       faee9ad;
input   [`ddr3_ip_inst_DQS_WIDTH-1:0]       pf74d6b;
input   [`ddr3_ip_inst_DQS_WIDTH-1:0]       swa6b5f;
input   [`ddr3_ip_inst_DQS_WIDTH-1:0]       je35af9;
input   [`ddr3_ip_inst_DQS_WIDTH-1:0]       xyad7cb;
input   [`ddr3_ip_inst_DQS_WIDTH-1:0]       dz6be5b;
input   [`ddr3_ip_inst_DQS_WIDTH-1:0]       zx5f2df;
input   [`ddr3_ip_inst_DQS_WIDTH-1:0]       hbf96fe;
input   [4*(`ddr3_ip_inst_DQS_WIDTH)-1:0]   end6a5a;
input   [3*(`ddr3_ip_inst_DQS_WIDTH)-1:0]   gb5bfb1;
output  [3*(`ddr3_ip_inst_DQS_WIDTH)-1:0]   gd17aef;
output  [3*(`ddr3_ip_inst_DQS_WIDTH)-1:0]   jebd77d;
output  [`ddr3_ip_inst_DQS_WIDTH-1:0]       ohb1ad7;
output  [`ddr3_ip_inst_DQS_WIDTH-1:0]       lf22f5d;
output  [`ddr3_ip_inst_DQS_WIDTH-1:0]       sja45eb;
output  [`ddr3_ip_inst_DQS_WIDTH-1:0]       rt5af46;
output  [`ddr3_ip_inst_DQS_WIDTH-1:0]       zxd7a37;
output  [`ddr3_ip_inst_DQS_WIDTH-1:0]       fcbd1bf;
output  [`ddr3_ip_inst_DQS_WIDTH-1:0]       xwebbea;
inout   [`ddr3_ip_inst_DQS_WIDTH-1:0]       ic46fd4;
wire   [3*(`ddr3_ip_inst_DQS_WIDTH)-1:0]   gd17aef;
wire   [3*(`ddr3_ip_inst_DQS_WIDTH)-1:0]   jebd77d;
wire   [`ddr3_ip_inst_DQS_WIDTH-1:0]       xwebbea;
wire   [`ddr3_ip_inst_DQS_WIDTH-1:0]       jcda299 ;
wire   [`ddr3_ip_inst_DQS_WIDTH-1:0]       god14ca ;
reg    [`ddr3_ip_inst_DQS_WIDTH-1:0]       kf8a651 ;
wire   [`ddr3_ip_inst_DQS_WIDTH-1:0]       ohb1ad7;
wire   [`ddr3_ip_inst_DQS_WIDTH-1:0]       lf22f5d;
wire   [`ddr3_ip_inst_DQS_WIDTH-1:0]       sja45eb;
wire   [`ddr3_ip_inst_DQS_WIDTH-1:0]       rt5af46;
wire   [`ddr3_ip_inst_DQS_WIDTH-1:0]       zxd7a37;
wire   [`ddr3_ip_inst_DQS_WIDTH-1:0]       fcbd1bf;

`ifdef ddr3_ip_inst_SIM 
wire  [(`ddr3_ip_inst_DQS_WIDTH)-1:0] ic43701;
reg   [(`ddr3_ip_inst_DQS_WIDTH)-1:0] ri1b809;
wire  [(`ddr3_ip_inst_DQS_WIDTH)-1:0] yxdc04b;

`ifndef ddr3_ip_inst_DV_DLY_BITS

`else

`ifdef ddr3_ip_inst_DATA_SIZE_8

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_16

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_24

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_32

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_40

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_48

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_56

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_64

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_72

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`endif

`endif
genvar kdededd;

`ifdef ddr3_ip_inst_SIM

`else

`endif
reg je83f2e;
reg ph974a;
reg [8 * (`ddr3_ip_inst_DQS_WIDTH) - 1 : 0] wj4ba56;
reg zk5d2b4;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] lde95a3;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] ld4ad1f;
reg os568fe;
reg wlb47f1;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] swa3f8c;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] ie1fc61;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] dmfe309;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] faf184b;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] ri8c25b;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] nr612da;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] xl96d7;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] ip4b6be;
reg [4 * (`ddr3_ip_inst_DQS_WIDTH) - 1 : 0] ana4995;
reg [3 * (`ddr3_ip_inst_DQS_WIDTH) - 1 : 0] hodafac;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] xjd7d63;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] qvbeb1f;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] ayf58fc;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] coac7e1;
reg [2047:0] swa7;
wire [21:0] ou538;

`ifdef ddr3_ip_inst_SIM 

`ifndef ddr3_ip_inst_DV_DLY_BITS

`else

`ifdef ddr3_ip_inst_DATA_SIZE_8

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_16

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_24

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_32

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_40

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_48

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_56

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_64

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_72

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`endif

`endif


`ifdef ddr3_ip_inst_SIM

`else

`endif

localparam kf29c0 = 22,do14e04 = 32'hfdffd14b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`ifdef ddr3_ip_inst_SIM 


`ifndef ddr3_ip_inst_DV_DLY_BITS


`else


`ifdef ddr3_ip_inst_DATA_SIZE_8


`ifdef ddr3_ip_inst_x4


`else


`endif


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_16


`ifdef ddr3_ip_inst_x4


`else


`endif


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_24


`ifdef ddr3_ip_inst_x4


`else


`endif


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_32


`ifdef ddr3_ip_inst_x4


`else


`endif


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_40


`ifdef ddr3_ip_inst_x4


`else


`endif


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_48


`ifdef ddr3_ip_inst_x4


`else


`endif


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_56


`ifdef ddr3_ip_inst_x4


`else


`endif


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_64


`ifdef ddr3_ip_inst_x4


`else


`endif


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_72


`ifdef ddr3_ip_inst_x4


`else


`endif


`endif


`endif


`endif


`ifdef ddr3_ip_inst_SIM


`else


`endif





                                             































assign jcda299 = swa3f8c;
assign god14ca = ie1fc61;
always @(posedge sclk or negedge rst_n) begin   if (!rst_n)      kf8a651 <= 1'b0;   else      kf8a651 <= {`ddr3_ip_inst_DQS_WIDTH{zk5d2b4}};
end







`ifdef ddr3_ip_inst_SIM 




`ifndef ddr3_ip_inst_DV_DLY_BITS

assign ohb1ad7 = ic43701;

`else


always @(posedge sclk or negedge rst_n) begin   if (!rst_n)      ri1b809 <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};   else      ri1b809 <= ic43701;
end assign yxdc04b = `ddr3_ip_inst_DV_DLY_BITS;



`ifdef ddr3_ip_inst_DATA_SIZE_8



`ifdef ddr3_ip_inst_x4
 assign ohb1ad7 = {             yxdc04b[1] ? ri1b809[1] : ic43701[1],             yxdc04b[0] ? ri1b809[0] : ic43701[0]  };

`else
 assign ohb1ad7 = yxdc04b ? ri1b809 : ic43701 ;


`endif



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_16



`ifdef ddr3_ip_inst_x4
 assign ohb1ad7 = {             yxdc04b[3] ? ri1b809[3] : ic43701[3],             yxdc04b[2] ? ri1b809[2] : ic43701[2],             yxdc04b[1] ? ri1b809[1] : ic43701[1],             yxdc04b[0] ? ri1b809[0] : ic43701[0]  };

`else
 assign ohb1ad7 = {             yxdc04b[1] ? ri1b809[1] : ic43701[1],             yxdc04b[0] ? ri1b809[0] : ic43701[0]  };

`endif



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_24



`ifdef ddr3_ip_inst_x4
 assign ohb1ad7 = {             yxdc04b[5] ? ri1b809[5] : ic43701[5],             yxdc04b[4] ? ri1b809[4] : ic43701[4],             yxdc04b[3] ? ri1b809[3] : ic43701[3],             yxdc04b[2] ? ri1b809[2] : ic43701[2],             yxdc04b[1] ? ri1b809[1] : ic43701[1],             yxdc04b[0] ? ri1b809[0] : ic43701[0]  };

`else
 assign ohb1ad7 = {             yxdc04b[2] ? ri1b809[2] : ic43701[2],             yxdc04b[1] ? ri1b809[1] : ic43701[1],             yxdc04b[0] ? ri1b809[0] : ic43701[0]  };

`endif



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_32



`ifdef ddr3_ip_inst_x4
 assign ohb1ad7 = {             yxdc04b[7] ? ri1b809[7] : ic43701[7],             yxdc04b[6] ? ri1b809[6] : ic43701[6],             yxdc04b[5] ? ri1b809[5] : ic43701[5],             yxdc04b[4] ? ri1b809[4] : ic43701[4],             yxdc04b[3] ? ri1b809[3] : ic43701[3],             yxdc04b[2] ? ri1b809[2] : ic43701[2],             yxdc04b[1] ? ri1b809[1] : ic43701[1],             yxdc04b[0] ? ri1b809[0] : ic43701[0]  };

`else
 assign ohb1ad7 = {             yxdc04b[3] ? ri1b809[3] : ic43701[3],             yxdc04b[2] ? ri1b809[2] : ic43701[2],             yxdc04b[1] ? ri1b809[1] : ic43701[1],             yxdc04b[0] ? ri1b809[0] : ic43701[0]  };

`endif



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_40



`ifdef ddr3_ip_inst_x4
 assign ohb1ad7 = {             yxdc04b[ 9] ? ri1b809[ 9] : ic43701[ 9],             yxdc04b[ 8] ? ri1b809[ 8] : ic43701[ 8],             yxdc04b[ 7] ? ri1b809[ 7] : ic43701[ 7],             yxdc04b[ 6] ? ri1b809[ 6] : ic43701[ 6],             yxdc04b[ 5] ? ri1b809[ 5] : ic43701[ 5],             yxdc04b[ 4] ? ri1b809[ 4] : ic43701[ 4],             yxdc04b[ 3] ? ri1b809[ 3] : ic43701[ 3],             yxdc04b[ 2] ? ri1b809[ 2] : ic43701[ 2],             yxdc04b[ 1] ? ri1b809[ 1] : ic43701[ 1],             yxdc04b[ 0] ? ri1b809[ 0] : ic43701[ 0]  };

`else
 assign ohb1ad7 = {             yxdc04b[4] ? ri1b809[4] : ic43701[4],             yxdc04b[3] ? ri1b809[3] : ic43701[3],             yxdc04b[2] ? ri1b809[2] : ic43701[2],             yxdc04b[1] ? ri1b809[1] : ic43701[1],             yxdc04b[0] ? ri1b809[0] : ic43701[0]  };

`endif



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_48



`ifdef ddr3_ip_inst_x4
 assign ohb1ad7 = {             yxdc04b[11] ? ri1b809[11] : ic43701[11],             yxdc04b[10] ? ri1b809[10] : ic43701[10],             yxdc04b[ 9] ? ri1b809[ 9] : ic43701[ 9],             yxdc04b[ 8] ? ri1b809[ 8] : ic43701[ 8],             yxdc04b[ 7] ? ri1b809[ 7] : ic43701[ 7],             yxdc04b[ 6] ? ri1b809[ 6] : ic43701[ 6],             yxdc04b[ 5] ? ri1b809[ 5] : ic43701[ 5],             yxdc04b[ 4] ? ri1b809[ 4] : ic43701[ 4],             yxdc04b[ 3] ? ri1b809[ 3] : ic43701[ 3],             yxdc04b[ 2] ? ri1b809[ 2] : ic43701[ 2],             yxdc04b[ 1] ? ri1b809[ 1] : ic43701[ 1],             yxdc04b[ 0] ? ri1b809[ 0] : ic43701[ 0]  };

`else
 assign ohb1ad7 = {             yxdc04b[5] ? ri1b809[5] : ic43701[5],             yxdc04b[4] ? ri1b809[4] : ic43701[4],             yxdc04b[3] ? ri1b809[3] : ic43701[3],             yxdc04b[2] ? ri1b809[2] : ic43701[2],             yxdc04b[1] ? ri1b809[1] : ic43701[1],             yxdc04b[0] ? ri1b809[0] : ic43701[0]  };

`endif



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_56



`ifdef ddr3_ip_inst_x4
 assign ohb1ad7 = {             yxdc04b[13] ? ri1b809[13] : ic43701[13],             yxdc04b[12] ? ri1b809[12] : ic43701[12],             yxdc04b[11] ? ri1b809[11] : ic43701[11],             yxdc04b[10] ? ri1b809[10] : ic43701[10],             yxdc04b[ 9] ? ri1b809[ 9] : ic43701[ 9],             yxdc04b[ 8] ? ri1b809[ 8] : ic43701[ 8],             yxdc04b[ 7] ? ri1b809[ 7] : ic43701[ 7],             yxdc04b[ 6] ? ri1b809[ 6] : ic43701[ 6],             yxdc04b[ 5] ? ri1b809[ 5] : ic43701[ 5],             yxdc04b[ 4] ? ri1b809[ 4] : ic43701[ 4],             yxdc04b[ 3] ? ri1b809[ 3] : ic43701[ 3],             yxdc04b[ 2] ? ri1b809[ 2] : ic43701[ 2],             yxdc04b[ 1] ? ri1b809[ 1] : ic43701[ 1],             yxdc04b[ 0] ? ri1b809[ 0] : ic43701[ 0]  };

`else
 assign ohb1ad7 = {             yxdc04b[6] ? ri1b809[6] : ic43701[6],             yxdc04b[5] ? ri1b809[5] : ic43701[5],             yxdc04b[4] ? ri1b809[4] : ic43701[4],             yxdc04b[3] ? ri1b809[3] : ic43701[3],             yxdc04b[2] ? ri1b809[2] : ic43701[2],             yxdc04b[1] ? ri1b809[1] : ic43701[1],             yxdc04b[0] ? ri1b809[0] : ic43701[0]  };

`endif



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_64



`ifdef ddr3_ip_inst_x4
 assign ohb1ad7 = {             yxdc04b[15] ? ri1b809[15] : ic43701[15],             yxdc04b[14] ? ri1b809[14] : ic43701[14],             yxdc04b[13] ? ri1b809[13] : ic43701[13],             yxdc04b[12] ? ri1b809[12] : ic43701[12],             yxdc04b[11] ? ri1b809[11] : ic43701[11],             yxdc04b[10] ? ri1b809[10] : ic43701[10],             yxdc04b[ 9] ? ri1b809[ 9] : ic43701[ 9],             yxdc04b[ 8] ? ri1b809[ 8] : ic43701[ 8],             yxdc04b[ 7] ? ri1b809[ 7] : ic43701[ 7],             yxdc04b[ 6] ? ri1b809[ 6] : ic43701[ 6],             yxdc04b[ 5] ? ri1b809[ 5] : ic43701[ 5],             yxdc04b[ 4] ? ri1b809[ 4] : ic43701[ 4],             yxdc04b[ 3] ? ri1b809[ 3] : ic43701[ 3],             yxdc04b[ 2] ? ri1b809[ 2] : ic43701[ 2],             yxdc04b[ 1] ? ri1b809[ 1] : ic43701[ 1],             yxdc04b[ 0] ? ri1b809[ 0] : ic43701[ 0]  };

`else
 assign ohb1ad7 = {             yxdc04b[7] ? ri1b809[7] : ic43701[7],             yxdc04b[6] ? ri1b809[6] : ic43701[6],             yxdc04b[5] ? ri1b809[5] : ic43701[5],             yxdc04b[4] ? ri1b809[4] : ic43701[4],             yxdc04b[3] ? ri1b809[3] : ic43701[3],             yxdc04b[2] ? ri1b809[2] : ic43701[2],             yxdc04b[1] ? ri1b809[1] : ic43701[1],             yxdc04b[0] ? ri1b809[0] : ic43701[0]  };

`endif



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_72



`ifdef ddr3_ip_inst_x4
 assign ohb1ad7 = {             yxdc04b[17] ? ri1b809[17] : ic43701[17],             yxdc04b[16] ? ri1b809[16] : ic43701[16],             yxdc04b[15] ? ri1b809[15] : ic43701[15],             yxdc04b[14] ? ri1b809[14] : ic43701[14],             yxdc04b[13] ? ri1b809[13] : ic43701[13],             yxdc04b[12] ? ri1b809[12] : ic43701[12],             yxdc04b[11] ? ri1b809[11] : ic43701[11],             yxdc04b[10] ? ri1b809[10] : ic43701[10],             yxdc04b[ 9] ? ri1b809[ 9] : ic43701[ 9],             yxdc04b[ 8] ? ri1b809[ 8] : ic43701[ 8],             yxdc04b[ 7] ? ri1b809[ 7] : ic43701[ 7],             yxdc04b[ 6] ? ri1b809[ 6] : ic43701[ 6],             yxdc04b[ 5] ? ri1b809[ 5] : ic43701[ 5],             yxdc04b[ 4] ? ri1b809[ 4] : ic43701[ 4],             yxdc04b[ 3] ? ri1b809[ 3] : ic43701[ 3],             yxdc04b[ 2] ? ri1b809[ 2] : ic43701[ 2],             yxdc04b[ 1] ? ri1b809[ 1] : ic43701[ 1],             yxdc04b[ 0] ? ri1b809[ 0] : ic43701[ 0]  };

`else
 assign ohb1ad7 = {             yxdc04b[8] ? ri1b809[8] : ic43701[8],             yxdc04b[7] ? ri1b809[7] : ic43701[7],             yxdc04b[6] ? ri1b809[6] : ic43701[6],             yxdc04b[5] ? ri1b809[5] : ic43701[5],             yxdc04b[4] ? ri1b809[4] : ic43701[4],             yxdc04b[3] ? ri1b809[3] : ic43701[3],             yxdc04b[2] ? ri1b809[2] : ic43701[2],             yxdc04b[1] ? ri1b809[1] : ic43701[1],             yxdc04b[0] ? ri1b809[0] : ic43701[0]  };

`endif



`endif





`endif



`endif



generate     for (kdededd=0; kdededd<(`ddr3_ip_inst_DQS_WIDTH); kdededd=kdededd+1)       begin: she7c8f  psda92e_ddr3_ip_inst psda92e (                     .hbcd28b  (ph974a),                     .rst_n          (rst_n),                     .ddr_rst        (je83f2e),                     .sclk           (sclk),                     .eclk           (eclk),                     .dqsdel         (xjd7d63[kdededd]),                     .wj5179f    (wj4ba56[(8*kdededd+7):(8*kdededd)]),                     .jr8bcfd    (coac7e1[kdededd]),                     .al5e7ee (lde95a3[kdededd]),                     .pff3f74 (ld4ad1f[kdededd]),                     .qv9fba6       (os568fe),                     .qtfdd35       (wlb47f1),                     .faee9ad       (qvbeb1f[kdededd]),                     .pf74d6b       (ayf58fc[kdededd]),                     .swa6b5f       (dmfe309[kdededd]),                     .je35af9        (faf184b[kdededd]),                     .xyad7cb         (ri8c25b[kdededd]),                     .dz6be5b       (nr612da[kdededd]),                     .zx5f2df        (xl96d7[kdededd]),                     .hbf96fe         (ip4b6be[kdededd]),
                     .end6a5a           (ana4995[(4*kdededd+3):(4*kdededd)]),                     .gb5bfb1     (hodafac[(3*kdededd+2):(3*kdededd)]),                     .gd17aef         (gd17aef[(3*kdededd+2):(3*kdededd)]),                     .jebd77d         (jebd77d[(3*kdededd+2):(3*kdededd)]),

`ifdef ddr3_ip_inst_SIM
                     .ohb1ad7      (ic43701[kdededd]),

`else
                     .ohb1ad7      (ohb1ad7[kdededd]),

`endif
                     .lf22f5d        (lf22f5d[kdededd]),                     .sja45eb         (sja45eb[kdededd]),                     .rt5af46       (rt5af46[kdededd]),                     .zxd7a37        (zxd7a37[kdededd]),                     .fcbd1bf        (fcbd1bf[kdededd]),                     .xwebbea       (xwebbea[kdededd]),                     .ic46fd4            (ic46fd4[kdededd]));       end    endgenerate

always@* begin je83f2e<=ou538[0];ph974a<=ou538[1];wj4ba56<={wj5179f>>1,ou538[2]};zk5d2b4<=ou538[3];lde95a3<={al5e7ee>>1,ou538[4]};ld4ad1f<={pff3f74>>1,ou538[5]};os568fe<=ou538[6];wlb47f1<=ou538[7];swa3f8c<={faee9ad>>1,ou538[8]};ie1fc61<={pf74d6b>>1,ou538[9]};dmfe309<={swa6b5f>>1,ou538[10]};faf184b<={je35af9>>1,ou538[11]};ri8c25b<={xyad7cb>>1,ou538[12]};nr612da<={dz6be5b>>1,ou538[13]};xl96d7<={zx5f2df>>1,ou538[14]};ip4b6be<={hbf96fe>>1,ou538[15]};ana4995<={end6a5a>>1,ou538[16]};hodafac<={gb5bfb1>>1,ou538[17]};xjd7d63<={dqsdel>>1,ou538[18]};qvbeb1f<={jcda299>>1,ou538[19]};ayf58fc<={god14ca>>1,ou538[20]};coac7e1<={kf8a651>>1,ou538[21]};end
always@* begin swa7[2047]<=hbcd28b;swa7[2046]<=wj5179f[0];swa7[2044]<=jr8bcfd;swa7[2040]<=al5e7ee[0];swa7[2033]<=pff3f74[0];swa7[2019]<=qv9fba6;swa7[1990]<=qtfdd35;swa7[1939]<=dqsdel[0];swa7[1933]<=faee9ad[0];swa7[1831]<=jcda299[0];swa7[1819]<=pf74d6b[0];swa7[1778]<=hbf96fe[0];swa7[1615]<=god14ca[0];swa7[1591]<=swa6b5f[0];swa7[1508]<=end6a5a[0];swa7[1182]<=kf8a651[0];swa7[1135]<=je35af9[0];swa7[1023]<=ddr_rst;swa7[969]<=gb5bfb1[0];swa7[889]<=zx5f2df[0];swa7[444]<=dz6be5b[0];swa7[222]<=xyad7cb[0];end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule



`timescale 1 ns / 100 ps
module psda92e_ddr3_ip_inst (
          hbcd28b,
          rst_n,
          ddr_rst,
          sclk,
          eclk,
          dqsdel,
          wj5179f,
          jr8bcfd,
          al5e7ee,
          pff3f74,
          qv9fba6,
          qtfdd35,
          faee9ad,
          pf74d6b,

          swa6b5f,
          je35af9,
          xyad7cb,
          dz6be5b,
          zx5f2df,
          hbf96fe,

          end6a5a,
          gb5bfb1,
	  gd17aef,
	  jebd77d,

	  lf22f5d,
	  sja45eb,
	  ohb1ad7,
	  rt5af46,
	  zxd7a37,
	  fcbd1bf,
	  xwebbea,
          ic46fd4
          );
input          hbcd28b;
input          rst_n;
input          ddr_rst;
input          sclk;
input          eclk;
input          dqsdel;
input [7:0]    wj5179f;
input          jr8bcfd;
input          al5e7ee;
input          pff3f74;
input          qv9fba6;
input          qtfdd35;
input          faee9ad;
input          pf74d6b;
input          swa6b5f;
input          je35af9;
input          xyad7cb;
input          dz6be5b;
input          zx5f2df;
input          hbf96fe;
input  [3:0]   end6a5a;
input  [2:0]   gb5bfb1;
output [2:0]   gd17aef;
output [2:0]   jebd77d;
output         ohb1ad7;
output         lf22f5d;
output         sja45eb;
output         rt5af46;
output         zxd7a37;
output         fcbd1bf;
output         xwebbea;
inout          ic46fd4;
wire           phaa6a7;
wire           kq5353e;
wire           mt9a9f0;
wire           icd4f85;
wire           vka7c28;
wire           lf22f5d;
wire           sja45eb;
wire           ohb1ad7;
wire           rt5af46;
wire           zxd7a37;
wire           fcbd1bf;
wire           xwebbea;
wire           me4ce7d;
wire           ay673e9;
wire [2:0]     gd17aef;
wire [2:0]     jebd77d;
reg qg7d22a;

`ifdef ddr3_ip_inst_SIM
wire           dze9150;

`else

`endif

`ifdef ddr3_ip_inst_SIM
wire           xw48a87;
wire           nr4543b;
wire           ba2a1de;
wire           fn50ef2;

`endif

`ifdef ddr3_ip_inst_SIM

`else

`endif
reg ph974a;
reg je83f2e;
reg xjd7d63;
reg [7 : 0] wj4ba56;
reg zk5d2b4;
reg lde95a3;
reg ld4ad1f;
reg os568fe;
reg wlb47f1;
reg swa3f8c;
reg ie1fc61;
reg dmfe309;
reg faf184b;
reg ri8c25b;
reg nr612da;
reg xl96d7;
reg ip4b6be;
reg [3 : 0] ana4995;
reg [2 : 0] hodafac;
reg kq56847;
reg qvb4239;
reg yza11cc;
reg gd8e65;
reg fa4732d;
reg ux3996b;
reg mrccb5d;
reg cz65aed;
reg [2047:0] swa7;
wire [26:0] ou538;



`ifdef ddr3_ip_inst_SIM


`else


`endif

`ifdef ddr3_ip_inst_SIM

`endif

`ifdef ddr3_ip_inst_SIM


`else


`endif


localparam kf29c0 = 27,do14e04 = 32'hfdffe0cb;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`ifdef ddr3_ip_inst_SIM


`else


`endif


`ifdef ddr3_ip_inst_SIM


`endif


`ifdef ddr3_ip_inst_SIM


`else


`endif







assign  tj98f8  = ~ld4ad1f & ~lde95a3;  
assign  ec1f1c3        = (zk5d2b4 ) ? 1'b0 :  os568fe;
assign  hd3862f        = (zk5d2b4 ) ? 1'b0 :  wlb47f1;
assign  byc5fac = zk5d2b4 ? 1'b0 : lde95a3; 
assign  me4ce7d = zk5d2b4 ? 1'b0 : ld4ad1f;
assign  ay673e9 = zk5d2b4 ? cz65aed : lde95a3; 
always @(posedge sclk or negedge rst_n) begin   if (!rst_n)      qg7d22a <= 1'b0;   else      qg7d22a <= lde95a3;
end




   ODDRX2DQSB ngb83e8 (.D0(1'b0), .D1(ay673e9), .D2(1'b0), .D3(me4ce7d), .RST(ddr_rst), .ECLK(eclk), .SCLK(sclk), .DQSW(icd4f85), .Q(kq5353e));



  TSHX2DQSA  #(.GSR("ENABLED"))  fn40ad8 (.T0(ec1f1c3), .T1(hd3862f), .SCLK(sclk), .ECLK(eclk), .DQSW(icd4f85), .RST(ddr_rst), .Q(phaa6a7));







`ifdef ddr3_ip_inst_SIM

DQSBUFM   #(.GSR("ENABLED"),               .DQS_LI_DEL_ADJ("MINUS"),               .DQS_LI_DEL_VAL(1),               .DQS_LO_DEL_ADJ("MINUS"),               .DQS_LO_DEL_VAL(4))   ba4df3(.RST(ddr_rst), .ECLK(eclk), .SCLK(sclk), .DQSI(dze9150),       .READ1(end6a5a[1]), .READ0(end6a5a[0]),       .READCLKSEL2(gb5bfb1[2]), .READCLKSEL1(gb5bfb1[1]), .READCLKSEL0(gb5bfb1[0]),       .DDRDEL(dqsdel),       .DYNDELAY7(wj5179f[7]), .DYNDELAY6(wj5179f[6]), .DYNDELAY5(wj5179f[5]), .DYNDELAY4(wj5179f[4]),       .DYNDELAY3(wj5179f[3]), .DYNDELAY2(wj5179f[2]), .DYNDELAY1(wj5179f[1]), .DYNDELAY0(wj5179f[0]),       .RDLOADN(swa6b5f), .RDMOVE(je35af9), .RDDIRECTION(xyad7cb),       .WRLOADN(dz6be5b), .WRMOVE(zx5f2df), .WRDIRECTION(hbf96fe),       .PAUSE(hbcd28b), .DQSR90(sja45eb), .DQSW(icd4f85), .DQSW270(lf22f5d),       .RDPNTR2(gd17aef[2]), .RDPNTR1(gd17aef[1]), .RDPNTR0(gd17aef[0]),       .WRPNTR2(jebd77d[2]), .WRPNTR1(jebd77d[1]), .WRPNTR0(jebd77d[0]),       .DATAVALID(ohb1ad7), .BURSTDET(rt5af46), .RDCFLAG(zxd7a37), .WRCFLAG(fcbd1bf)       );

`else

   DQSBUFM   #(.GSR("ENABLED"),               .DQS_LI_DEL_ADJ("MINUS"),               .DQS_LI_DEL_VAL(1),               .DQS_LO_DEL_ADJ("MINUS"),               .DQS_LO_DEL_VAL(4))   ba4df3(.RST(ddr_rst), .ECLK(eclk), .SCLK(sclk), .DQSI(vka7c28),       .READ1(end6a5a[1]), .READ0(end6a5a[0]),       .READCLKSEL2(gb5bfb1[2]), .READCLKSEL1(gb5bfb1[1]), .READCLKSEL0(gb5bfb1[0]),       .DDRDEL(dqsdel),       .DYNDELAY7(wj5179f[7]), .DYNDELAY6(wj5179f[6]), .DYNDELAY5(wj5179f[5]), .DYNDELAY4(wj5179f[4]),       .DYNDELAY3(wj5179f[3]), .DYNDELAY2(wj5179f[2]), .DYNDELAY1(wj5179f[1]), .DYNDELAY0(wj5179f[0]),       .RDLOADN(swa6b5f), .RDMOVE(je35af9), .RDDIRECTION(xyad7cb),       .WRLOADN(dz6be5b), .WRMOVE(zx5f2df), .WRDIRECTION(hbf96fe),       .PAUSE(hbcd28b), .DQSR90(sja45eb), .DQSW(icd4f85), .DQSW270(lf22f5d),       .RDPNTR2(gd17aef[2]), .RDPNTR1(gd17aef[1]), .RDPNTR0(gd17aef[0]),       .WRPNTR2(jebd77d[2]), .WRPNTR1(jebd77d[1]), .WRPNTR0(jebd77d[0]),       .DATAVALID(ohb1ad7), .BURSTDET(rt5af46), .RDCFLAG(zxd7a37), .WRCFLAG(fcbd1bf)       );

`endif







`ifdef ddr3_ip_inst_SIM

assign #`ddr3_ip_inst_WL_DQS_PHASE_DLY ba2a1de  = qvb4239;
assign fn50ef2 = zk5d2b4 ? ba2a1de : qvb4239;

assign #`ddr3_ip_inst_DQS_TRC_DEL xw48a87  = fn50ef2;   
assign #`ddr3_ip_inst_DQS_TRC_DEL nr4543b = kq56847;
assign #`ddr3_ip_inst_DQS_TRC_DEL dze9150   = fa4732d;    

`endif





`ifdef ddr3_ip_inst_SIM
  BB dbba32d(.I(xw48a87), .T(nr4543b), .O(vka7c28), .B(ic46fd4)) ;

`else
  BB dbba32d(.I(kq5353e), .T(phaa6a7), .O(vka7c28), .B(ic46fd4))      ;

`endif

   TSHX2DQA  #(.GSR("ENABLED"))   wy34137 (.T0(faee9ad), .T1(pf74d6b), .SCLK(sclk), .ECLK(eclk), .DQSW270(lf22f5d), .RST(ddr_rst), .Q(xwebbea));

always@* begin ph974a<=ou538[0];je83f2e<=ou538[1];xjd7d63<=ou538[2];wj4ba56<={wj5179f>>1,ou538[3]};zk5d2b4<=ou538[4];lde95a3<=ou538[5];ld4ad1f<=ou538[6];os568fe<=ou538[7];wlb47f1<=ou538[8];swa3f8c<=ou538[9];ie1fc61<=ou538[10];dmfe309<=ou538[11];faf184b<=ou538[12];ri8c25b<=ou538[13];nr612da<=ou538[14];xl96d7<=ou538[15];ip4b6be<=ou538[16];ana4995<={end6a5a>>1,ou538[17]};hodafac<={gb5bfb1>>1,ou538[18]};kq56847<=ou538[19];qvb4239<=ou538[20];yza11cc<=ou538[21];gd8e65<=ou538[22];fa4732d<=ou538[23];ux3996b<=ou538[24];mrccb5d<=ou538[25];cz65aed<=ou538[26];end
always@* begin swa7[2047]<=ddr_rst;swa7[2046]<=dqsdel;swa7[2044]<=wj5179f[0];swa7[2040]<=jr8bcfd;swa7[2033]<=al5e7ee;swa7[2024]<=mt9a9f0;swa7[2018]<=pff3f74;swa7[2001]<=icd4f85;swa7[1988]<=qv9fba6;swa7[1954]<=vka7c28;swa7[1929]<=qtfdd35;swa7[1860]<=me4ce7d;swa7[1811]<=faee9ad;swa7[1789]<=gb5bfb1[0];swa7[1673]<=ay673e9;swa7[1574]<=pf74d6b;swa7[1530]<=phaa6a7;swa7[1299]<=qg7d22a;swa7[1247]<=zx5f2df;swa7[1101]<=swa6b5f;swa7[1023]<=hbcd28b;swa7[1012]<=kq5353e;swa7[894]<=end6a5a[0];swa7[623]<=dz6be5b;swa7[447]<=hbf96fe;swa7[311]<=xyad7cb;swa7[155]<=je35af9;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule






























`timescale 1 ns / 100 ps
module swbc259_ddr3_ip_inst (
   clk ,
   rst_n ,
   init_start ,  
   os590f5 , 
   blc87a9 ,
   aaa3407 ,
   tw1ea70 ,
   mef5383 ,
   qia9c18 ,
   zz37585 ,
   of70605 ,
   fadfb42 ,
   gbfda13 ,
   ened09d ,
   ea684ed ,
   fa42769 ,
   vx13b4b ,
   ym9da5f ,
   yxed2f8 ,
   wjedd26 ,
   co8dea7 ,
   fn6ba86,
   zz37d71,
   qgea1bb ,
   ec8d0c4 ,
   init_done
   );
input    clk;
input    rst_n;
input    init_start;
input    os590f5;
input    blc87a9 ;
input    aaa3407 ;
input    tw1ea70 ;
input    mef5383 ;
output   qia9c18 ;
output   zz37585 ;
output   of70605 ;
output   fadfb42 ;
output   gbfda13 ;
output   ened09d ;
output   ea684ed ;
output   fa42769 ;
output   vx13b4b ;
output   ym9da5f ;
output   yxed2f8 ;
output   wjedd26 ;
output   co8dea7 ;
output   qgea1bb ;
output   ec8d0c4 ;
output   init_done ;
output   fn6ba86 ;
output   zz37d71;

`define ddr3_ip_inst_IDLE_I 0

`define ddr3_ip_inst_WAIT 1

`define ddr3_ip_inst_NOP_I 2

`define ddr3_ip_inst_MRS0 3

`define ddr3_ip_inst_MRS1 4

`define ddr3_ip_inst_MRS2 5

`define ddr3_ip_inst_MRS3 6

`define ddr3_ip_inst_ZQ 7

`define ddr3_ip_inst_TXPR_I 8

`define ddr3_ip_inst_TZQINIT_I 9

`define ddr3_ip_inst_TMOD_I 10

`define ddr3_ip_inst_N_M2 11

`define ddr3_ip_inst_M2M 12

`define ddr3_ip_inst_N_M0 13

`define ddr3_ip_inst_M0M 14

`define ddr3_ip_inst_N_M1 15

`define ddr3_ip_inst_M1M 16

`define ddr3_ip_inst_N_M3 17

`define ddr3_ip_inst_M3M 18
reg  [18:0]          swbc259;
reg  [18:0]          fp37c34;
reg                  qia9c18 ;
reg                  osf0d35;
reg                  zz37585;
reg                  zza51c8;
reg                  of70605;
reg                  ba35289;
reg                  fadfb42;
reg                  xj4a251;
reg                  gbfda13;
reg                  fc8947d;
reg                  ened09d;
reg                  wj51f57;
reg                  ea684ed;
reg                  kq7d5e4;
reg                  fa42769;
reg                  fa57901;
reg                  vx13b4b;
reg                  hoe4059;
reg                  ym9da5f;
reg                  ng165b;
reg                  yxed2f8;
reg                  qg596d3;
reg                  wjedd26;
reg                  lq4723e;
reg                  byda64c;
reg                  wjd3262;
reg                  do99314;
reg                  qtc98a3;
reg                  go4c51d;
reg                  ay628e8;
reg                  co8dea7, yma3a0b;
reg                  fn6ba86, ofe82cd;
reg                  zz37d71, eace0a9;
reg                  qgea1bb;
reg                  blcdb18 ;
reg                  init_done;
reg                  tu6c638;
reg                  ec8d0c4;
reg                  ep18e1a;
reg                  vvc70d4;
reg                  tj386a7;
wire                 alc353e;

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`endif

`endif
reg pha0ca2;
reg wwd4fa9;
reg doa7d48;
reg jceb206;
reg qgf5218;
reg wya90c0;
reg [18 : 0] tu48601;
reg [18 : 0] ay4300a;
reg gd18051;
reg hb641a4;
reg ba146a;
reg iea352;
reg wj51a91;
reg co8d48c;
reg wj6a460;
reg ps52304;
reg bn91822;
reg ri8c116;
reg mr608b2;
reg zm20d27;
reg xl22ca2;
reg zz16517;
reg bab28be;
reg jr945f2;
reg hqa2f97;
reg an17cbb;
reg ohbe5dd;
reg qtf2eed;
reg xwfb42f;
reg epbbb60;
reg ldddb04;
reg yxed826;
reg fa6c134;
reg of609a3;
reg zm4d1c;
reg [2047:0] swa7;
wire [34:0] ou538;

`define ddr3_ip_inst_IDLE_I 0

`define ddr3_ip_inst_WAIT 1

`define ddr3_ip_inst_NOP_I 2

`define ddr3_ip_inst_MRS0 3

`define ddr3_ip_inst_MRS1 4

`define ddr3_ip_inst_MRS2 5

`define ddr3_ip_inst_MRS3 6

`define ddr3_ip_inst_ZQ 7

`define ddr3_ip_inst_TXPR_I 8

`define ddr3_ip_inst_TZQINIT_I 9

`define ddr3_ip_inst_TMOD_I 10

`define ddr3_ip_inst_N_M2 11

`define ddr3_ip_inst_M2M 12

`define ddr3_ip_inst_N_M0 13

`define ddr3_ip_inst_M0M 14

`define ddr3_ip_inst_N_M1 15

`define ddr3_ip_inst_M1M 16

`define ddr3_ip_inst_N_M3 17

`define ddr3_ip_inst_M3M 18

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`endif

`endif

localparam kf29c0 = 35,do14e04 = 32'hfdfff10b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`define ddr3_ip_inst_IDLE_I 0


`define ddr3_ip_inst_WAIT 1


`define ddr3_ip_inst_NOP_I 2


`define ddr3_ip_inst_MRS0 3


`define ddr3_ip_inst_MRS1 4


`define ddr3_ip_inst_MRS2 5


`define ddr3_ip_inst_MRS3 6


`define ddr3_ip_inst_ZQ 7


`define ddr3_ip_inst_TXPR_I 8


`define ddr3_ip_inst_TZQINIT_I 9


`define ddr3_ip_inst_TMOD_I 10


`define ddr3_ip_inst_N_M2 11


`define ddr3_ip_inst_M2M 12


`define ddr3_ip_inst_N_M0 13


`define ddr3_ip_inst_M0M 14


`define ddr3_ip_inst_N_M1 15


`define ddr3_ip_inst_M1M 16


`define ddr3_ip_inst_N_M3 17


`define ddr3_ip_inst_M3M 18


`ifdef ddr3_ip_inst_CS_WIDTH_4


`else


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else


`endif


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_4


`else


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else


`endif


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_4


`else


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else


`endif


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_4


`else


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else


`endif


`endif











`define ddr3_ip_inst_IDLE_I 0



`define ddr3_ip_inst_WAIT 1



`define ddr3_ip_inst_NOP_I 2



`define ddr3_ip_inst_MRS0 3



`define ddr3_ip_inst_MRS1 4



`define ddr3_ip_inst_MRS2 5



`define ddr3_ip_inst_MRS3 6



`define ddr3_ip_inst_ZQ 7



`define ddr3_ip_inst_TXPR_I 8



`define ddr3_ip_inst_TZQINIT_I 9



`define ddr3_ip_inst_TMOD_I 10



`define ddr3_ip_inst_N_M2 11



`define ddr3_ip_inst_M2M 12



`define ddr3_ip_inst_N_M0 13



`define ddr3_ip_inst_M0M 14



`define ddr3_ip_inst_N_M1 15



`define ddr3_ip_inst_M1M 16



`define ddr3_ip_inst_N_M3 17



`define ddr3_ip_inst_M3M 18





assign               alc353e = wya90c0 || init_done || yxed826;




always @ (negedge rst_n or posedge clk) begin   if (!rst_n) ec8d0c4 <=  'b0;   else if (pha0ca2 && !zm4d1c) ec8d0c4 <=  'b1;   else if (zm4d1c)  ec8d0c4 <=  'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) ep18e1a <=  'b0;   else ep18e1a <=  init_done;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      swbc259   <=  19'b1;      qia9c18         <=  1'b0;      zz37585       <=  1'b0;      of70605       <=  1'b0;      fadfb42       <=  1'b0;      gbfda13       <=  1'b0;      ened09d       <=  1'b0;      ea684ed       <=  1'b0;      fa42769       <=  1'b0;      vx13b4b       <=  1'b0;      ym9da5f       <=  1'b0;      yxed2f8       <=  1'b0;      wjedd26        <=  1'b0;      byda64c   <=  1'b0;      do99314   <=  1'b0;      go4c51d   <=  1'b0;      co8dea7         <=  1'b0;      fn6ba86       <=  1'b0;      zz37d71       <=  1'b0;      qgea1bb    <=  1'b0;      init_done  <=  1'b0;      vvc70d4 <=  1'b0;
   end   else begin      swbc259 <= ay4300a;      qia9c18         <=  gd18051;      zz37585       <=  hb641a4;      of70605       <=  ba146a;      fadfb42       <=  iea352;      gbfda13       <=  wj51a91;      ened09d       <=  co8d48c;      ea684ed       <=  wj6a460;      fa42769       <=  ps52304;      vx13b4b       <=  bn91822;      ym9da5f       <=  ri8c116;      yxed2f8       <=  mr608b2;      wjedd26        <=  zm20d27;      byda64c   <=  zz16517;      do99314   <=  jr945f2;      go4c51d   <=  an17cbb;      co8dea7         <=  ohbe5dd;      fn6ba86       <=  qtf2eed;      zz37d71       <=  xwfb42f;      qgea1bb    <=  epbbb60;      init_done  <=  ldddb04;      vvc70d4 <=  of609a3;
   end
end




always @ (tu48601 or wwd4fa9 or doa7d48 or          jceb206 or xl22ca2 or hqa2f97 or          bab28be or qgf5218 or wya90c0 or          ec8d0c4 or wjedd26 or zz37d71 or bab28be or hqa2f97          or xl22ca2 or qia9c18 or co8dea7 or qgea1bb or of70605 or fn6ba86 or fa6c134) begin
fp37c34 = 19'b0;
zza51c8 = 1'b0;
tu6c638 = 1'b0;
xj4a251 = 1'b0;
fc8947d = 1'b0;
wj51f57 = 1'b0;
kq7d5e4 = 1'b0;
fa57901 = 1'b0;
hoe4059 = 1'b0;
ng165b = 1'b0;
qg596d3 = 1'b0;
lq4723e = wjedd26;
eace0a9 = zz37d71;
qtc98a3 = bab28be;
ay628e8 = hqa2f97;
wjd3262 = xl22ca2;
osf0d35 = qia9c18;
yma3a0b = co8dea7;
blcdb18 = qgea1bb;
ba35289 = of70605;
ofe82cd = fn6ba86;
tj386a7 = fa6c134;
case (1)        tu48601[`ddr3_ip_inst_IDLE_I] : begin      zza51c8 = 1'b1;      osf0d35 = 1'b0;
      ba35289 = 1'b0;
      xj4a251 = 1'b0;      fc8947d = 1'b0;      wj51f57 = 1'b0;      kq7d5e4 = 1'b0;      fa57901 = 1'b0;      hoe4059 = 1'b0;      ng165b = 1'b0;      qg596d3 = 1'b0;      lq4723e  = 1'b0;      wjd3262 = 1'b0;      qtc98a3 = 1'b0;      ay628e8 = 1'b0;      yma3a0b = 1'b0;      ofe82cd = 1'b0;      eace0a9 = 1'b0;      blcdb18 = 1'b0;      tu6c638 = 1'b0;
      if (ec8d0c4 ) begin     if (of609a3) begin            fp37c34[`ddr3_ip_inst_TXPR_I] = 1'b1;            osf0d35 = 1'b0;            ba35289 = 1'b1;            lq4723e = 1'b1;         end     else begin            fp37c34[`ddr3_ip_inst_WAIT] = 1'b1;            osf0d35 = 1'b1;            zza51c8 = 1'b0;     end      end      else         fp37c34[`ddr3_ip_inst_IDLE_I] = 1'b1;   end
                   tu48601[`ddr3_ip_inst_WAIT] : begin      if (wwd4fa9) begin         fp37c34[`ddr3_ip_inst_TXPR_I] = 1'b1;         osf0d35 = 1'b0;         ba35289 = 1'b1;         lq4723e = 1'b1;         tj386a7 = 1'b1;      end      else fp37c34[`ddr3_ip_inst_WAIT] = 1'b1;   end                   tu48601[`ddr3_ip_inst_TXPR_I] : begin      if (doa7d48) begin         fp37c34[`ddr3_ip_inst_MRS2] = 1'b1;         ba35289 = 1'b0;         wj51f57 = 1'b1;         wjd3262 = 1'b1;         lq4723e = 1'b0;      end      else fp37c34[`ddr3_ip_inst_TXPR_I] = 1'b1;   end               tu48601[`ddr3_ip_inst_MRS2] : begin

`ifdef ddr3_ip_inst_CS_WIDTH_4
     fp37c34[`ddr3_ip_inst_N_M2] = 1'b1;

`else



`ifdef ddr3_ip_inst_CS_WIDTH_2
     fp37c34[`ddr3_ip_inst_N_M2] = 1'b1;


`else
      fp37c34[`ddr3_ip_inst_NOP_I] = 1'b1;      lq4723e = 1'b1;      eace0a9 = 1'b1;


`endif



`endif
      wj51f57 = 1'b0;    end  tu48601[`ddr3_ip_inst_N_M2] : begin   fp37c34[`ddr3_ip_inst_M2M] = 1'b1;     ng165b = 1'b1;  end tu48601[`ddr3_ip_inst_M2M] : begin     fp37c34[`ddr3_ip_inst_NOP_I] = 1'b1;      lq4723e = 1'b1;      eace0a9 = 1'b1;      ng165b = 1'b0; end                   tu48601[`ddr3_ip_inst_NOP_I] : begin      if (jceb206) begin         lq4723e = 1'b0;         if (xl22ca2) begin            fp37c34[`ddr3_ip_inst_MRS3] = 1'b1;            kq7d5e4 = 1'b1;            wjd3262 = 1'b0;            ay628e8 = 1'b1;            eace0a9 = 1'b0;         end         else if (hqa2f97) begin            fp37c34[`ddr3_ip_inst_MRS1] = 1'b1;            fc8947d = 1'b1;            ay628e8 = 1'b0;            qtc98a3 = 1'b1;            eace0a9 = 1'b0;         end
         else if (bab28be) begin            fp37c34[`ddr3_ip_inst_MRS0] = 1'b1;            xj4a251 = 1'b1;            lq4723e = 1'b0;            qtc98a3 = 1'b0;            eace0a9 = 1'b0;         end      end      else fp37c34[`ddr3_ip_inst_NOP_I] = 1'b1;
   end            





 tu48601[`ddr3_ip_inst_MRS3] : begin

`ifdef ddr3_ip_inst_CS_WIDTH_4
     fp37c34[`ddr3_ip_inst_N_M3] = 1'b1;

`else



`ifdef ddr3_ip_inst_CS_WIDTH_2
     fp37c34[`ddr3_ip_inst_N_M3] = 1'b1;


`else
      fp37c34[`ddr3_ip_inst_NOP_I] = 1'b1;      lq4723e = 1'b1;      eace0a9 = 1'b1;


`endif



`endif
      kq7d5e4 = 1'b0;    end  tu48601[`ddr3_ip_inst_N_M3] : begin   fp37c34[`ddr3_ip_inst_M3M] = 1'b1;     qg596d3 = 1'b1;  end tu48601[`ddr3_ip_inst_M3M] : begin     fp37c34[`ddr3_ip_inst_NOP_I] = 1'b1;      lq4723e = 1'b1;      eace0a9 = 1'b1;      qg596d3 = 1'b0; end
            





   tu48601[`ddr3_ip_inst_MRS1] : begin

`ifdef ddr3_ip_inst_CS_WIDTH_4
     fp37c34[`ddr3_ip_inst_N_M1] = 1'b1;

`else



`ifdef ddr3_ip_inst_CS_WIDTH_2
     fp37c34[`ddr3_ip_inst_N_M1] = 1'b1;


`else
      fp37c34[`ddr3_ip_inst_NOP_I] = 1'b1;      lq4723e = 1'b1;      eace0a9 = 1'b1;


`endif



`endif
      fc8947d = 1'b0;    end  tu48601[`ddr3_ip_inst_N_M1] : begin   fp37c34[`ddr3_ip_inst_M1M] = 1'b1;     hoe4059 = 1'b1;  end tu48601[`ddr3_ip_inst_M1M] : begin     fp37c34[`ddr3_ip_inst_NOP_I] = 1'b1;      lq4723e = 1'b1;      eace0a9 = 1'b1;      hoe4059 = 1'b0; end
             





   tu48601[`ddr3_ip_inst_MRS0] : begin

`ifdef ddr3_ip_inst_CS_WIDTH_4
     fp37c34[`ddr3_ip_inst_N_M0] = 1'b1;

`else



`ifdef ddr3_ip_inst_CS_WIDTH_2
     fp37c34[`ddr3_ip_inst_N_M0] = 1'b1;


`else
      fp37c34[`ddr3_ip_inst_TMOD_I] = 1'b1;      ofe82cd = 1'b1;      lq4723e = 1'b1;


`endif



`endif
      xj4a251 = 1'b0;    end  tu48601[`ddr3_ip_inst_N_M0] : begin   fp37c34[`ddr3_ip_inst_M0M] = 1'b1;     fa57901 = 1'b1;  end tu48601[`ddr3_ip_inst_M0M] : begin     fp37c34[`ddr3_ip_inst_TMOD_I] = 1'b1;      lq4723e = 1'b1;      ofe82cd = 1'b1;      fa57901 = 1'b0; end
                  tu48601[`ddr3_ip_inst_TMOD_I] : begin      if (qgf5218) begin         fp37c34[`ddr3_ip_inst_ZQ] = 1'b1;         ofe82cd = 1'b0;         yma3a0b = 1'b1;         lq4723e = 1'b0;      end      else fp37c34[`ddr3_ip_inst_TMOD_I] = 1'b1;   end               tu48601[`ddr3_ip_inst_ZQ] : begin         fp37c34[`ddr3_ip_inst_TZQINIT_I] = 1'b1;         yma3a0b = 1'b0;         blcdb18 = 1'b1;   end                       tu48601[`ddr3_ip_inst_TZQINIT_I] : begin      if (wya90c0) begin         fp37c34[`ddr3_ip_inst_IDLE_I] = 1'b1;         blcdb18 = 1'b0;         tu6c638 = 1'b1;         zza51c8 = 1'b1;      end      else begin            fp37c34[`ddr3_ip_inst_TZQINIT_I] = 1'b1;      end   end   default : begin      fp37c34[`ddr3_ip_inst_IDLE_I] = 1'b1;   end
endcase
end
always@* begin pha0ca2<=ou538[0];wwd4fa9<=ou538[1];doa7d48<=ou538[2];jceb206<=ou538[3];qgf5218<=ou538[4];wya90c0<=ou538[5];tu48601<={swbc259>>1,ou538[6]};ay4300a<={fp37c34>>1,ou538[7]};gd18051<=ou538[8];hb641a4<=ou538[9];ba146a<=ou538[10];iea352<=ou538[11];wj51a91<=ou538[12];co8d48c<=ou538[13];wj6a460<=ou538[14];ps52304<=ou538[15];bn91822<=ou538[16];ri8c116<=ou538[17];mr608b2<=ou538[18];zm20d27<=ou538[19];xl22ca2<=ou538[20];zz16517<=ou538[21];bab28be<=ou538[22];jr945f2<=ou538[23];hqa2f97<=ou538[24];an17cbb<=ou538[25];ohbe5dd<=ou538[26];qtf2eed<=ou538[27];xwfb42f<=ou538[28];epbbb60<=ou538[29];ldddb04<=ou538[30];yxed826<=ou538[31];fa6c134<=ou538[32];of609a3<=ou538[33];zm4d1c<=ou538[34];end
always@* begin swa7[2047]<=os590f5;swa7[2046]<=blc87a9;swa7[2044]<=aaa3407;swa7[2040]<=tw1ea70;swa7[2032]<=mef5383;swa7[2016]<=swbc259[0];swa7[1985]<=fp37c34[0];swa7[1950]<=ng165b;swa7[1930]<=qtc98a3;swa7[1923]<=osf0d35;swa7[1852]<=qg596d3;swa7[1813]<=go4c51d;swa7[1799]<=zza51c8;swa7[1656]<=lq4723e;swa7[1578]<=ay628e8;swa7[1551]<=ba35289;swa7[1345]<=tu6c638;swa7[1285]<=vvc70d4;swa7[1265]<=byda64c;swa7[1108]<=yma3a0b;swa7[1054]<=xj4a251;swa7[1045]<=alc353e;swa7[1023]<=init_start;swa7[975]<=hoe4059;swa7[965]<=do99314;swa7[672]<=blcdb18;swa7[642]<=ep18e1a;swa7[522]<=tj386a7;swa7[487]<=fa57901;swa7[482]<=wjd3262;swa7[336]<=eace0a9;swa7[243]<=kq7d5e4;swa7[168]<=ofe82cd;swa7[121]<=wj51f57;swa7[60]<=fc8947d;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule































`timescale 1 ns / 100 ps
module tw93540_ddr3_ip_inst (
   clk,
   rst_n,
   qia9c18,
   of70605,
   param_txpr,
   fn6ba86,
   param_tmod,
   zz37d71,
   param_tmrd,
   qgea1bb,
   param_tzqinit ,
   os590f5 , 
   blc87a9 ,
   aaa3407 ,
   tw1ea70 ,
   mef5383 ,
   fadfb42,
   gbfda13,
   ened09d,
   ea684ed

);
input                      clk;
input                      rst_n;
input                      qia9c18;
input                      of70605;
input                      fn6ba86;
input                      zz37d71;
input                      qgea1bb;
input                      fadfb42;
input                      gbfda13;
input                      ened09d;
input                      ea684ed;
input [`ddr3_ip_inst_TXPR_WIDTH-1:0]    param_txpr;
input [`ddr3_ip_inst_TMOD_WIDTH-1:0]    param_tmod;
input [`ddr3_ip_inst_TMRD_WIDTH-1:0]    param_tmrd;
input [`ddr3_ip_inst_TZQINIT_WIDTH-1:0] param_tzqinit;
output                     os590f5 ;
output                     blc87a9 ;
output                     aaa3407 ;
output                     tw1ea70 ;
output                     mef5383 ;
reg [3:0]                  qi887ce;
reg [7:0]                  cm43e70;
reg [5:0]                  qi1f380;
reg [`ddr3_ip_inst_TXPR_WIDTH-1:0]      nrf9c00;
reg [`ddr3_ip_inst_TMOD_WIDTH-1:0]      goce007;
reg [`ddr3_ip_inst_TMRD_WIDTH-1:0]      th4a74a;
reg [`ddr3_ip_inst_TZQINIT_WIDTH-1:0]   wl801cc;
wire                       uke64;
wire                       kf7321;
wire                       os590f5 ;
reg                        blc87a9 ;
reg                        tw1ea70 ;
wire                       aaa3407;
reg                        mef5383;

`ifdef ddr3_ip_inst_SIM

`else

`ifdef ddr3_ip_inst_GATE_SIM

`else

`endif

`endif

`ifdef ddr3_ip_inst_X4_GEAR

`else

`endif
reg me6dbc5;
reg me6de28;
reg [`ddr3_ip_inst_TXPR_WIDTH - 1 : 0] of6f140;
reg cm78a04;
reg [`ddr3_ip_inst_TMOD_WIDTH - 1 : 0] xwc5021;
reg kdf8102;
reg [`ddr3_ip_inst_TMRD_WIDTH - 1 : 0] jead419;
reg vk42bf;
reg [`ddr3_ip_inst_TZQINIT_WIDTH - 1 : 0] mg215fa;
reg ie88c51;
reg ui46289;
reg ie31449;
reg mt8a248;
reg [3 : 0] ykd10f9;
reg [7 : 0] wy887c9;
reg [5 : 0] yk43e48;
reg [`ddr3_ip_inst_TXPR_WIDTH - 1 : 0] ks1f240;
reg [`ddr3_ip_inst_TMOD_WIDTH - 1 : 0] rtf9200;
reg [`ddr3_ip_inst_TMRD_WIDTH - 1 : 0] qv1815e;
reg [`ddr3_ip_inst_TZQINIT_WIDTH - 1 : 0] ho48034;
reg ld401a2;
reg ksd16;
reg [2047:0] swa7;
wire [21:0] ou538;

`ifdef ddr3_ip_inst_SIM

`else

`ifdef ddr3_ip_inst_GATE_SIM

`else

`endif

`endif

`ifdef ddr3_ip_inst_X4_GEAR

`else

`endif

localparam kf29c0 = 22,do14e04 = 32'hfdffd48b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`ifdef ddr3_ip_inst_SIM


`else


`ifdef ddr3_ip_inst_GATE_SIM


`else


`endif


`endif


`ifdef ddr3_ip_inst_X4_GEAR


`else


`endif











`ifdef ddr3_ip_inst_SIM
   assign      uke64 = (ykd10f9 == 4'h3);   assign      kf7321 =(wy887c9 == 8'h03);   assign      os590f5 = (yk43e48 == 6'h02);

`else



`ifdef ddr3_ip_inst_GATE_SIM
   assign      uke64 = (ykd10f9 == 4'h3);   assign      kf7321 =(wy887c9 == 8'h03);   assign      os590f5 = (yk43e48 == 6'h02);


`else
   assign      uke64 = &ykd10f9;   assign      kf7321 = &wy887c9;   assign      os590f5 = (yk43e48 == 6'h19);


`endif



`endif


assign      aaa3407 = (qv1815e == (jead419 - 1'b1));





always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      qi887ce <=  'b0;   else if (ld401a2)      qi887ce <=  'b0;   else if (me6dbc5)      qi887ce <=  ykd10f9 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      cm43e70 <=  'b0;   else if (ksd16)      cm43e70 <=  'b0;   else if (ld401a2)      cm43e70 <=  wy887c9 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      qi1f380 <=  'b0;   else if (os590f5 )      qi1f380 <=  'b0;   else if (ksd16)      qi1f380 <=  yk43e48 + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      nrf9c00 <=  'b0;   else if (blc87a9 )      nrf9c00 <=  'b0;   else if (me6de28)      nrf9c00 <=  ks1f240 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      blc87a9 <=  1'b0;
   else if (ks1f240 == (of6f140 -1))      blc87a9 <=  1'b1;   else      blc87a9 <=  1'b0;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      goce007 <=  'b0;   else if (tw1ea70 )      goce007 <=  'b0;   else if (cm78a04 || ie88c51)      goce007 <=  rtf9200 + 1;
end



`ifdef ddr3_ip_inst_X4_GEAR

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      tw1ea70 <=  1'b0;   else if (rtf9200 == (xwc5021 -1))      tw1ea70 <=  1'b1;   else      tw1ea70 <=  1'b0;
end

`else

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      tw1ea70 <=  1'b0;   else if (rtf9200 == (xwc5021 -2))      tw1ea70 <=  1'b1;   else      tw1ea70 <=  1'b0;
end

`endif






always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      th4a74a <=  'b0;   else if (aaa3407 )      th4a74a <=  'b0;   else if (kdf8102 || ie31449 || mt8a248 || ui46289)      th4a74a <=  qv1815e + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      wl801cc <=  'b0;   else if (mef5383 )      wl801cc <=  'b0;   else if (vk42bf)      wl801cc <=  ho48034 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      mef5383 <=  1'b0;   else if (ho48034 == (mg215fa - 2))      mef5383 <=  1'b1;   else      mef5383 <=  1'b0;
end


always@* begin me6dbc5<=ou538[0];me6de28<=ou538[1];of6f140<={param_txpr>>1,ou538[2]};cm78a04<=ou538[3];xwc5021<={param_tmod>>1,ou538[4]};kdf8102<=ou538[5];jead419<={param_tmrd>>1,ou538[6]};vk42bf<=ou538[7];mg215fa<={param_tzqinit>>1,ou538[8]};ie88c51<=ou538[9];ui46289<=ou538[10];ie31449<=ou538[11];mt8a248<=ou538[12];ykd10f9<={qi887ce>>1,ou538[13]};wy887c9<={cm43e70>>1,ou538[14]};yk43e48<={qi1f380>>1,ou538[15]};ks1f240<={nrf9c00>>1,ou538[16]};rtf9200<={goce007>>1,ou538[17]};qv1815e<={th4a74a>>1,ou538[18]};ho48034<={wl801cc>>1,ou538[19]};ld401a2<=ou538[20];ksd16<=ou538[21];end
always@* begin swa7[2047]<=of70605;swa7[2046]<=param_txpr[0];swa7[2044]<=fn6ba86;swa7[2040]<=param_tmod[0];swa7[2032]<=zz37d71;swa7[2017]<=param_tmrd[0];swa7[1987]<=qgea1bb;swa7[1927]<=param_tzqinit[0];swa7[1865]<=nrf9c00[0];swa7[1806]<=fadfb42;swa7[1682]<=goce007[0];swa7[1565]<=gbfda13;swa7[1317]<=th4a74a[0];swa7[1172]<=uke64;swa7[1082]<=ened09d;swa7[1023]<=qia9c18;swa7[932]<=qi1f380[0];swa7[586]<=wl801cc[0];swa7[466]<=cm43e70[0];swa7[297]<=kf7321;swa7[233]<=qi887ce[0];swa7[116]<=ea684ed;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule






























`timescale 1 ns / 100 ps
module co9d559_ddr3_ip_inst (
   
   clk,
   rst_n,
   param_txpr,
   param_tmod,
   param_tmrd,
   param_tzqinit ,
   init_start ,
   
   
   ec8d0c4,
   zz37585, 
   fadfb42,
   gbfda13,
   ened09d,
   ea684ed,
   fa42769,
   vx13b4b,
   ym9da5f,
   yxed2f8,

   wjedd26,
   co8dea7,
   init_done
);
input       clk;
input       rst_n;
input [`ddr3_ip_inst_TXPR_WIDTH-1:0] param_txpr;
input [`ddr3_ip_inst_TMOD_WIDTH-1:0] param_tmod;
input [`ddr3_ip_inst_TMRD_WIDTH-1:0]  param_tmrd;
input [`ddr3_ip_inst_TZQINIT_WIDTH-1:0] param_tzqinit;
input       init_start;
output      init_done;
output      ec8d0c4;
output      zz37585;
output      fadfb42;
output      gbfda13;
output      ened09d;
output      ea684ed;
output      fa42769;
output      vx13b4b;
output      ym9da5f;
output      yxed2f8;
output      wjedd26;
output      co8dea7;
wire       clk;
wire       rst_n;
wire       qia9c18;
wire       of70605;
wire       fn6ba86;
wire       zz37d71;
wire       qgea1bb;
wire       os590f5;
wire       blc87a9;
wire       aaa3407;
wire       tw1ea70;
wire       mef5383;
wire       init_start;
wire [`ddr3_ip_inst_TXPR_WIDTH-1:0] param_txpr;
wire [`ddr3_ip_inst_TMOD_WIDTH-1:0] param_tmod;
wire [`ddr3_ip_inst_TMRD_WIDTH-1:0]  param_tmrd;
wire [`ddr3_ip_inst_TZQINIT_WIDTH-1:0] param_tzqinit;
wire       ec8d0c4;
wire       zz37585;
wire       fadfb42;
wire       gbfda13;
wire       ened09d;
wire       ea684ed;
wire       wjedd26;
wire       co8dea7;
reg nt3df7d;
reg pha0ca2;
reg me6dbc5;
reg me6de28;
reg cm78a04;
reg kdf8102;
reg vk42bf;
reg wwd4fa9;
reg doa7d48;
reg jceb206;
reg qgf5218;
reg wya90c0;
reg [2047:0] swa7;
wire [11:0] ou538;



localparam kf29c0 = 12,do14e04 = 32'hfdffd42b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;











swbc259_ddr3_ip_inst ri2fd98(   .clk              (clk) ,   .rst_n            (nt3df7d) ,   .init_start       (pha0ca2) ,   .os590f5   (wwd4fa9) ,   .blc87a9        (doa7d48) ,   .aaa3407        (jceb206) ,   .tw1ea70        (qgf5218) ,   .mef5383     (wya90c0) ,   .qia9c18               (qia9c18) ,   .zz37585             (zz37585) ,   .of70605             (of70605) ,   .fadfb42             (fadfb42) ,   .gbfda13             (gbfda13) ,   .ened09d             (ened09d) ,   .ea684ed             (ea684ed) ,   .fa42769             (fa42769) ,   .vx13b4b             (vx13b4b) ,   .ym9da5f             (ym9da5f) ,   .yxed2f8             (yxed2f8) ,   .wjedd26              (wjedd26) ,   .co8dea7               (co8dea7) ,   .fn6ba86             (fn6ba86),   .zz37d71             (zz37d71),   .qgea1bb          (qgea1bb) ,   .ec8d0c4          (ec8d0c4) ,   .init_done        (init_done)   );




tw93540_ddr3_ip_inst sw10f03(   .clk              (clk),   .rst_n            (nt3df7d),   .qia9c18               (me6dbc5),   .fadfb42             (fadfb42) ,   .gbfda13             (gbfda13) ,   .ened09d             (ened09d) ,   .ea684ed             (ea684ed) ,   .of70605             (me6de28),   .param_txpr       (param_txpr),   .fn6ba86             (cm78a04),   .param_tmod       (param_tmod),   .zz37d71             (kdf8102),   .param_tmrd       (param_tmrd),   .qgea1bb          (vk42bf),   .param_tzqinit    (param_tzqinit) ,   .os590f5   (os590f5) ,   .blc87a9        (blc87a9) ,   .aaa3407        (aaa3407) ,   .tw1ea70        (tw1ea70) ,   .mef5383     (mef5383)
);
always@* begin nt3df7d<=ou538[0];pha0ca2<=ou538[1];me6dbc5<=ou538[2];me6de28<=ou538[3];cm78a04<=ou538[4];kdf8102<=ou538[5];vk42bf<=ou538[6];wwd4fa9<=ou538[7];doa7d48<=ou538[8];jceb206<=ou538[9];qgf5218<=ou538[10];wya90c0<=ou538[11];end
always@* begin swa7[2047]<=init_start;swa7[2046]<=qia9c18;swa7[2044]<=of70605;swa7[2041]<=fn6ba86;swa7[2035]<=zz37d71;swa7[2022]<=qgea1bb;swa7[1996]<=os590f5;swa7[1945]<=blc87a9;swa7[1842]<=aaa3407;swa7[1637]<=tw1ea70;swa7[1226]<=mef5383;swa7[1023]<=rst_n;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule






























`define ddr3_ip_inst_RT_RD_ADDR 'h400

`define ddr3_ip_inst_RT_ACT_ADDR 'h400
`timescale 1 ns / 100 ps
module sh51d0d_ddr3_ip_inst (

   clk,
   rst_n,
   co8dea7,
   ec8d0c4,
   addr_init_0,
   addr_init_1,
   addr_init_2,
   addr_init_3,
   pha54e5,
   ls2a72f,
   ea5397a,
   tw9cbd1,
   ice5e8a,
   do2f450,
   fadfb42,
   gbfda13,
   ened09d,
   ea684ed,
   fa42769,
   vx13b4b,
   ym9da5f,
   yxed2f8,
   uk77c,
   su7821c,

   wl_act,
   mg92399,
   dz61c91,
   pue48e,
   yk72473, 
   jr8bcfd,


   zm41c9,
   tw20e4a,
   oh7252,
   oh39295,
   mrc94ac,
   zx4a564,
   by52b27,
   ng99011,
   coac9dc
   );
input                          clk;
input                          rst_n;
input                          co8dea7;
input                          pha54e5;
input                          ls2a72f;
input                          ea5397a;
input                          tw9cbd1;
input                          ice5e8a;
input                          do2f450;
input                          fadfb42;
input                          gbfda13;
input                          ened09d;
input                          ea684ed;
input                          fa42769;
input                          vx13b4b;
input                          ym9da5f;
input                          yxed2f8;
input                          ec8d0c4;
input [15:0]                   addr_init_0;
input [15:0]                   addr_init_1;
input [15:0]                   addr_init_2;
input [15:0]                   addr_init_3;
input                          uk77c;
input                          su7821c;
input                          wl_act;
input                          dz61c91;
input                          pue48e;
input [`ddr3_ip_inst_CS_WIDTH-1:0]          yk72473;
input [15:0]                   mg92399;
input                          jr8bcfd;
output [`ddr3_ip_inst_CS_WIDTH-1 :0]        zm41c9;
output                         tw20e4a;
output                         oh7252;
output                         oh39295;
output [`ddr3_ip_inst_BANK_WIDTH-1:0]       mrc94ac;

`ifdef ddr3_ip_inst_ROW_WIDTH_12
output [`ddr3_ip_inst_ROW_WIDTH:0]          zx4a564 ;

`else
output [`ddr3_ip_inst_ROW_WIDTH-1:0]        zx4a564 ;

`endif
output [`ddr3_ip_inst_CKE_WIDTH -1:0]       by52b27;
output                         ng99011;
output                         coac9dc;
parameter  jraa89a  =  10'h200;
parameter  uv544d7  =  10'h100;
parameter  ria26bd =  10'h080;
parameter  pu1b537  =  10'h040;
parameter  dmda9ba  =  10'h020;
parameter  osd4dd3  =  10'h010;
parameter  qia6e98  =  10'h008;
parameter  vx374c1 =  10'h004;
parameter  rvba60f =  10'h002;
parameter  ofd307f  =  10'h001;
reg [`ddr3_ip_inst_CS_WIDTH-1 :0]    bnaf44f,  en7a27e ;
reg                     med13f5, fc89fa9  ;
reg                     zx4fd4b, zx7ea5e ;
reg                     uif52f6,  coa97b0 ;
reg [`ddr3_ip_inst_BANK_WIDTH-1:0]   qt4bd81,    en5ec0c ;

`ifdef ddr3_ip_inst_ROW_WIDTH_12
reg [`ddr3_ip_inst_ROW_WIDTH:0]      zxf6065, xlb032f ;

`else
reg [`ddr3_ip_inst_ROW_WIDTH-1:0]    zxf6065, xlb032f ;

`endif
wire [`ddr3_ip_inst_CS_WIDTH-1 :0]   zm41c9 ;
wire                    tw20e4a  ;
wire                    oh7252 ;
wire                    oh39295 ;
wire [`ddr3_ip_inst_BANK_WIDTH-1:0]  mrc94ac ;

`ifdef ddr3_ip_inst_ROW_WIDTH_12
wire [`ddr3_ip_inst_ROW_WIDTH:0]     zx4a564 ;

`else
wire [`ddr3_ip_inst_ROW_WIDTH-1:0]   zx4a564 ;

`endif
wire                    hq1e9b7;

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`endif
reg    [`ddr3_ip_inst_CKE_WIDTH -1:0]  by52b27;
reg                    ng99011;
reg                    fc117b5, db8bdab;
reg                    en5ed5e, zxf6af5;
wire                   coac9dc;
wire   [9:0]           czcc744;
wire                   lq76b4d;
wire                   lfb5a6a;
wire                   ngad357;
wire                   zk69abb;
wire  [3:0]            ne4d5da;
wire  [13:0]           an23b29;

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif
reg ofd9858;
reg dob127;
reg [15 : 0] co24ed1;
reg [15 : 0] jr27688;
reg [15 : 0] ks3b446;
reg [15 : 0] jcda231;
reg dm66b1a;
reg tw358d3;
reg ymac69b;
reg jc634d9;
reg ks1a6ca;
reg qtd3650;
reg ie88c51;
reg ui46289;
reg ie31449;
reg mt8a248;
reg cz51245;
reg do8922d;
reg cm4916a;
reg vi48b50;
reg jr2d41f;
reg alf7aad;
reg aye5460;
reg [15 : 0] mg1ff3a;
reg vk2a301;
reg ip5180a;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] ofe7447;
reg zk5d2b4;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] ri11c98;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] rv8e4c2;
reg os72617;
reg ls930b9;
reg sw985ca;
reg hbc2e51;
reg gd1728e;
reg ecb9474;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] jcca3a0;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] en51d03;
reg rv8e81c;
reg vi66430;
reg fp32182;
reg sj90c17;
reg xy860bc;
reg [9 : 0] vve6df6;
reg fne3428;
reg ec1a146;
reg tud0a30;
reg gd85182;
reg [3 : 0] zz28c14;
reg [13 : 0] wybc532;
reg [2047:0] swa7;
wire [49:0] ou538;

`ifdef ddr3_ip_inst_ROW_WIDTH_12

`else

`endif

`ifdef ddr3_ip_inst_ROW_WIDTH_12

`else

`endif

`ifdef ddr3_ip_inst_ROW_WIDTH_12

`else

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`endif

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else 

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`ifdef ddr3_ip_inst_CS_WIDTH_4

`else

`endif

`endif

localparam kf29c0 = 50,do14e04 = 32'hfdffe0cb;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`ifdef ddr3_ip_inst_ROW_WIDTH_12


`else


`endif


`ifdef ddr3_ip_inst_ROW_WIDTH_12


`else


`endif


`ifdef ddr3_ip_inst_ROW_WIDTH_12


`else


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else


`endif


`ifdef ddr3_ip_inst_RDIMM


`else


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else 


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else 


`ifdef ddr3_ip_inst_CS_WIDTH_4


`else


`endif


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else 


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else 


`ifdef ddr3_ip_inst_CS_WIDTH_4


`else


`endif


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else 


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else 


`ifdef ddr3_ip_inst_CS_WIDTH_4


`else


`endif


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else 


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else 


`ifdef ddr3_ip_inst_CS_WIDTH_4


`else


`endif


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else


`ifdef ddr3_ip_inst_CS_WIDTH_4


`else


`endif


`endif




`ifdef ddr3_ip_inst_ROW_WIDTH_12



`else



`endif



`ifdef ddr3_ip_inst_ROW_WIDTH_12



`else



`endif




`ifdef ddr3_ip_inst_ROW_WIDTH_12



`else



`endif





`ifdef ddr3_ip_inst_CS_WIDTH_2

assign zm41c9 = (dm66b1a) ? 2'b10 : (dob127 || aye5460) ? ri11c98 : {`ddr3_ip_inst_CS_WIDTH{1'b1}};

`else

assign zm41c9 = (dm66b1a) ? 1'b0 : (dob127 || aye5460) ? ri11c98 : {`ddr3_ip_inst_CS_WIDTH{1'b1}};

`endif


assign tw20e4a =os72617;
assign oh7252 =sw985ca;
assign oh39295  =gd1728e ;
assign mrc94ac    =(dob127 || aye5460 || dm66b1a)? jcca3a0 : 3'b0;
assign zx4a564  =(dob127 || aye5460 || dm66b1a)? zxf6065 : {`ddr3_ip_inst_ROW_WIDTH{1'b0}};

assign                 coac9dc = vi66430;
assign                 lq76b4d = ie88c51 | cz51245;
assign                 lfb5a6a = ui46289 | do8922d;
assign                 ngad357 = ie31449 | cm4916a;
assign                 zk69abb = mt8a248 | vi48b50;
assign   ne4d5da = {fne3428 ,ec1a146 ,tud0a30 ,gd85182 };

assign   czcc744 = {tw358d3, ymac69b, qtd3650, zz28c14 ,((vk2a301 | ip5180a) && (aye5460 | dm66b1a)),(dob127 & jr2d41f ), ofd9858};


assign  an23b29 = {3'b010,ks1a6ca,6'b000000,jc634d9,3'b000};  
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       by52b27    <=  {`ddr3_ip_inst_CKE_WIDTH{1'b0}};   else if (jr2d41f)       by52b27    <=  {`ddr3_ip_inst_CKE_WIDTH{1'b1}};   else if (!alf7aad)       by52b27    <=  {`ddr3_ip_inst_CKE_WIDTH{1'b0}};
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       ng99011    <=  1'b0;
   else if ( (aye5460 || dm66b1a) && (vk2a301 || ip5180a))       ng99011    <=  1'b1;   else if ( !(vk2a301 || ip5180a))       ng99011    <=  1'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       bnaf44f    <=  'b1;       med13f5   <=  'b1;       zx4fd4b   <=  'b1;       uif52f6    <=  'b1;       qt4bd81      <=  'b0;       zxf6065    <=  'b0;       fc117b5    <=  'b0;    end    else begin       bnaf44f    <=  rv8e4c2  ;       med13f5   <=  ls930b9 ;       zx4fd4b   <=  hbc2e51 ;       uif52f6    <=  ecb9474 ;       qt4bd81      <=  en51d03   ;       zxf6065    <=  xlb032f ;       fc117b5     <=  fp32182;    end
end



`ifdef ddr3_ip_inst_RDIMM

assign hq1e9b7 = 1'b1;

`else

assign hq1e9b7 = 1'b0;

`endif


always @ (vve6df6 or fne3428 or ec1a146 or tud0a30 or gd85182 or vk2a301 or dob127 or dm66b1a           or jr2d41f  or ofe7447 or mg1ff3a or jcca3a0 or zxf6065           or co24ed1 or jr27688 or ks3b446 or jcda231 or cz51245 or do8922d or cm4916a or vi48b50           or zk5d2b4 or wybc532 or rv8e81c) begin      en7a27e  = {`ddr3_ip_inst_CS_WIDTH{1'b1}};      fc89fa9 = 'h1;      zx7ea5e = 'h1;      coa97b0  = 'h1;      en5ec0c  =  'h0;      xlb032f  =  'h0;      db8bdab = 'h0;      case (vve6df6)        jraa89a : begin         en7a27e  = {`ddr3_ip_inst_CS_WIDTH{1'b0}};         fc89fa9 =  'h1;         zx7ea5e =  'h0;         coa97b0  =  'h0;                  xlb032f  = wybc532 ;       end       uv544d7 : begin         en7a27e  = {`ddr3_ip_inst_CS_WIDTH{1'b0}};         fc89fa9 =  'h1;         zx7ea5e =  'h0;         coa97b0  =  'h1;                  xlb032f  = wybc532 ;       end       ria26bd : begin         en7a27e  = {`ddr3_ip_inst_CS_WIDTH{1'b0}};         fc89fa9 =  'h0;         zx7ea5e =  'h1;         coa97b0  =  'h1;                  xlb032f  = wybc532 ;       end       pu1b537 : begin         fc89fa9 =  'h0;         zx7ea5e =  'h0;         coa97b0  =  'h0;
         xlb032f  =  {co24ed1[15:2],2'b00};         en5ec0c    =  3'b0 ;         if (cz51245) begin          db8bdab = 1'b1;

`ifdef ddr3_ip_inst_CS_WIDTH_2
         en7a27e  = 2'b01;


`else 
         en7a27e  = 4'b0101;


`endif
         end         else begin          db8bdab = 1'b0;

`ifdef ddr3_ip_inst_CS_WIDTH_2
         en7a27e  = 2'b10;


`else 



`ifdef ddr3_ip_inst_CS_WIDTH_4
         en7a27e  = 4'b1010;


`else
         en7a27e  = 1'b0;


`endif



`endif
         end       end       dmda9ba : begin         fc89fa9 =  'h0;         zx7ea5e =  'h0;         coa97b0  =  'h0;         xlb032f  =  jr27688;         en5ec0c    =  3'b001 ;         if (do8922d) begin          db8bdab = 1'b1;

`ifdef ddr3_ip_inst_CS_WIDTH_2
         en7a27e  = 2'b01;


`else 
         en7a27e  = 4'b0101;


`endif
         end         else begin          db8bdab = 1'b0;

`ifdef ddr3_ip_inst_CS_WIDTH_2
         en7a27e  = 2'b10;


`else 



`ifdef ddr3_ip_inst_CS_WIDTH_4
         en7a27e  = 4'b1010;


`else
         en7a27e  = 1'b0;


`endif



`endif
         end       end       osd4dd3 : begin         fc89fa9 =  'h0;         zx7ea5e =  'h0;         coa97b0  =  'h0;         xlb032f  =  ks3b446;         en5ec0c    =  3'b010 ;         if (cm4916a) begin          db8bdab = 1'b1;

`ifdef ddr3_ip_inst_CS_WIDTH_2
         en7a27e  = 2'b01;


`else 
         en7a27e  = 4'b0101;


`endif
         end         else begin          db8bdab = 1'b0;

`ifdef ddr3_ip_inst_CS_WIDTH_2
         en7a27e  = 2'b10;


`else 



`ifdef ddr3_ip_inst_CS_WIDTH_4
         en7a27e  = 4'b1010;


`else
         en7a27e  = 1'b0;


`endif



`endif
         end       end
       qia6e98 : begin         fc89fa9 =  'h0;         zx7ea5e =  'h0;         coa97b0  =  'h0;         xlb032f  =  jcda231;         en5ec0c    =  3'b011 ;         if (vi48b50) begin          db8bdab = 1'b1;

`ifdef ddr3_ip_inst_CS_WIDTH_2
         en7a27e  = 2'b01;


`else 
         en7a27e  = 4'b0101;


`endif
         end         else begin          db8bdab = 1'b0;

`ifdef ddr3_ip_inst_CS_WIDTH_2
         en7a27e  = 2'b10;


`else 



`ifdef ddr3_ip_inst_CS_WIDTH_4
         en7a27e  = 4'b1010;


`else
         en7a27e  = 1'b0;


`endif



`endif
         end
       end
       vx374c1 : begin           fc89fa9 =  'h0;           zx7ea5e =  'h0;           coa97b0  =  'h0;           xlb032f  =  mg1ff3a;   if (dm66b1a)             en5ec0c    =  3'b000 ;           else if (vk2a301)             en5ec0c    =  3'b001 ;           else             en5ec0c    =  3'b010 ;



`ifdef ddr3_ip_inst_CS_WIDTH_2
          if (!ofe7447[1])             db8bdab = 1'b1;          else             db8bdab = 1'b0;


`else



`ifdef ddr3_ip_inst_CS_WIDTH_4
             if (!ofe7447[1] || !ofe7447[3])                db8bdab = 1'b1;             else                db8bdab = 1'b0;


`else
                db8bdab = 1'b0;


`endif



`endif
           en7a27e  =  ofe7447;       end       rvba60f : begin         if (zk5d2b4)   en7a27e  =  ofe7447;         else               en7a27e  = {`ddr3_ip_inst_CS_WIDTH{rv8e81c}} ;         fc89fa9 =  'h1;         zx7ea5e =  'h1;         coa97b0  =  'h1;         en5ec0c    =   jcca3a0;         xlb032f  =   zxf6065;       end       ofd307f : begin         en7a27e  = {`ddr3_ip_inst_CS_WIDTH{1'b0}};         fc89fa9 =  'h1;         zx7ea5e =  'h1;         coa97b0  =  'h0;         xlb032f  = 'h400 ;       end       default: begin        if (zk5d2b4)    en7a27e  =  ofe7447;         else               en7a27e  = {`ddr3_ip_inst_CS_WIDTH{1'b1}} ;         fc89fa9 =  'h1;         zx7ea5e =  'h1;         coa97b0  =  'h1;         en5ec0c    =  jcca3a0 ;         xlb032f  =  zxf6065;       end      endcase
end
always@* begin ofd9858<=ou538[0];dob127<=ou538[1];co24ed1<={addr_init_0>>1,ou538[2]};jr27688<={addr_init_1>>1,ou538[3]};ks3b446<={addr_init_2>>1,ou538[4]};jcda231<={addr_init_3>>1,ou538[5]};dm66b1a<=ou538[6];tw358d3<=ou538[7];ymac69b<=ou538[8];jc634d9<=ou538[9];ks1a6ca<=ou538[10];qtd3650<=ou538[11];ie88c51<=ou538[12];ui46289<=ou538[13];ie31449<=ou538[14];mt8a248<=ou538[15];cz51245<=ou538[16];do8922d<=ou538[17];cm4916a<=ou538[18];vi48b50<=ou538[19];jr2d41f<=ou538[20];alf7aad<=ou538[21];aye5460<=ou538[22];mg1ff3a<={mg92399>>1,ou538[23]};vk2a301<=ou538[24];ip5180a<=ou538[25];ofe7447<={yk72473>>1,ou538[26]};zk5d2b4<=ou538[27];ri11c98<={bnaf44f>>1,ou538[28]};rv8e4c2<={en7a27e>>1,ou538[29]};os72617<=ou538[30];ls930b9<=ou538[31];sw985ca<=ou538[32];hbc2e51<=ou538[33];gd1728e<=ou538[34];ecb9474<=ou538[35];jcca3a0<={qt4bd81>>1,ou538[36]};en51d03<={en5ec0c>>1,ou538[37]};rv8e81c<=ou538[38];vi66430<=ou538[39];fp32182<=ou538[40];sj90c17<=ou538[41];xy860bc<=ou538[42];vve6df6<={czcc744>>1,ou538[43]};fne3428<=ou538[44];ec1a146<=ou538[45];tud0a30<=ou538[46];gd85182<=ou538[47];zz28c14<={ne4d5da>>1,ou538[48]};wybc532<={an23b29>>1,ou538[49]};end
always@* begin swa7[2047]<=ec8d0c4;swa7[2046]<=addr_init_0[0];swa7[2044]<=addr_init_1[0];swa7[2040]<=addr_init_2[0];swa7[2033]<=addr_init_3[0];swa7[2024]<=su7821c;swa7[2018]<=pha54e5;swa7[2001]<=wl_act;swa7[1988]<=ls2a72f;swa7[1954]<=mg92399[0];swa7[1929]<=ea5397a;swa7[1874]<=coa97b0;swa7[1860]<=dz61c91;swa7[1811]<=tw9cbd1;swa7[1789]<=ym9da5f;swa7[1700]<=qt4bd81[0];swa7[1673]<=pue48e;swa7[1574]<=ice5e8a;swa7[1530]<=yxed2f8;swa7[1353]<=en5ec0c[0];swa7[1317]<=fc117b5;swa7[1311]<=zk69abb;swa7[1299]<=yk72473[0];swa7[1258]<=zx4fd4b;swa7[1247]<=ea684ed;swa7[1187]<=lq76b4d;swa7[1172]<=en5ed5e;swa7[1151]<=an23b29[0];swa7[1102]<=bnaf44f[0];swa7[1101]<=do2f450;swa7[1023]<=co8dea7;swa7[1012]<=uk77c;swa7[937]<=uif52f6;swa7[894]<=vx13b4b;swa7[658]<=hq1e9b7;swa7[655]<=ngad357;swa7[629]<=fc89fa9;swa7[623]<=ened09d;swa7[593]<=czcc744[0];swa7[586]<=db8bdab;swa7[575]<=ne4d5da[0];swa7[551]<=jr8bcfd;swa7[468]<=zx7ea5e;swa7[447]<=fa42769;swa7[327]<=lfb5a6a;swa7[314]<=med13f5;swa7[311]<=gbfda13;swa7[296]<=zxf6af5;swa7[157]<=en7a27e[0];swa7[155]<=fadfb42;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule



































`timescale 1 ns / 100 ps
module yxfd83d_ddr3_ip_inst (
    
    sclk,			   
    rst_n,			   
    mt7b7c,
    ie593b,
    sj2c9d9,
    ng99011,
    lqf1846,
    zke4f2b,
    lf2795a,
    gd3cad7,
    cme56bd,
    ui72ad8,
    clocking_good,
    wl_phase_dly_cnt,

    
    wl_done,
    hbe91fa,
    wl_err,
    wl_act,
    jr8bcfd,
    dz61c91,
    xy83af4,
    mg92399,
    ep1d7a2,
    je3ab0e,
    qi98d54,
    xwd5872,
    tw35504,

    xlaa822,
    xwebd15,
    fpa08bd
    );
input                        sclk;
input                        rst_n;
input                        mt7b7c;
input  [`ddr3_ip_inst_AL_WIDTH-1:0]       ie593b;
input  [`ddr3_ip_inst_CWL_WIDTH-1:0]      sj2c9d9;
input                        ng99011;
input  [`ddr3_ip_inst_CS_WIDTH -1:0]      lqf1846;
input                        zke4f2b;
input   [ 2: 0]              lf2795a;
input   [ 1: 0]              gd3cad7;
input                        cme56bd;
input   [10: 0]              ui72ad8;
input                        clocking_good;
input  [7:0]                 wl_phase_dly_cnt;
output                       wl_done;
output                       hbe91fa;
output                       wl_err;
output                       wl_act;
output                       jr8bcfd;
output                       dz61c91;
output                       xy83af4;
output  [15: 0]              mg92399;
output  [`ddr3_ip_inst_CS_WIDTH-1:0]      ep1d7a2;
output                       je3ab0e;
output                       qi98d54;
output                       tw35504;
output  [(`ddr3_ip_inst_DQS_WIDTH)-1:0]   xwd5872;
output  [8*(`ddr3_ip_inst_DQS_WIDTH)-1:0] xlaa822;
output  [`ddr3_ip_inst_CS_WIDTH-1 :0]     xwebd15;
output                       fpa08bd;

`define ddr3_ip_inst_TDQS 1'b0

`define ddr3_ip_inst_POS_CNT 1'b0

`define ddr3_ip_inst_NEG_CNT 1'b1

`define ddr3_ip_inst_START_DLY 8'h0

`define ddr3_ip_inst_START_POL 1'b0

`define ddr3_ip_inst_PHASE_COMP 6'd8 // phase difference between write level dqs and normal write dqs: 8 * 37ps = 0.3ns

`define ddr3_ip_inst_tWLDQSEN_sclk (`ddr3_ip_inst_TWLDQSEN - `ddr3_ip_inst_TMOD) // (13-6) =  7 (for 200MHz Sclk)

`define ddr3_ip_inst_tWLMRD_sclk (`ddr3_ip_inst_TWLMRD - `ddr3_ip_inst_TMOD)   // (20-6) = 14 (for 200MHz Sclk)

`define ddr3_ip_inst_tWLO_sclk (`ddr3_ip_inst_TWLO/5)+6  //  tWLOmax = 9ns (so wait for ((9/5)+1) = 2 sclk)

`define ddr3_ip_inst_ODTLoff_tAOFmax_sclk 7  // ODTLoff = (AL+CWL-2) tck, tAOFmax = 0.7 tck

`define ddr3_ip_inst_MAX_DQS_DLY_CNT 8'd88 //    (88 x 0.025) = 2.2ns 

`define ddr3_ip_inst_MIN_DQS_DLY_CNT 8'h80 //    msb=1 for neg value. cnt=0 

`define ddr3_ip_inst_WL_DQS_PHASE_DLY_CNT1 (`ddr3_ip_inst_WL_DQS_PHASE_DLY_CNT)
parameter  ea6d799            = 4'd0;
parameter  hb6bcc9  = 4'd1;
parameter  en5e64f       = 4'd2;
parameter  vvf327c  = 4'd3;
parameter  pu993e7    = 4'd4;
parameter  ipc9f3b     = 4'd5;
parameter  xj4f9dd   = 4'd6;
parameter  ho7ceee  = 4'd7;
parameter  mre7773        = 4'd8;
parameter  ie3bb9c    = 4'd9;
parameter  rtddce0          = 4'd10;
parameter  tuee706      = 4'd11;
parameter  rg73832          = 4'd12;
parameter  fc9c192       = 4'd13;
parameter  eae0c93          = 4'd14;
parameter  zz6498           = 3'd0;
parameter  zz324c7          = 3'd1;
parameter  uk9263f       = 3'd2;
parameter  ng931f8      = 3'd3;
parameter  ie98fc2         = 3'd4;
parameter  blc7e10      = 3'd5;
parameter  je3f086           = 3'd0;
parameter  czf8433         = 3'd1;
parameter  vvc219c         = 3'd2;
parameter  qi10ce7          = 3'd3;
parameter  hq86738         = 3'd4;
parameter  kf339c3     = 3'd5;

`ifdef ddr3_ip_inst_CS_WIDTH_1
parameter ba9ce1c = 1;
parameter wje70e2 = 0;
parameter nt38714 = 0;
parameter enc38a6 = 0;

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2
parameter ba9ce1c = 1;
parameter wje70e2 = 1;
parameter nt38714 = 0;
parameter enc38a6 = 0;

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4
parameter ba9ce1c = 1;
parameter wje70e2 = 1;
parameter nt38714 = 1;
parameter enc38a6 = 1;

`endif
reg  [3:0]                   kd512f0;
reg                          wl_act   ;
reg                          jr8bcfd;
reg                          al5e154;
reg                          mef0aa4;
reg  [`ddr3_ip_inst_CS_WIDTH-1 :0]        wl85521;
reg                          vk2a90c;
reg  [7:0]                   mr54863;
reg  [7:0]                   cba431c;
reg  [(`ddr3_ip_inst_DQS_WIDTH)-1:0]      ks218e5;
reg                          qi98d54;
reg                          wl_done;
reg                          hbe91fa;
reg                          wl_err  ;
reg                          zz28cf1;
reg                          me4678e;
reg                          yz33c71;
reg  [(`ddr3_ip_inst_CS_WIDTH)-1:0]       lf9e38c;
reg  [(`ddr3_ip_inst_DQS_WIDTH)-1:0]      xwf1c66;
reg  [(`ddr3_ip_inst_CS_WIDTH)-1:0]       hd8e333;
reg  [1:0]                   pf7199f;
reg                          tw8ccff;
reg  [2:0]                   fa667fb;
reg                          gd33fda;
reg                          wl9fed4;
reg  [2:0]                   kqff6a5;
reg                          jcfb529;
reg                          byda94b;
reg                          ykd4a5b;
reg                          vxa52d8;
reg                          ir296c7;
reg                          mr4b63d;
reg  [1:0]                   cz5b1ed;
reg                          fnd8f6c;
reg  [2:0]                   dzc7b66;
reg                          bn3db36;
reg                          qted9b7;
reg  [2:0]                   tu6cdbc;
reg                          rg66de2;
reg  [7:0]                   cb36f13;
reg  [7:0]                   pub789c;
reg                          oubc4e2;
reg                          je3ab0e;
reg                          tw35504;
reg                          xy9c427;
reg                          uve213b;
reg                          uk109dc;
reg                          ph84ee0;
reg                          xl27707;
reg                          sw3b83e;
reg                          dz61c91;
reg                          xy83af4;
reg  [`ddr3_ip_inst_TWLMRD_WIDTH-1:0]     yz7c28;
reg  [`ddr3_ip_inst_CS_WIDTH-1 :0]        xwebd15;
reg  [8*(`ddr3_ip_inst_DQS_WIDTH)-1:0]    xlaa822;
wire                         fpa08bd;
wire [(`ddr3_ip_inst_CS_WIDTH)-1:0]       bn2884c;
wire [15: 0]                 mg92399;
wire [8*(`ddr3_ip_inst_WL_DQS_WIDTH)-1:0] gq21334;
wire [`ddr3_ip_inst_CS_WIDTH-1 :0]        ep1d7a2;
wire [(`ddr3_ip_inst_DQS_WIDTH)-1:0]      xwd5872;
wire                         ps66879;
wire                         ks343cb;
wire                         cba1e58;
wire                         gqf2c4;
wire                         fa79621;
wire [3:0]                   qgcb10a;
wire [2:0]                   ho58851;
wire                         qgc428a;
wire [`ddr3_ip_inst_CS_WIDTH -1:0]        ym21450;
wire [15: 0]                 eca281;
wire [15: 0]                 qt51409;
reg                          mt8a04d;
reg                          dz5026d;
reg                          nt8136f;
reg                          db9b7e;
reg                          ho4dbf7;
reg                          me6dfbb;
reg  [7:0]                   of6fdd8;

`ifdef ddr3_ip_inst_CS_WIDTH_1

`else

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_8

`else

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_8

`else

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_8

`else

`endif

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`ifdef ddr3_ip_inst_USER_SLOT_SIZE_1

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_1

`endif
wire     jp7eec5;
genvar yxf762e;

`ifndef ddr3_ip_inst_CS_WIDTH_1
genvar kf7dbe;

`ifndef ddr3_ip_inst_CS_WIDTH_2
genvar rtd8bad;
genvar tuc5d6e;

`endif //ifndef CS_WIDTH_2

`endif //ifndef CS_WIDTH_1

`ifdef ddr3_ip_inst_CS_WIDTH_1

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`endif
reg aa2eb73;
reg [`ddr3_ip_inst_AL_WIDTH - 1 : 0] al75b99;
reg [`ddr3_ip_inst_CWL_WIDTH - 1 : 0] doadccd;
reg vk1566;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] gdb172d;
reg hq99ab3;
reg [2 : 0] thcd59a;
reg [1 : 0] cz6acd6;
reg os566b5;
reg [10 : 0] do3506e;
reg cb9ad41;
reg [7 : 0] zza5452;
reg [3 : 0] bnb506d;
reg hqa836e;
reg en41b73;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] mtdb9d;
reg ay6dced;
reg [7 : 0] xj6e768;
reg [7 : 0] xw73b46;
reg [(`ddr3_ip_inst_DQS_WIDTH) - 1 : 0] aa9da32;
reg ofed190;
reg go68c85;
reg qg46428;
reg [(`ddr3_ip_inst_CS_WIDTH) - 1 : 0] fp32141;
reg [(`ddr3_ip_inst_DQS_WIDTH) - 1 : 0] sj90a0f;
reg [(`ddr3_ip_inst_CS_WIDTH) - 1 : 0] yz8507c;
reg [1 : 0] nt283e4;
reg al41f27;
reg [2 : 0] ecf93d;
reg lq7c9e8;
reg rge4f43;
reg [2 : 0] zz27a1a;
reg ph3d0d7;
reg uve86be;
reg cm435f5;
reg uk1afa9;
reg xjd7d49;
reg qvbea4f;
reg [1 : 0] ayf527c;
reg yma93e0;
reg [2 : 0] ic49f01;
reg xj4f809;
reg ho7c04e;
reg [2 : 0] goe0272;
reg ri1391;
reg [7 : 0] jr9c8a;
reg [7 : 0] en4e457;
reg os722bd;
reg nt915e9;
reg oh8af4f;
reg ne57a7c;
reg ngbd3e3;
reg fne9f1a;
reg ld4f8d6;
reg [`ddr3_ip_inst_TWLMRD_WIDTH - 1 : 0] ps7c6b6;
reg [(`ddr3_ip_inst_CS_WIDTH) - 1 : 0] vve35b2;
reg [8 * (`ddr3_ip_inst_WL_DQS_WIDTH) - 1 : 0] co1ad96;
reg ipd6cb1;
reg ymb658d;
reg ngb2c69;
reg zm9634a;
reg cbb1a52;
reg [3 : 0] sw8d295;
reg [2 : 0] tu694a8;
reg xj4a543;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] lq52a1f;
reg [15 : 0] yz950fb;
reg [15 : 0] xya87dd;
reg ay43eeb;
reg aa1f758;
reg nefbac0;
reg fndd602;
reg faeb017;
reg jc580ba;
reg [7 : 0] lqc05d3;
reg mt2e9a;
reg [2047:0] swa7;
wire [75:0] ou538;

`define ddr3_ip_inst_TDQS 1'b0

`define ddr3_ip_inst_POS_CNT 1'b0

`define ddr3_ip_inst_NEG_CNT 1'b1

`define ddr3_ip_inst_START_DLY 8'h0

`define ddr3_ip_inst_START_POL 1'b0

`define ddr3_ip_inst_PHASE_COMP 6'd8 // phase difference between write level dqs and normal write dqs: 8 * 37ps = 0.3ns

`define ddr3_ip_inst_tWLDQSEN_sclk (`ddr3_ip_inst_TWLDQSEN - `ddr3_ip_inst_TMOD) // (13-6) =  7 (for 200MHz Sclk)

`define ddr3_ip_inst_tWLMRD_sclk (`ddr3_ip_inst_TWLMRD - `ddr3_ip_inst_TMOD)   // (20-6) = 14 (for 200MHz Sclk)

`define ddr3_ip_inst_tWLO_sclk (`ddr3_ip_inst_TWLO/5)+6  //  tWLOmax = 9ns (so wait for ((9/5)+1) = 2 sclk)

`define ddr3_ip_inst_ODTLoff_tAOFmax_sclk 7  // ODTLoff = (AL+CWL-2) tck, tAOFmax = 0.7 tck

`define ddr3_ip_inst_MAX_DQS_DLY_CNT 8'd88 //    (88 x 0.025) = 2.2ns 

`define ddr3_ip_inst_MIN_DQS_DLY_CNT 8'h80 //    msb=1 for neg value. cnt=0 

`define ddr3_ip_inst_WL_DQS_PHASE_DLY_CNT1 (`ddr3_ip_inst_WL_DQS_PHASE_DLY_CNT)

`ifdef ddr3_ip_inst_CS_WIDTH_1

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_1

`else

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_8

`else

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_8

`else

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_8

`else

`endif

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`ifdef ddr3_ip_inst_USER_SLOT_SIZE_1

`else

`endif

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_1

`endif


`ifndef ddr3_ip_inst_CS_WIDTH_1


`ifndef ddr3_ip_inst_CS_WIDTH_2



`endif //ifndef CS_WIDTH_2

`endif //ifndef CS_WIDTH_1

`ifdef ddr3_ip_inst_CS_WIDTH_1

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_2

`endif

`ifdef ddr3_ip_inst_CS_WIDTH_4

`endif

localparam kf29c0 = 76,do14e04 = 32'hfdfff40b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`define ddr3_ip_inst_TDQS 1'b0


`define ddr3_ip_inst_POS_CNT 1'b0


`define ddr3_ip_inst_NEG_CNT 1'b1


`define ddr3_ip_inst_START_DLY 8'h0


`define ddr3_ip_inst_START_POL 1'b0


`define ddr3_ip_inst_PHASE_COMP 6'd8 // phase difference between write level dqs and normal write dqs: 8 * 37ps = 0.3ns


`define ddr3_ip_inst_tWLDQSEN_sclk (`ddr3_ip_inst_TWLDQSEN - `ddr3_ip_inst_TMOD) // (13-6) =  7 (for 200MHz Sclk)


`define ddr3_ip_inst_tWLMRD_sclk (`ddr3_ip_inst_TWLMRD - `ddr3_ip_inst_TMOD)   // (20-6) = 14 (for 200MHz Sclk)


`define ddr3_ip_inst_tWLO_sclk (`ddr3_ip_inst_TWLO/5)+6  //  tWLOmax = 9ns (so wait for ((9/5)+1) = 2 sclk)


`define ddr3_ip_inst_ODTLoff_tAOFmax_sclk 7  // ODTLoff = (AL+CWL-2) tck, tAOFmax = 0.7 tck


`define ddr3_ip_inst_MAX_DQS_DLY_CNT 8'd88 //    (88 x 0.025) = 2.2ns 


`define ddr3_ip_inst_MIN_DQS_DLY_CNT 8'h80 //    msb=1 for neg value. cnt=0 


`define ddr3_ip_inst_WL_DQS_PHASE_DLY_CNT1 (`ddr3_ip_inst_WL_DQS_PHASE_DLY_CNT)


`ifdef ddr3_ip_inst_CS_WIDTH_1


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_4


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_1


`else


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_8


`else


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_8


`else


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_8


`else


`endif


`ifdef ddr3_ip_inst_RDIMM


`else


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_4


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`ifdef ddr3_ip_inst_USER_SLOT_SIZE_1


`else


`endif


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_1


`endif


`ifndef ddr3_ip_inst_CS_WIDTH_1


`ifndef ddr3_ip_inst_CS_WIDTH_2


`endif //ifndef CS_WIDTH_2


`endif //ifndef CS_WIDTH_1


`ifdef ddr3_ip_inst_CS_WIDTH_1


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_2


`endif


`ifdef ddr3_ip_inst_CS_WIDTH_4


`endif






































`define ddr3_ip_inst_TDQS 1'b0



`define ddr3_ip_inst_POS_CNT 1'b0



`define ddr3_ip_inst_NEG_CNT 1'b1



`define ddr3_ip_inst_START_DLY 8'h0



`define ddr3_ip_inst_START_POL 1'b0



`define ddr3_ip_inst_PHASE_COMP 6'd8 // phase difference between write level dqs and normal write dqs: 8 * 37ps = 0.3ns
                            







`define ddr3_ip_inst_tWLDQSEN_sclk (`ddr3_ip_inst_TWLDQSEN - `ddr3_ip_inst_TMOD) // (13-6) =  7 (for 200MHz Sclk)



`define ddr3_ip_inst_tWLMRD_sclk (`ddr3_ip_inst_TWLMRD - `ddr3_ip_inst_TMOD)   // (20-6) = 14 (for 200MHz Sclk)



`define ddr3_ip_inst_tWLO_sclk (`ddr3_ip_inst_TWLO/5)+6  //  tWLOmax = 9ns (so wait for ((9/5)+1) = 2 sclk)
                                                                                        

`define ddr3_ip_inst_ODTLoff_tAOFmax_sclk 7  // ODTLoff = (AL+CWL-2) tck, tAOFmax = 0.7 tck
                                                                                                                                                


`define ddr3_ip_inst_MAX_DQS_DLY_CNT 8'd88 //    (88 x 0.025) = 2.2ns 



`define ddr3_ip_inst_MIN_DQS_DLY_CNT 8'h80 //    msb=1 for neg value. cnt=0 





`define ddr3_ip_inst_WL_DQS_PHASE_DLY_CNT1 (`ddr3_ip_inst_WL_DQS_PHASE_DLY_CNT)






`ifdef ddr3_ip_inst_CS_WIDTH_1



`endif



`ifdef ddr3_ip_inst_CS_WIDTH_2



`endif



`ifdef ddr3_ip_inst_CS_WIDTH_4



`endif















always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      of6fdd8   <= 8'h0;      uve213b       <= 1'b0;      tw35504             <= 1'b0;   end   else begin      of6fdd8   <= zza5452;      uve213b       <= nt915e9;
      tw35504             <= nt915e9;         end
end




`ifdef ddr3_ip_inst_CS_WIDTH_1

assign      qgc428a = 1'b1;

`else

assign      qgc428a = {{(`ddr3_ip_inst_CS_WIDTH-1){1'b0}},1'b1};

`endif





always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      kd512f0        <= ea6d799;      wl_act          <= 1'b0;      jr8bcfd     <= 1'b0;      al5e154        <= 1'b0;      mef0aa4         <= 1'b0;      wl85521         <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};      vk2a90c     <= 1'b1;      mr54863    <= `ddr3_ip_inst_START_DLY;      cba431c    <= `ddr3_ip_inst_WL_DQS_PHASE_DLY_CNT1;            ks218e5      <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};      qi98d54    <= 1'b0;      wl_done         <= 1'b0;      hbe91fa       <= 1'b0;      wl_err          <= 1'b0;      zz28cf1     <= 1'b0;      me4678e    <= 1'b0;      yz33c71     <= 1'b0;      lf9e38c       <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};


`ifdef ddr3_ip_inst_DATA_SIZE_8
      xwf1c66     <= 1'b1;


`else
      xwf1c66     <= {{(`ddr3_ip_inst_DQS_WIDTH-1){1'b0}},1'b1};


`endif
      hd8e333      <= xj4a543;      pf7199f          <= 2'b00;      tw8ccff   <= 1'b0;      fa667fb        <= 3'b000;      gd33fda <= 1'b0;      wl9fed4        <= 1'b0;   end   else begin      case (bnb506d)  
         ea6d799   :          begin                             hbe91fa       <= 1'b0;                           yz33c71     <= 1'b0;                           wl85521         <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};                           jr8bcfd     <= 1'b0;                           ks218e5      <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};                           lf9e38c       <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};


`ifdef ddr3_ip_inst_DATA_SIZE_8
                           xwf1c66     <= 1'b1;


`else
                           xwf1c66     <= {{(`ddr3_ip_inst_DQS_WIDTH-1){1'b0}},1'b1};


`endif
                           hd8e333      <= xj4a543;                           mr54863    <= `ddr3_ip_inst_START_DLY;                                                      cba431c    <= lqc05d3;                           tw8ccff   <= 1'b0;                       pf7199f          <= 2'b00;                           fa667fb        <= 3'b000;               gd33fda <= 1'b0;                           wl9fed4        <= 1'b0;                       if (aa2eb73 && !wl_done) begin                          wl_act    <= 1'b1;                          kd512f0  <= hb6bcc9;                       end                           else                              kd512f0     <= ea6d799;                           end                  hb6bcc9  : begin                             if ((mtdb9d == `ddr3_ip_inst_CS_WIDTH) || (|(aa9da32))) begin                              hd8e333      <= xj4a543;                  gd33fda <= 1'b1;                              vk2a90c     <= 1'b0;                              tw8ccff   <= 1'b0;                              al5e154        <= 1'b0;                              mef0aa4         <= 1'b0;                              fa667fb        <= 3'b000;                              kd512f0        <= vvf327c;                           end                           else begin                              tw8ccff <= 1'b0;                              al5e154      <= 1'b1;                              mef0aa4       <= 1'b0;                              fa667fb      <= tu694a8;                              zz28cf1   <= 1'b1;                              kd512f0      <= en5e64f;                           end                           end         en5e64f :       begin                             zz28cf1     <= 1'b0;                           if (vk1566) begin                              wl85521      <= mtdb9d + 1;                              hd8e333   <= yz8507c + yz8507c;                              kd512f0     <= hb6bcc9;                           end                           else                              kd512f0     <= en5e64f;                           end         vvf327c :  begin                 gd33fda <= 1'b0;                           if (ho7c04e) begin                              jr8bcfd  <= 1'b1;                              wl9fed4     <= 1'b1;                              kd512f0     <= pu993e7;                           end                   else                              kd512f0     <= vvf327c;                   end         pu993e7 :    begin                             vk2a90c     <= 1'b0;                           wl9fed4        <= 1'b0;               if (ld4f8d6) begin                              ks218e5   <= aa9da32 + 1;                              kd512f0     <= ipc9f3b;               end                           else if (fne9f1a)                              kd512f0     <= rtddce0;                   else                              kd512f0     <= pu993e7;                   end         ipc9f3b :     begin                             if (aa9da32 == `ddr3_ip_inst_DQS_WIDTH) begin                              vk2a90c  <= 1'b0;                              ks218e5   <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};


`ifdef ddr3_ip_inst_DATA_SIZE_8
                              xwf1c66  <= 1'b1;


`else
                              xwf1c66  <= {{(`ddr3_ip_inst_DQS_WIDTH-1){1'b0}},1'b1};


`endif
                              yz33c71  <= 1'b1;                                    qi98d54 <= 1'b0;                              kd512f0     <= xj4f9dd;                           end                           else begin                              xwf1c66   <= sj90a0f + sj90a0f;                              qi98d54  <= ~qi98d54;


`ifdef ddr3_ip_inst_RDIMM
                              mr54863  <= `ddr3_ip_inst_START_DLY;                              cba431c    <= lqc05d3;


`else
                              mr54863  <= jr9c8a;                              cba431c  <= en4e457;




`endif
                              vk2a90c   <= 1'b1;                              wl9fed4      <= 1'b1;                              kd512f0      <= pu993e7;                           end                           end                  xj4f9dd :   begin                              yz33c71   <= 1'b0;                           if (cbb1a52) begin                                tw8ccff  <= 1'b0;                              al5e154       <= 1'b0;                              mef0aa4        <= 1'b0;                              fa667fb       <= tu694a8;                              zz28cf1    <= 1'b1;                              kd512f0       <= ho7ceee;               end                           else                              kd512f0     <= xj4f9dd;                           end              ho7ceee :  begin                              zz28cf1  <= 1'b0;                           if (!vk1566)                              kd512f0     <= ho7ceee;                           else  begin                              al5e154     <= 1'b1;                              zz28cf1  <= 1'b1;                              kd512f0     <= mre7773;                           end                           end                  mre7773  :       begin                              zz28cf1      <= 1'b0;               if (vk1566) begin                              tw8ccff <= 1'b1;                          pf7199f        <= do3506e[10:9];                              me4678e  <= 1'b1;                              jr8bcfd   <= 1'b0;                              kd512f0      <= ie3bb9c;                           end                           else                              kd512f0      <= mre7773;                           end              ie3bb9c :    begin                             me4678e  <= 1'b0;                           if (!vk1566)                              kd512f0   <= ie3bb9c;                           else begin                              tw8ccff <= 1'b0;                            pf7199f        <= 2'b00;
                              al5e154      <= 1'b0;                              mef0aa4       <= 1'b0;                              if (fp32141 == `ddr3_ip_inst_CS_WIDTH - 1) begin                                 lf9e38c     <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};                                 hd8e333    <= xj4a543;                                 fa667fb      <= thcd59a;                                 zz28cf1   <= 1'b1;                                 kd512f0      <= tuee706;                              end                              else begin                                 lf9e38c     <= fp32141 + 1;                                    mr54863  <= `ddr3_ip_inst_START_DLY;                                                                  cba431c  <= lqc05d3;                                 hd8e333    <= yz8507c + yz8507c;                                 fa667fb      <= 3'b000;                     gd33fda <= 1'b1;                                 kd512f0      <= vvf327c;                              end                           end                           end          rtddce0 :          begin                                wl_act          <= 1'b0;                           jr8bcfd     <= 1'b0;                           wl_err          <= 1'b1;                           wl_done         <= 1'b1;                           hbe91fa       <= 1'b1;                           kd512f0        <= ea6d799;                           end          tuee706 :      begin                             zz28cf1   <= 1'b0;                           if (!vk1566)                              kd512f0  <= tuee706;                           else begin                              if (fp32141 == `ddr3_ip_inst_CS_WIDTH - 1)                                 kd512f0   <= rg73832;                              else begin                                 lf9e38c  <= fp32141 + 1;                                 hd8e333 <= yz8507c + yz8507c;                                 zz28cf1 <= 1'b1;                                 kd512f0   <= tuee706;                              end                           end                           end         rg73832 :          begin                                kd512f0     <= eae0c93;                           end
         fc9c192 :       begin                             if (cb9ad41)                              kd512f0     <= eae0c93;                           else                              kd512f0     <= fc9c192;                           end
         eae0c93 :          begin                                wl_act          <= 1'b0;
                              jr8bcfd     <= 1'b0;                              wl_err          <= 1'b0;                              wl_done         <= 1'b1;                              hbe91fa       <= 1'b1;                              kd512f0        <= ea6d799;                           end         default :         begin                           kd512f0        <= ea6d799;                           end         endcase   end
end



always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      kqff6a5        <= zz6498;      jcfb529        <= 1'b0;      byda94b         <= 1'b0;      ykd4a5b     <= 1'b0;      vxa52d8    <= 1'b0;      ir296c7     <= 1'b1;      mr4b63d      <= 1'b0;      cz5b1ed          <= 2'b00;      fnd8f6c   <= 1'b0;      dzc7b66        <= 3'b000;      bn3db36     <= 1'b0;      qted9b7  <= 1'b0;   end   else begin      case (zz27a1a)  
         zz6498   :         begin                             mr4b63d      <= 1'b0;                                                      ir296c7     <= 1'b0;                           fnd8f6c   <= 1'b0;                       cz5b1ed          <= 2'b00;                           dzc7b66        <= 3'b000;                           qted9b7   <= 1'b0;                           ykd4a5b     <= 1'b0;               if (lq7c9e8)                              kqff6a5     <= zz324c7;                           else                              kqff6a5     <= zz6498;                           end                           zz324c7  :         begin                              fnd8f6c   <= 1'b1;                       cz5b1ed          <= 2'b00;                             bn3db36     <= 1'b1;                           kqff6a5        <= uk9263f;                           end         uk9263f :       begin                              bn3db36        <= 1'b0;                           if (vk1566) begin                              fnd8f6c  <= 1'b0;                              jcfb529       <= 1'b0;                              byda94b        <= 1'b1;                                                            dzc7b66       <= tu694a8;                              ykd4a5b    <= 1'b1;                              ir296c7    <= 1'b1;                              kqff6a5       <= ng931f8;                           end                           else                              kqff6a5       <= uk9263f;                           end         ng931f8 :      begin                             ykd4a5b       <= 1'b0;                           if (vk1566) begin                              fnd8f6c  <= 1'b0;                              jcfb529       <= 1'b0;                              byda94b        <= 1'b0;                              dzc7b66       <= 3'b000;                              vxa52d8 <= 1'b1;                                      ir296c7   <= 1'b0;                              kqff6a5      <= ie98fc2;                           end                           else                              kqff6a5      <= ng931f8;                           end                  ie98fc2 :         begin                             if (ipd6cb1) begin                              mr4b63d   <= 1'b1;                              ir296c7 <= 1'b1;                              kqff6a5    <= blc7e10;                           end                           else                              kqff6a5     <= ie98fc2;                           end              blc7e10 :      begin                             mr4b63d   <= 1'b0;                           ir296c7  <= 1'b0;                           if (zm9634a) begin                                 qted9b7 <= 1'b1;                              kqff6a5      <= zz6498;                           end                           else begin                              kqff6a5     <= blc7e10;                           end                           end         default :         begin                           kqff6a5        <= zz6498;                           end         endcase   end
end



always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      tu6cdbc       <= je3f086;      rg66de2    <= 1'b0;      cb36f13  <= `ddr3_ip_inst_START_DLY;      pub789c  <= `ddr3_ip_inst_WL_DQS_PHASE_DLY_CNT1;            oubc4e2      <= 1'b0;      je3ab0e     <= 1'b0;      uk109dc  <= 1'b0;      ph84ee0         <= `ddr3_ip_inst_POS_CNT;      xl27707          <= 1'b0;      sw3b83e          <= 1'b0;      xy9c427    <= 1'b0;
   end   else begin      case (goe0272)           je3f086  :          begin                             oubc4e2      <= 1'b0;                           je3ab0e     <= 1'b0;                           uk109dc  <= 1'b0;                           ph84ee0         <= `ddr3_ip_inst_POS_CNT;                           xl27707          <= 1'b0;                           sw3b83e          <= 1'b0;   if (bnb506d     == xj4f9dd) begin                              xy9c427    <= 1'b0;                           end                           rg66de2    <= 1'b0;                       if (rge4f43) begin                              cb36f13  <= xj6e768;                              pub789c  <= xw73b46;                              oubc4e2   <= 1'b1;                              rg66de2 <= 1'b1;                          tu6cdbc    <= czf8433;                       end                           else                              tu6cdbc    <= je3f086;                           end         czf8433 :         begin                                                        oubc4e2   <= 1'b0;                           if (je3ab0e) begin                              je3ab0e  <= 1'b0;                              rg66de2 <= 1'b0;                              tu6cdbc     <= vvc219c;                              xy9c427 <= 1'b0;                           end                           else begin                              je3ab0e  <= 1'b1;                                      tu6cdbc     <= czf8433;                                                         end                           end                  vvc219c :         begin                              if (ngb2c69) begin                              rg66de2  <= 1'b1;                              xy9c427  <= 1'b1;                              tu6cdbc     <= qi10ce7;                           end                           else                              tu6cdbc     <= vvc219c;                           end         qi10ce7  :         begin                              if (ne57a7c == 1'b0) begin                              if (hq99ab3 == 1'b1)                                 ph84ee0 <= `ddr3_ip_inst_NEG_CNT;                                                               else                                 ph84ee0 <= `ddr3_ip_inst_POS_CNT;                              uk109dc <= 1'b1;                              tu6cdbc       <= hq86738;                                                         end                           else  begin                              if (ngbd3e3 == `ddr3_ip_inst_POS_CNT && hq99ab3 == 1'b1)                                 tu6cdbc  <= kf339c3;                              else begin                                 if (ngbd3e3 == `ddr3_ip_inst_NEG_CNT && hq99ab3 == 1'b0)                                    ph84ee0 <= `ddr3_ip_inst_POS_CNT;                                 tu6cdbc  <= hq86738;                                                                  end                           end                           end              hq86738 :         begin                              if (ngbd3e3 == `ddr3_ip_inst_POS_CNT) begin                              if (ay43eeb) begin                                 cb36f13  <= 8'h00;                                        end                              else                                 cb36f13  <= jr9c8a + 1;                              if ( faeb017 ) begin                                 pub789c  <= 8'h00;                              end                              else                                 pub789c  <= en4e457 + 1;                           end                           else begin


                              if (aa1f758) begin                                 ph84ee0 <= `ddr3_ip_inst_POS_CNT;                              end                              else                                 cb36f13  <= jr9c8a - 1;


                              if (!jc580ba)                                 pub789c  <= en4e457 - 1;                           end                           if ( nefbac0 || fndd602) begin                              xl27707        <= 1'b1;                              tu6cdbc     <= je3f086;                              xy9c427  <= 1'b0;                           end                           else begin                              oubc4e2    <= 1'b1;                                    tu6cdbc     <= czf8433;                           end                           end
              kf339c3 :     begin                             uk109dc  <= 1'b0;                           sw3b83e          <= 1'b1;                           tu6cdbc       <= je3f086;                           end         default :         begin                           tu6cdbc       <= je3f086;                           end         endcase   end
end

always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      mt8a04d    <= 1'b0;   end   else if (jr9c8a == 8'h9c)      mt8a04d    <= 1'b1;   else      mt8a04d    <= 1'b0;
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      dz5026d    <= 1'b0;   end   else if (jr9c8a == 8'h1 || jr9c8a == 8'h0)      dz5026d    <= 1'b1;   else      dz5026d    <= 1'b0;
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      nt8136f    <= 1'b0;   end   else if (jr9c8a == `ddr3_ip_inst_MAX_DQS_DLY_CNT - 1)      nt8136f    <= 1'b1;   else      nt8136f    <= 1'b0;
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      db9b7e    <= 1'b0;   end   else if (jr9c8a == `ddr3_ip_inst_MIN_DQS_DLY_CNT + 1)      db9b7e    <= 1'b1;   else      db9b7e    <= 1'b0;
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      ho4dbf7    <= 1'b0;   end   else if (en4e457 == 8'h9c)      ho4dbf7    <= 1'b1;   else      ho4dbf7    <= 1'b0;
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      me6dfbb    <= 1'b0;   end   else if (en4e457 == 8'h1 || en4e457 == 8'h0)      me6dfbb    <= 1'b1;   else      me6dfbb    <= 1'b0;
end

always @ (posedge sclk or negedge rst_n) begin   if (!rst_n)      xwebd15   <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};   else if (qvbea4f)      xwebd15   <= vve35b2;   else if (qg46428)      xwebd15   <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      dz61c91    <= 1'b0;      xy83af4   <= 1'b0;   end   else begin      dz61c91    <= ofed190  | cm435f5;      xy83af4   <= xj4f809 | go68c85;   end
end
   assign  ho58851 = (mtdb9d[0] || fp32141[0]) ? `ddr3_ip_inst_WL_RNK1_RTT_NOM : `ddr3_ip_inst_WL_RNK0_RTT_NOM; assign  fpa08bd = (bnb506d == rg73832) ? 1'b1 : 1'b0; assign  mg92399  = (al41f27 || yma93e0) ? xya87dd : yz950fb; assign  eca281 = {3'b000,(hqa836e | ph3d0d7) ,`ddr3_ip_inst_TDQS,1'b0,(ecf93d[2] | ic49f01[2]), 1'b0,                (en41b73 | uve86be) ,(ecf93d[1] | ic49f01[1]),cz6acd6[1],al75b99,	(ecf93d[0] | ic49f01[0]),cz6acd6[0],os566b5}; assign qt51409  = {3'b000,(nt283e4 | ayf527c),1'b0,do3506e[7:0]};




`ifdef ddr3_ip_inst_CS_WIDTH_4



assign bn2884c = yz8507c;


`endif




`ifdef ddr3_ip_inst_CS_WIDTH_2



`ifdef ddr3_ip_inst_USER_SLOT_SIZE_1
  assign bn2884c = {(yz8507c[0] | yz8507c[1]), 1'b0};


`else
  assign bn2884c = {(yz8507c[0] | yz8507c[1]), (yz8507c[0] | yz8507c[1])};


`endif



`endif




`ifdef ddr3_ip_inst_CS_WIDTH_1
 assign bn2884c = yz8507c;

`endif





always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      yz7c28    <= 4'h0;   end   else if (!uk1afa9 || ay6dced || ri1391 || xjd7d49)      yz7c28    <= 4'h0;   else      yz7c28    <= ps7c6b6 + 1;
end
assign  ps66879      = (ps7c6b6 == `ddr3_ip_inst_TMOD)                 ? 1'b1 : 1'b0;
assign  ks343cb  = (ps7c6b6 == `ddr3_ip_inst_tWLDQSEN_sclk)        ? 1'b1 : 1'b0;
assign  cba1e58      = (ps7c6b6 == `ddr3_ip_inst_tWLO_sclk)            ? 1'b1 : 1'b0;
assign  gqf2c4    = (ps7c6b6 == `ddr3_ip_inst_tWLMRD_sclk)          ? 1'b1 : 1'b0;
assign  fa79621 = (ps7c6b6 == `ddr3_ip_inst_ODTLoff_tAOFmax_sclk) ? 1'b1 : 1'b0;

assign  xwd5872    = sj90a0f;
assign  ep1d7a2     = ~yz8507c;






assign  jp7eec5 =  (bnb506d == kf339c3) ? 1'b1 : 1'b0;
          generate        begin        if(ba9ce1c == 1) begin           for (yxf762e=0; yxf762e<`ddr3_ip_inst_DQS_WIDTH; yxf762e=yxf762e+1)           begin: xl81bcc           irde67_ddr3_ip_inst irde67(               .sclk              (sclk),               .rst_n             (rst_n),               .oubc4e2        (os722bd),               .jp7eec5    (mt2e9a),               .ld4feee            (yz8507c[0]),               .fafbbb5           (sj90a0f[yxf762e]),               .tu76ab3    (jr9c8a),               .dbaacd6    (en4e457),
               .cob35b8        (gq21334[(8*yxf762e+7):(8*yxf762e)])               );           end         end     end     endgenerate


`ifndef ddr3_ip_inst_CS_WIDTH_1
          generate        begin        if(wje70e2 == 1) begin           for (kf7dbe=0; kf7dbe<`ddr3_ip_inst_DQS_WIDTH; kf7dbe=kf7dbe+1)           begin: hb5a34e           irde67_ddr3_ip_inst irde67(               .sclk              (sclk),               .rst_n             (rst_n),               .oubc4e2        (os722bd),               .jp7eec5    (mt2e9a),               .ld4feee            (yz8507c[1]),               .fafbbb5           (sj90a0f[kf7dbe]),               .tu76ab3    (jr9c8a),               .dbaacd6    (en4e457),
               .cob35b8        (gq21334[((8*(kf7dbe+`ddr3_ip_inst_DQS_WIDTH))+7):(8*(kf7dbe+`ddr3_ip_inst_DQS_WIDTH))])               );           end         end     end     endgenerate


`ifndef ddr3_ip_inst_CS_WIDTH_2
          generate        begin        if(nt38714 == 1) begin           for (rtd8bad=0; rtd8bad<`ddr3_ip_inst_DQS_WIDTH; rtd8bad=rtd8bad+1)           begin: fafbf5d           irde67_ddr3_ip_inst irde67(               .sclk              (sclk),               .rst_n             (rst_n),               .oubc4e2        (os722bd),               .jp7eec5    (mt2e9a),               .ld4feee            (yz8507c[2]),               .fafbbb5           (sj90a0f[rtd8bad]),               .tu76ab3    (jr9c8a),               .dbaacd6    (en4e457),
               .cob35b8        (gq21334[((8*(rtd8bad+2*`ddr3_ip_inst_DQS_WIDTH))+7):(8*(rtd8bad+2*`ddr3_ip_inst_DQS_WIDTH))])               );           end         end     end     endgenerate          generate        begin        if(enc38a6 == 1) begin           for (tuc5d6e=0; tuc5d6e<`ddr3_ip_inst_DQS_WIDTH; tuc5d6e=tuc5d6e+1)           begin: mt95a36           irde67_ddr3_ip_inst irde67(               .sclk              (sclk),               .rst_n             (rst_n),               .oubc4e2        (os722bd),               .jp7eec5    (mt2e9a),               .ld4feee            (yz8507c[3]),               .fafbbb5           (sj90a0f[tuc5d6e]),               .tu76ab3    (jr9c8a),               .dbaacd6    (en4e457),
               .cob35b8        (gq21334[((8*(tuc5d6e+3*`ddr3_ip_inst_DQS_WIDTH))+7):(8*(tuc5d6e+3*`ddr3_ip_inst_DQS_WIDTH))])               );           end         end     end     endgenerate


`endif //ifndef CS_WIDTH_2



`endif //ifndef CS_WIDTH_1









`ifdef ddr3_ip_inst_CS_WIDTH_1

assign ym21450 = (wl_act) ? ep1d7a2 : gdb172d;
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin
      xlaa822       <= {(8*`ddr3_ip_inst_DQS_WIDTH){1'b0}};   end   else begin
      xlaa822       <= co1ad96;   end
end

`endif




`ifdef ddr3_ip_inst_CS_WIDTH_2

assign ym21450 = (wl_act) ? ep1d7a2 : 2'b10;
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin
      xlaa822       <= {(8*`ddr3_ip_inst_DQS_WIDTH){1'b0}};   end   else begin   case (lq52a1f)
      2'b10 : begin
              xlaa822       <= co1ad96[(8*`ddr3_ip_inst_DQS_WIDTH)-1 : 0];              end      2'b01 : begin
              xlaa822       <= co1ad96[(8*(2*`ddr3_ip_inst_DQS_WIDTH))-1 : (8*`ddr3_ip_inst_DQS_WIDTH)];              end      default : begin
              xlaa822       <= co1ad96[(8*`ddr3_ip_inst_DQS_WIDTH)-1 : 0];              end      endcase   end
end

`endif




`ifdef ddr3_ip_inst_CS_WIDTH_4

always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin
      xlaa822       <= {(8*`ddr3_ip_inst_DQS_WIDTH){1'b0}};   end   else begin   case (lq52a1f)
      4'b1110 : begin
              xlaa822       <= co1ad96[(8*`ddr3_ip_inst_DQS_WIDTH)-1 : 0];              end      4'b1101 : begin
              xlaa822       <= co1ad96[(8*(2*`ddr3_ip_inst_DQS_WIDTH))-1 : (8*`ddr3_ip_inst_DQS_WIDTH)];              end      4'b1011 : begin
              xlaa822       <= co1ad96[(8*(3*`ddr3_ip_inst_DQS_WIDTH))-1 : (8*(2*`ddr3_ip_inst_DQS_WIDTH))];              end      4'b0111 : begin
              xlaa822       <= co1ad96[(8*(4*`ddr3_ip_inst_DQS_WIDTH))-1 : (8*(3*`ddr3_ip_inst_DQS_WIDTH))];              end      default : begin
              xlaa822       <= co1ad96[(8*`ddr3_ip_inst_DQS_WIDTH)-1 : 0];              end      endcase   end
end

`endif



always@* begin aa2eb73<=ou538[0];al75b99<={ie593b>>1,ou538[1]};doadccd<={sj2c9d9>>1,ou538[2]};vk1566<=ou538[3];gdb172d<={lqf1846>>1,ou538[4]};hq99ab3<=ou538[5];thcd59a<={lf2795a>>1,ou538[6]};cz6acd6<={gd3cad7>>1,ou538[7]};os566b5<=ou538[8];do3506e<={ui72ad8>>1,ou538[9]};cb9ad41<=ou538[10];zza5452<={wl_phase_dly_cnt>>1,ou538[11]};bnb506d<={kd512f0>>1,ou538[12]};hqa836e<=ou538[13];en41b73<=ou538[14];mtdb9d<={wl85521>>1,ou538[15]};ay6dced<=ou538[16];xj6e768<={mr54863>>1,ou538[17]};xw73b46<={cba431c>>1,ou538[18]};aa9da32<={ks218e5>>1,ou538[19]};ofed190<=ou538[20];go68c85<=ou538[21];qg46428<=ou538[22];fp32141<={lf9e38c>>1,ou538[23]};sj90a0f<={xwf1c66>>1,ou538[24]};yz8507c<={hd8e333>>1,ou538[25]};nt283e4<={pf7199f>>1,ou538[26]};al41f27<=ou538[27];ecf93d<={fa667fb>>1,ou538[28]};lq7c9e8<=ou538[29];rge4f43<=ou538[30];zz27a1a<={kqff6a5>>1,ou538[31]};ph3d0d7<=ou538[32];uve86be<=ou538[33];cm435f5<=ou538[34];uk1afa9<=ou538[35];xjd7d49<=ou538[36];qvbea4f<=ou538[37];ayf527c<={cz5b1ed>>1,ou538[38]};yma93e0<=ou538[39];ic49f01<={dzc7b66>>1,ou538[40]};xj4f809<=ou538[41];ho7c04e<=ou538[42];goe0272<={tu6cdbc>>1,ou538[43]};ri1391<=ou538[44];jr9c8a<={cb36f13>>1,ou538[45]};en4e457<={pub789c>>1,ou538[46]};os722bd<=ou538[47];nt915e9<=ou538[48];oh8af4f<=ou538[49];ne57a7c<=ou538[50];ngbd3e3<=ou538[51];fne9f1a<=ou538[52];ld4f8d6<=ou538[53];ps7c6b6<={yz7c28>>1,ou538[54]};vve35b2<={bn2884c>>1,ou538[55]};co1ad96<={gq21334>>1,ou538[56]};ipd6cb1<=ou538[57];ymb658d<=ou538[58];ngb2c69<=ou538[59];zm9634a<=ou538[60];cbb1a52<=ou538[61];sw8d295<={qgcb10a>>1,ou538[62]};tu694a8<={ho58851>>1,ou538[63]};xj4a543<=ou538[64];lq52a1f<={ym21450>>1,ou538[65]};yz950fb<={eca281>>1,ou538[66]};xya87dd<={qt51409>>1,ou538[67]};ay43eeb<=ou538[68];aa1f758<=ou538[69];nefbac0<=ou538[70];fndd602<=ou538[71];faeb017<=ou538[72];jc580ba<=ou538[73];lqc05d3<={of6fdd8>>1,ou538[74]};mt2e9a<=ou538[75];end
always@* begin swa7[2047]<=ie593b[0];swa7[2046]<=sj2c9d9[0];swa7[2044]<=ng99011;swa7[2040]<=lqf1846[0];swa7[2032]<=zke4f2b;swa7[2016]<=lf2795a[0];swa7[2011]<=ir296c7;swa7[1984]<=gd3cad7[0];swa7[1974]<=mr4b63d;swa7[1959]<=ho4dbf7;swa7[1941]<=pf7199f[0];swa7[1920]<=cme56bd;swa7[1914]<=mt8a04d;swa7[1901]<=cz5b1ed[0];swa7[1871]<=me6dfbb;swa7[1835]<=tw8ccff;swa7[1834]<=ps66879;swa7[1793]<=ui72ad8[0];swa7[1780]<=dz5026d;swa7[1754]<=fnd8f6c;swa7[1749]<=qted9b7;swa7[1721]<=xl27707;swa7[1709]<=cb36f13[0];swa7[1694]<=of6fdd8[0];swa7[1679]<=ks218e5[0];swa7[1623]<=fa667fb[0];swa7[1621]<=ks343cb;swa7[1539]<=clocking_good;swa7[1526]<=ykd4a5b;swa7[1513]<=nt8136f;swa7[1502]<=eca281[0];swa7[1482]<=bn2884c[0];swa7[1461]<=dzc7b66[0];swa7[1454]<=uk109dc;swa7[1451]<=tu6cdbc[0];swa7[1405]<=jcfb529;swa7[1399]<=qgc428a;swa7[1394]<=sw3b83e;swa7[1387]<=xy9c427;swa7[1373]<=qgcb10a[0];swa7[1370]<=pub789c[0];swa7[1340]<=jp7eec5;swa7[1310]<=zz28cf1;swa7[1199]<=gd33fda;swa7[1195]<=cba1e58;swa7[1145]<=yz33c71;swa7[1030]<=wl_phase_dly_cnt[0];swa7[1023]<=mt7b7c;swa7[1005]<=vxa52d8;swa7[979]<=db9b7e;swa7[970]<=hd8e333[0];swa7[957]<=qt51409[0];swa7[917]<=gq21334[0];swa7[874]<=bn3db36;swa7[860]<=ph84ee0;swa7[854]<=rg66de2;swa7[839]<=cba431c[0];swa7[763]<=byda94b;swa7[751]<=ym21450[0];swa7[741]<=yz7c28[0];swa7[727]<=uve213b;swa7[702]<=kqff6a5[0];swa7[699]<=ho58851[0];swa7[693]<=oubc4e2;swa7[686]<=fa79621;swa7[572]<=me4678e;swa7[485]<=xwf1c66[0];swa7[419]<=mr54863[0];swa7[351]<=wl9fed4;swa7[343]<=gqf2c4;swa7[242]<=lf9e38c[0];swa7[209]<=vk2a90c;swa7[104]<=wl85521[0];swa7[52]<=mef0aa4;swa7[26]<=al5e154;swa7[13]<=kd512f0[0];end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule








`timescale 1 ns / 100 ps
module irde67_ddr3_ip_inst (
               sclk,
               rst_n,
               oubc4e2,
               jp7eec5,
               ld4feee,
               fafbbb5,
               tu76ab3,
               dbaacd6,

               cob35b8
               );
input         sclk;
input         rst_n;
input         oubc4e2;
input         jp7eec5;
input         ld4feee;
input         fafbbb5;
input  [7:0]  tu76ab3;
input  [7:0]  dbaacd6;
output [7:0]  cob35b8;
reg    [7:0]  cob35b8;
reg os722bd;
reg mt2e9a;
reg ri86d80;
reg ir36c02;
reg [7 : 0] ksb6014;
reg [7 : 0] hdb00a1;
reg [2047:0] swa7;
wire [5:0] ou538;

localparam kf29c0 = 6,do14e04 = 32'hfdffea0b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;




always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin
      cob35b8    <= 8'h0;   end   else if (mt2e9a && ri86d80 & ir36c02 ) begin
      cob35b8      <= hdb00a1;   end   else if (os722bd && ri86d80 & ir36c02 ) begin
      cob35b8      <= ksb6014;   end
end






always@* begin os722bd<=ou538[0];mt2e9a<=ou538[1];ri86d80<=ou538[2];ir36c02<=ou538[3];ksb6014<={tu76ab3>>1,ou538[4]};hdb00a1<={dbaacd6>>1,ou538[5]};end
always@* begin swa7[2047]<=jp7eec5;swa7[2046]<=ld4feee;swa7[2044]<=fafbbb5;swa7[2040]<=tu76ab3[0];swa7[2032]<=dbaacd6[0];swa7[1023]<=oubc4e2;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule







`timescale 1 ps / 1 ps
module ddr3_sdram_phy_ddr3_ip_inst (
   
   rst_n,				
   sclk,				
   eclk,				
   sclk2x,			
   clocking_good,
   
   ddr_rst,				
   dqsbuf_pause,				
   dqsdel,                              		
   dll_update,
   update_done,


   
   dfi_address, 
   dfi_bank,   
   dfi_cs_n,  
   dfi_ras_n, 
   dfi_cas_n, 
   dfi_we_n,  
   dfi_cke,  
   dfi_odt,		                

   dfi_wrdata,			
   dfi_wrdata_en,		
   dfi_wrdata_mask,

   dfi_rddata,                      
   dfi_rddata_valid,                            

   dfi_init_start,
   dfi_init_complete,

   
   mem_rst_n,
   wl_act,
   wl_err,
   rt_err,
   phy_init_act,
   

`ifdef ddr3_ip_inst_WL_DYNDLY
   wl_dyndly,
`endif
`ifdef ddr3_ip_inst_PROBE_RT
   rt_start_rvl,
   rt_on_rvl,
   rt_act_rvl,
   rt_wr_rvl,
   rt_rd_rvl,
   rt_rd_a10_rvl,
   rt_pause_rvl,
   rt_done_rvl,
   rt_dqs_read_rvl,
   rt_rdclksel_rvl,
`endif
`ifdef ddr3_ip_inst_PROBE_PHY
   ddr3_read_data_o_rvl,
   ddr3_datavalid_o_rvl,
`endif
   
   
   
   
`ifdef ddr3_ip_inst_ENB_MEM_RST
   em_ddr_reset_n,
`endif
   em_ddr_addr,
   em_ddr_ba,    				
   em_ddr_ras_n, 			
   em_ddr_cas_n, 			
   em_ddr_we_n,  				
   em_ddr_cs_n,  
   em_ddr_cke,   				
		
   em_ddr_clk,				
   em_ddr_odt,		                
   em_ddr_dm,
   em_ddr_data,				
   em_ddr_dqs				
);

`ifdef ddr3_ip_inst_ROW_WIDTH_12

`define ddr3_ip_inst_ROW_WDTH 13

`else

`define ddr3_ip_inst_ROW_WDTH `ddr3_ip_inst_ROW_WIDTH

`endif
input                            rst_n;
input                            sclk;
input                            eclk;
input                            sclk2x;
input                            clocking_good;
input                            ddr_rst;
input                            dqsbuf_pause;
input   [`ddr3_ip_inst_DQS_WIDTH-1:0]         dqsdel;
input                            update_done;
output                           dll_update;
input   [`ddr3_ip_inst_ROW_WDTH-1:0]          dfi_address;
input   [`ddr3_ip_inst_BANK_WIDTH-1:0]        dfi_bank;
input   [`ddr3_ip_inst_CS_WIDTH-1:0]          dfi_cs_n;
input                            dfi_ras_n;
input                            dfi_cas_n;
input                            dfi_we_n;
input   [`ddr3_ip_inst_CKE_WIDTH -1:0]        dfi_cke;
input   [`ddr3_ip_inst_CS_WIDTH -1 :0]        dfi_odt;
input	[`ddr3_ip_inst_DSIZE-1:0]             dfi_wrdata;
input         dfi_wrdata_en;
input	[`ddr3_ip_inst_USER_DM -1:0]          dfi_wrdata_mask;
output  [`ddr3_ip_inst_DSIZE       -1:0]      dfi_rddata;
output                           dfi_rddata_valid;
input                            dfi_init_start;
output                           dfi_init_complete;
input                            mem_rst_n;

`ifdef ddr3_ip_inst_ENB_MEM_RST
output                           em_ddr_reset_n;

`endif
output                           wl_act;
output                           wl_err;
output                           rt_err;
output                           phy_init_act;

`ifdef ddr3_ip_inst_WL_DYNDLY
output  [8*(`ddr3_ip_inst_DQS_WIDTH)-1:0]     wl_dyndly;

`endif
output  [`ddr3_ip_inst_ROW_WDTH-1:0]          em_ddr_addr;
output  [`ddr3_ip_inst_BANK_WIDTH-1:0]        em_ddr_ba;
output                           em_ddr_ras_n;
output                           em_ddr_cas_n;
output                           em_ddr_we_n;
output  [`ddr3_ip_inst_CS_WIDTH_BB-1:0]       em_ddr_cs_n;
output  [`ddr3_ip_inst_CKE_WIDTH -1:0]        em_ddr_cke;
output	[`ddr3_ip_inst_CLKO_WIDTH  -1:0]      em_ddr_clk;
output  [`ddr3_ip_inst_CS_WIDTH    -1:0]      em_ddr_odt;
output	[`ddr3_ip_inst_DQS_WIDTH -1:0]        em_ddr_dm;
inout	[`ddr3_ip_inst_DATA_WIDTH -1:0]       em_ddr_data;
inout	[`ddr3_ip_inst_DQS_WIDTH  -1:0]       em_ddr_dqs;

`ifdef ddr3_ip_inst_PROBE_RT
output                      rt_start_rvl;
output                      rt_on_rvl;
output                      rt_act_rvl;
output                      rt_wr_rvl;
output                      rt_rd_rvl;
output                      rt_rd_a10_rvl;
output                      rt_pause_rvl;
output                      rt_done_rvl;
output [4 * `ddr3_ip_inst_DQS_WIDTH-1:0] rt_dqs_read_rvl;
output [3 * `ddr3_ip_inst_DQS_WIDTH-1:0] rt_rdclksel_rvl;

`endif

`ifdef ddr3_ip_inst_PROBE_PHY
output [`ddr3_ip_inst_DSIZE      -1:0]   ddr3_read_data_o_rvl ;
output [(`ddr3_ip_inst_DQS_WIDTH)-1:0]   ddr3_datavalid_o_rvl;

`endif
wire	[`ddr3_ip_inst_DSIZE-1:0]             vv4ae6d;
reg                              dll_update ;
reg     [4:0]                    lq4d0a5;
wire    [`ddr3_ip_inst_DSIZE      -1:0]       dfi_rddata;
reg                              dfi_rddata_valid;
reg     [(`ddr3_ip_inst_DQS_WIDTH)-1:0]       fn6e478 ;
reg     [(`ddr3_ip_inst_DQS_WIDTH)-1:0]       ic723c6 ;

`ifdef ddr3_ip_inst_DLY_DQS_DQ
reg     [(`ddr3_ip_inst_DQS_WIDTH)-1:0]       rv91e31  ;
reg     [(`ddr3_ip_inst_DQS_WIDTH)-1:0]       qv8f18e  ;
wire    [(`ddr3_ip_inst_DQS_WIDTH)-1:0]       go78c75  ;
wire    [(`ddr3_ip_inst_DQS_WIDTH)-1:0]       enc63a9;

`else
wire    [(`ddr3_ip_inst_DQS_WIDTH)-1:0]       go78c75  ;

`endif
wire                             hd8ea69 ;

`ifdef ddr3_ip_inst_ENB_MEM_RST
wire                             em_ddr_reset_n ;

`endif
wire    [`ddr3_ip_inst_BANK_WIDTH   -1:0]     em_ddr_ba;
wire    [`ddr3_ip_inst_ROW_WDTH-1:0]          em_ddr_addr;
wire                             em_ddr_ras_n;
wire                             em_ddr_we_n;
wire                             em_ddr_cas_n;
wire    [`ddr3_ip_inst_CS_WIDTH_BB -1:0]      em_ddr_cs_n;
wire    [`ddr3_ip_inst_CKE_WIDTH  -1:0]       em_ddr_cke;
wire    [`ddr3_ip_inst_CLKO_WIDTH -1:0]       em_ddr_clk;

`ifdef ddr3_ip_inst_DIFF
wire    [`ddr3_ip_inst_CLKO_WIDTH -1:0]       rv94ded;

`endif
wire    [`ddr3_ip_inst_CS_WIDTH   -1:0]       em_ddr_odt;
wire	[`ddr3_ip_inst_DQS_WIDTH -1:0]        em_ddr_dm;
reg                              zke4f2b;
wire    [`ddr3_ip_inst_BANK_WIDTH   -1:0]     ipedc73;
wire    [`ddr3_ip_inst_ROW_WDTH-1:0]          jp6e39c;
wire                             rt71ce6;
wire                             lf8e737;
wire                             tu739bf;
wire    [`ddr3_ip_inst_CS_WIDTH   -1:0]       vk9cdfa;
wire    [`ddr3_ip_inst_CS_WIDTH   -1:0]       ble6fd2;
wire    [`ddr3_ip_inst_CKE_WIDTH  -1:0]       fp37e97;
wire    [`ddr3_ip_inst_DQS_WIDTH  -1:0]       phbf4be;
wire    [`ddr3_ip_inst_CLKO_WIDTH -1:0]       wwfa5f7;
wire    [`ddr3_ip_inst_CLKO_WIDTH -1:0]       dzd2fb9;
wire   [`ddr3_ip_inst_BANK_WIDTH   -1:0]    ks97dcf;
wire   [`ddr3_ip_inst_ROW_WDTH-1:0]         qvbee79;
wire                            czf73cc;
wire                            swb9e65;
wire                            vicf329;
wire                            vi7994b;
wire                            uvcca5b;
wire                            of652dd;
wire    [`ddr3_ip_inst_CS_WIDTH   -1:0]      ep296ed;
wire    [`ddr3_ip_inst_CKE_WIDTH  -1:0]      gb4b76d;
wire   [`ddr3_ip_inst_BANK_WIDTH   -1:0]    gb5bb6d;
wire   [`ddr3_ip_inst_ROW_WDTH-1:0]         pfddb6d;
wire    [`ddr3_ip_inst_CS_WIDTH_BB-1:0]      enedb6e;
wire    [`ddr3_ip_inst_CS_WIDTH_BB-1:0]      ay6db74;
wire    [`ddr3_ip_inst_CS_WIDTH   -1:0]      ui6dba0;
wire    [`ddr3_ip_inst_CKE_WIDTH  -1:0]      yk6dd00;
wire                            ls11afd;
wire   [`ddr3_ip_inst_DATA_WIDTH-1 :0]       oh8ff16 ;
wire   [`ddr3_ip_inst_DQS_WIDTH -1 :0]       pha003e;
reg    [`ddr3_ip_inst_DATA_WIDTH-1 :0]       ks1f7  ;
wire                            cofb8;

`ifdef ddr3_ip_inst_PHY_REG_P2
reg                             wl7dc1 ;

`else
wire                            wl7dc1 ;

`endif
reg                             ipf7060;
reg                             pub8305;
reg                             suc182a;
reg                             vxc151;
reg                             sh60a8e;
wire                            bna046b;
wire                            ks554c;
wire   [`ddr3_ip_inst_CS_WIDTH -1 :0]        al51d02;
reg                             lf8e814;
reg                             rt740a6;
reg                             hda0536;
reg                             an29b7;
reg                             ba14dbc;
reg                             qia6de2;
reg                             ux36f11;
reg    [`ddr3_ip_inst_DSIZE-1:0]             dob788c;
reg    [`ddr3_ip_inst_USER_DM -1:0]          wybc462;
reg                             yxe2310;
reg    [`ddr3_ip_inst_DQS_WIDTH-1:0]         ba11884;
reg                             ri8c422;
reg                             kq62112;

`ifdef ddr3_ip_inst_PHY_REG_P2
reg    [`ddr3_ip_inst_DSIZE-1:0]             sw10890;
reg    [`ddr3_ip_inst_USER_DM -1:0]          zz84480;
reg                             vx22406;
reg    [`ddr3_ip_inst_DQS_WIDTH-1:0]         ep12036;
reg                             qv901b4;
reg                             mt80da5;

`endif
wire   [`ddr3_ip_inst_DSIZE-1:0]             zz6d2d ;
wire   [`ddr3_ip_inst_DQS_WIDTH-1:0]         ux3696e   ;
wire   [`ddr3_ip_inst_USER_DM -1:0]          ic728cd;
wire   [`ddr3_ip_inst_DQS_WIDTH-1:0]         lfa5ba5;
wire                            db2dd2e   ;
wire                            vv6e976   ;
reg                             nr74bb7;
reg                             fpa5dbf;
wire                            ec2edfe;

`ifdef ddr3_ip_inst_DLY_DQS_DQ
reg   [`ddr3_ip_inst_DSIZE      -1:0]        fa76ff1  ;
reg   [`ddr3_ip_inst_DSIZE      -1:0]        ngb7f8a  ;
wire  [`ddr3_ip_inst_DSIZE      -1:0]        bnbfc52 ;
wire  [`ddr3_ip_inst_DSIZE      -1:0]        lqfe296  ;

`else
wire  [`ddr3_ip_inst_DSIZE      -1:0]        lqfe296  ;

`endif
reg   [`ddr3_ip_inst_DSIZE      -1:0]        gd8a59a ;
wire                            fa52cd5;
reg                             ba966ab;
reg                             qib355a;
wire  [`ddr3_ip_inst_DSIZE      -1:0]        cb9aad1;
wire                            hod568d;
reg                             sjab46b;
reg                             ld5a35c;
wire                            coac9dc;
wire                            gd9030a;
wire                            db60b0;
wire                            do30587;
wire                            wy82c3a;
wire                            xl161d0;
wire                            ntb0e86;
wire                            co87437;
wire    [`ddr3_ip_inst_BANK_WIDTH -1 :0]     vk3a1b9;
wire    [`ddr3_ip_inst_BANK_WIDTH -1 :0]     tud0dcb;
wire    [`ddr3_ip_inst_ROW_WDTH -1:0]        fc86e5a;
wire    [`ddr3_ip_inst_ROW_WDTH -1:0]        rv372d2;
wire    [`ddr3_ip_inst_CS_WIDTH-1:0]         ieb9697  ;
wire    [`ddr3_ip_inst_CS_WIDTH-1:0]         mr6fba2 ;
wire    [`ddr3_ip_inst_CS_WIDTH-1:0]         qg7dd15 ;
wire    [`ddr3_ip_inst_CS_WIDTH-1:0]         faee8a9 ;
wire    [`ddr3_ip_inst_CS_WIDTH-1:0]         oscb4b8;
wire    [`ddr3_ip_inst_CS_WIDTH-1:0]         pua2a5e;
wire    [`ddr3_ip_inst_CKE_WIDTH -1:0]       th5a5c1;
wire    [`ddr3_ip_inst_CKE_WIDTH -1:0]       ldd2e0e;
wire    [`ddr3_ip_inst_CS_WIDTH -1 :0]       wy97077;
wire    [`ddr3_ip_inst_CS_WIDTH -1 :0]       dob83b8;
wire                            dzf3264;

`ifdef ddr3_ip_inst_DDR3_2T

`else

`endif
wire [(`ddr3_ip_inst_DQS_WIDTH)-1:0]        xwd5872;

`ifdef ddr3_ip_inst_NO_WRITE_LEVEL
reg  [8*(`ddr3_ip_inst_DQS_WIDTH)-1:0]      alc993b ;
reg                            ic4c9dd;

`else
wire                           qi98d54;
wire [8*(`ddr3_ip_inst_DQS_WIDTH)-1:0]      alc993b ;
wire                            ic4c9dd;

`endif
reg  [`ddr3_ip_inst_DQS_WIDTH-1:0]  vvdd3b0;
reg                    fne9d87;
wire                   kd4ec3e;
wire                   tw20e4a;
wire                   oh7252;
wire                   oh39295;
reg                    uk3e8f8;
wire [`ddr3_ip_inst_CS_WIDTH-1:0]   zm41c9;
wire [`ddr3_ip_inst_BANK_WIDTH-1:0] mrc94ac;
wire [`ddr3_ip_inst_ROW_WIDTH-1:0]  zx4a564 ;
wire [`ddr3_ip_inst_CKE_WIDTH -1:0] by52b27;
wire [`ddr3_ip_inst_CS_WIDTH-1:0]   byc0444;
wire [`ddr3_ip_inst_ROW_WDTH-1:0]   kf2222;
wire [`ddr3_ip_inst_BANK_WIDTH-1:0] hq11115;
wire [`ddr3_ip_inst_CKE_WIDTH -1:0] qi888ab;
wire                   ip44559;
wire                   ph22acc;
wire                   ks15667;
wire [`ddr3_ip_inst_CS_WIDTH-1:0]   qvab339;
wire [`ddr3_ip_inst_CS_WIDTH-1 :0]  su599cc;
wire [`ddr3_ip_inst_DQS_WIDTH-1:0]  czcce60;
wire                   yk67305;
wire                   cb39828;
wire                   yxcc145;
wire                   qt60a2c;
wire                   ou5164;
reg                    hbcd28b ;
wire                   init_start;
wire                   wl_act;
wire                   wl_done;
wire                   hbe91fa;
reg                    yzb12f4;
wire                   tw35504;
wire                   dfi_init_complete;
reg                    gbe75b1;
reg                    su7821c  ;
reg                    phy_init_act  ;
wire                   swb6315;
wire                   sjb18a9;
wire                   ri8c54d;
reg                    kq62a6a;
reg                    wy15351;
reg                    gqa9a89;
reg                    rg4d448;
reg                    mr6a242;
reg                    of51214;
reg                    vk890a5;
reg                    rg4852a;
reg                    lq42952;
reg                    ls14a92;
reg                    vxa5492;
reg                    hq2a497;
wire                   zk524ba;
reg                    aa925d2;
reg                    ie92e90;
reg                    ym97481;
reg                    vxba408;
reg                    vvd2047;
reg                    wl9023e;
reg                    jr811f5;
wire                   cal_bc4;
wire                   dm47d75;
reg [`ddr3_ip_inst_DQS_WIDTH-1:0]   ym3ebaa;
reg                    mef5d50;
reg                    wlaea81;
wire                  ec8d0c4;
reg                   fpaa06c;
reg                   ld50366;
reg                   zz81b37;
wire                  yzd9bf;
wire                  tu6cdfd;
reg                   rg66fea;
wire [`ddr3_ip_inst_CS_WIDTH-1 :0] db37f53;
wire [`ddr3_ip_inst_CS_WIDTH-1 :0] zzbfa9e;
reg  [`ddr3_ip_inst_CS_WIDTH-1 :0] wjfd4f6;
reg  [`ddr3_ip_inst_CS_WIDTH-1 :0] wwea7b4;
wire [`ddr3_ip_inst_DQS_WIDTH-1:0]     sja45eb;
wire [`ddr3_ip_inst_DQS_WIDTH-1:0]     lf22f5d;
wire [3*(`ddr3_ip_inst_DQS_WIDTH)-1:0] gd17aef;
wire [3*(`ddr3_ip_inst_DQS_WIDTH)-1:0] jebd77d;
wire [`ddr3_ip_inst_DQS_WIDTH-1:0]     xwebbea;
wire [`ddr3_ip_inst_DQS_WIDTH-1:0]     rt5af46  ;
wire                      pha54e5;
wire                      jp7e9d8;
wire                      do2f450;
wire                      fca7633;
wire                      ls2a72f;
reg                       pfd8cd1;
reg                       enc668e;
reg                       mt33475;
reg                       wl9a3ad;
reg                       god1d6c;
reg                       hd8eb60;
reg                       kd75b06;
reg                       fcad835;
reg                       jc6c1aa;
wire                      ea5397a;
wire                      tw9cbd1;
wire                      ice5e8a;
wire [4 * `ddr3_ip_inst_DQS_WIDTH-1:0] zzaa732 ;
wire [4 * `ddr3_ip_inst_DQS_WIDTH-1:0] rt_dqs_read_rvl ;
wire [3 * `ddr3_ip_inst_DQS_WIDTH-1:0] fc9ccb1 ;
wire [3 * `ddr3_ip_inst_DQS_WIDTH-1:0] rt_rdclksel_rvl ;
wire                      rv32c56;
wire                      fc962b6;
wire                      yzb15b2;
reg                       kf8ad94;
reg                       go56ca4;
reg                       ieb6521;
wire                      pub2909;
wire [`ddr3_ip_inst_DQS_WIDTH-1:0]     rv9484a;
wire                      qva4256 ;

`ifdef ddr3_ip_inst_PROBE_RT
reg                      rt_start_rvl;
reg                      rt_on_rvl;
reg                      rt_act_rvl;
reg                      rt_wr_rvl;
reg                      rt_rd_rvl;
reg                      rt_rd_a10_rvl;
reg                      rt_pause_rvl;
reg                      rt_done_rvl;

`endif
reg   [`ddr3_ip_inst_DSIZE      -1:0] ddr3_read_data_o_rvl ;
reg   [(`ddr3_ip_inst_DQS_WIDTH)-1:0] ddr3_datavalid_o_rvl ;

`ifdef ddr3_ip_inst_PROBE_RT

`endif

`define ddr3_ip_inst_TSTAB1 `ddr3_ip_inst_TSTAB/6

`define ddr3_ip_inst_USR_RST_CLK_CNT 8'd20   // 20 x 5ns = 100 ns
reg                   ip708ef;
reg                   rv8477d;
reg    [7:0]          ir23bee;

`ifdef ddr3_ip_inst_ENB_MEM_RST

`endif

`ifdef ddr3_ip_inst_RDIMM
reg  [7:0]  ir1df75;
reg  [2:0]  ykefbac;
reg         ic7dd61;
wire        tueeb09;

`ifdef ddr3_ip_inst_REGRESSION 

`else

`endif

`else
wire   ic7dd61;

`endif

`ifdef ddr3_ip_inst_NO_RD_TRAIN

`else

`endif

`ifdef ddr3_ip_inst_NO_RD_TRAIN

`else

`endif

`ifdef ddr3_ip_inst_DESEL

`else

`endif

`define ddr3_ip_inst_P_MRS 4'h0

`define ddr3_ip_inst_P_REF 4'h1

`define ddr3_ip_inst_P_WRITE 4'h4

`define ddr3_ip_inst_P_READ 4'h5
reg [3:0] wyac25d;
reg [1:0] vv612e9;
reg [2:0] jr974f;
reg [1:0] al4ba7e;
reg       pio_read;
reg       hbe9fa3;
reg       bl4fd1e;
wire  pf7e8f6;
wire  tuf47b6;
reg   uka3db2;
reg   zm1ed91;
reg   ldf6c8b;
reg   ieb645e;
reg   pub22f1;
reg   vx9178b;
reg   bn8bc5f;
wire [3:0]    of5e2fe;
wire          vif17f4;
wire          ddr_wr_lat_odd;
wire          hb5fd16;
wire          vife8b7;
reg           psf45ba;
reg           pua2dd2;
wire          nt16e93;
wire          ngb749f;
wire          fpba4fb;
reg           xjd27df;
reg           ls93efe;
reg           yz9f7f3;
reg           xwfbf9c;
reg           fadfce2;
reg           fafe713;
reg           xjf389b;
reg  [3:0]    ba9c4de;
reg  [3:0]    ale26f3;
reg  [3:0]    tj1379c;
reg  [3:0]    hd9bce6;
wire [31:0]   uide737;
wire [31:0]   thf39b8;
wire [31:0]   vk9cdc6;
wire [31:0]   ble6e32;
reg fp37197;
reg rib8cbf;
reg ofc65fb;
reg ph32fdd;

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`endif

`ifdef ddr3_ip_inst_ADDR_MIRROR

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`endif

`else

`endif

`ifdef ddr3_ip_inst_RDIMM1
reg     ou97eee;

`else
wire    ou97eee;

`endif

`ifdef ddr3_ip_inst_PHY_REG_P2

`else

`endif
reg   jcfbb8f;
reg   zxddc7a;
reg   faee3d6;
wire  thfc182;
wire  oh8f597;

`ifdef ddr3_ip_inst_DATA_SIZE_72

`ifdef ddr3_ip_inst_x4

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`else // x8

`endif // x4 

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_64  

`ifdef ddr3_ip_inst_x4

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_56

`ifdef ddr3_ip_inst_x4

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_48

`ifdef ddr3_ip_inst_x4

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_40

`ifdef ddr3_ip_inst_x4

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_32

`ifdef ddr3_ip_inst_x4

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_24

`ifdef ddr3_ip_inst_x4

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_16

`ifdef ddr3_ip_inst_x4

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_8

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`ifdef ddr3_ip_inst_PHY_REG_P2

`endif
wire                  jr8bcfd ;
wire [`ddr3_ip_inst_CS_WIDTH-1:0]  ep1d7a2;
wire                  wl_err  ;
wire                  rt_err  ;
wire                  dz61c91;
wire                  xy83af4;
wire                  je3ab0e;
wire [`ddr3_ip_inst_CS_WIDTH-1:0]  xwebd15;
wire                  fadfb42;
wire                  gbfda13;
wire                  ened09d;
wire                  ea684ed;
wire                  fa42769;
wire                  vx13b4b;
wire                  ym9da5f;
wire                  yxed2f8;
wire                  uk77c;
wire                  co8dea7;
wire                  ng99011;
wire [15:0]           mg92399;

`ifdef ddr3_ip_inst_WL_DYNDLY
reg  [8*(`ddr3_ip_inst_DQS_WIDTH)-1:0]      wl_dyndly ;

`endif

`ifdef ddr3_ip_inst_NO_WRITE_LEVEL

`ifdef ddr3_ip_inst_ECP5_PV_RIGHT_32B

`else

`endif

`else
reg   [2:0]             nrc8848;
reg   [2:0]             kd44247;

`endif

`ifdef ddr3_ip_inst_NO_RD_TRAIN

`else
wire  [`ddr3_ip_inst_DSIZE -1:0] co2123c;

`ifdef ddr3_ip_inst_DATA_SIZE_8

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_16

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_24

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_32

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_40

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_48

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_56

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_64

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_72

`endif

`ifdef ddr3_ip_inst_x4
genvar nt91e1;

`else
genvar nt91e1;

`endif

`endif
wire          xw47873;
wire  [15:0]  ep3c39a;

`ifdef ddr3_ip_inst_DLY_DQS_DQ

`else

`endif

`ifdef ddr3_ip_inst_DLY_DQS_DQ

`else

`endif

`ifdef ddr3_ip_inst_DLY_DQS_DQ
reg          jce1cd4;
wire         lse6a2;
wire [31:0]  tu73513;

`endif
wire   an9a89b   ;
wire   qgd44dd  ;

`ifdef ddr3_ip_inst_x4
genvar lsa26e9;

`else
genvar lsa26e9;

`endif
genvar  jr9ba56;
genvar nrdd2b7;
wire  the95bf;

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`ifdef ddr3_ip_inst_DESEL
reg         xj4adff;
reg         go56ffe;
reg         jeb7ff1;
reg         vxbff8a;

`ifdef ddr3_ip_inst_CS_WIDTH_1

`else

`endif

`else

`endif
genvar  osffc56;
genvar  lqfe2b0;
genvar  rgf1583;
genvar  gd8ac1a;
genvar  ay560d4;

`ifdef ddr3_ip_inst_RDIMM

`ifdef ddr3_ip_inst_CS_WIDTH_1

`else

`endif

`else

`endif
genvar lfb06a0;
reg cb9ad41;
reg je83f2e;
reg ayd4199;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] xjd7d63;
reg jr664e;
reg [`ddr3_ip_inst_ROW_WDTH - 1 : 0] an33277;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] do993bd;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] qtc9deb;
reg ip4ef5d;
reg qg77aec;
reg xybd760;
reg [`ddr3_ip_inst_CKE_WIDTH - 1 : 0] faebb02;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] ne5d813;
reg [`ddr3_ip_inst_DSIZE - 1 : 0] pfec09a;
reg qt604d7;
reg [`ddr3_ip_inst_USER_DM - 1 : 0] ux26bd;
reg lf135ed;
reg ux9af6e;
reg [`ddr3_ip_inst_DSIZE - 1 : 0] xjd7b75;
reg [4 : 0] rg79ff1;
reg [(`ddr3_ip_inst_DQS_WIDTH) - 1 : 0] yxedd7b;
reg [(`ddr3_ip_inst_DQS_WIDTH) - 1 : 0] hb6ebdc;
reg en75ee7;
reg hq99ab3;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] hb7b9ee;
reg [`ddr3_ip_inst_ROW_WDTH - 1 : 0] ipdcf76;
reg ale7bb4;
reg xl3dda5;
reg jceed2f;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] tu7697b;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] wlb4bda;
reg [`ddr3_ip_inst_CKE_WIDTH - 1 : 0] zza5ed5;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] je2f6ae;
reg [`ddr3_ip_inst_CLKO_WIDTH - 1 : 0] rt7b572;
reg [`ddr3_ip_inst_CLKO_WIDTH - 1 : 0] nedab97;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] rgd5cbb;
reg [`ddr3_ip_inst_ROW_WDTH - 1 : 0] qvae5da;
reg su72ed4;
reg mg976a0;
reg cbbb500;
reg xwda805;
reg sud402b;
reg dba0159;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] swacf;
reg [`ddr3_ip_inst_CKE_WIDTH - 1 : 0] sw5679;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] ou2b3c8;
reg [`ddr3_ip_inst_ROW_WDTH - 1 : 0] cm59e40;
reg [`ddr3_ip_inst_CS_WIDTH_BB - 1 : 0] dmcf200;
reg [`ddr3_ip_inst_CS_WIDTH_BB - 1 : 0] ho79003;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] jpc801a;
reg [`ddr3_ip_inst_CKE_WIDTH - 1 : 0] bl400d6;
reg ba3fe7b;
reg [`ddr3_ip_inst_DATA_WIDTH - 1 : 0] ph35b0;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] uk1ad87;
reg [`ddr3_ip_inst_DATA_WIDTH - 1 : 0] wjd6c39;
reg gqb61cd;
reg bnb0e69;
reg ks8734f;
reg ir39a79;
reg vvcd3cd;
reg rg69e6e;
reg fn74ff9;
reg ir268f9;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] nrcdcbb;
reg ld6e5df;
reg ea72efe;
reg ec977f0;
reg qvbbf80;
reg bydfc04;
reg zkfe023;
reg ykf011b;
reg [`ddr3_ip_inst_DSIZE - 1 : 0] kf808d8;
reg [`ddr3_ip_inst_USER_DM - 1 : 0] hq46c5;
reg gd2362a;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] ng1b154;
reg pfd8aa2;
reg dmc5516;
reg [`ddr3_ip_inst_DSIZE - 1 : 0] zm2a8b2;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] sh54593;
reg [`ddr3_ip_inst_USER_DM - 1 : 0] xjfcb91;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] fp164eb;
reg xyb275e;
reg fc93af3;
reg aa9d79b;
reg rgebcd9;
reg gb5e6cb;
reg [`ddr3_ip_inst_DSIZE - 1 : 0] ldf365c;
reg ph9b2e7;
reg end973e;
reg wwcb9f5;
reg [`ddr3_ip_inst_DSIZE - 1 : 0] yk5cfa8;
reg yxe7d40;
reg ec3ea05;
reg icf5028;
reg lsa8140;
reg bl7ef79;
reg ou501f;
reg lf280f8;
reg ld407c7;
reg nt3e3e;
reg aa1f1f6;
reg off8fb0;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] rtc7d85;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] gq3ec2e;
reg [`ddr3_ip_inst_ROW_WDTH - 1 : 0] blf6170;
reg [`ddr3_ip_inst_ROW_WDTH - 1 : 0] ntb0b87;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] ep85c3f;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] ks2e1fd;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] yx70fe8;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] mg87f45;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] tw3fa28;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] alfd142;
reg [`ddr3_ip_inst_CKE_WIDTH - 1 : 0] ene8a14;
reg [`ddr3_ip_inst_CKE_WIDTH - 1 : 0] dz450a4;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] bn28526;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] ho42937;
reg fc149ba;
reg [(`ddr3_ip_inst_DQS_WIDTH) - 1 : 0] db8b1f0;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] cb26e94;
reg nt374a5;
reg fpba52f;
reg xjd297f;
reg rv94bff;
reg rva5ffe;
reg xy2fff6;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] cz7ffb3;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] suffd9c;
reg [`ddr3_ip_inst_ROW_WIDTH - 1 : 0] rgfece0;
reg [`ddr3_ip_inst_CKE_WIDTH - 1 : 0] ldf6702;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] mgb3817;
reg [`ddr3_ip_inst_ROW_WDTH - 1 : 0] ri9c0b8;
reg [`ddr3_ip_inst_BANK_WIDTH - 1 : 0] wwe05c3;
reg [`ddr3_ip_inst_CKE_WIDTH - 1 : 0] qv2e19;
reg an170cc;
reg jeb8664;
reg yxc3322;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] rv19915;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] uvcc8ae;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] pf64575;
reg nt22baf;
reg uk15d7f;
reg ohaebf8;
reg ip75fc5;
reg rvafe2d;
reg ph974a;
reg pha0ca2;
reg vk8c054;
reg hd2df6b;
reg dba0014;
reg yk7daf5;
reg shed7a9;
reg alf7aad;
reg qt5ea6f;
reg osf537d;
reg gqa9be8;
reg rg4df40;
reg qt6fa03;
reg ww7d01d;
reg yxe80e8;
reg ld40745;
reg nt3a2e;
reg cb1d176;
reg ipe8bb5;
reg jp45dac;
reg ym2ed67;
reg jc76b39;
reg vxb59ca;
reg ouace57;
reg cm672b8;
reg ir395c0;
reg pscae04;
reg vi57022;
reg vkb8112;
reg psc0892;
reg vk4493;
reg ph2249a;
reg ir124d6;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] uk926b4;
reg ng935a0;
reg kf9ad02;
reg dob127;
reg sjb40ad;
reg pha056c;
reg mt2b67;
reg sw15b3c;
reg xyad9e0;
reg xw6cf02;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] ww67812;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] qv3c091;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] aye048c;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] wl2461;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] an1230d;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] uk1f972;
reg [3 * (`ddr3_ip_inst_DQS_WIDTH) - 1 : 0] tw8c366;
reg [3 * (`ddr3_ip_inst_DQS_WIDTH) - 1 : 0] dz61b32;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] qvd996;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] ho6ccb5;
reg dm66b1a;
reg lf32d52;
reg qtd3650;
reg jrb54b3;
reg tw358d3;
reg ho52cf6;
reg ri967b3;
reg oub3d9a;
reg jr9ecd0;
reg nrf6687;
reg cob343f;
reg ux9a1f9;
reg rgd0fcc;
reg ou87e62;
reg ymac69b;
reg jc634d9;
reg ks1a6ca;
reg [4 * `ddr3_ip_inst_DQS_WIDTH - 1 : 0] ay620fc;
reg [3 * `ddr3_ip_inst_DQS_WIDTH - 1 : 0] qi107e0;
reg ls83f01;
reg ks1f80a;
reg vvfc051;
reg ose028e;
reg do1471;
reg yma38a;
reg uv51c51;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] ph8e28c;
reg bl71467;
reg ir8a33e;
reg wj519f5;
reg [7 : 0] do8cfac;
reg [3 : 0] go67d63;
reg [1 : 0] qi3eb19;
reg [2 : 0] ayf58c8;
reg [1 : 0] coac641;
reg ps63209;
reg jr1904a;
reg nrc8257;
reg gb412be;
reg zz95f4;
reg zx4afa6;
reg xw57d36;
reg qvbe9b3;
reg byf4d9c;
reg ksa6ce3;
reg yz36719;
reg mgb38cd;
reg [3 : 0] ri9c668;
reg zxe3343;
reg lf19a1e;
reg zxcd0f6;
reg ww687b6;
reg su43db1;
reg pu1ed88;
reg jpf6c43;
reg swb621e;
reg sjb10f1;
reg mg8878c;
reg ww43c60;
reg vk1e300;
reg zkf1802;
reg vk8c013;
reg sh6009a;
reg ie4d5;
reg [3 : 0] oh26a8;
reg [3 : 0] ph13545;
reg [3 : 0] an9aa2e;
reg [3 : 0] rgd5175;
reg [31 : 0] twa8bab;
reg [31 : 0] th45d5a;
reg [31 : 0] aa2ead7;
reg [31 : 0] al756b9;
reg anab5cc;
reg xj5ae64;
reg vvd7327;
reg ukb993e;
reg mrcc9f1;
reg dz64f8d;
reg rv27c6e;
reg lqdf42e;
reg hof1bb9;
reg zk5d2b4;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] hq30192;
reg vk2a301;
reg ps66032;
reg su5ca8c;
reg [`ddr3_ip_inst_CS_WIDTH - 1 : 0] ep80c92;
reg ie88c51;
reg ui46289;
reg ie31449;
reg mt8a248;
reg cz51245;
reg do8922d;
reg cm4916a;
reg vi48b50;
reg jr2d41f;
reg ofd9858;
reg vk1566;
reg [15 : 0] mg1ff3a;
reg lq4db4f;
reg [15 : 0] su6da7b;
reg ic6d3d8;
reg lq69ec1;
reg hb4f60a;
reg [2047:0] swa7;
wire [300:0] ou538;

`ifdef ddr3_ip_inst_ROW_WIDTH_12

`define ddr3_ip_inst_ROW_WDTH 13

`else

`define ddr3_ip_inst_ROW_WDTH `ddr3_ip_inst_ROW_WIDTH

`endif

`ifdef ddr3_ip_inst_ENB_MEM_RST

`endif

`ifdef ddr3_ip_inst_WL_DYNDLY

`endif

`ifdef ddr3_ip_inst_PROBE_RT

`endif

`ifdef ddr3_ip_inst_PROBE_PHY

`endif

`ifdef ddr3_ip_inst_DLY_DQS_DQ

`else

`endif

`ifdef ddr3_ip_inst_ENB_MEM_RST

`endif

`ifdef ddr3_ip_inst_DIFF

`endif

`ifdef ddr3_ip_inst_PHY_REG_P2

`else

`endif

`ifdef ddr3_ip_inst_PHY_REG_P2

`endif

`ifdef ddr3_ip_inst_DLY_DQS_DQ

`else

`endif

`ifdef ddr3_ip_inst_DDR3_2T

`else

`endif

`ifdef ddr3_ip_inst_NO_WRITE_LEVEL

`else

`endif

`ifdef ddr3_ip_inst_PROBE_RT

`endif

`ifdef ddr3_ip_inst_PROBE_RT

`endif

`define ddr3_ip_inst_TSTAB1 `ddr3_ip_inst_TSTAB/6

`define ddr3_ip_inst_USR_RST_CLK_CNT 8'd20   // 20 x 5ns = 100 ns

`ifdef ddr3_ip_inst_ENB_MEM_RST

`endif

`ifdef ddr3_ip_inst_RDIMM

`ifdef ddr3_ip_inst_REGRESSION 

`else

`endif

`else

`endif

`ifdef ddr3_ip_inst_NO_RD_TRAIN

`else

`endif

`ifdef ddr3_ip_inst_NO_RD_TRAIN

`else

`endif

`ifdef ddr3_ip_inst_DESEL

`else

`endif

`define ddr3_ip_inst_P_MRS 4'h0

`define ddr3_ip_inst_P_REF 4'h1

`define ddr3_ip_inst_P_WRITE 4'h4

`define ddr3_ip_inst_P_READ 4'h5

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`endif

`ifdef ddr3_ip_inst_ADDR_MIRROR

`ifdef ddr3_ip_inst_CS_WIDTH_2

`else

`endif

`else

`endif

`ifdef ddr3_ip_inst_RDIMM1

`else

`endif

`ifdef ddr3_ip_inst_PHY_REG_P2

`else

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_72

`ifdef ddr3_ip_inst_x4

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`else // x8

`endif // x4 

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_64  

`ifdef ddr3_ip_inst_x4

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_56

`ifdef ddr3_ip_inst_x4

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_48

`ifdef ddr3_ip_inst_x4

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_40

`ifdef ddr3_ip_inst_x4

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_32

`ifdef ddr3_ip_inst_x4

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_24

`ifdef ddr3_ip_inst_x4

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_16

`ifdef ddr3_ip_inst_x4

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`else

`endif

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_8

`ifdef ddr3_ip_inst_x4

`else

`endif

`endif

`ifdef ddr3_ip_inst_PHY_REG_P2

`endif

`ifdef ddr3_ip_inst_WL_DYNDLY

`endif

`ifdef ddr3_ip_inst_NO_WRITE_LEVEL

`ifdef ddr3_ip_inst_ECP5_PV_RIGHT_32B

`else

`endif

`else


`endif

`ifdef ddr3_ip_inst_NO_RD_TRAIN

`else


`ifdef ddr3_ip_inst_DATA_SIZE_8

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_16

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_24

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_32

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_40

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_48

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_56

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_64

`endif

`ifdef ddr3_ip_inst_DATA_SIZE_72

`endif

`ifdef ddr3_ip_inst_x4


`else


`endif

`endif




`ifdef ddr3_ip_inst_DLY_DQS_DQ

`else

`endif



`ifdef ddr3_ip_inst_DLY_DQS_DQ

`else

`endif

`ifdef ddr3_ip_inst_DLY_DQS_DQ

`endif

`ifdef ddr3_ip_inst_x4


`else


`endif




`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`ifdef ddr3_ip_inst_RDIMM

`else

`endif



`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`ifdef ddr3_ip_inst_DESEL

`ifdef ddr3_ip_inst_CS_WIDTH_1

`else

`endif

`else

`endif









`ifdef ddr3_ip_inst_RDIMM

`ifdef ddr3_ip_inst_CS_WIDTH_1

`else

`endif

`else

`endif










localparam kf29c0 = 301,do14e04 = 32'hfdffe44b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`ifdef ddr3_ip_inst_ROW_WIDTH_12


`define ddr3_ip_inst_ROW_WDTH 13


`else


`define ddr3_ip_inst_ROW_WDTH `ddr3_ip_inst_ROW_WIDTH


`endif


`ifdef ddr3_ip_inst_ENB_MEM_RST


`endif


`ifdef ddr3_ip_inst_WL_DYNDLY


`endif


`ifdef ddr3_ip_inst_PROBE_RT


`endif


`ifdef ddr3_ip_inst_PROBE_PHY


`endif


`ifdef ddr3_ip_inst_DLY_DQS_DQ


`else


`endif


`ifdef ddr3_ip_inst_ENB_MEM_RST


`endif


`ifdef ddr3_ip_inst_DIFF


`endif


`ifdef ddr3_ip_inst_PHY_REG_P2


`else


`endif


`ifdef ddr3_ip_inst_PHY_REG_P2


`endif


`ifdef ddr3_ip_inst_DLY_DQS_DQ


`else


`endif


`ifdef ddr3_ip_inst_DDR3_2T


`else


`endif


`ifdef ddr3_ip_inst_NO_WRITE_LEVEL


`else


`endif


`ifdef ddr3_ip_inst_PROBE_RT


`endif


`ifdef ddr3_ip_inst_PROBE_RT


`endif


`define ddr3_ip_inst_TSTAB1 `ddr3_ip_inst_TSTAB/6


`define ddr3_ip_inst_USR_RST_CLK_CNT 8'd20   // 20 x 5ns = 100 ns


`ifdef ddr3_ip_inst_ENB_MEM_RST


`endif


`ifdef ddr3_ip_inst_RDIMM


`ifdef ddr3_ip_inst_REGRESSION 


`else


`endif


`else


`endif


`ifdef ddr3_ip_inst_NO_RD_TRAIN


`else


`endif


`ifdef ddr3_ip_inst_NO_RD_TRAIN


`else


`endif


`ifdef ddr3_ip_inst_DESEL


`else


`endif


`define ddr3_ip_inst_P_MRS 4'h0


`define ddr3_ip_inst_P_REF 4'h1


`define ddr3_ip_inst_P_WRITE 4'h4


`define ddr3_ip_inst_P_READ 4'h5


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else


`endif


`ifdef ddr3_ip_inst_ADDR_MIRROR


`ifdef ddr3_ip_inst_CS_WIDTH_2


`else


`endif


`else


`endif


`ifdef ddr3_ip_inst_RDIMM1


`else


`endif


`ifdef ddr3_ip_inst_PHY_REG_P2


`else


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_72


`ifdef ddr3_ip_inst_x4


`ifdef ddr3_ip_inst_RDIMM


`else


`endif


`else // x8


`endif // x4 


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_64  


`ifdef ddr3_ip_inst_x4


`ifdef ddr3_ip_inst_RDIMM


`else


`endif


`else


`endif


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_56


`ifdef ddr3_ip_inst_x4


`ifdef ddr3_ip_inst_RDIMM


`else


`endif


`else


`endif


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_48


`ifdef ddr3_ip_inst_x4


`ifdef ddr3_ip_inst_RDIMM


`else


`endif


`else


`endif


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_40


`ifdef ddr3_ip_inst_x4


`ifdef ddr3_ip_inst_RDIMM


`else


`endif


`else


`endif


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_32


`ifdef ddr3_ip_inst_x4


`ifdef ddr3_ip_inst_RDIMM


`else


`endif


`else


`endif


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_24


`ifdef ddr3_ip_inst_x4


`ifdef ddr3_ip_inst_RDIMM


`else


`endif


`else


`endif


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_16


`ifdef ddr3_ip_inst_x4


`ifdef ddr3_ip_inst_RDIMM


`else


`endif


`else


`endif


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_8


`ifdef ddr3_ip_inst_x4


`else


`endif


`endif


`ifdef ddr3_ip_inst_PHY_REG_P2


`endif


`ifdef ddr3_ip_inst_WL_DYNDLY


`endif


`ifdef ddr3_ip_inst_NO_WRITE_LEVEL


`ifdef ddr3_ip_inst_ECP5_PV_RIGHT_32B


`else


`endif


`else


`endif


`ifdef ddr3_ip_inst_NO_RD_TRAIN


`else


`ifdef ddr3_ip_inst_DATA_SIZE_8


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_16


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_24


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_32


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_40


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_48


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_56


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_64


`endif


`ifdef ddr3_ip_inst_DATA_SIZE_72


`endif


`ifdef ddr3_ip_inst_x4


`else


`endif


`endif


`ifdef ddr3_ip_inst_DLY_DQS_DQ


`else


`endif


`ifdef ddr3_ip_inst_DLY_DQS_DQ


`else


`endif


`ifdef ddr3_ip_inst_DLY_DQS_DQ


`endif


`ifdef ddr3_ip_inst_x4


`else


`endif


`ifdef ddr3_ip_inst_RDIMM


`else


`endif


`ifdef ddr3_ip_inst_RDIMM


`else


`endif


`ifdef ddr3_ip_inst_RDIMM


`else


`endif


`ifdef ddr3_ip_inst_DESEL


`ifdef ddr3_ip_inst_CS_WIDTH_1


`else


`endif


`else


`endif


`ifdef ddr3_ip_inst_RDIMM


`ifdef ddr3_ip_inst_CS_WIDTH_1


`else


`endif


`else


`endif





`ifdef ddr3_ip_inst_ROW_WIDTH_12



`define ddr3_ip_inst_ROW_WDTH 13



`else



`define ddr3_ip_inst_ROW_WDTH `ddr3_ip_inst_ROW_WIDTH



`endif

























`ifdef ddr3_ip_inst_ENB_MEM_RST



`endif



`ifdef ddr3_ip_inst_WL_DYNDLY



`endif
   















`ifdef ddr3_ip_inst_PROBE_RT



`endif



`ifdef ddr3_ip_inst_PROBE_PHY



`endif






`ifdef ddr3_ip_inst_DLY_DQS_DQ



`else



`endif





`ifdef ddr3_ip_inst_ENB_MEM_RST



`endif



`ifdef ddr3_ip_inst_DIFF



`endif



`ifdef ddr3_ip_inst_PHY_REG_P2



`else



`endif




`ifdef ddr3_ip_inst_PHY_REG_P2



`endif




`ifdef ddr3_ip_inst_DLY_DQS_DQ



`else



`endif



`ifdef ddr3_ip_inst_DDR3_2T
 assign  bna046b = 1'b1;

`else
 assign  bna046b = 1'b0;

`endif




`ifdef ddr3_ip_inst_NO_WRITE_LEVEL



`else



`endif







assign qva4256 = ~rst_n;



`ifdef ddr3_ip_inst_PROBE_RT



`endif





`ifdef ddr3_ip_inst_PROBE_RT

always @ (posedge sclk or negedge rst_n) begin    if (!rst_n) begin       rt_start_rvl    <= 1'b0;       rt_on_rvl       <= 1'b0;       rt_act_rvl      <= 1'b0;       rt_wr_rvl       <= 1'b0;       rt_rd_rvl       <= 1'b0;       rt_rd_a10_rvl   <= 1'b0;       rt_pause_rvl    <= 1'b0;       rt_done_rvl     <= 1'b1;    end    else begin       rt_start_rvl    <= lf32d52;       rt_on_rvl       <= dm66b1a;       rt_act_rvl      <= qtd3650;       rt_wr_rvl       <= tw358d3;       rt_rd_rvl       <= ymac69b;       rt_rd_a10_rvl   <= ks1a6ca;       rt_pause_rvl    <= ls83f01;       rt_done_rvl     <= vvfc051;    end
end

`endif



always @ (posedge sclk or negedge rst_n) begin    if (!rst_n) begin       ddr3_read_data_o_rvl <= {`ddr3_ip_inst_DSIZE{1'b0}};       ddr3_datavalid_o_rvl <= {`ddr3_ip_inst_DQS_WIDTH{1'b1}};    end    else begin       ddr3_read_data_o_rvl <= ldf365c;       ddr3_datavalid_o_rvl <= yxedd7b;    end
end





`define ddr3_ip_inst_TSTAB1 `ddr3_ip_inst_TSTAB/6







`define ddr3_ip_inst_USR_RST_CLK_CNT 8'd20   // 20 x 5ns = 100 ns

always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      rv8477d <= 1'b0;   else      rv8477d <= ux9af6e;
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      ir23bee <= 8'h0;   else if (do8cfac == `ddr3_ip_inst_USR_RST_CLK_CNT - 1)      ir23bee <= 8'h0;   else if ((!ux9af6e && wj519f5) || |(do8cfac) )      ir23bee <= do8cfac + 1;   else      ir23bee <= do8cfac;
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      ip708ef <= 1'b0;   else if (cb9ad41)      ip708ef <= 1'b1;
end
assign hd8ea69    = rst_n & ux9af6e & ~|(do8cfac) & ir8a33e;

`ifdef ddr3_ip_inst_ENB_MEM_RST

assign em_ddr_reset_n = en75ee7;

`endif





`ifdef ddr3_ip_inst_RDIMM



always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      ir1df75 <= 8'h0;   else if (tueeb09 || ic7dd61)      ir1df75 <= 8'h0;   else if (en75ee7)      ir1df75 <= ir1df75 + 1;
end


`ifdef ddr3_ip_inst_REGRESSION 
  assign tueeb09 = (ir1df75 == 9'd40);

`else
  assign tueeb09 = (ir1df75 == `ddr3_ip_inst_TSTAB1);

`endif


always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      ykefbac <= 3'd0;   else if (ic7dd61)      ykefbac <= 3'd0;   else if (tueeb09)      ykefbac <= ykefbac + 1;
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      ic7dd61 <= 1'b0;   else if (!en75ee7)      ic7dd61 <= 1'b0;   else if (ykefbac == 3'd6)      ic7dd61 <= 1'b1;
end


`else

assign ic7dd61 = 1'b1;

`endif



always @(posedge sclk or negedge rst_n) begin   if(!rst_n) begin      fpaa06c   <= 1'b1;   end   else if (lf135ed) begin      fpaa06c   <= 1'b0;   end
end
always @(posedge sclk or negedge rst_n) begin   if(!rst_n) begin      ld50366   <= 1'b1;      zz81b37  <= 1'b1;      yzb12f4     <= 1'b0;   end   else  begin      ld50366   <= sjb40ad;      zz81b37  <= pha056c;      yzb12f4     <= vk8c054;   end
end
assign vv4ae6d = (alf7aad) ? {`ddr3_ip_inst_DQS_WIDTH{32'h87654321}} : pfec09a;

assign  cal_bc4 = vk4493;


`ifdef ddr3_ip_inst_NO_RD_TRAIN

assign  dfi_init_complete = vk8c054;

`else

assign  dfi_init_complete = vvfc051;  

`endif


always @(posedge sclk or negedge rst_n) begin   if(!rst_n)        gbe75b1   <= 1'b0;   else        gbe75b1   <= lf135ed & ic7dd61 & cb9ad41;
end

always @ (posedge sclk or negedge rst_n) begin    if (!rst_n) begin        su7821c      <= 1'b0;        phy_init_act     <= 1'b0;    end    else if (lf135ed && !shed7a9) begin        su7821c      <= 1'b1;        phy_init_act     <= 1'b1;    end

`ifdef ddr3_ip_inst_NO_RD_TRAIN
    else if (vk8c054) begin        su7821c      <= 1'b0;        phy_init_act     <= 1'b0;    end

`else
    else if (vvfc051) begin             su7821c      <= 1'b0;        phy_init_act     <= 1'b0;    end

`endif

end
assign init_start    = shed7a9 & ~wl_act & ~vk8c054 & ~vvfc051 ;  


`ifdef ddr3_ip_inst_DESEL

assign qvab339      = (alf7aad) ? cz7ffb3  : (qtc9deb | {`ddr3_ip_inst_CS_WIDTH{(ip4ef5d & qg77aec & xybd760)}});

`else

assign qvab339      = (alf7aad) ? cz7ffb3  : qtc9deb;

`endif

assign qi888ab       = (alf7aad) ? ldf6702   : faebb02;
assign kf2222      = (alf7aad) ? rgfece0  : an33277;
assign hq11115        = (alf7aad) ? suffd9c    : do993bd;
assign ip44559     = (alf7aad) ? xjd297f : ip4ef5d;
assign ph22acc     = (alf7aad) ? rv94bff : qg77aec;
assign ks15667      = (alf7aad) ? rva5ffe  : xybd760;
assign su599cc       = (alf7aad) ? (mgb3817 | uv51c51) : qv3c091;
assign yxcc145 = (alf7aad) ? lsa8140 : ip75fc5;
assign czcce60    = (alf7aad && !dm66b1a) ? cb26e94    : uk926b4;  
assign yk67305   = (alf7aad && !dm66b1a) ? nt374a5 : ng935a0;  
assign cb39828 = (alf7aad && !dm66b1a) ? fpba52f : kf9ad02;  
assign   dm47d75 = (dm66b1a) ? ~xy2fff6 : ~qt604d7;  









`define ddr3_ip_inst_P_MRS 4'h0



`define ddr3_ip_inst_P_REF 4'h1



`define ddr3_ip_inst_P_WRITE 4'h4



`define ddr3_ip_inst_P_READ 4'h5


assign  uide737  =  `ddr3_ip_inst_MRS0_INIT;
assign  thf39b8  =  `ddr3_ip_inst_MRS1_INIT;
assign  vk9cdc6  =  `ddr3_ip_inst_MRS2_INIT;
assign  ble6e32  =  `ddr3_ip_inst_MRS3_INIT;
assign     hb5fd16 = (ri9c668 == `ddr3_ip_inst_P_READ || ou87e62)  ? jr1904a : 1'b0;
assign     ngb749f       = (ri9c668 == `ddr3_ip_inst_P_READ || ou87e62)  ? 1'b1 : 1'b0;
assign     nt16e93      = (ri9c668 == `ddr3_ip_inst_P_REF)  ? 1'b1 : 1'b0;

assign     vife8b7 = (ri9c668 == `ddr3_ip_inst_P_WRITE || ho52cf6) ? nrc8257 : 1'b0;  
assign     fpba4fb       = (ri9c668 == `ddr3_ip_inst_P_WRITE || ho52cf6) ? 1'b1 : 1'b0;             

assign   swb6315    = (mg8878c | ww43c60 | (~ph2249a & vk1e300) );
assign   sjb18a9   = ~(ww43c60 | vk1e300 | (~ph2249a & zkf1802));
assign   ri8c54d = ~(ww43c60 | (~ph2249a & vk1e300));










always @ (posedge sclk or negedge rst_n) begin    if (!rst_n) begin        fp37197     <= 1'b0;    end    else begin        if (jpf6c43) begin            fp37197     <= 1'b1;        end        else begin        if (jr664e == 1'b1)            fp37197  <= 1'b0;        end    end
end

always @ (posedge sclk or negedge rst_n) begin    if (!rst_n) begin        rib8cbf     <= 1'b0;        ofc65fb     <= 1'b0;        ph32fdd     <= 1'b0;        dll_update       <= 1'b0;    end    else begin        if (jr664e == 1'b1) begin            rib8cbf     <= 1'b0;            ofc65fb     <= 1'b0;            ph32fdd     <= 1'b0;            dll_update       <= 1'b0;      end      else begin            rib8cbf     <= anab5cc;            ofc65fb     <= xj5ae64;            ph32fdd     <= vvd7327;            dll_update       <= ukb993e;      end    end
end





assign tu6cdfd  =  (coac641 == 2'b00) ? 1'b0 : (coac641 == 2'b10) ? 1'b1 : ~an33277[12];
assign yzd9bf    = (dm66b1a) ? 1'b0 : xyad9e0;  

always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      rg66fea  <= 1'b0;
   else if (!qg77aec || dm66b1a)      rg66fea  <= sw15b3c;
end
assign zk524ba  = (qg77aec) ? xw6cf02 : sw15b3c ;

assign db37f53 = (!qg77aec) ? ne5d813 : {`ddr3_ip_inst_CS_WIDTH{1'b0}};
assign zzbfa9e = ww67812 | aye048c | wl2461;
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      aa925d2  <= 1'b0;      ie92e90  <= 1'b0;      ym97481  <= 1'b0;      vxba408  <= 1'b0;      vvd2047  <= 1'b0;      wl9023e  <= 1'b0;      wjfd4f6   <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};      wwea7b4  <= {`ddr3_ip_inst_CS_WIDTH{1'b0}};      pfd8cd1    <= 1'b0;      enc668e  <= 1'b0;      mt33475   <= 1'b0;      wl9a3ad   <= 1'b0;      god1d6c   <= 1'b0;      hd8eb60   <= 1'b0;      kd75b06   <= 1'b0;      fcad835   <= 1'b0;   end   else begin      aa925d2  <= ouace57;      ie92e90  <= cm672b8;      ym97481  <= ir395c0;      vxba408  <= pscae04;      vvd2047  <= vi57022;      wl9023e  <= vkb8112;      wjfd4f6   <= ww67812;      wwea7b4  <= (xw6cf02) ? {`ddr3_ip_inst_CS_WIDTH{1'b0}}  : aye048c;      pfd8cd1    <= tw358d3;      enc668e  <= ho52cf6;      mt33475   <= (xw6cf02) ? ho52cf6 : (ho52cf6 | ri967b3);            wl9a3ad   <= oub3d9a;      god1d6c   <= jr9ecd0;      hd8eb60   <= nrf6687;      kd75b06   <= cob343f;      fcad835   <= ux9a1f9;   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      psf45ba <= 1'b0;      pua2dd2 <= 1'b0;      xjd27df      <= 1'b0;      ls93efe      <= 1'b0;      yz9f7f3      <= 1'b0;      xwfbf9c      <= 1'b0;      fadfce2      <= 1'b0;      fafe713      <= 1'b0;      xjf389b      <= 1'b0;   end   else begin      psf45ba <= zxcd0f6;      pua2dd2 <= ww687b6;      xjd27df      <= sjb10f1;      ls93efe      <= mg8878c;      yz9f7f3      <= ww43c60;      xwfbf9c      <= vk1e300;      fadfce2      <= zkf1802;      fafe713      <= vk8c013;      xjf389b      <= sh6009a;   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      kq62a6a      <= 1'b0;      wy15351      <= 1'b0;      gqa9a89      <= 1'b0;      rg4d448      <= 1'b0;      lq42952     <= 1'b1;      ls14a92     <= 1'b1;      vxa5492     <= 1'b1;      hq2a497     <= 1'b1;      mr6a242       <= 1'b1;
      of51214       <= 1'b1;
      vk890a5       <= 1'b1;
      rg4852a       <= 1'b1;
   end   else begin      kq62a6a   <= (mg8878c | ww43c60 | (~ph2249a & vk1e300) );      wy15351   <= (ww43c60 | vk1e300 | (~ph2249a & zkf1802) );      gqa9a89   <= (vk1e300 | zkf1802 | (~ph2249a & vk8c013) );      rg4d448   <= (zkf1802 | vk8c013 | (~ph2249a & sh6009a) );
      mr6a242   <= ~(ww43c60 | vk1e300 | (~ph2249a & zkf1802));      of51214   <= ~(vk1e300 | zkf1802 | (~ph2249a & vk8c013));      vk890a5   <= ~(zkf1802 | vk8c013 | (~ph2249a & sh6009a));      rg4852a   <= ~(vk8c013 | sh6009a | (~ph2249a & ie4d5));      lq42952 <= ~(ww43c60 | (~ph2249a & vk1e300));      ls14a92 <= ~(vk1e300 | (~ph2249a & zkf1802));      vxa5492 <= ~(zkf1802 | (~ph2249a & vk8c013));      hq2a497 <= ~(vk8c013 | (~ph2249a & sh6009a));
   end
end


assign  vif17f4 = zxcd0f6 | su43db1;
assign  ddr_wr_lat_odd = ww687b6 | pu1ed88;


`ifdef ddr3_ip_inst_CS_WIDTH_2

assign  of5e2fe = {&(qtc9deb),ip4ef5d,qg77aec,xybd760};

`else

assign  of5e2fe = {qtc9deb,ip4ef5d,qg77aec,xybd760};

`endif




`ifdef ddr3_ip_inst_ADDR_MIRROR



`ifdef ddr3_ip_inst_CS_WIDTH_2
    assign qt60a2c = ~(qtc9deb[1] | ip4ef5d | qg77aec |xybd760);


`else
    assign qt60a2c = 1'b0;


`endif



`else
 assign qt60a2c = 1'b0;

`endif






always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      wyac25d   <= 'd0;      vv612e9    <= 'd0;      jr974f   <= 'd0;      al4ba7e   <= 'd0;   end   else if (fc149ba) begin      wyac25d   <= {twa8bab[6],twa8bab[5],twa8bab[4],twa8bab[2]};      vv612e9    <= {th45d5a[4],th45d5a[3]};      jr974f   <= {aa2ead7[5],aa2ead7[4],aa2ead7[3]};      al4ba7e    <= {twa8bab[1],twa8bab[0]};   end   else if ((ri9c668 == `ddr3_ip_inst_P_MRS) & do993bd == 3'h0) begin      wyac25d   <= {an33277[6],an33277[5],an33277[4],an33277[2]};      al4ba7e    <= {an33277[1],an33277[0]};   end   else if ((ri9c668 == `ddr3_ip_inst_P_MRS) & do993bd == 3'h1)      vv612e9    <= {an33277[4],an33277[3]};   else if ((ri9c668 == `ddr3_ip_inst_P_MRS) & do993bd == 3'h2)      jr974f   <= {an33277[5],an33277[4],an33277[3]};
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      ba9c4de <= 4'h0;   end   else begin      case (go67d63)       4'b0010 : ba9c4de <= 4'd5;       4'b0100 : ba9c4de <= 4'd6;       4'b0110 : ba9c4de <= 4'd7;       4'b1000 : ba9c4de <= 4'd8;       4'b1010 : ba9c4de <= 4'd9;       4'b1100 : ba9c4de <= 4'd10;       default : ba9c4de <= 4'd5;      endcase   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      ale26f3 <= 4'h0;   end   else begin      case (ayf58c8)       3'b000 : ale26f3 <= 4'h5;       3'b001 : ale26f3 <= 4'h6;       default: ale26f3 <= 4'h5;      endcase   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      hd9bce6 <= 4'h0;      tj1379c <= 4'h0;   end   else begin      case (qi3eb19)       2'b00 :begin              hd9bce6 <= ph13545;              tj1379c <= oh26a8;              end       2'b01 :begin              hd9bce6 <= ph13545 + oh26a8 - 1;              tj1379c <= oh26a8 + oh26a8 - 1;              end       2'b10 :begin              hd9bce6 <= ph13545  + oh26a8 - 2;              tj1379c <= oh26a8 + oh26a8 - 2;              end       default:begin              hd9bce6 <= ph13545;              tj1379c <= oh26a8;              end      endcase   end
end


assign pf7e8f6 = (ri9c668 == `ddr3_ip_inst_P_READ) ? ~qg77aec : 1'b0;
assign tuf47b6 = (dm66b1a) ? ou87e62 :  gb412be;
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      jc6c1aa <= 1'b0;      uka3db2 <= 1'b0;      zm1ed91 <= 1'b0;      ldf6c8b <= 1'b0;      ieb645e <= 1'b0;      pub22f1 <= 1'b0;      vx9178b <= 1'b0;      bn8bc5f <= 1'b0;   end   else begin      jc6c1aa <= ymac69b;      uka3db2 <= zz95f4;      zm1ed91 <= zx4afa6;      ldf6c8b <= xw57d36;      ieb645e <= qvbe9b3;      pub22f1 <= byf4d9c;      vx9178b <= ksa6ce3;      bn8bc5f <= yz36719;   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      pio_read        <= 1'b0;      hbe9fa3 <= 1'b0;      jr811f5     <= 1'b0;   end   else begin   case (an9aa2e)          4'd5 : begin                                     pio_read        <= xw57d36;                      hbe9fa3 <= 1'b1;                        jr811f5     <= ouace57;                 end          4'd6 : begin                                                      pio_read        <= xw57d36;                      hbe9fa3 <= 1'b0;                        jr811f5     <= ouace57;                 end          4'd7 : begin                 pio_read        <= qvbe9b3;                 hbe9fa3 <= 1'b1;                 jr811f5     <= cm672b8;                 end          4'd8 : begin                 pio_read        <= qvbe9b3;                 hbe9fa3 <= 1'b0;                 jr811f5     <= cm672b8;                 end          4'd9 : begin                 pio_read        <= byf4d9c;                 hbe9fa3 <= 1'b1;                 jr811f5     <= cm672b8;                 end         4'd10 : begin                 pio_read        <= byf4d9c;                 hbe9fa3 <= 1'b0;                 jr811f5     <= cm672b8;                 end         4'd11 : begin                 pio_read        <= ksa6ce3;                 hbe9fa3 <= 1'b1;                 jr811f5     <= ir395c0;                 end         4'd12 : begin                 pio_read        <= ksa6ce3;                 hbe9fa3 <= 1'b0;                 jr811f5     <= ir395c0;                 end         4'd13 : begin                 pio_read        <= yz36719;                 hbe9fa3 <= 1'b1;                 jr811f5     <= pscae04;                 end         4'd14 : begin                 pio_read        <= yz36719;                 hbe9fa3 <= 1'b0;                 jr811f5     <= pscae04;                 end         4'd15 : begin                 pio_read        <= mgb38cd;                 hbe9fa3 <= 1'b1;                 jr811f5     <= vi57022;                 end       default : begin                 pio_read        <= zz95f4;                 hbe9fa3 <= 1'b0;                 jr811f5     <= 1'b0;                 end   endcase   end
end

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      bl4fd1e <= 1'b0;      ym3ebaa      <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};      wlaea81     <= 1'b1;      mef5d50       <= 1'b1;      uk3e8f8    <= 1'b0;   end   else begin   case (rgd5175)          4'd5 : begin                    bl4fd1e <= 1'b1;                  ym3ebaa     <= {`ddr3_ip_inst_DQS_WIDTH{qt5ea6f}};                 wlaea81    <= gqa9be8;                 mef5d50      <= osf537d;                 uk3e8f8   <= jr9ecd0;                 end          4'd6 : begin                    bl4fd1e <= 1'b0;                  ym3ebaa     <= {`ddr3_ip_inst_DQS_WIDTH{qt5ea6f}};                 wlaea81    <= gqa9be8;                 mef5d50      <= osf537d;                 uk3e8f8   <= jr9ecd0;                 end            4'd8 : begin                    bl4fd1e <= 1'b0;                 ym3ebaa     <= {`ddr3_ip_inst_DQS_WIDTH{rg4df40}};                 wlaea81    <= jp45dac;                 mef5d50      <= ld40745;                 uk3e8f8   <= nrf6687;                 end          4'd9 : begin                    bl4fd1e <= 1'b1;                 ym3ebaa     <= {`ddr3_ip_inst_DQS_WIDTH{qt6fa03}};                 wlaea81    <= ym2ed67;                 mef5d50      <= nt3a2e;                 uk3e8f8   <= cob343f;                 end         4'd10 : begin                    bl4fd1e <= 1'b0;                 ym3ebaa     <= {`ddr3_ip_inst_DQS_WIDTH{qt6fa03}};                 wlaea81    <= ym2ed67;                 mef5d50      <= nt3a2e;                 uk3e8f8   <= cob343f;                 end         4'd11 : begin                    bl4fd1e <= 1'b1;                 ym3ebaa     <= {`ddr3_ip_inst_DQS_WIDTH{ww7d01d}};                 wlaea81    <= jc76b39;                 mef5d50      <= cb1d176;                 uk3e8f8   <= ux9a1f9;                 end         4'd12 : begin                    bl4fd1e <= 1'b0;                 ym3ebaa     <= {`ddr3_ip_inst_DQS_WIDTH{ww7d01d}};                 wlaea81    <= jc76b39;                 mef5d50      <= cb1d176;                 uk3e8f8   <= ux9a1f9;                 end         4'd13 : begin                    bl4fd1e <= 1'b1;                 ym3ebaa     <= {`ddr3_ip_inst_DQS_WIDTH{yxe80e8}};                 wlaea81    <= vxb59ca;                 mef5d50      <= ipe8bb5;                 uk3e8f8   <= rgd0fcc;                 end       default : begin                 bl4fd1e  <= 1'b0;                 ym3ebaa      <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};                 wlaea81     <= 1'b1;                 mef5d50       <= 1'b1;                 uk3e8f8    <= 1'b0;                 end   endcase   end
end

always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      ld5a35c <= 1'b0;      else if (vvcd3cd && !dm66b1a)      ld5a35c <= 1'b1;
end


`ifdef ddr3_ip_inst_RDIMM1

always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      ou97eee <= 1'b0;   else      ou97eee <= ps63209;
end


`else

assign  ou97eee = ps63209;

`endif


always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      vxc151    <= 1'b0;      sh60a8e   <= 1'b0;      lf8e814     <= 1'b0;      rt740a6    <= 1'b0;      hda0536    <= 1'b0;      an29b7    <= 1'b0;      ba14dbc    <= 1'b0;      qia6de2    <= 1'b0;   end   else begin      vxc151    <= ou97eee;      sh60a8e   <= vvcd3cd;      lf8e814     <= ph2249a;      rt740a6    <= ld6e5df;      hda0536    <= ea72efe;      an29b7    <= ec977f0;      ba14dbc    <= qvbbf80;      qia6de2    <= bydfc04;   end
end


`ifdef ddr3_ip_inst_PHY_REG_P2

always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      wl7dc1   <= 1'b0;   else      wl7dc1   <= (ph2249a) ? ou97eee : (ou97eee & !vvcd3cd & !rg69e6e);
end

`else

assign wl7dc1 = (ph2249a) ? ou97eee : (ou97eee & !vvcd3cd & !rg69e6e);

`endif


always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      ux36f11 <= 1'b0;   else if (an170cc && !jeb8664 && yxc3322 )      ux36f11 <= zxe3343;
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      jcfbb8f  <= 1'b0;      zxddc7a <= 1'b0;      faee3d6 <= 1'b0;   end   else begin      jcfbb8f  <= yxc3322;      zxddc7a <= jeb8664;      faee3d6 <= an170cc;   end
end

assign thfc182  =  (lf19a1e) ? 1'b0 : ((~yxc3322 & ~jeb8664 & an170cc)  | (~mrcc9f1 & ~dz64f8d & rv27c6e));
assign oh8f597 =  (nrc8257) ? 1'b0 : (~yxc3322 | ~mrcc9f1 | ~an170cc | ~rv27c6e);




always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      ks1f7   <= {`ddr3_ip_inst_DATA_WIDTH{1'b0}};   else      ks1f7   <= ph35b0;
end


`ifdef ddr3_ip_inst_DATA_SIZE_72



`ifdef ddr3_ip_inst_x4



`ifdef ddr3_ip_inst_RDIMM
      assign   pha003e = {|(wjd6c39[71:68]), |(wjd6c39[63:60]), |(wjd6c39[55:52]),                           |(wjd6c39[47:44]), |(wjd6c39[39:36]), |(wjd6c39[31:28]),                           |(wjd6c39[23:20]), |(wjd6c39[15:12]), |(wjd6c39[ 7: 4]),                           |(wjd6c39[67:64]), |(wjd6c39[59:56]), |(wjd6c39[51:48]),                           |(wjd6c39[43:40]), |(wjd6c39[35:32]), |(wjd6c39[27:24]),                           |(wjd6c39[19:16]), |(wjd6c39[11: 8]), |(wjd6c39[ 3: 0]) };


`else
      assign   pha003e = {|(wjd6c39[71:68]), |(wjd6c39[67:64]),                           |(wjd6c39[63:60]), |(wjd6c39[59:56]), |(wjd6c39[55:52]), |(wjd6c39[51:48]),                           |(wjd6c39[47:44]), |(wjd6c39[43:40]), |(wjd6c39[39:36]), |(wjd6c39[35:32]),                           |(wjd6c39[31:28]), |(wjd6c39[27:24]), |(wjd6c39[23:20]), |(wjd6c39[19:16]),                           |(wjd6c39[15:12]), |(wjd6c39[11: 8]), |(wjd6c39[ 7: 4]), |(wjd6c39[ 3: 0]) };


`endif



`else // x8

assign   pha003e = {|(wjd6c39[71:64]), |(wjd6c39[63:56]), |(wjd6c39[55:48]), |(wjd6c39[47:40]), |(wjd6c39[39:32]),                     |(wjd6c39[31:24]), |(wjd6c39[23:16]), |(wjd6c39[15: 8]), |(wjd6c39[ 7: 0]) };

`endif // x4 



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_64  



`ifdef ddr3_ip_inst_x4



`ifdef ddr3_ip_inst_RDIMM
      assign   pha003e = {|(wjd6c39[63:60]), |(wjd6c39[55:52]), |(wjd6c39[47:44]), |(wjd6c39[39:36]),                           |(wjd6c39[31:28]), |(wjd6c39[23:20]), |(wjd6c39[15:12]), |(wjd6c39[ 7: 4]),                           |(wjd6c39[59:56]), |(wjd6c39[51:48]), |(wjd6c39[43:40]), |(wjd6c39[35:32]),                           |(wjd6c39[27:24]), |(wjd6c39[19:16]), |(wjd6c39[11: 8]), |(wjd6c39[ 3: 0]) };


`else
      assign   pha003e = {|(wjd6c39[63:60]), |(wjd6c39[59:56]), |(wjd6c39[55:52]), |(wjd6c39[51:48]),                           |(wjd6c39[47:44]), |(wjd6c39[43:40]), |(wjd6c39[39:36]), |(wjd6c39[35:32]),                           |(wjd6c39[31:28]), |(wjd6c39[27:24]), |(wjd6c39[23:20]), |(wjd6c39[19:16]),                           |(wjd6c39[15:12]), |(wjd6c39[11: 8]), |(wjd6c39[ 7: 4]), |(wjd6c39[ 3: 0]) };


`endif



`else
      assign   pha003e = {|(wjd6c39[63:56]), |(wjd6c39[55:48]), |(wjd6c39[47:40]), |(wjd6c39[39:32]),                           |(wjd6c39[31:24]), |(wjd6c39[23:16]), |(wjd6c39[15: 8]), |(wjd6c39[ 7: 0]) };


`endif



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_56



`ifdef ddr3_ip_inst_x4



`ifdef ddr3_ip_inst_RDIMM
      assign   pha003e = {|(wjd6c39[55:52]), |(wjd6c39[47:44]), |(wjd6c39[39:36]),                           |(wjd6c39[31:28]), |(wjd6c39[23:20]), |(wjd6c39[15:12]), |(wjd6c39[ 7: 4]),                           |(wjd6c39[51:48]), |(wjd6c39[43:40]), |(wjd6c39[35:32]),                           |(wjd6c39[27:24]), |(wjd6c39[19:16]), |(wjd6c39[11: 8]), |(wjd6c39[ 3: 0]) };


`else
      assign   pha003e = {|(wjd6c39[55:52]), |(wjd6c39[51:48]),                           |(wjd6c39[47:44]), |(wjd6c39[43:40]), |(wjd6c39[39:36]), |(wjd6c39[35:32]),                           |(wjd6c39[31:28]), |(wjd6c39[27:24]), |(wjd6c39[23:20]), |(wjd6c39[19:16]),                           |(wjd6c39[15:12]), |(wjd6c39[11: 8]), |(wjd6c39[ 7: 4]), |(wjd6c39[ 3: 0]) };


`endif



`else

assign   pha003e = {|(wjd6c39[55:48]), |(wjd6c39[47:40]), |(wjd6c39[39:32]),                     |(wjd6c39[31:24]), |(wjd6c39[23:16]), |(wjd6c39[15: 8]), |(wjd6c39[ 7: 0]) };

`endif



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_48



`ifdef ddr3_ip_inst_x4



`ifdef ddr3_ip_inst_RDIMM
        assign   pha003e = {|(wjd6c39[47:44]), |(wjd6c39[39:36]), |(wjd6c39[31:28]),                             |(wjd6c39[23:20]), |(wjd6c39[15:12]), |(wjd6c39[ 7: 4]),                             |(wjd6c39[43:40]), |(wjd6c39[35:32]), |(wjd6c39[27:24]),                             |(wjd6c39[19:16]), |(wjd6c39[11: 8]), |(wjd6c39[ 3: 0]) };


`else
        assign   pha003e = {|(wjd6c39[47:44]), |(wjd6c39[43:40]), |(wjd6c39[39:36]), |(wjd6c39[35:32]),                             |(wjd6c39[31:28]), |(wjd6c39[27:24]), |(wjd6c39[23:20]), |(wjd6c39[19:16]),                             |(wjd6c39[15:12]), |(wjd6c39[11: 8]), |(wjd6c39[ 7: 4]), |(wjd6c39[ 3: 0]) };


`endif



`else

assign   pha003e = {|(wjd6c39[47:40]), |(wjd6c39[39:32]),                     |(wjd6c39[31:24]), |(wjd6c39[23:16]), |(wjd6c39[15: 8]), |(wjd6c39[ 7: 0]) };

`endif



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_40



`ifdef ddr3_ip_inst_x4



`ifdef ddr3_ip_inst_RDIMM
      assign pha003e = {|(wjd6c39[39:36]), |(wjd6c39[31:28]),                         |(wjd6c39[23:20]), |(wjd6c39[15:12]), |(wjd6c39[ 7: 4]),                         |(wjd6c39[35:32]), |(wjd6c39[27:23]),                         |(wjd6c39[19:16]), |(wjd6c39[11: 8]), |(wjd6c39[ 3: 0]) };


`else
      assign pha003e = {|(wjd6c39[39:36]), |(wjd6c39[35:32]),                         |(wjd6c39[31:28]), |(wjd6c39[27:24]), |(wjd6c39[23:20]), |(wjd6c39[19:16]),                         |(wjd6c39[15:12]), |(wjd6c39[11: 8]), |(wjd6c39[ 7: 4]), |(wjd6c39[ 3: 0]) };


`endif



`else

assign   pha003e = {|(wjd6c39[39:32]),                     |(wjd6c39[31:24]), |(wjd6c39[23:16]), |(wjd6c39[15: 8]), |(wjd6c39[ 7: 0]) };

`endif



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_32



`ifdef ddr3_ip_inst_x4



`ifdef ddr3_ip_inst_RDIMM
      assign   pha003e = {|(wjd6c39[31:28]), |(wjd6c39[23:20]), |(wjd6c39[15:12]), |(wjd6c39[ 7: 4]),                           |(wjd6c39[27:24]), |(wjd6c39[19:16]), |(wjd6c39[11: 8]), |(wjd6c39[ 3: 0]) };


`else
      assign   pha003e = {|(wjd6c39[31:28]), |(wjd6c39[27:24]), |(wjd6c39[23:20]), |(wjd6c39[19:16]),                           |(wjd6c39[15:12]), |(wjd6c39[11: 8]), |(wjd6c39[ 7: 4]), |(wjd6c39[ 3: 0]) };


`endif



`else

assign   pha003e = {|(wjd6c39[31:24]), |(wjd6c39[23:16]), |(wjd6c39[15:8]), |(wjd6c39[7:0])};

`endif



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_24



`ifdef ddr3_ip_inst_x4



`ifdef ddr3_ip_inst_RDIMM
      assign   pha003e = {|(wjd6c39[23:20]), |(wjd6c39[15:12]), |(wjd6c39[ 7: 4]),                           |(wjd6c39[19:16]), |(wjd6c39[11: 8]), |(wjd6c39[ 3: 0]) };


`else
      assign   pha003e = {|(wjd6c39[23:20]), |(wjd6c39[19:16]),                           |(wjd6c39[15:12]), |(wjd6c39[11: 8]), |(wjd6c39[ 7: 4]), |(wjd6c39[ 3: 0]) };


`endif



`else

assign   pha003e = {|(wjd6c39[23:16]), |(wjd6c39[15:8]), |(wjd6c39[7:0])};

`endif



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_16



`ifdef ddr3_ip_inst_x4



`ifdef ddr3_ip_inst_RDIMM
      assign   pha003e = {|(wjd6c39[15:12]), |(wjd6c39[ 7: 4]),                           |(wjd6c39[11: 8]), |(wjd6c39[ 3: 0]) };


`else
      assign   pha003e = {|(wjd6c39[15:12]), |(wjd6c39[11: 8]), |(wjd6c39[ 7: 4]), |(wjd6c39[ 3: 0]) };


`endif



`else

assign   pha003e = {|(wjd6c39[15: 8]), |(wjd6c39[ 7: 0])};

`endif



`endif




`ifdef ddr3_ip_inst_DATA_SIZE_8



`ifdef ddr3_ip_inst_x4

assign   pha003e = {|(wjd6c39[ 7: 4]), |(wjd6c39[ 3: 0]) };

`else

assign   pha003e = |(wjd6c39);

`endif



`endif



always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      zke4f2b <= 1'b0;   else      zke4f2b <= |(db8b1f0 & uk1ad87);
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      dob788c     <= {`ddr3_ip_inst_DSIZE{1'b0}};      yxe2310 <= 1'b0;      wybc462          <= {`ddr3_ip_inst_USER_DM{1'b0}};      ba11884      <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};      ri8c422       <= 1'b0;      kq62112     <= 1'b0;   end   else  begin
      dob788c     <= xjd7b75;      yxe2310 <= ir124d6;      wybc462          <= ux26bd;      ba11884      <= pf64575;      ri8c422       <= nt22baf;      kq62112     <= uk15d7f;   end
end


`ifdef ddr3_ip_inst_PHY_REG_P2

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      sw10890     <= {`ddr3_ip_inst_DSIZE{1'b0}};      zz84480          <= {`ddr3_ip_inst_USER_DM{1'b0}};      vx22406 <= 1'b0;      ep12036      <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};      qv901b4       <= 1'b0;      mt80da5     <= 1'b0;   end   else  begin      sw10890     <= kf808d8;      zz84480          <= hq46c5;      vx22406 <= gd2362a;      ep12036      <= ng1b154;      qv901b4       <= pfd8aa2;      mt80da5     <= dmc5516;   end
end

`endif








`ifdef ddr3_ip_inst_WL_DYNDLY


always @(posedge sclk or negedge rst_n) begin   if(!rst_n) begin        wl_dyndly    <= {8*`ddr3_ip_inst_DQS_WIDTH{1'b0}};   end   else begin        wl_dyndly    <= alc993b;   end
end

`endif




`ifdef ddr3_ip_inst_NO_WRITE_LEVEL

assign  wl_act         = 1'b0;
assign  jr8bcfd    = 1'b0;
assign  dz61c91     = 1'b0;
assign  xy83af4    = 1'b0;
assign  mg92399    = 16'h0;
assign  ep1d7a2      = {`ddr3_ip_inst_CS_WIDTH{1'b0}};
assign  je3ab0e    = 1'b0;
assign  wl_done        = ic4c9dd;
assign  hbe91fa      = 1'b0;
assign  xwd5872     = {`ddr3_ip_inst_DQS_WIDTH{1'b0}};
assign  wl_err         = 1'b0;

assign  xwebd15       = {`ddr3_ip_inst_CS_WIDTH{1'b0}};
assign  nec05b3              = 1'b0;
assign  tw35504         = 1'b0;


`ifdef ddr3_ip_inst_ECP5_PV_RIGHT_32B

always @(posedge sclk or negedge rst_n) begin   if(!rst_n) begin        alc993b    <= {8'h0,8'h0,8'hd,8'hd};   end   else begin        alc993b    <= {8'h0,8'h0,8'hd,8'hd};   end
end

`else

always @(posedge sclk or negedge rst_n) begin   if(!rst_n) begin        alc993b    <= {8*`ddr3_ip_inst_DQS_WIDTH{1'b0}};   end   else begin        alc993b    <= {`ddr3_ip_inst_DQS_WIDTH{8'h00}};   end
end

`endif


always @(posedge sclk or negedge rst_n) begin   if(!rst_n) begin        ic4c9dd   <= 1'b0;   end   else begin        if (fc149ba)        ic4c9dd   <= 1'b1;   end
end


`else

assign  ic4c9dd = fc149ba;
always @ (posedge sclk or negedge rst_n) begin    if (!rst_n) begin        nrc8848      <= 3'b0;    end    else if (shed7a9) begin        nrc8848      <= aa2ead7[5:3];    end
end

always @ (nrc8848) begin   case (nrc8848)    3'b000 : kd44247 = 3'h3;    3'b001 : kd44247 = 3'h3;    3'b010 : kd44247 = 3'h4;    3'b011 : kd44247 = 3'h4;    default: kd44247 = 3'h3;   endcase
end
yxfd83d_ddr3_ip_inst jr8bbec(        .sclk               (sclk),
    .rst_n              (rst_n),
    .mt7b7c           (ic4c9dd),    .ie593b         (th45d5a[4:3]),    .sj2c9d9     (kd44247),    .ng99011        (vk1566 ),    .lqf1846           (cz7ffb3 ),    .zke4f2b              (hq99ab3 ),    .lf2795a            ({th45d5a[9],th45d5a[6],th45d5a[2]}),    .gd3cad7                ({th45d5a[5],th45d5a[1]} ),    .cme56bd            (th45d5a[0] ),    .ui72ad8          (aa2ead7[10:0] ),    .clocking_good      (cb9ad41 ),    .wl_phase_dly_cnt   (`ddr3_ip_inst_WL_DQS_PHASE_DLY_CNT),        .wl_done            (wl_done ),    .hbe91fa          (hbe91fa ),    .wl_err             (wl_err ),    .wl_act             (wl_act ),    .jr8bcfd        (jr8bcfd ),    .dz61c91         (dz61c91),    .xy83af4        (xy83af4),    .mg92399        (mg92399) ,    .ep1d7a2          (ep1d7a2 ),    .je3ab0e        (je3ab0e),    .qi98d54       (),    .xwd5872         (xwd5872),    .tw35504           (tw35504),    .xlaa822          (alc993b),    .xwebd15         (xwebd15),    .fpa08bd    ()      );


`endif








`ifdef ddr3_ip_inst_NO_RD_TRAIN

assign jp7e9d8    = 1'b0;
assign pha54e5       = 1'b0;
assign do2f450      = 1'b0;
assign ls2a72f       = 1'b0;
assign fca7633      = 1'b0;
assign ea5397a       = 1'b0;
assign ice5e8a   = 1'b0;
assign tw9cbd1    = 1'b0;
assign fc9ccb1 = 'd0;
assign zzaa732 = 'd0;
assign rt_err      = 1'b0;
assign rv32c56    = 1'b0;
assign fc962b6   = 1'b0;
assign yzb15b2     = 1'b1;


`else


assign jp7e9d8 = vk8c054 & ~dba0014;
sjd677_ddr3_ip_inst vv6b3bc(       .rst_n           (rst_n ),    .sclk            (sclk ),    .jp7e9d8        (lf32d52),        .end6a5a            (vvcd3cd),    .ls1ca0          (ld6e5df),
    .rt5af46        (ho6ccb5),
    .zza06c7 (ph8e28c),
       .pha54e5           (pha54e5),    .do2f450          (do2f450),    .ls2a72f           (ls2a72f),    .ea5397a           (ea5397a),    .tw9cbd1        (tw9cbd1),    .ice5e8a       (ice5e8a),    .rt_rdclksel_rvl (rt_rdclksel_rvl),    .fc9ccb1     (fc9ccb1),    .rt_dqs_read_rvl (rt_dqs_read_rvl),    .zzaa732     (zzaa732),    .hd37143      (hd37143),    .rt_err          (rt_err),    .rv32c56        (rv32c56),    .fc962b6       (fc962b6),    .yzb15b2         (yzb15b2)    );


`ifdef ddr3_ip_inst_DATA_SIZE_8
    assign co2123c = 32'h87654321;


`endif



`ifdef ddr3_ip_inst_DATA_SIZE_16
 assign co2123c = 64'h87654321_87654321;


`endif



`ifdef ddr3_ip_inst_DATA_SIZE_24
 assign co2123c = 96'h87654321_87654321_87654321;


`endif



`ifdef ddr3_ip_inst_DATA_SIZE_32
    assign co2123c = 128'h87654321_87654321_87654321_87654321;


`endif



`ifdef ddr3_ip_inst_DATA_SIZE_40
    assign co2123c = 160'h87654321_87654321_87654321_87654321_87654321;


`endif



`ifdef ddr3_ip_inst_DATA_SIZE_48
    assign co2123c = 192'h87654321_87654321_87654321_87654321_87654321_87654321;


`endif



`ifdef ddr3_ip_inst_DATA_SIZE_56
    assign co2123c = 224'h87654321_87654321_87654321_87654321_87654321_87654321_87654321;


`endif



`ifdef ddr3_ip_inst_DATA_SIZE_64
    assign co2123c = 256'h87654321_87654321_87654321_87654321_87654321_87654321_87654321_87654321;


`endif



`ifdef ddr3_ip_inst_DATA_SIZE_72
    assign co2123c = 288'h87654321_87654321_87654321_87654321_87654321_87654321_87654321_87654321_87654321;


`endif


     

`ifdef ddr3_ip_inst_x4
     generate           for (nt91e1=0; nt91e1<`ddr3_ip_inst_DQS_WIDTH; nt91e1=nt91e1+1)           begin: qi2e55f           su72af8_ddr3_ip_inst su72af8(               .sclk              (sclk),               .rst_n             (rst_n),               .su7821c       (alf7aad),               .ea5397a             (ymac69b),               .uka33be           (1'b0),               .fn6e478  (yxedd7b[nt91e1]),               .gd8a59a  (ldf365c[ (nt91e1 * 16)+15: (nt91e1 * 16)]),                              .ux80a5a  ({co2123c[(3*`ddr3_ip_inst_DATA_WIDTH+nt91e1*4+3) : (3*`ddr3_ip_inst_DATA_WIDTH+nt91e1*4)], co2123c[(2*`ddr3_ip_inst_DATA_WIDTH+nt91e1*4+3) : (2*`ddr3_ip_inst_DATA_WIDTH+nt91e1*4)],                                    co2123c[(`ddr3_ip_inst_DATA_WIDTH+nt91e1*4+3) : (`ddr3_ip_inst_DATA_WIDTH+nt91e1*4)], co2123c[(nt91e1*4+3) : (nt91e1*4)]}),               .cal_bc4           (ph2249a),               .ria77e3        (rv9484a[nt91e1])               );           end      endgenerate

`else
     generate           for (nt91e1=0; nt91e1<`ddr3_ip_inst_DQS_WIDTH; nt91e1=nt91e1+1)           begin: qi2e55f           su72af8_ddr3_ip_inst su72af8(               .sclk              (sclk),               .rst_n             (rst_n),               .su7821c       (alf7aad),               .ea5397a             (ymac69b),               .uka33be           (1'b0),               .fn6e478  (yxedd7b[nt91e1]),               .gd8a59a  (ldf365c[ (nt91e1 * 32)+31: (nt91e1 * 32)]),               .ux80a5a  ({co2123c[(3*`ddr3_ip_inst_DATA_WIDTH+nt91e1*8+7) : (3*`ddr3_ip_inst_DATA_WIDTH+nt91e1*8)], co2123c[(2*`ddr3_ip_inst_DATA_WIDTH+nt91e1*8+7) : (2*`ddr3_ip_inst_DATA_WIDTH+nt91e1*8)],                                    co2123c[(`ddr3_ip_inst_DATA_WIDTH+nt91e1*8+7) : (`ddr3_ip_inst_DATA_WIDTH+nt91e1*8)], co2123c[(nt91e1*8+7) : (nt91e1*8)]}),               .cal_bc4           (ph2249a),               .ria77e3        (rv9484a[nt91e1])               );           end      endgenerate


`endif




`endif



co9d559_ddr3_ip_inst alcc73d(      .clk(sclk ) ,   .rst_n(rst_n ),   .param_txpr(`ddr3_ip_inst_TXPR),   .param_tmod(`ddr3_ip_inst_TMOD),   .param_tmrd(`ddr3_ip_inst_TMRD),   .param_tzqinit(`ddr3_ip_inst_TZQINIT) ,   .init_start(pha0ca2) ,
      .ec8d0c4(ec8d0c4 ),   .zz37585( ),   .fadfb42(fadfb42 ),   .gbfda13(gbfda13 ),   .ened09d(ened09d ),   .ea684ed(ea684ed ),   .fa42769(fa42769 ),   .vx13b4b(vx13b4b ),   .ym9da5f(ym9da5f ),   .yxed2f8(yxed2f8 ),   .wjedd26(uk77c ),   .co8dea7(co8dea7 ),   .init_done(dzf3264 )
);
assign xw47873  = vk2a301 | hd37143;

assign ep3c39a = (dm66b1a) ? {twa8bab[15:9],1'b0,twa8bab[7:0]} : mg1ff3a;
sh51d0d_ddr3_ip_inst pf50965(
   .clk(sclk ),   .rst_n(rst_n ),   .co8dea7(ofd9858 ),   .ec8d0c4(dob127),   .addr_init_0(`ddr3_ip_inst_MRS0_INIT),   .addr_init_1(`ddr3_ip_inst_MRS1_INIT),   .addr_init_2(`ddr3_ip_inst_MRS2_INIT),   .addr_init_3(`ddr3_ip_inst_MRS3_INIT),   .pha54e5(dm66b1a),   .do2f450(qtd3650),   .ls2a72f(tw358d3 ),   .ea5397a(ymac69b ),   .tw9cbd1(jc634d9 ),   .ice5e8a(ks1a6ca ),   .fadfb42(ie88c51 ),   .gbfda13(ui46289 ),   .ened09d(ie31449 ),   .ea684ed(mt8a248 ),   .fa42769(cz51245 ),   .vx13b4b(do8922d ),   .ym9da5f(cm4916a ),   .yxed2f8(vi48b50 ),   .uk77c(jr2d41f),   .su7821c(alf7aad),   .wl_act(wl_act),   .mg92399(su6da7b),   .dz61c91(lq4db4f),

   .pue48e(ps66032),   .yk72473(hq30192),   .jr8bcfd(zk5d2b4),
   .zm41c9(zm41c9 ),   .tw20e4a(tw20e4a ),   .oh7252(oh7252 ),   .oh39295(oh39295 ),   .mrc94ac(mrc94ac ),   .zx4a564(zx4a564 ),   .by52b27(by52b27 ),   .ng99011(ng99011),   .coac9dc(coac9dc)
);




always @ (negedge rst_n or posedge sclk) begin   if (!rst_n) begin      kf8ad94 <= 1'b0;      go56ca4 <= 1'b0;      ieb6521 <= 1'b0;   end   else begin      kf8ad94 <= tw358d3;      go56ca4 <= ose028e;      ieb6521 <= do1471;   end
end
assign pub2909  = (ph2249a) ? (do1471 | ose028e) :                         (yma38a | do1471 | ose028e);
assign  kd4ec3e = !cb26e94[0];
assign  byc0444      = ep80c92;
always @ (negedge rst_n or posedge sclk) begin  if (!rst_n) begin     vvdd3b0    <=  'b0;     fne9d87 <=  1'b1;  end  else if ( wl_act && su5ca8c)  begin     vvdd3b0    <= db8b1f0;     fne9d87 <= 1'b0;  end  else  begin     vvdd3b0    <=  'b0;     fne9d87 <=  1'b1;  end
end





assign dfi_rddata = yk5cfa8;








always @ (negedge rst_n or posedge sclk) begin  if (!rst_n)     hbcd28b <= 1'b0;  else     hbcd28b <= ls83f01 | yk7daf5 | ayd4199;
end
ux29af4_ddr3_ip_inst  mg2e4e9 (    .rst_n         (rst_n),        .ddr_rst       (je83f2e),    .sclk          (sclk),    .eclk          (eclk),
    .sja45eb        (an1230d),    .lf22f5d       (uk1f972),    .gd17aef        (tw8c366),    .jebd77d        (dz61b32),    .xwebbea      (qvd996),    .by5df53    (zm2a8b2),


`ifdef ddr3_ip_inst_DLY_DQS_DQ
    .uiefa9a     (bnbfc52),


`else
    .uiefa9a     (lqfe296),


`endif
    .cm7d4d1          (oh8ff16),    .suea688            (em_ddr_data)   );
zke1a4e_ddr3_ip_inst   en513c5 (        .ddr_rst       (je83f2e),    .eclk          (eclk),    .sclk          (sclk),    .lf22f5d       (uk1f972),    .ic728cd    (xjfcb91),    .nt94668   (em_ddr_dm)
);
rge1e69_ddr3_ip_inst  lfb0e17 (    .rst_n          (rst_n),        .ddr_rst        (je83f2e),    .hbcd28b  (ph974a),        .sclk           (sclk),    .eclk           (eclk),    .wj5179f    (alc993b),    .jr8bcfd    (zk5d2b4),    .al5e7ee (fp164eb),    .pff3f74 (fp164eb),    .qv9fba6       (xyb275e),    .qtfdd35       (fc93af3),    .faee9ad       (sh54593)  ,    .pf74d6b       (sh54593)  ,
    .swa6b5f       ({`ddr3_ip_inst_DQS_WIDTH{1'b0}}),    .je35af9        ({`ddr3_ip_inst_DQS_WIDTH{1'b0}}),    .xyad7cb         ({`ddr3_ip_inst_DQS_WIDTH{1'b0}}),    .dz6be5b       ({`ddr3_ip_inst_DQS_WIDTH{1'b0}}),    .zx5f2df        ({`ddr3_ip_inst_DQS_WIDTH{1'b0}}),    .hbf96fe         ({`ddr3_ip_inst_DQS_WIDTH{1'b0}}),    .end6a5a           (ay620fc),    .gb5bfb1     (qi107e0),   
    .gd17aef         (gd17aef),    .jebd77d         (jebd77d),    .dqsdel         (xjd7d63)  ,



`ifdef ddr3_ip_inst_DLY_DQS_DQ
    .ohb1ad7      (enc63a9),


`else
    .ohb1ad7      (go78c75),


`endif

    .lf22f5d        (lf22f5d),    .sja45eb         (sja45eb),    .rt5af46       (rt5af46),    .zxd7a37        (),    .fcbd1bf        (),    .xwebbea       (xwebbea)  ,    .ic46fd4            (em_ddr_dqs)
);
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      gd8a59a      <= {`ddr3_ip_inst_DSIZE{1'b0}};   end   else begin      gd8a59a    <= lqfe296;   end
end



`ifdef ddr3_ip_inst_DLY_DQS_DQ

always @(negedge rst_n or posedge rv91e31) begin   if (!rst_n) begin      jce1cd4    <= 1'b0;   end   else begin      jce1cd4    <= ~jce1cd4;   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      rv91e31         <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};      qv8f18e         <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};      fa76ff1  <= {`ddr3_ip_inst_DSIZE{1'b0}};      ngb7f8a  <= {`ddr3_ip_inst_DSIZE{1'b0}};   end   else begin      rv91e31         <= enc63a9;      qv8f18e         <= rv91e31;      fa76ff1  <= bnbfc52;      ngb7f8a  <= fa76ff1;   end
end
assign lse6a2        = jce1cd4 ? (rv91e31[7] | qv8f18e[7])  : rv91e31[7];
assign tu73513 = (jce1cd4 && !lse6a2) ? ngb7f8a[255:224] : fa76ff1[255:224];
assign go78c75        = {lse6a2,rv91e31[6:0]};
assign lqfe296 = {tu73513,fa76ff1[223:0]};



`endif








always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      fn6e478 <= {`ddr3_ip_inst_DQS_WIDTH{1'b1}};      ic723c6  <= {`ddr3_ip_inst_DQS_WIDTH{1'b1}};   end   else begin      fn6e478 <= go78c75;              ic723c6  <= yxedd7b;   end
end
assign an9a89b  = |(yxedd7b);
assign qgd44dd = &(yxedd7b);


always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      sjab46b        <= 1'b0;   else if ( !icf5028 || (ec3ea05 && !(lq69ec1)) )      sjab46b        <= 1'b0;   else if (ic6d3d8)      sjab46b        <= 1'b1;
end

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      dfi_rddata_valid    <= 1'b0;   end   else begin      dfi_rddata_valid    <= ec3ea05;   end
end





`ifdef ddr3_ip_inst_x4

     generate        for (lsa26e9=0; lsa26e9<`ddr3_ip_inst_DQS_WIDTH; lsa26e9=lsa26e9+1)        begin: fafbf5d        mg2ef79_ddr3_ip_inst mg2ef79(               .sclk                 (sclk),               .rst_n                (rst_n),               .cal_bc4              (zkfe023),               .ir18511     (ic6d3d8),               .pu1446e     (yxedd7b[lsa26e9]),               .gd8a59a     (ldf365c[(lsa26e9*16)+15 : (lsa26e9*16)]),               .bld239c                (cb9aad1[                (lsa26e9*4)+3 :                 (lsa26e9*4)]),               .zm9cdba                (cb9aad1[   `ddr3_ip_inst_DATA_WIDTH +(lsa26e9*4)+3 :    `ddr3_ip_inst_DATA_WIDTH +(lsa26e9*4)]),               .xlba5e3                (cb9aad1[(2*`ddr3_ip_inst_DATA_WIDTH)+(lsa26e9*4)+3 : (2*`ddr3_ip_inst_DATA_WIDTH)+(lsa26e9*4)]),               .ble3fc8                (cb9aad1[(3*`ddr3_ip_inst_DATA_WIDTH)+(lsa26e9*4)+3 : (3*`ddr3_ip_inst_DATA_WIDTH)+(lsa26e9*4)])               );        end      endgenerate

`else
     generate        for (lsa26e9=0; lsa26e9<`ddr3_ip_inst_DQS_WIDTH; lsa26e9=lsa26e9+1)        begin: fafbf5d        mg2ef79_ddr3_ip_inst mg2ef79(               .sclk                 (sclk),               .rst_n                (rst_n),               .cal_bc4              (zkfe023),               .ir18511     (ic6d3d8),               .pu1446e     (yxedd7b[lsa26e9]),               .gd8a59a     (ldf365c[(lsa26e9*32)+31 : (lsa26e9*32)]),
               .bld239c                (cb9aad1[                (lsa26e9*8)+7 :                 (lsa26e9*8)]),               .zm9cdba                (cb9aad1[   `ddr3_ip_inst_DATA_WIDTH +(lsa26e9*8)+7 :    `ddr3_ip_inst_DATA_WIDTH +(lsa26e9*8)]),               .xlba5e3                (cb9aad1[(2*`ddr3_ip_inst_DATA_WIDTH)+(lsa26e9*8)+7 : (2*`ddr3_ip_inst_DATA_WIDTH)+(lsa26e9*8)]),               .ble3fc8                (cb9aad1[(3*`ddr3_ip_inst_DATA_WIDTH)+(lsa26e9*8)+7 : (3*`ddr3_ip_inst_DATA_WIDTH)+(lsa26e9*8)])               );        end      endgenerate

`endif






generate
for( jr9ba56=0; jr9ba56<`ddr3_ip_inst_CLKO_WIDTH;jr9ba56=jr9ba56+1 ) begin: osd4794    ODDRX2F uka3ca1 (.D0(1'b0), .D1(1'b1), .D2(1'b0), .D3(1'b1), .RST(ddr_rst), .ECLK(eclk), .SCLK(sclk), .Q(dzd2fb9[jr9ba56]));
end
endgenerate     generate        for (nrdd2b7=0; nrdd2b7<`ddr3_ip_inst_CLKO_WIDTH; nrdd2b7=nrdd2b7+1)        begin: xweed1f           DELAYG #(.DEL_MODE("DQS_CMD_CLK"), .DEL_VALUE(0))           by768fb (.A(dzd2fb9[nrdd2b7]), .Z(wwfa5f7[nrdd2b7]));        end      endgenerate  OB lqda843 [`ddr3_ip_inst_CLKO_WIDTH -1:0] (.I(wwfa5f7), .O(em_ddr_clk)) ;





`ifdef ddr3_ip_inst_RDIMM

assign the95bf = 1'b1;

`else

assign the95bf = 1'b0;

`endif




`ifdef ddr3_ip_inst_RDIMM

always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        nr74bb7   <= 1'b0;     end     else if (bl7ef79 && lqdf42e) begin        nr74bb7   <= 1'b1;     end     else if (bl7ef79 && !lqdf42e) begin        nr74bb7   <= 1'b0;     end
end

`else

always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        nr74bb7   <= 1'b0;     end     else        nr74bb7   <= 1'b1;
end

`endif


ou15188_ddr3_ip_inst vka8c41 (                .rst_n               (rst_n),                .sclk                (sclk),                .nr74bb7             (aa9d79b),                .gd9030a              (bl7ef79),                .jr8bcfd         (zk5d2b4),                .ddr_wr_lat_odd      (lf19a1e),                .dob788c      (kf808d8),                .wybc462           (hq46c5),                .yxe2310  (gd2362a),                .ba11884       (ng1b154),                .ri8c422        (pfd8aa2),                .kq62112      (dmc5516),                .sw10890     (sw10890),                .zz84480          (zz84480),                .vx22406 (vx22406),                .ep12036      (ep12036),                .qv901b4       (qv901b4),                .mt80da5     (mt80da5),                .vv4ae6d           (xjd7b75),                .dm47d75     (ir124d6),                .dfi_wrdata_mask     (ux26bd),                .czcce60          (pf64575),                .yk67305         (nt22baf),                .cb39828       (uk15d7f),                .zz6d2d     (zz6d2d),                .ux3696e (ux3696e),                .ic728cd          (ic728cd),                .lfa5ba5      (lfa5ba5),                .db2dd2e       (db2dd2e),                .vv6e976     (vv6e976)                ) ;





assign ls11afd = (lf19a1e & ~hb4f60a) | (lqdf42e & hb4f60a)  | zxe3343;

os5c502_ddr3_ip_inst zm3a1a0 (                      .rst_n       (rst_n),                      .sclk        (sclk) ,                      .bna046b      (fn74ff9),                      .mirror_on   (ohaebf8),                      .ls11afd     (ba3fe7b),                      .ddr_cs_n    (rv19915),                      .ddr_ras_n   (an170cc),                      .ddr_cas_n   (jeb8664),                      .ddr_we_n    (yxc3322),                      .ddr_ba      (wwe05c3),                      .ddr_addr    (ri9c0b8),                      .ddr_cke     (qv2e19),                      .qgea1fc    (uvcc8ae),                      .thfc182    (lqdf42e),                      .gd9030a      (gd9030a),                      .db60b0  (db60b0),                      .do30587  (do30587),                      .wy82c3a  (wy82c3a),                      .xl161d0  (xl161d0),                      .ntb0e86   (ntb0e86),                      .co87437   (co87437),                      .vk3a1b9   (vk3a1b9),                      .tud0dcb   (tud0dcb),                      .fc86e5a (fc86e5a),                      .rv372d2 (rv372d2),                      .ieb9697   (faee8a9),                      .oscb4b8   (pua2a5e),                      .th5a5c1  (th5a5c1),                      .ldd2e0e  (ldd2e0e),                      .wy97077  (wy97077),                      .dob83b8  (dob83b8)              );      


`ifdef ddr3_ip_inst_RDIMM
  assign ieb9697 = (mt2b67) ? {`ddr3_ip_inst_CS_WIDTH{1'b1}} : mg87f45;  assign oscb4b8 = (mt2b67) ? {`ddr3_ip_inst_CS_WIDTH{1'b1}} : alfd142;

`else
  assign ieb9697 = mg87f45;  assign oscb4b8 = alfd142;

`endif




`ifdef ddr3_ip_inst_DESEL


always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      xj4adff     <= 1'b1;      go56ffe <= 1'b0;      jeb7ff1     <= 1'b1;      vxbff8a     <= 1'b1;   end   else begin      xj4adff     <= ep85c3f;      go56ffe <= lf19a1e;      jeb7ff1     <= nt3e3e;      vxbff8a     <= lf280f8;   end
end












`ifdef ddr3_ip_inst_CS_WIDTH_1


assign mr6fba2 = (phy_init_act ) ? (~(zk5d2b4 | dm66b1a) | ep85c3f) : ( ep85c3f | {`ddr3_ip_inst_CS_WIDTH{(~jeb7ff1 & ~vxbff8a)}});

`else


assign mr6fba2 = (phy_init_act ) ? {(~(zk5d2b4 | dm66b1a) | ep85c3f[1]), (~(zk5d2b4 | dm66b1a) | ep85c3f[0])} : ( ep85c3f | {`ddr3_ip_inst_CS_WIDTH{(~jeb7ff1 & ~vxbff8a)}});

`endif

assign qg7dd15 = (phy_init_act ) ? tw3fa28    : tw3fa28;



`else

assign mr6fba2 = ep85c3f;
assign qg7dd15 = tw3fa28;

`endif






generate
for( osffc56=0; osffc56<`ddr3_ip_inst_ROW_WDTH;osffc56=osffc56+1 ) begin: bl4abf8    ODDRX1F        pf55fc6 (.D0(fc86e5a[osffc56]), .D1(rv372d2[osffc56]), .RST(ddr_rst), .SCLK(sclk), .Q(jp6e39c[osffc56]));
end
endgenerate
generate
for( lqfe2b0=0; lqfe2b0<`ddr3_ip_inst_BANK_WIDTH;lqfe2b0=lqfe2b0+1 ) begin: hq9c5f7    ODDRX1F        wje2fbb (.D0(vk3a1b9[lqfe2b0]), .D1(tud0dcb[lqfe2b0]), .RST(ddr_rst), .SCLK(sclk), .Q(ipedc73[lqfe2b0]));
end
endgenerate
generate
for( rgf1583=0; rgf1583<`ddr3_ip_inst_CS_WIDTH;rgf1583=rgf1583+1 ) begin: fc148c3    ODDRX1F        yza461a (.D0(wy97077[rgf1583]), .D1(dob83b8[rgf1583]), .RST(ddr_rst), .SCLK(sclk), .Q(vk9cdfa[rgf1583]));
end
endgenerate
generate
for( gd8ac1a=0; gd8ac1a<`ddr3_ip_inst_CKE_WIDTH;gd8ac1a=gd8ac1a+1 ) begin: vx277f7    ODDRX1F        co3bfbe (.D0(th5a5c1[gd8ac1a]), .D1(ldd2e0e[gd8ac1a]), .RST(ddr_rst), .SCLK(sclk), .Q(fp37e97[gd8ac1a]));
end
endgenerate
generate
for( ay560d4=0; ay560d4<`ddr3_ip_inst_CS_WIDTH;ay560d4=ay560d4+1 ) begin: zxc8fcf    OSHX2A        by47e7f (.D0(mr6fba2[ay560d4]), .D1(qg7dd15[ay560d4]), .RST(ddr_rst), .ECLK(eclk), .SCLK(sclk), .Q(ble6fd2[ay560d4]));
end
endgenerate
    ODDRX1F    aaa9b03 (.D0(ntb0e86), .D1(co87437), .RST(ddr_rst), .SCLK(sclk), .Q(lf8e737));    ODDRX1F    mrc377d(.D0(db60b0), .D1(do30587), .RST(ddr_rst), .SCLK(sclk), .Q(tu739bf));    ODDRX1F    fn6bc4d(.D0(wy82c3a), .D1(xl161d0), .RST(ddr_rst), .SCLK(sclk), .Q(rt71ce6));

assign #1 of652dd  = jceed2f;
assign #1 vi7994b  = ale7bb4;
assign #1 uvcca5b  = xl3dda5;
assign #1 gb5bb6d  = hb7b9ee;
assign #1 pfddb6d = ipdcf76;
assign #1 gb4b76d  = zza5ed5;
assign #1 ep296ed  = tu7697b;

`ifdef ddr3_ip_inst_RDIMM



`ifdef ddr3_ip_inst_CS_WIDTH_1
    assign #1 ay6db74  = {1'b1,wlb4bda};


`else
    assign #1 ay6db74  = wlb4bda;


`endif



`else

assign #1 ay6db74  = wlb4bda;

`endif

  generate     for (lfb06a0=0; lfb06a0<`ddr3_ip_inst_CS_WIDTH_BB; lfb06a0=lfb06a0+1)     begin: ksbc5a4      DELAYG #(.DEL_MODE("DQS_CMD_CLK"),.DEL_VALUE(0))      eca3f0d (.A(ay6db74[lfb06a0]), .Z(enedb6e[lfb06a0]));     end   endgenerate
OB wy5f6a                     (.I(of652dd), .O(em_ddr_cas_n)) ;
OB gbed459                     (.I(vi7994b), .O(em_ddr_ras_n)) ;
OB nt8b365                      (.I(uvcca5b) , .O(em_ddr_we_n)) ;
OB rg6cbc7   [`ddr3_ip_inst_BANK_WIDTH -1:0] (.I(gb5bb6d) , .O(em_ddr_ba)) ;
OB yk78ea2 [`ddr3_ip_inst_ROW_WDTH -1:0]   (.I(pfddb6d), .O(em_ddr_addr)) ;
OB kqd447a    [`ddr3_ip_inst_CS_WIDTH_BB-1:0]  (.I(enedb6e), .O(em_ddr_cs_n)) ;
OB oh8f452   [`ddr3_ip_inst_CKE_WIDTH -1:0]  (.I(gb4b76d) , .O(em_ddr_cke)) ;
OB sj8a569   [`ddr3_ip_inst_CS_WIDTH-1:0]    (.I(ep296ed), .O(em_ddr_odt)) ;

always@* begin cb9ad41<=ou538[0];je83f2e<=ou538[1];ayd4199<=ou538[2];xjd7d63<={dqsdel>>1,ou538[3]};jr664e<=ou538[4];an33277<={dfi_address>>1,ou538[5]};do993bd<={dfi_bank>>1,ou538[6]};qtc9deb<={dfi_cs_n>>1,ou538[7]};ip4ef5d<=ou538[8];qg77aec<=ou538[9];xybd760<=ou538[10];faebb02<={dfi_cke>>1,ou538[11]};ne5d813<={dfi_odt>>1,ou538[12]};pfec09a<={dfi_wrdata>>1,ou538[13]};qt604d7<=ou538[14];ux26bd<={dfi_wrdata_mask>>1,ou538[15]};lf135ed<=ou538[16];ux9af6e<=ou538[17];xjd7b75<={vv4ae6d>>1,ou538[18]};rg79ff1<={lq4d0a5>>1,ou538[19]};yxedd7b<={fn6e478>>1,ou538[20]};hb6ebdc<={ic723c6>>1,ou538[21]};en75ee7<=ou538[22];hq99ab3<=ou538[23];hb7b9ee<={ipedc73>>1,ou538[24]};ipdcf76<={jp6e39c>>1,ou538[25]};ale7bb4<=ou538[26];xl3dda5<=ou538[27];jceed2f<=ou538[28];tu7697b<={vk9cdfa>>1,ou538[29]};wlb4bda<={ble6fd2>>1,ou538[30]};zza5ed5<={fp37e97>>1,ou538[31]};je2f6ae<={phbf4be>>1,ou538[32]};rt7b572<={wwfa5f7>>1,ou538[33]};nedab97<={dzd2fb9>>1,ou538[34]};rgd5cbb<={ks97dcf>>1,ou538[35]};qvae5da<={qvbee79>>1,ou538[36]};su72ed4<=ou538[37];mg976a0<=ou538[38];cbbb500<=ou538[39];xwda805<=ou538[40];sud402b<=ou538[41];dba0159<=ou538[42];swacf<={ep296ed>>1,ou538[43]};sw5679<={gb4b76d>>1,ou538[44]};ou2b3c8<={gb5bb6d>>1,ou538[45]};cm59e40<={pfddb6d>>1,ou538[46]};dmcf200<={enedb6e>>1,ou538[47]};ho79003<={ay6db74>>1,ou538[48]};jpc801a<={ui6dba0>>1,ou538[49]};bl400d6<={yk6dd00>>1,ou538[50]};ba3fe7b<=ou538[51];ph35b0<={oh8ff16>>1,ou538[52]};uk1ad87<={pha003e>>1,ou538[53]};wjd6c39<={ks1f7>>1,ou538[54]};gqb61cd<=ou538[55];bnb0e69<=ou538[56];ks8734f<=ou538[57];ir39a79<=ou538[58];vvcd3cd<=ou538[59];rg69e6e<=ou538[60];fn74ff9<=ou538[61];ir268f9<=ou538[62];nrcdcbb<={al51d02>>1,ou538[63]};ld6e5df<=ou538[64];ea72efe<=ou538[65];ec977f0<=ou538[66];qvbbf80<=ou538[67];bydfc04<=ou538[68];zkfe023<=ou538[69];ykf011b<=ou538[70];kf808d8<={dob788c>>1,ou538[71]};hq46c5<={wybc462>>1,ou538[72]};gd2362a<=ou538[73];ng1b154<={ba11884>>1,ou538[74]};pfd8aa2<=ou538[75];dmc5516<=ou538[76];zm2a8b2<={zz6d2d>>1,ou538[77]};sh54593<={ux3696e>>1,ou538[78]};xjfcb91<={ic728cd>>1,ou538[79]};fp164eb<={lfa5ba5>>1,ou538[80]};xyb275e<=ou538[81];fc93af3<=ou538[82];aa9d79b<=ou538[83];rgebcd9<=ou538[84];gb5e6cb<=ou538[85];ldf365c<={gd8a59a>>1,ou538[86]};ph9b2e7<=ou538[87];end973e<=ou538[88];wwcb9f5<=ou538[89];yk5cfa8<={cb9aad1>>1,ou538[90]};yxe7d40<=ou538[91];ec3ea05<=ou538[92];icf5028<=ou538[93];lsa8140<=ou538[94];bl7ef79<=ou538[95];ou501f<=ou538[96];lf280f8<=ou538[97];ld407c7<=ou538[98];nt3e3e<=ou538[99];aa1f1f6<=ou538[100];off8fb0<=ou538[101];rtc7d85<={vk3a1b9>>1,ou538[102]};gq3ec2e<={tud0dcb>>1,ou538[103]};blf6170<={fc86e5a>>1,ou538[104]};ntb0b87<={rv372d2>>1,ou538[105]};ep85c3f<={ieb9697>>1,ou538[106]};ks2e1fd<={mr6fba2>>1,ou538[107]};yx70fe8<={qg7dd15>>1,ou538[108]};mg87f45<={faee8a9>>1,ou538[109]};tw3fa28<={oscb4b8>>1,ou538[110]};alfd142<={pua2a5e>>1,ou538[111]};ene8a14<={th5a5c1>>1,ou538[112]};dz450a4<={ldd2e0e>>1,ou538[113]};bn28526<={wy97077>>1,ou538[114]};ho42937<={dob83b8>>1,ou538[115]};fc149ba<=ou538[116];db8b1f0<={xwd5872>>1,ou538[117]};cb26e94<={vvdd3b0>>1,ou538[118]};nt374a5<=ou538[119];fpba52f<=ou538[120];xjd297f<=ou538[121];rv94bff<=ou538[122];rva5ffe<=ou538[123];xy2fff6<=ou538[124];cz7ffb3<={zm41c9>>1,ou538[125]};suffd9c<={mrc94ac>>1,ou538[126]};rgfece0<={zx4a564>>1,ou538[127]};ldf6702<={by52b27>>1,ou538[128]};mgb3817<={byc0444>>1,ou538[129]};ri9c0b8<={kf2222>>1,ou538[130]};wwe05c3<={hq11115>>1,ou538[131]};qv2e19<={qi888ab>>1,ou538[132]};an170cc<=ou538[133];jeb8664<=ou538[134];yxc3322<=ou538[135];rv19915<={qvab339>>1,ou538[136]};uvcc8ae<={su599cc>>1,ou538[137]};pf64575<={czcce60>>1,ou538[138]};nt22baf<=ou538[139];uk15d7f<=ou538[140];ohaebf8<=ou538[141];ip75fc5<=ou538[142];rvafe2d<=ou538[143];ph974a<=ou538[144];pha0ca2<=ou538[145];vk8c054<=ou538[146];hd2df6b<=ou538[147];dba0014<=ou538[148];yk7daf5<=ou538[149];shed7a9<=ou538[150];alf7aad<=ou538[151];qt5ea6f<=ou538[152];osf537d<=ou538[153];gqa9be8<=ou538[154];rg4df40<=ou538[155];qt6fa03<=ou538[156];ww7d01d<=ou538[157];yxe80e8<=ou538[158];ld40745<=ou538[159];nt3a2e<=ou538[160];cb1d176<=ou538[161];ipe8bb5<=ou538[162];jp45dac<=ou538[163];ym2ed67<=ou538[164];jc76b39<=ou538[165];vxb59ca<=ou538[166];ouace57<=ou538[167];cm672b8<=ou538[168];ir395c0<=ou538[169];pscae04<=ou538[170];vi57022<=ou538[171];vkb8112<=ou538[172];psc0892<=ou538[173];vk4493<=ou538[174];ph2249a<=ou538[175];ir124d6<=ou538[176];uk926b4<={ym3ebaa>>1,ou538[177]};ng935a0<=ou538[178];kf9ad02<=ou538[179];dob127<=ou538[180];sjb40ad<=ou538[181];pha056c<=ou538[182];mt2b67<=ou538[183];sw15b3c<=ou538[184];xyad9e0<=ou538[185];xw6cf02<=ou538[186];ww67812<={db37f53>>1,ou538[187]};qv3c091<={zzbfa9e>>1,ou538[188]};aye048c<={wjfd4f6>>1,ou538[189]};wl2461<={wwea7b4>>1,ou538[190]};an1230d<={sja45eb>>1,ou538[191]};uk1f972<={lf22f5d>>1,ou538[192]};tw8c366<={gd17aef>>1,ou538[193]};dz61b32<={jebd77d>>1,ou538[194]};qvd996<={xwebbea>>1,ou538[195]};ho6ccb5<={rt5af46>>1,ou538[196]};
dm66b1a<=ou538[197];lf32d52<=ou538[198];qtd3650<=ou538[199];jrb54b3<=ou538[200];tw358d3<=ou538[201];ho52cf6<=ou538[202];ri967b3<=ou538[203];oub3d9a<=ou538[204];jr9ecd0<=ou538[205];nrf6687<=ou538[206];cob343f<=ou538[207];ux9a1f9<=ou538[208];rgd0fcc<=ou538[209];ou87e62<=ou538[210];ymac69b<=ou538[211];jc634d9<=ou538[212];ks1a6ca<=ou538[213];ay620fc<={zzaa732>>1,ou538[214]};qi107e0<={fc9ccb1>>1,ou538[215]};ls83f01<=ou538[216];ks1f80a<=ou538[217];vvfc051<=ou538[218];ose028e<=ou538[219];do1471<=ou538[220];yma38a<=ou538[221];uv51c51<=ou538[222];ph8e28c<={rv9484a>>1,ou538[223]};bl71467<=ou538[224];ir8a33e<=ou538[225];wj519f5<=ou538[226];do8cfac<={ir23bee>>1,ou538[227]};go67d63<={wyac25d>>1,ou538[228]};qi3eb19<={vv612e9>>1,ou538[229]};ayf58c8<={jr974f>>1,ou538[230]};coac641<={al4ba7e>>1,ou538[231]};ps63209<=ou538[232];jr1904a<=ou538[233];nrc8257<=ou538[234];gb412be<=ou538[235];zz95f4<=ou538[236];zx4afa6<=ou538[237];xw57d36<=ou538[238];qvbe9b3<=ou538[239];byf4d9c<=ou538[240];ksa6ce3<=ou538[241];yz36719<=ou538[242];mgb38cd<=ou538[243];ri9c668<={of5e2fe>>1,ou538[244]};zxe3343<=ou538[245];lf19a1e<=ou538[246];zxcd0f6<=ou538[247];ww687b6<=ou538[248];su43db1<=ou538[249];pu1ed88<=ou538[250];jpf6c43<=ou538[251];swb621e<=ou538[252];sjb10f1<=ou538[253];mg8878c<=ou538[254];ww43c60<=ou538[255];vk1e300<=ou538[256];zkf1802<=ou538[257];vk8c013<=ou538[258];sh6009a<=ou538[259];ie4d5<=ou538[260];oh26a8<={ba9c4de>>1,ou538[261]};ph13545<={ale26f3>>1,ou538[262]};an9aa2e<={tj1379c>>1,ou538[263]};rgd5175<={hd9bce6>>1,ou538[264]};twa8bab<={uide737>>1,ou538[265]};th45d5a<={thf39b8>>1,ou538[266]};aa2ead7<={vk9cdc6>>1,ou538[267]};al756b9<={ble6e32>>1,ou538[268]};anab5cc<=ou538[269];xj5ae64<=ou538[270];vvd7327<=ou538[271];ukb993e<=ou538[272];mrcc9f1<=ou538[273];dz64f8d<=ou538[274];rv27c6e<=ou538[275];lqdf42e<=ou538[276];hof1bb9<=ou538[277];zk5d2b4<=ou538[278];hq30192<={ep1d7a2>>1,ou538[279]};vk2a301<=ou538[280];ps66032<=ou538[281];su5ca8c<=ou538[282];ep80c92<={xwebd15>>1,ou538[283]};ie88c51<=ou538[284];ui46289<=ou538[285];ie31449<=ou538[286];mt8a248<=ou538[287];cz51245<=ou538[288];do8922d<=ou538[289];cm4916a<=ou538[290];vi48b50<=ou538[291];jr2d41f<=ou538[292];ofd9858<=ou538[293];vk1566<=ou538[294];mg1ff3a<={mg92399>>1,ou538[295]};lq4db4f<=ou538[296];su6da7b<={ep3c39a>>1,ou538[297]};ic6d3d8<=ou538[298];lq69ec1<=ou538[299];hb4f60a<=ou538[300];end
always@* begin swa7[2047]<=ddr_rst;swa7[2046]<=dqsbuf_pause;swa7[2044]<=dqsdel[0];swa7[2040]<=update_done;swa7[2033]<=dfi_address[0];swa7[2022]<=tw9cbd1;swa7[2019]<=dfi_bank[0];swa7[1996]<=ice5e8a;swa7[1991]<=dfi_cs_n[0];swa7[1977]<=gbfda13;swa7[1970]<=vk890a5;swa7[1963]<=dzf3264;swa7[1961]<=sjab46b;swa7[1956]<=fafe713;swa7[1944]<=zzaa732[0];swa7[1940]<=qvab339[0];swa7[1934]<=dfi_ras_n;swa7[1929]<=enedb6e[0];swa7[1914]<=ba966ab;swa7[1906]<=ened09d;swa7[1898]<=dfi_wrdata_mask[0];swa7[1893]<=pub22f1;swa7[1892]<=rg4852a;swa7[1878]<=xwd5872[0];swa7[1877]<=xwebbea[0];swa7[1874]<=ld5a35c;swa7[1865]<=xjf389b;swa7[1847]<=sjb18a9;swa7[1841]<=jr811f5;swa7[1840]<=fc9ccb1[0];swa7[1833]<=su599cc[0];swa7[1832]<=ym9da5f;swa7[1821]<=dfi_cas_n;swa7[1813]<=ri8c422;swa7[1810]<=ay6db74[0];swa7[1782]<=rg4d448;swa7[1781]<=qib355a;swa7[1775]<=ec2edfe;swa7[1765]<=ea684ed;swa7[1749]<=dfi_init_start;swa7[1738]<=vx9178b;swa7[1736]<=lq42952;swa7[1728]<=zxddc7a;swa7[1708]<=vvdd3b0[0];swa7[1707]<=lq4d0a5[0];swa7[1706]<=rt5af46[0];swa7[1701]<=coac9dc;swa7[1683]<=ba9c4de[0];swa7[1666]<=tu739bf;swa7[1662]<=kd75b06;swa7[1647]<=ri8c54d;swa7[1644]<=rib8cbf;swa7[1634]<=cal_bc4;swa7[1632]<=rv32c56;swa7[1630]<=uvcca5b;swa7[1624]<=zm41c9[0];swa7[1621]<=vif17f4;swa7[1618]<=czcce60[0];swa7[1617]<=rt740a6;swa7[1616]<=yxed2f8;swa7[1607]<=hq2a497;swa7[1603]<=rg66fea;swa7[1596]<=hq11115[0];swa7[1595]<=dfi_we_n;swa7[1582]<=bl4fd1e;swa7[1580]<=wlaea81;swa7[1579]<=kq62112;swa7[1572]<=ui6dba0[0];swa7[1566]<=oscb4b8[0];swa7[1560]<=fc86e5a[0];swa7[1544]<=go56ca4;swa7[1543]<=oh8f597;swa7[1516]<=mr6a242;swa7[1514]<=cb9aad1[0];swa7[1513]<=xwfbf9c;swa7[1506]<=gb5bb6d[0];swa7[1502]<=gd8a59a[0];swa7[1497]<=ldf6c8b;swa7[1485]<=su7821c;swa7[1482]<=fa42769;swa7[1467]<=nr74bb7;swa7[1450]<=mem_rst_n;swa7[1440]<=rt71ce6;swa7[1430]<=oh39295;swa7[1429]<=bn8bc5f;swa7[1428]<=al51d02[0];swa7[1425]<=ls14a92;swa7[1424]<=yzd9bf;swa7[1423]<=byc0444[0];swa7[1419]<=pio_read;swa7[1414]<=vk3a1b9[0];swa7[1409]<=faee3d6;swa7[1402]<=ls93efe;swa7[1395]<=tw35504;swa7[1390]<=db2dd2e;swa7[1384]<=ipedc73[0];swa7[1381]<=tw20e4a;swa7[1374]<=fpba4fb;swa7[1372]<=hbe91fa;swa7[1370]<=hd8ea69;swa7[1369]<=fne9d87;swa7[1367]<=nt16e93;swa7[1366]<=fn6e478[0];swa7[1365]<=psf45ba;swa7[1364]<=pha54e5;swa7[1363]<=do2f450;swa7[1356]<=ls2a72f;swa7[1355]<=gd9030a;swa7[1331]<=enc668e;swa7[1324]<=do30587;swa7[1322]<=qt60a2c;swa7[1318]<=ale26f3[0];swa7[1308]<=qia6de2;swa7[1294]<=mg92399[0];swa7[1284]<=vk9cdfa[0];swa7[1276]<=fcad835;swa7[1246]<=kq62a6a;swa7[1240]<=ofc65fb;swa7[1231]<=wl9a3ad;swa7[1229]<=vk9cdc6[0];swa7[1221]<=dm47d75;swa7[1217]<=fc962b6;swa7[1212]<=of652dd;swa7[1202]<=sh60a8e;swa7[1201]<=mrc94ac[0];swa7[1200]<=xl161d0;swa7[1195]<=hbcd28b;swa7[1194]<=ddr_wr_lat_odd;swa7[1189]<=yk67305;swa7[1187]<=hda0536;swa7[1185]<=uk77c;swa7[1177]<=hd9bce6[0];swa7[1174]<=pub8305;swa7[1170]<=ks1f7[0];swa7[1166]<=zk524ba;swa7[1159]<=db37f53[0];swa7[1145]<=qi888ab[0];swa7[1142]<=dfi_cke[0];swa7[1139]<=ym97481;swa7[1137]<=dob788c[0];swa7[1125]<=czf73cc;swa7[1117]<=pf7e8f6;swa7[1113]<=ec8d0c4;swa7[1110]<=zz6d2d[0];swa7[1097]<=yk6dd00[0];swa7[1085]<=pua2a5e[0];swa7[1082]<=wwea7b4[0];swa7[1080]<=ep3c39a[0];swa7[1072]<=rv372d2[0];swa7[1068]<=ir23bee[0];swa7[1041]<=fp37e97[0];swa7[1040]<=ieb6521;swa7[1039]<=jr8bcfd;swa7[1023]<=clocking_good;swa7[1011]<=ea5397a;swa7[988]<=fadfb42;swa7[985]<=of51214;swa7[981]<=dob83b8[0];swa7[980]<=hod568d;swa7[978]<=fadfce2;swa7[970]<=ks15667;swa7[964]<=pfddb6d[0];swa7[957]<=fa52cd5;swa7[949]<=dfi_wrdata_en;swa7[946]<=ieb645e;swa7[938]<=jebd77d[0];swa7[923]<=swb6315;swa7[920]<=wl9023e;swa7[916]<=vx13b4b;swa7[906]<=ba11884[0];swa7[891]<=gqa9a89;swa7[887]<=fpa5dbf;swa7[864]<=jcfbb8f;swa7[853]<=vv4ae6d[0];swa7[833]<=lf8e737;swa7[831]<=hd8eb60;swa7[822]<=fp37197;swa7[815]<=vi7994b;swa7[812]<=uk3e8f8;swa7[810]<=of5e2fe[0];swa7[808]<=lf8e814;swa7[803]<=vxa5492;swa7[801]<=tu6cdfd;swa7[798]<=kf2222[0];swa7[791]<=hbe9fa3;swa7[790]<=mef5d50;swa7[783]<=faee8a9[0];swa7[780]<=tud0dcb[0];swa7[772]<=kf8ad94;swa7[771]<=thfc182;swa7[756]<=yz9f7f3;swa7[753]<=gb4b76d[0];swa7[748]<=zm1ed91;swa7[742]<=gbe75b1;swa7[733]<=vv6e976;swa7[720]<=jp6e39c[0];swa7[715]<=oh7252;swa7[714]<=ks554c;swa7[712]<=zz81b37;swa7[711]<=by52b27[0];swa7[709]<=al4ba7e[0];swa7[707]<=co87437;swa7[701]<=xjd27df;swa7[697]<=yzb12f4;swa7[695]<=lfa5ba5[0];swa7[692]<=zke4f2b;swa7[690]<=kd4ec3e;swa7[687]<=ngb749f;swa7[686]<=wl_done;swa7[685]<=ic723c6[0];swa7[683]<=pua2dd2;swa7[682]<=vife8b7;swa7[681]<=jp7e9d8;swa7[678]<=fca7633;swa7[665]<=pfd8cd1;swa7[662]<=db60b0;swa7[661]<=yxcc145;swa7[654]<=ba14dbc;swa7[647]<=ng99011;swa7[615]<=mt33475;swa7[614]<=thf39b8[0];swa7[601]<=vxc151;swa7[600]<=wy82c3a;swa7[597]<=ou5164;swa7[588]<=tj1379c[0];swa7[587]<=ipf7060;swa7[585]<=pha003e[0];swa7[569]<=ie92e90;swa7[568]<=ux36f11;swa7[562]<=qvbee79[0];swa7[541]<=wjfd4f6[0];swa7[540]<=xw47873;swa7[534]<=rv8477d;swa7[520]<=ble6fd2[0];swa7[505]<=jc6c1aa;swa7[494]<=xwebd15[0];swa7[490]<=wy97077[0];swa7[485]<=ph22acc;swa7[474]<=dfi_wrdata[0];swa7[469]<=gd17aef[0];swa7[460]<=vvd2047;swa7[455]<=the95bf;swa7[453]<=yxe2310;swa7[445]<=wy15351;swa7[432]<=ph32fdd;swa7[415]<=god1d6c;swa7[411]<=ble6e32[0];swa7[407]<=vicf329;swa7[395]<=ym3ebaa[0];swa7[391]<=qg7dd15[0];swa7[386]<=yzb15b2;swa7[376]<=ep296ed[0];swa7[374]<=uka3db2;swa7[357]<=bna046b;swa7[356]<=ld50366;swa7[355]<=zx4a564[0];swa7[354]<=jr974f[0];swa7[353]<=ntb0e86;swa7[347]<=ic728cd[0];swa7[343]<=init_start;swa7[341]<=hb5fd16;swa7[330]<=cb39828;swa7[327]<=an29b7;swa7[323]<=co8dea7;swa7[307]<=uide737[0];swa7[300]<=suc182a;swa7[293]<=cofb8;swa7[292]<=oh8ff16[0];swa7[284]<=aa925d2;swa7[281]<=ks97dcf[0];swa7[270]<=zzbfa9e[0];swa7[267]<=ip708ef;swa7[247]<=je3ab0e;swa7[245]<=ldd2e0e[0];swa7[242]<=ip44559;swa7[
237]<=dfi_odt[0];swa7[234]<=lf22f5d[0];swa7[230]<=vxba408;swa7[227]<=qgd44dd;swa7[226]<=wybc462[0];swa7[203]<=swb9e65;swa7[195]<=mr6fba2[0];swa7[187]<=tuf47b6;swa7[178]<=fpaa06c;swa7[177]<=vv612e9[0];swa7[173]<=ux3696e[0];swa7[146]<=ls11afd;swa7[140]<=dzd2fb9[0];swa7[133]<=qva4256;swa7[123]<=xy83af4;swa7[122]<=th5a5c1[0];swa7[117]<=sja45eb[0];swa7[113]<=an9a89b;swa7[97]<=ieb9697[0];swa7[88]<=wyac25d[0];swa7[70]<=wwfa5f7[0];swa7[66]<=rv9484a[0];swa7[61]<=dz61c91;swa7[35]<=phbf4be[0];swa7[33]<=pub2909;swa7[30]<=ep1d7a2[0];end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule




`ifdef ddr3_ip_inst_x4

`define ddr3_ip_inst_GDATA_WIDTH 16

`else

`define ddr3_ip_inst_GDATA_WIDTH 32 

`endif
`timescale 1 ns / 100 ps
module mg2ef79_ddr3_ip_inst (
                 sclk,
                 rst_n,
                 cal_bc4,
                 ir18511,
                 pu1446e,
                 gd8a59a,
                 bld239c,
                 zm9cdba,
                 xlba5e3,
                 ble3fc8
                 );
input                            rst_n;
input                            sclk;
input                            cal_bc4;
input                            ir18511;
input                            pu1446e;
input  [  `ddr3_ip_inst_GDATA_WIDTH    -1:0]  gd8a59a;
output [ (`ddr3_ip_inst_GDATA_WIDTH/4) -1:0]  bld239c;
output [ (`ddr3_ip_inst_GDATA_WIDTH/4) -1:0]  zm9cdba;
output [ (`ddr3_ip_inst_GDATA_WIDTH/4) -1:0]  xlba5e3;
output [ (`ddr3_ip_inst_GDATA_WIDTH/4) -1:0]  ble3fc8;
reg                              yke0340;
reg    [  `ddr3_ip_inst_GDATA_WIDTH    -1:0]  fc1a01;
reg                              uxd00b;
wire   [ (`ddr3_ip_inst_GDATA_WIDTH/4) -1:0]  bld239c;
wire   [ (`ddr3_ip_inst_GDATA_WIDTH/4) -1:0]  zm9cdba;
wire   [ (`ddr3_ip_inst_GDATA_WIDTH/4) -1:0]  xlba5e3;
wire   [ (`ddr3_ip_inst_GDATA_WIDTH/4) -1:0]  ble3fc8;
reg    [  `ddr3_ip_inst_GDATA_WIDTH    -1:0]  yk5c392 ;
reg                              bye1c91;
reg                              zme48a;
reg                              ay72453;

`ifdef ddr3_ip_inst_x4

`else

`endif
reg ph2249a;
reg bn914c8;
reg wl8a647;
reg [`ddr3_ip_inst_GDATA_WIDTH - 1 : 0] ldf365c;
reg zm991e8;
reg [`ddr3_ip_inst_GDATA_WIDTH - 1 : 0] ldc8f43;
reg tu47a1f;
reg [`ddr3_ip_inst_GDATA_WIDTH - 1 : 0] zz3d0fa;
reg wje87d6;
reg su43eb5;
reg ou1f5a8;
reg [2047:0] swa7;
wire [10:0] ou538;

`ifdef ddr3_ip_inst_x4

`else

`endif

localparam kf29c0 = 11,do14e04 = 32'hfdffe42b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`ifdef ddr3_ip_inst_x4


`else


`endif

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      fc1a01    <= {`ddr3_ip_inst_GDATA_WIDTH{1'b0}};      yke0340    <= 1'b0;      bye1c91            <= 1'b0;      zme48a            <= 1'b0;      ay72453            <= 1'b0;   end   else begin      fc1a01    <= ldf365c;      yke0340    <= wl8a647;      bye1c91            <= ph2249a;      zme48a            <= wje87d6;      ay72453            <= su43eb5;   end
end



always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      uxd00b    <= 1'b0;   end
   else if (!bn914c8 || (!wl8a647 && zm991e8 && !tu47a1f && !ou1f5a8) ) begin      uxd00b    <= 1'b0;   end   else if (bn914c8 && !wl8a647) begin      uxd00b    <= 1'b1;   end   else if (ou1f5a8) begin      uxd00b    <= 1'b0;   end
end


always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      yk5c392    <= {`ddr3_ip_inst_GDATA_WIDTH{1'b0}};   end   else begin      yk5c392    <= tu47a1f ? ldf365c : ldc8f43;   end
end






`ifdef ddr3_ip_inst_x4


assign bld239c = {zz3d0fa[12],zz3d0fa[ 8],zz3d0fa[4],zz3d0fa[0]};  
assign zm9cdba = {zz3d0fa[13],zz3d0fa[ 9],zz3d0fa[5],zz3d0fa[1]};  
assign xlba5e3 = {zz3d0fa[14],zz3d0fa[10],zz3d0fa[6],zz3d0fa[2]};  
assign ble3fc8 = {zz3d0fa[15],zz3d0fa[11],zz3d0fa[7],zz3d0fa[3]};  

`else


assign bld239c = {zz3d0fa[28],zz3d0fa[24],zz3d0fa[20],zz3d0fa[16],zz3d0fa[12],zz3d0fa[ 8],zz3d0fa[4],zz3d0fa[0]};  
assign zm9cdba = {zz3d0fa[29],zz3d0fa[25],zz3d0fa[21],zz3d0fa[17],zz3d0fa[13],zz3d0fa[ 9],zz3d0fa[5],zz3d0fa[1]};  
assign xlba5e3 = {zz3d0fa[30],zz3d0fa[26],zz3d0fa[22],zz3d0fa[18],zz3d0fa[14],zz3d0fa[10],zz3d0fa[6],zz3d0fa[2]};  
assign ble3fc8 = {zz3d0fa[31],zz3d0fa[27],zz3d0fa[23],zz3d0fa[19],zz3d0fa[15],zz3d0fa[11],zz3d0fa[7],zz3d0fa[3]};  


`endif


always@* begin ph2249a<=ou538[0];bn914c8<=ou538[1];wl8a647<=ou538[2];ldf365c<={gd8a59a>>1,ou538[3]};zm991e8<=ou538[4];ldc8f43<={fc1a01>>1,ou538[5]};tu47a1f<=ou538[6];zz3d0fa<={yk5c392>>1,ou538[7]};wje87d6<=ou538[8];su43eb5<=ou538[9];ou1f5a8<=ou538[10];end
always@* begin swa7[2047]<=ir18511;swa7[2046]<=pu1446e;swa7[2044]<=gd8a59a[0];swa7[2041]<=yke0340;swa7[2035]<=fc1a01[0];swa7[2022]<=uxd00b;swa7[1996]<=yk5c392[0];swa7[1945]<=bye1c91;swa7[1842]<=zme48a;swa7[1637]<=ay72453;swa7[1023]<=cal_bc4;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule








`timescale 1 ns / 100 ps
module sjd677_ddr3_ip_inst (
input  wire                      rst_n,
input  wire                      sclk,
input  wire                      jp7e9d8,
input  wire                      end6a5a,
input  wire                      ls1ca0,
input  wire [`ddr3_ip_inst_DQS_WIDTH-1:0]     rt5af46,
input  wire [`ddr3_ip_inst_DQS_WIDTH-1:0]     zza06c7,

output reg                       pha54e5,
output reg                       do2f450,
output reg                       ls2a72f,
output reg                       ea5397a,
output reg                       tw9cbd1,
output reg                       ice5e8a,
output wire [4 * `ddr3_ip_inst_DQS_WIDTH-1:0] zzaa732 ,
output wire [3 * `ddr3_ip_inst_DQS_WIDTH-1:0] fc9ccb1  ,
output wire [4 * `ddr3_ip_inst_DQS_WIDTH-1:0] rt_dqs_read_rvl ,
output wire [3 * `ddr3_ip_inst_DQS_WIDTH-1:0] rt_rdclksel_rvl ,
output reg                       hd37143,
output reg                       rt_err,
output reg                       rv32c56,
output reg                       fc962b6,
output reg                       yzb15b2                     );

`define ddr3_ip_inst_RT_ACT_WAIT 6'd5 

`define ddr3_ip_inst_RT_WR_WAIT 6'd15 

`define ddr3_ip_inst_RT_RD_WAIT 6'h15 

`define ddr3_ip_inst_RT_RDCKSEL_CNT 5'd15    

`ifdef ddr3_ip_inst_SIM

`define ddr3_ip_inst_RT_JF_RTRY_CNT 9'd10   // Jitter-filter retry count

`else

`define ddr3_ip_inst_RT_JF_RTRY_CNT 9'd400   // Jitter-filter retry count

`endif

`define ddr3_ip_inst_PAUSE_ST_CNT 4'h1 

`define ddr3_ip_inst_LD_CLKSEL_CNT 4'h3 

`define ddr3_ip_inst_PAUSE_END_CNT 4'h5 

`define ddr3_ip_inst_RT_IDLE 13'b0000000000001

`define ddr3_ip_inst_RT_ACT 13'b0000000000010

`define ddr3_ip_inst_RT_ACT_WT 13'b0000000000100

`define ddr3_ip_inst_RT_WR 13'b0000000001000

`define ddr3_ip_inst_RT_WR_WT 13'b0000000010000

`define ddr3_ip_inst_RT_RD 13'b0000000100000

`define ddr3_ip_inst_RT_RD_WT 13'b0000001000000

`define ddr3_ip_inst_RT_BURSTDT 13'b0000010000000

`define ddr3_ip_inst_RT_ADJ_CLKSEL 13'b0000100000000

`define ddr3_ip_inst_RT_CHK_RDCNT 13'b0001000000000

`define ddr3_ip_inst_RT_WAIT 13'b0010000000000

`define ddr3_ip_inst_RT_END 13'b0100000000000

`define ddr3_ip_inst_RT_END1 13'b1000000000000
wire  [3 * `ddr3_ip_inst_DQS_WIDTH-1:0] hd3b92   ;
wire  [3 * `ddr3_ip_inst_DQS_WIDTH-1:0] gd1dc96  ;
reg   [5:0]                jcee4b4;
reg  [12:0]                os725a2;
reg  [4:0]                 ks92d11;
reg  [4:0]                 pu96889 ;
reg  [8:0]                 epb444b;
reg                        fca225c;
reg                        fc112e2;
wire [1:0]                 ba89713 ;
wire [1:0]                 of4b89a ;
reg  [2:0]                 me5c4d4;
wire                       kde26a1;
reg                        vx1350c;
reg                        wl9a866  ;
reg                        kqd4335 ;
reg                        qva19a9;
reg                        rvcd4c;
reg                        ps66a67;
reg [1:0]                  ls3533b;
reg   [`ddr3_ip_inst_DQS_WIDTH-1:0]     iea99da;
reg   [`ddr3_ip_inst_DQS_WIDTH-1:0]     go4ced0;
reg   [`ddr3_ip_inst_DQS_WIDTH-1:0]     ea67681;
reg   [`ddr3_ip_inst_DQS_WIDTH-1:0]     wy3b408;
reg   [`ddr3_ip_inst_DQS_WIDTH-1:0]     byda041;
reg   [`ddr3_ip_inst_DQS_WIDTH-1:0]     vid020a;
wire                       bn81053;

`ifdef ddr3_ip_inst_RDIMM

`else

`endif
wire  kf829e;
genvar ip414f4;
reg lf32d52;
reg ana4995;
reg ph9e909;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] ho6ccb5;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] ira427b;
reg [3 * `ddr3_ip_inst_DQS_WIDTH - 1 : 0] gq213dd;
reg [5 : 0] tj9ee9;
reg [12 : 0] hb4f74f;
reg [4 : 0] pf7ba7f;
reg [4 : 0] vvdd3fe;
reg [8 : 0] fne9ff7;
reg ld4ffbe;
reg qt7fdf6;
reg [1 : 0] byfefb4;
reg [1 : 0] mrf7da2;
reg [2 : 0] sjbed14;
reg thf68a4;
reg wlb4526;
reg twa2934;
reg ri149a3;
reg qva4d1a;
reg qv268d4;
reg sw346a5;
reg [1 : 0] mga3528;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] ie1a940;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] cmd4a01;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] bna5008;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] fp28047;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] pf4023f;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] ri11fe;
reg ir8ff2;
reg vi47f95;
reg [2047:0] swa7;
wire [31:0] ou538;

`define ddr3_ip_inst_RT_ACT_WAIT 6'd5 

`define ddr3_ip_inst_RT_WR_WAIT 6'd15 

`define ddr3_ip_inst_RT_RD_WAIT 6'h15 

`define ddr3_ip_inst_RT_RDCKSEL_CNT 5'd15    

`ifdef ddr3_ip_inst_SIM

`define ddr3_ip_inst_RT_JF_RTRY_CNT 9'd10   // Jitter-filter retry count

`else

`define ddr3_ip_inst_RT_JF_RTRY_CNT 9'd400   // Jitter-filter retry count

`endif

`define ddr3_ip_inst_PAUSE_ST_CNT 4'h1 

`define ddr3_ip_inst_LD_CLKSEL_CNT 4'h3 

`define ddr3_ip_inst_PAUSE_END_CNT 4'h5 

`define ddr3_ip_inst_RT_IDLE 13'b0000000000001

`define ddr3_ip_inst_RT_ACT 13'b0000000000010

`define ddr3_ip_inst_RT_ACT_WT 13'b0000000000100

`define ddr3_ip_inst_RT_WR 13'b0000000001000

`define ddr3_ip_inst_RT_WR_WT 13'b0000000010000

`define ddr3_ip_inst_RT_RD 13'b0000000100000

`define ddr3_ip_inst_RT_RD_WT 13'b0000001000000

`define ddr3_ip_inst_RT_BURSTDT 13'b0000010000000

`define ddr3_ip_inst_RT_ADJ_CLKSEL 13'b0000100000000

`define ddr3_ip_inst_RT_CHK_RDCNT 13'b0001000000000

`define ddr3_ip_inst_RT_WAIT 13'b0010000000000

`define ddr3_ip_inst_RT_END 13'b0100000000000

`define ddr3_ip_inst_RT_END1 13'b1000000000000

`ifdef ddr3_ip_inst_RDIMM

`else

`endif


localparam kf29c0 = 32,do14e04 = 32'hfdffe0cb;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`define ddr3_ip_inst_RT_ACT_WAIT 6'd5 


`define ddr3_ip_inst_RT_WR_WAIT 6'd15 


`define ddr3_ip_inst_RT_RD_WAIT 6'h15 


`define ddr3_ip_inst_RT_RDCKSEL_CNT 5'd15    


`ifdef ddr3_ip_inst_SIM


`define ddr3_ip_inst_RT_JF_RTRY_CNT 9'd10   // Jitter-filter retry count


`else


`define ddr3_ip_inst_RT_JF_RTRY_CNT 9'd400   // Jitter-filter retry count


`endif


`define ddr3_ip_inst_PAUSE_ST_CNT 4'h1 


`define ddr3_ip_inst_LD_CLKSEL_CNT 4'h3 


`define ddr3_ip_inst_PAUSE_END_CNT 4'h5 


`define ddr3_ip_inst_RT_IDLE 13'b0000000000001


`define ddr3_ip_inst_RT_ACT 13'b0000000000010


`define ddr3_ip_inst_RT_ACT_WT 13'b0000000000100


`define ddr3_ip_inst_RT_WR 13'b0000000001000


`define ddr3_ip_inst_RT_WR_WT 13'b0000000010000


`define ddr3_ip_inst_RT_RD 13'b0000000100000


`define ddr3_ip_inst_RT_RD_WT 13'b0000001000000


`define ddr3_ip_inst_RT_BURSTDT 13'b0000010000000


`define ddr3_ip_inst_RT_ADJ_CLKSEL 13'b0000100000000


`define ddr3_ip_inst_RT_CHK_RDCNT 13'b0001000000000


`define ddr3_ip_inst_RT_WAIT 13'b0010000000000


`define ddr3_ip_inst_RT_END 13'b0100000000000


`define ddr3_ip_inst_RT_END1 13'b1000000000000


`ifdef ddr3_ip_inst_RDIMM


`else


`endif


`define ddr3_ip_inst_RT_ACT_WAIT 6'd5 



`define ddr3_ip_inst_RT_WR_WAIT 6'd15 



`define ddr3_ip_inst_RT_RD_WAIT 6'h15 




`define ddr3_ip_inst_RT_RDCKSEL_CNT 5'd15    



`ifdef ddr3_ip_inst_SIM



`define ddr3_ip_inst_RT_JF_RTRY_CNT 9'd10   // Jitter-filter retry count



`else



`define ddr3_ip_inst_RT_JF_RTRY_CNT 9'd400   // Jitter-filter retry count



`endif




`define ddr3_ip_inst_PAUSE_ST_CNT 4'h1 



`define ddr3_ip_inst_LD_CLKSEL_CNT 4'h3 



`define ddr3_ip_inst_PAUSE_END_CNT 4'h5 




`define ddr3_ip_inst_RT_IDLE 13'b0000000000001



`define ddr3_ip_inst_RT_ACT 13'b0000000000010



`define ddr3_ip_inst_RT_ACT_WT 13'b0000000000100



`define ddr3_ip_inst_RT_WR 13'b0000000001000



`define ddr3_ip_inst_RT_WR_WT 13'b0000000010000



`define ddr3_ip_inst_RT_RD 13'b0000000100000



`define ddr3_ip_inst_RT_RD_WT 13'b0000001000000



`define ddr3_ip_inst_RT_BURSTDT 13'b0000010000000



`define ddr3_ip_inst_RT_ADJ_CLKSEL 13'b0000100000000



`define ddr3_ip_inst_RT_CHK_RDCNT 13'b0001000000000



`define ddr3_ip_inst_RT_WAIT 13'b0010000000000



`define ddr3_ip_inst_RT_END 13'b0100000000000



`define ddr3_ip_inst_RT_END1 13'b1000000000000







assign kde26a1 = (sw346a5 && !pha54e5) ? ana4995 : (ana4995 | wlb4526);
always @(posedge sclk or negedge rst_n) begin   if (!rst_n) begin      vx1350c <= 1'b0;      wl9a866  <= 1'b0;      kqd4335  <= 1'b0;      qva19a9  <= 1'b0;      rvcd4c  <= 1'b0;      ps66a67 <= 1'b0;      ls3533b <= 2'b00;      iea99da <= 'd0;      go4ced0 <= 'd0;      pu96889 <= 'd0;   end   else begin      vx1350c <= ana4995;      wl9a866  <= thf68a4;      kqd4335  <= thf68a4;      qva19a9  <= twa2934;      rvcd4c  <= qva4d1a;      ps66a67 <= ph9e909;      ls3533b <= byfefb4;      iea99da <= ho6ccb5;
      go4ced0 <= ho6ccb5;      pu96889 <= pf7ba7f;   end
end


`ifdef ddr3_ip_inst_RDIMM


assign ba89713 = {thf68a4,thf68a4};

`else



assign ba89713 = {thf68a4,thf68a4};   
assign of4b89a = {ri149a3,ri149a3};   


`endif





assign fc9ccb1     = hd3b92;
assign rt_rdclksel_rvl = gq213dd;
always @(posedge sclk or negedge rst_n) begin   if (!rst_n) begin      os725a2     <= `ddr3_ip_inst_RT_IDLE;      pha54e5        <= 1'b0;      do2f450       <= 1'b0;      ls2a72f        <= 1'b0;      ea5397a        <= 1'b0;      tw9cbd1     <= 1'b0;      ice5e8a    <= 1'b0;      ks92d11 <= 5'h0;      fca225c   <= 1'b1;      hd37143   <= 1'b0;      rv32c56     <= 1'b0;      fc962b6    <= 1'b0;      yzb15b2      <= 1'b0;      rt_err       <= 1'b0;      me5c4d4 <= 3'b0;      fc112e2  <= 1'b0;      epb444b <= 'd0;   end   else begin      case (hb4f74f)       `ddr3_ip_inst_RT_IDLE     : begin                        do2f450     <= 1'b0;                      ls2a72f      <= 1'b0;                      ea5397a      <= 1'b0;                      tw9cbd1   <= 1'b0;                      ice5e8a  <= 1'b0;                      fca225c <= 1'b1;                      fc112e2<= 1'b0;                      hd37143 <= 1'b0;                      rv32c56   <= 1'b0;                      fc962b6  <= 1'b0;                      if(lf32d52) begin                         ks92d11  <= 5'h0;                         epb444b <= 'd0;                         fca225c   <= 1'b1;                         yzb15b2      <= 1'b0;                         rt_err       <= 1'b0;                         pha54e5        <= 1'b1;                         me5c4d4 <= 3'b0;                         os725a2     <= `ddr3_ip_inst_RT_ACT;                      end                      else                         os725a2 <= `ddr3_ip_inst_RT_IDLE;                      end       `ddr3_ip_inst_RT_ACT      : begin                        fca225c <= 1'b0;                      tw9cbd1   <= 1'b0;                      if(tj9ee9 == 'd5) begin                         fca225c <= 1'b1;                         do2f450     <= 1'b1;                         os725a2 <= `ddr3_ip_inst_RT_ACT_WT;                      end                      else begin                         os725a2     <= `ddr3_ip_inst_RT_ACT;                      end                      end       `ddr3_ip_inst_RT_ACT_WT   : begin                        fca225c <= 1'b0;                      do2f450     <= 1'b0;                      if(tj9ee9 == `ddr3_ip_inst_RT_ACT_WAIT) begin                         fca225c <= 1'b1;                         os725a2   <= `ddr3_ip_inst_RT_WR;                      end                      else begin                         os725a2 <= `ddr3_ip_inst_RT_ACT_WT;                      end                      end       `ddr3_ip_inst_RT_WR       : begin                        tw9cbd1   <= 1'b0;                      fca225c <= 1'b0;                      ls2a72f      <= 1'b1;                      os725a2   <= `ddr3_ip_inst_RT_WR_WT;                      end       `ddr3_ip_inst_RT_WR_WT    : begin                        ls2a72f   <= 1'b0;                      if(tj9ee9 == `ddr3_ip_inst_RT_WR_WAIT) begin                         fca225c <= 1'b1;                         os725a2   <= `ddr3_ip_inst_RT_RD;                      end                      else begin                         os725a2 <= `ddr3_ip_inst_RT_WR_WT;                      end                      end       `ddr3_ip_inst_RT_RD     :   begin                        fca225c <= 1'b0;                      ice5e8a  <= 1'b0;                      ea5397a      <= 1'b1;                      os725a2   <= `ddr3_ip_inst_RT_RD_WT;                      end              `ddr3_ip_inst_RT_RD_WT  :   begin                        ea5397a   <= 1'b0;
                      if (cmd4a01 == {`ddr3_ip_inst_DQS_WIDTH{1'b0}} ) begin                         fca225c <= 1'b0;                         os725a2   <= `ddr3_ip_inst_RT_BURSTDT;                      end                      else begin                         os725a2 <= `ddr3_ip_inst_RT_RD_WT;                      end                      end       `ddr3_ip_inst_RT_BURSTDT :  begin                        if (tj9ee9 == `ddr3_ip_inst_RT_RD_WAIT ) begin                         fca225c <= 1'b1;                         os725a2   <= `ddr3_ip_inst_RT_ADJ_CLKSEL;                      end                      else begin                         os725a2 <= `ddr3_ip_inst_RT_BURSTDT;                      end                      end       `ddr3_ip_inst_RT_ADJ_CLKSEL: begin                        fca225c <= 1'b0;                      if (ir8ff2) begin                         fca225c <= 1'b1;                         ice5e8a  <= 1'b1;                         ea5397a      <= 1'b1;                            os725a2 <= `ddr3_ip_inst_RT_WAIT;                      end                      else begin                         if (fne9ff7 == `ddr3_ip_inst_RT_JF_RTRY_CNT-1) begin                            if (tj9ee9 == `ddr3_ip_inst_PAUSE_ST_CNT)                               rv32c56 <= 1'b1;                            else if (tj9ee9 == `ddr3_ip_inst_LD_CLKSEL_CNT)                               me5c4d4 <= sjbed14 + 1;    else if (tj9ee9 == `ddr3_ip_inst_PAUSE_END_CNT) begin                               rv32c56   <= 1'b0;                               os725a2   <= `ddr3_ip_inst_RT_CHK_RDCNT;                               fca225c <= 1'b1;                            end                            else                               os725a2   <= `ddr3_ip_inst_RT_ADJ_CLKSEL;         end else if (tj9ee9 == `ddr3_ip_inst_PAUSE_END_CNT) begin                            rv32c56   <= 1'b0;                            os725a2   <= `ddr3_ip_inst_RT_CHK_RDCNT;                            fca225c <= 1'b1;                         end                         else                            os725a2   <= `ddr3_ip_inst_RT_ADJ_CLKSEL;                      end                      end       `ddr3_ip_inst_RT_CHK_RDCNT:  begin                        fca225c <= 1'b0;                      if (pf7ba7f == `ddr3_ip_inst_RT_RDCKSEL_CNT && (fne9ff7 == `ddr3_ip_inst_RT_JF_RTRY_CNT-1)) begin                         fca225c <= 1'b1;                         ice5e8a  <= 1'b1;                             ea5397a      <= 1'b1;                         os725a2   <= `ddr3_ip_inst_RT_WAIT;                      end                      else begin                         if (fne9ff7 == `ddr3_ip_inst_RT_JF_RTRY_CNT-1) begin                            ks92d11  <= pf7ba7f + 1;                            epb444b <= 'd0;                         end                         else begin                            epb444b <= fne9ff7 + 1;                         end                         fca225c <= 1'b1;                         tw9cbd1   <= ~tw9cbd1;                           os725a2   <= `ddr3_ip_inst_RT_RD;                      end                      end       `ddr3_ip_inst_RT_WAIT    : begin                        fca225c <= 1'b0;                      ea5397a      <= 1'b0;                      if (tj9ee9 == `ddr3_ip_inst_RT_RD_WAIT ) begin                         ice5e8a  <= 1'b0;                                                                           fca225c <= 1'b1;                         os725a2 <= `ddr3_ip_inst_RT_END;                      end                      else                         os725a2   <= `ddr3_ip_inst_RT_WAIT;                      end       `ddr3_ip_inst_RT_END      : begin                        fca225c <= 1'b0;                      if (tj9ee9 == 'd1  )                         fc962b6 <= 1'b1;                      else if (tj9ee9 == 'd2  )                         fc962b6 <= 1'b0;                      else if (tj9ee9 == 'd5  )                         hd37143 <= 1'b1;                      else if (tj9ee9 == 'd6  )                         hd37143 <= 1'b0;                      else if (tj9ee9 == 'd40  ) begin                                                  fca225c  <= 1'b1;                         os725a2   <= `ddr3_ip_inst_RT_END1;                      end                      else                         os725a2   <= `ddr3_ip_inst_RT_END;                      end       `ddr3_ip_inst_RT_END1      : begin                        fca225c  <= 1'b0;                      yzb15b2     <= 1'b1;                      pha54e5       <= 1'b0;      if (ir8ff2)                         rt_err <= 1'b0;                      else                         rt_err <= 1'b1;                      os725a2 <= `ddr3_ip_inst_RT_IDLE;                      end       default      : begin                      pha54e5    <= 1'b0;                      os725a2 <= `ddr3_ip_inst_RT_IDLE;                      end      endcase   end
end

always @(posedge sclk or negedge rst_n) begin   if (!rst_n)      jcee4b4 <= 6'h0;   else if (ld4ffbe)      jcee4b4 <= 6'h0;   else      jcee4b4 <= tj9ee9 + 1;
end

always @(posedge sclk or negedge rst_n) begin   if (!rst_n) begin      byda041  <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};   end   else if (ea5397a) begin      byda041  <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};   end   else if ((hb4f74f == `ddr3_ip_inst_RT_BURSTDT) && !tw9cbd1) begin      byda041  <= pf4023f | (cmd4a01 & ira427b);   end
end



always @(posedge sclk or negedge rst_n) begin   if (!rst_n) begin      wy3b408  <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};   end   else if (lf32d52 || (fne9ff7 == 'd0 && ea5397a)) begin      wy3b408  <= {`ddr3_ip_inst_DQS_WIDTH{1'b1}};   end   else if ( (hb4f74f == `ddr3_ip_inst_RT_BURSTDT) && (tj9ee9 == `ddr3_ip_inst_RT_RD_WAIT-1) && !tw9cbd1) begin      wy3b408  <= fp28047 & pf4023f;   end
end

assign kf829e = (hb4f74f == `ddr3_ip_inst_RT_BURSTDT) ? 1'b1 : 1'b0;



always @(posedge sclk or negedge rst_n) begin   if (!rst_n) begin      ea67681  <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};   end   else if (lf32d52 || (fne9ff7 == 'd0)) begin      ea67681  <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};   end   else if ((hb4f74f == `ddr3_ip_inst_RT_BURSTDT) && (fne9ff7 == `ddr3_ip_inst_RT_JF_RTRY_CNT - 1)) begin      ea67681  <= bna5008 | fp28047;   end
end
always @(posedge sclk or negedge rst_n) begin   if (!rst_n) begin      vid020a  <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};   end   else if (lf32d52 ) begin      vid020a  <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};   end   else if ((hb4f74f == `ddr3_ip_inst_RT_BURSTDT) && (fne9ff7 == `ddr3_ip_inst_RT_JF_RTRY_CNT - 1)) begin                        vid020a  <= ri11fe | (bna5008);   end
end
assign bn81053 = &(ri11fe);
          generate        begin           for (ip414f4=0; ip414f4<`ddr3_ip_inst_DQS_WIDTH; ip414f4=ip414f4+1)           begin: hb5a34e           fn7e176_ddr3_ip_inst fn7e176(               .sclk              (sclk),               .rst_n             (rst_n),               .ksb9a53             (lf32d52),               .tw9cbd1          (tw9cbd1),               .ba89713          (byfefb4),               .ls3533b        (mga3528),               .cb9f08a       (pf7ba7f[3]),               .ldc22a4   (ri11fe[ip414f4]),               .mr549dc   (sjbed14),               .jr27724  (gd1dc96 [(3*ip414f4+2):(3*ip414f4)]),               .ks24c22   (zzaa732[(4*ip414f4+3):(4*ip414f4)]),               .jr2211e (rt_dqs_read_rvl[(4*ip414f4+3):(4*ip414f4)]),               .ls1ec35      (hd3b92[(3*ip414f4+2):(3*ip414f4)])               );           end         end     endgenerate
always@* begin lf32d52<=ou538[0];ana4995<=ou538[1];ph9e909<=ou538[2];ho6ccb5<={rt5af46>>1,ou538[3]};ira427b<={zza06c7>>1,ou538[4]};gq213dd<={gd1dc96>>1,ou538[5]};tj9ee9<={jcee4b4>>1,ou538[6]};hb4f74f<={os725a2>>1,ou538[7]};pf7ba7f<={ks92d11>>1,ou538[8]};vvdd3fe<={pu96889>>1,ou538[9]};fne9ff7<={epb444b>>1,ou538[10]};ld4ffbe<=ou538[11];qt7fdf6<=ou538[12];byfefb4<={ba89713>>1,ou538[13]};mrf7da2<={of4b89a>>1,ou538[14]};sjbed14<={me5c4d4>>1,ou538[15]};thf68a4<=ou538[16];wlb4526<=ou538[17];twa2934<=ou538[18];ri149a3<=ou538[19];qva4d1a<=ou538[20];qv268d4<=ou538[21];sw346a5<=ou538[22];mga3528<={ls3533b>>1,ou538[23]};ie1a940<={iea99da>>1,ou538[24]};cmd4a01<={go4ced0>>1,ou538[25]};bna5008<={ea67681>>1,ou538[26]};fp28047<={wy3b408>>1,ou538[27]};pf4023f<={byda041>>1,ou538[28]};ri11fe<={vid020a>>1,ou538[29]};ir8ff2<=ou538[30];vi47f95<=ou538[31];end
always@* begin swa7[2047]<=end6a5a;swa7[2046]<=ls1ca0;swa7[2044]<=rt5af46[0];swa7[2040]<=zza06c7[0];swa7[2033]<=gd1dc96[0];swa7[2024]<=rvcd4c;swa7[2018]<=jcee4b4[0];swa7[2001]<=ps66a67;swa7[1988]<=os725a2[0];swa7[1954]<=ls3533b[0];swa7[1929]<=ks92d11[0];swa7[1860]<=iea99da[0];swa7[1811]<=pu96889[0];swa7[1789]<=wl9a866;swa7[1673]<=go4ced0[0];swa7[1574]<=epb444b[0];swa7[1530]<=kqd4335;swa7[1299]<=ea67681[0];swa7[1247]<=me5c4d4[0];swa7[1102]<=byda041[0];swa7[1101]<=fca225c;swa7[1023]<=jp7e9d8;swa7[1012]<=qva19a9;swa7[894]<=vx1350c;swa7[629]<=kf829e;swa7[623]<=of4b89a[0];swa7[551]<=wy3b408[0];swa7[447]<=kde26a1;swa7[314]<=bn81053;swa7[311]<=ba89713[0];swa7[157]<=vid020a[0];swa7[155]<=fc112e2;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule




`timescale 1 ns / 100 ps
module fn7e176_ddr3_ip_inst (
               sclk,
               rst_n,
               ksb9a53,
               tw9cbd1,
               ba89713,
               ls3533b,
               cb9f08a,
               ldc22a4,
               mr549dc,
               jr27724,
               ks24c22,
               jr2211e,
               ls1ec35
               );
input         sclk;
input         rst_n;
input         ksb9a53;
input         tw9cbd1;
input  [1:0]  ba89713;
input  [1:0]  ls3533b;
input         cb9f08a;
input         ldc22a4;
input  [2:0]  mr549dc;
output [2:0]  jr27724;
output [2:0]  ls1ec35;
output [3:0]  ks24c22;
output [3:0]  jr2211e;
reg           by7c42f;
reg    [2:0]  mre217a;
reg           ie10bd4;
reg           wl85ea0;
reg    [2:0]  jr27724 ;
reg    [2:0]  ls1ec35  ;
reg    [3:0]  ks24c22 ;
reg    [3:0]  jr2211e ;
reg           wy550e;
reg vk2a870;
reg jc634d9;
reg [1 : 0] byfefb4;
reg [1 : 0] mga3528;
reg kd70763;
reg ba83b1c;
reg [2 : 0] kf1d8e2;
reg rtec714;
reg [2 : 0] fa638a7;
reg lf1c53b;
reg cze29df;
reg ls14efd;
reg [2047:0] swa7;
wire [11:0] ou538;

localparam kf29c0 = 12,do14e04 = 32'hfdffe44b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;

always @(posedge sclk or negedge rst_n) begin   if (!rst_n)      by7c42f <= 1'b0;   else      by7c42f <= ba83b1c;
end


always @(posedge sclk or negedge rst_n) begin   if (!rst_n) begin      mre217a  <= 3'b0;      ie10bd4      <= 1'b0;      wl85ea0     <= 1'b0;   end   else if (vk2a870) begin      mre217a  <= 3'b0;      ie10bd4      <= 1'b0;      wl85ea0     <= 1'b0;   end   else if ( !cze29df && ba83b1c && !rtec714) begin      mre217a <= kf1d8e2;      ie10bd4     <= kd70763;      wl85ea0    <= 1'b1;   end
end


always @(posedge sclk or negedge rst_n) begin   if (!rst_n) begin      ls1ec35      <= 3'b0;      wy550e     <= 1'b0;      jr27724  <= 3'b0;   end   else if (cze29df) begin      ls1ec35     <= fa638a7;      wy550e    <= lf1c53b;      jr27724 <= fa638a7;   end   else begin      ls1ec35     <= kf1d8e2;      wy550e    <= kd70763;      jr27724 <= kf1d8e2;   end
end
always @(posedge sclk or negedge rst_n) begin   if (!rst_n) begin      ks24c22     <= 4'b0;      jr2211e <= 4'b0;   end   else begin      ks24c22     <= (ls14efd == 1'b1) ? {`ddr3_ip_inst_DQS_WIDTH{2'b00,mga3528}} : {`ddr3_ip_inst_DQS_WIDTH{2'b00,byfefb4}};      jr2211e <= (ls14efd == 1'b1) ? {`ddr3_ip_inst_DQS_WIDTH{2'b00,mga3528}} : {`ddr3_ip_inst_DQS_WIDTH{2'b00,byfefb4}};   end
end
always@* begin vk2a870<=ou538[0];jc634d9<=ou538[1];byfefb4<={ba89713>>1,ou538[2]};mga3528<={ls3533b>>1,ou538[3]};kd70763<=ou538[4];ba83b1c<=ou538[5];kf1d8e2<={mr549dc>>1,ou538[6]};rtec714<=ou538[7];fa638a7<={mre217a>>1,ou538[8]};lf1c53b<=ou538[9];cze29df<=ou538[10];ls14efd<=ou538[11];end
always@* begin swa7[2047]<=tw9cbd1;swa7[2046]<=ba89713[0];swa7[2044]<=ls3533b[0];swa7[2040]<=cb9f08a;swa7[2033]<=ldc22a4;swa7[2019]<=mr549dc[0];swa7[1991]<=by7c42f;swa7[1934]<=mre217a[0];swa7[1821]<=ie10bd4;swa7[1595]<=wl85ea0;swa7[1142]<=wy550e;swa7[1023]<=ksb9a53;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule




`ifdef ddr3_ip_inst_x4

`define ddr3_ip_inst_M_DATA_WIDTH 16

`else

`define ddr3_ip_inst_M_DATA_WIDTH 32

`endif
`timescale 1 ns / 100 ps
module su72af8_ddr3_ip_inst (
               sclk,
               rst_n,
               su7821c,
               ea5397a,
               uka33be,
               fn6e478,
               gd8a59a,
               ux80a5a,
               cal_bc4,
               ria77e3
               );
input         sclk;
input         rst_n;
input         su7821c;
input         ea5397a;
input         uka33be;
input         fn6e478;
input [`ddr3_ip_inst_M_DATA_WIDTH - 1:0]  gd8a59a;
input [`ddr3_ip_inst_M_DATA_WIDTH - 1:0]  ux80a5a;
input         cal_bc4;
output        ria77e3;
wire          ria77e3;
reg [1:0]     mg2111a;
wire [`ddr3_ip_inst_M_DATA_WIDTH - 1:0]  oh88d1;

`ifdef ddr3_ip_inst_x4

`else

`endif
reg alf7aad;
reg ymac69b;
reg ou1a364;
reg yxedd7b;
reg [`ddr3_ip_inst_M_DATA_WIDTH - 1 : 0] ldf365c;
reg [`ddr3_ip_inst_M_DATA_WIDTH - 1 : 0] by6c801;
reg ph2249a;
reg [1 : 0] je20057;
reg [`ddr3_ip_inst_M_DATA_WIDTH - 1 : 0] ou2bb;
reg [2047:0] swa7;
wire [8:0] ou538;

`ifdef ddr3_ip_inst_x4

`else

`endif

localparam kf29c0 = 9,do14e04 = 32'hfdffd88b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`ifdef ddr3_ip_inst_x4


`else


`endif


`ifdef ddr3_ip_inst_x4

assign  oh88d1  = {ldf365c[15],ldf365c[11],ldf365c[7],ldf365c[3],                   ldf365c[14],ldf365c[10],ldf365c[6],ldf365c[2],                   ldf365c[13],ldf365c[ 9],ldf365c[5],ldf365c[1],                   ldf365c[12],ldf365c [8],ldf365c[4],ldf365c[0]};

`else

assign  oh88d1  = {ldf365c[31],ldf365c[27],ldf365c[23],ldf365c[19],ldf365c[15],ldf365c[11],ldf365c[7],ldf365c[3],                  ldf365c[30],ldf365c[26],ldf365c[22],ldf365c[18],ldf365c[14],ldf365c[10],ldf365c[6],ldf365c[2],                  ldf365c[29],ldf365c[25],ldf365c[21],ldf365c[17],ldf365c[13],ldf365c[ 9],ldf365c[5],ldf365c[1],                  ldf365c[28],ldf365c[24],ldf365c[20],ldf365c[16],ldf365c[12],ldf365c [8],ldf365c[4],ldf365c[0]};

`endif

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      mg2111a <= 2'h0;   end   else if (!alf7aad || ymac69b) begin      mg2111a <= 2'h0;   end   else if (yxedd7b && ((ou1a364 == 1'b1) || (ou2bb == by6c801))) begin
      mg2111a <= je20057 + 1;   end   else      mg2111a <= je20057;
end

assign  ria77e3 =   (je20057==2'b10) ? 1'b1 : 1'b0;
always@* begin alf7aad<=ou538[0];ymac69b<=ou538[1];ou1a364<=ou538[2];yxedd7b<=ou538[3];ldf365c<={gd8a59a>>1,ou538[4]};by6c801<={ux80a5a>>1,ou538[5]};ph2249a<=ou538[6];je20057<={mg2111a>>1,ou538[7]};ou2bb<={oh88d1>>1,ou538[8]};end
always@* begin swa7[2047]<=ea5397a;swa7[2046]<=uka33be;swa7[2044]<=fn6e478;swa7[2040]<=gd8a59a[0];swa7[2032]<=ux80a5a[0];swa7[2017]<=cal_bc4;swa7[1987]<=mg2111a[0];swa7[1927]<=oh88d1[0];swa7[1023]<=su7821c;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule
`timescale 1 ns / 100 ps
module ou15188_ddr3_ip_inst (
                rst_n,
                sclk,
                nr74bb7,
                gd9030a,
                jr8bcfd,
                ddr_wr_lat_odd,
                dob788c,
                wybc462,

                yxe2310,      
                ba11884,        
                ri8c422,     
                kq62112, 
                sw10890,
                zz84480,
                vx22406,      
                ep12036,        
                qv901b4,     
                mt80da5, 
                vv4ae6d,
                dm47d75,
                dfi_wrdata_mask,
                czcce60, 
                yk67305, 
                cb39828,

                zz6d2d,
                ux3696e,      
                ic728cd,
                lfa5ba5,        
                db2dd2e,     
                vv6e976 
                );
input                   rst_n;
input                   sclk;
input                   nr74bb7;
input                   gd9030a;
input                   jr8bcfd;
input                   ddr_wr_lat_odd;
input [`ddr3_ip_inst_DSIZE-1:0]      dob788c;
input [`ddr3_ip_inst_USER_DM -1:0]   wybc462;
input                   yxe2310;
input [`ddr3_ip_inst_DQS_WIDTH-1:0]  ba11884;
input                   ri8c422;
input                   kq62112;
input [`ddr3_ip_inst_DSIZE-1:0]      sw10890;
input [`ddr3_ip_inst_USER_DM -1:0]   zz84480;
input                   vx22406;
input [`ddr3_ip_inst_DQS_WIDTH-1:0]  ep12036;
input                   qv901b4;
input                   mt80da5;
input [`ddr3_ip_inst_DSIZE-1:0]      vv4ae6d;
input                   dm47d75;
input [`ddr3_ip_inst_USER_DM -1:0]   dfi_wrdata_mask;
input [`ddr3_ip_inst_DQS_WIDTH-1:0]  czcce60;
input                   yk67305;
input                   cb39828;
output [`ddr3_ip_inst_DSIZE-1:0]     zz6d2d;
output [`ddr3_ip_inst_DQS_WIDTH-1:0] ux3696e;
output [`ddr3_ip_inst_USER_DM -1:0]  ic728cd;
output [`ddr3_ip_inst_DQS_WIDTH-1:0] lfa5ba5;
output                  db2dd2e;
output                  vv6e976;
reg   [`ddr3_ip_inst_DSIZE-1:0]      zz6d2d ;
reg   [`ddr3_ip_inst_DQS_WIDTH-1:0]  ux3696e  ;
reg   [`ddr3_ip_inst_USER_DM -1:0]   ic728cd;
reg   [`ddr3_ip_inst_DQS_WIDTH-1:0]  lfa5ba5  ;
reg                     db2dd2e   ;
reg                     vv6e976   ;

`ifdef ddr3_ip_inst_DDR3_2T
reg   dze359a;
reg   fpa5dbf;

`else   // 1T mode

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`endif  // DDR3_2T 
reg aa9d79b;
reg bl7ef79;
reg zk5d2b4;
reg lf19a1e;
reg [`ddr3_ip_inst_DSIZE - 1 : 0] kf808d8;
reg [`ddr3_ip_inst_USER_DM - 1 : 0] hq46c5;
reg gd2362a;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] ng1b154;
reg pfd8aa2;
reg dmc5516;
reg [`ddr3_ip_inst_DSIZE - 1 : 0] qvbb83d;
reg [`ddr3_ip_inst_USER_DM - 1 : 0] czdc1ec;
reg goe0f65;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] oh7b28;
reg lf3d944;
reg theca27;
reg [`ddr3_ip_inst_DSIZE - 1 : 0] xjd7b75;
reg ir124d6;
reg [`ddr3_ip_inst_USER_DM - 1 : 0] ux26bd;
reg [`ddr3_ip_inst_DQS_WIDTH - 1 : 0] pf64575;
reg nt22baf;
reg uk15d7f;
reg [2047:0] swa7;
wire [21:0] ou538;

`ifdef ddr3_ip_inst_DDR3_2T

`else   // 1T mode

`ifdef ddr3_ip_inst_RDIMM

`else

`endif

`endif  // DDR3_2T 

localparam kf29c0 = 22,do14e04 = 32'hfdffca4b;
localparam [31:0] hqa7022 = do14e04;
localparam fac0896 = do14e04 & 4'hf;
localparam [11:0] zz2259a = 'h7ff;
wire  [(1 << fac0896)  -1:0] pu966b5;
reg    [kf29c0-1:0] oh9ad51;
reg [fac0896-1:0] phb546d [0:1];
reg [fac0896-1:0] cz51b76;
reg ym8dbb4;
integer su6dda1;
integer ld6ed08;


`ifdef ddr3_ip_inst_DDR3_2T


`else   // 1T mode


`ifdef ddr3_ip_inst_RDIMM


`else


`endif


`endif  // DDR3_2T 


`ifdef ddr3_ip_inst_DDR3_2T


always @(posedge sclk  or negedge rst_n) begin   if (~rst_n)      dze359a   <= 1'b0;   else      dze359a   <= bl7ef79;
end
always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        fpa5dbf   <= 1'b0;        end       else if (dze359a)begin        fpa5dbf   <= ~lf19a1e;       end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      zz6d2d     <= {`ddr3_ip_inst_DSIZE{1'b0}};      ux3696e <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};      ic728cd          <= {`ddr3_ip_inst_USER_DM{1'b0}};      lfa5ba5      <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};      db2dd2e       <= 1'b0;      vv6e976     <= 1'b0;   end   else  begin      case (fpa5dbf)  
      1'b1: begin            zz6d2d     <= kf808d8;            ic728cd          <= hq46c5;            ux3696e <= {`ddr3_ip_inst_DQS_WIDTH{gd2362a | zk5d2b4}};            lfa5ba5      <= ng1b154;            db2dd2e       <= pfd8aa2;            vv6e976     <= dmc5516;            end
      1'b0: begin            zz6d2d     <= kf808d8;            ic728cd          <= hq46c5;            ux3696e <= {`ddr3_ip_inst_DQS_WIDTH{gd2362a | zk5d2b4}};            lfa5ba5      <= ng1b154;            db2dd2e       <= pfd8aa2;            vv6e976     <= dmc5516;            end       endcase    end
end


`else   // 1T mode




`ifdef ddr3_ip_inst_RDIMM

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      zz6d2d     <= {`ddr3_ip_inst_DSIZE{1'b0}};      ux3696e <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};      ic728cd          <= {`ddr3_ip_inst_USER_DM{1'b0}};      lfa5ba5      <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};      db2dd2e       <= 1'b0;      vv6e976     <= 1'b0;   end   else  begin   case (aa9d79b)     1'b0: begin         zz6d2d     <= kf808d8;         ux3696e <= {`ddr3_ip_inst_DQS_WIDTH{gd2362a | zk5d2b4}};         ic728cd          <= hq46c5;         lfa5ba5      <= ng1b154;         db2dd2e       <= pfd8aa2;         vv6e976     <= dmc5516;         end   1'b1: begin         zz6d2d     <= qvbb83d;         ux3696e <= {`ddr3_ip_inst_DQS_WIDTH{goe0f65 | zk5d2b4}};         ic728cd          <= czdc1ec;         lfa5ba5      <= oh7b28;         db2dd2e       <= lf3d944;         vv6e976     <= theca27;         end    endcase    end
end

`else

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      zz6d2d     <= {`ddr3_ip_inst_DSIZE{1'b0}};      ux3696e <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};      ic728cd          <= {`ddr3_ip_inst_USER_DM{1'b0}};      lfa5ba5      <= {`ddr3_ip_inst_DQS_WIDTH{1'b0}};      db2dd2e       <= 1'b0;      vv6e976     <= 1'b0;   end   else  begin   case (aa9d79b)     1'b0: begin         zz6d2d     <= xjd7b75;         ux3696e <= {`ddr3_ip_inst_DQS_WIDTH{ir124d6 | zk5d2b4}};         ic728cd          <= ux26bd;         lfa5ba5      <= pf64575;         db2dd2e       <= nt22baf;         vv6e976     <= uk15d7f;         end   1'b1: begin         zz6d2d     <= kf808d8;         ux3696e <= {`ddr3_ip_inst_DQS_WIDTH{gd2362a | zk5d2b4}};         ic728cd          <= hq46c5;         lfa5ba5      <= ng1b154;         db2dd2e       <= pfd8aa2;         vv6e976     <= dmc5516;         end    endcase    end
end

`endif




`endif  // DDR3_2T 

always@* begin aa9d79b<=ou538[0];bl7ef79<=ou538[1];zk5d2b4<=ou538[2];lf19a1e<=ou538[3];kf808d8<={dob788c>>1,ou538[4]};hq46c5<={wybc462>>1,ou538[5]};gd2362a<=ou538[6];ng1b154<={ba11884>>1,ou538[7]};pfd8aa2<=ou538[8];dmc5516<=ou538[9];qvbb83d<={sw10890>>1,ou538[10]};czdc1ec<={zz84480>>1,ou538[11]};goe0f65<=ou538[12];oh7b28<={ep12036>>1,ou538[13]};lf3d944<=ou538[14];theca27<=ou538[15];xjd7b75<={vv4ae6d>>1,ou538[16]};ir124d6<=ou538[17];ux26bd<={dfi_wrdata_mask>>1,ou538[18]};pf64575<={czcce60>>1,ou538[19]};nt22baf<=ou538[20];uk15d7f<=ou538[21];end
always@* begin swa7[2047]<=gd9030a;swa7[2046]<=jr8bcfd;swa7[2044]<=ddr_wr_lat_odd;swa7[2040]<=dob788c[0];swa7[2033]<=wybc462[0];swa7[2019]<=yxe2310;swa7[2011]<=mt80da5;swa7[1991]<=ba11884[0];swa7[1974]<=vv4ae6d[0];swa7[1935]<=ri8c422;swa7[1900]<=dm47d75;swa7[1823]<=kq62112;swa7[1753]<=dfi_wrdata_mask[0];swa7[1738]<=cb39828;swa7[1598]<=sw10890[0];swa7[1458]<=czcce60[0];swa7[1149]<=zz84480[0];swa7[1023]<=nr74bb7;swa7[1005]<=qv901b4;swa7[869]<=yk67305;swa7[502]<=ep12036[0];swa7[251]<=vx22406;end         assign pu966b5 = swa7,ou538 = oh9ad51;   initial begin   su6dda1 = $fopen(".fred");   $fdisplay( su6dda1, "%3h\n%3h", (hqa7022 >> 4) & zz2259a, (hqa7022 >> (fac0896+4)) & zz2259a );   $fclose(su6dda1);   $readmemh(".fred", phb546d);   end   always @ (pu966b5) begin   cz51b76 = phb546d[1];       for (ld6ed08=0; ld6ed08<kf29c0; ld6ed08=ld6ed08+1) begin           oh9ad51[ld6ed08] = pu966b5[cz51b76];       ym8dbb4  = ^(cz51b76 & phb546d[0]);       cz51b76 =  {cz51b76, ym8dbb4};       end   end 
endmodule
`timescale 1 ns / 100 ps
//`include "ddr3_sdram_mem_params.v"
module  row_addr_tab_ddr3_ip_inst ( WrAddress, RdAddress, Data, WrClock, WrClockEn, WE, Q);

input   [5:0]  WrAddress;
input   [5:0]  RdAddress;
input   [`ddr3_ip_inst_ROW_WIDTH-1:0]  Data;
input   WrClock;
input   WrClockEn;
input   WE;
output  [`ddr3_ip_inst_ROW_WIDTH-1:0]  Q;

defparam  pmi_distributed_dpram.pmi_addr_depth = 64;
defparam  pmi_distributed_dpram.pmi_addr_width = 6;
defparam  pmi_distributed_dpram.pmi_data_width = `ddr3_ip_inst_ROW_WIDTH;
defparam  pmi_distributed_dpram.pmi_regmode = "noreg";
defparam  pmi_distributed_dpram.pmi_family   = "ECP5U";
pmi_distributed_dpram   pmi_distributed_dpram   
 (
    .WrAddress    (WrAddress),
    .Data         (Data),
    .WrClock      (WrClock),
    .WE           (WE),
    .WrClockEn    (WrClockEn),
    .RdAddress    (RdAddress),
    .RdClock      (WrClock),
    .RdClockEn    (1'b1),
    .Reset        (1'b0),
    .Q            (Q)
    );

endmodule

// ===========================================================================
// Verilog module generated by IPexpress
// Filename: ddr3_sdram_mem_top.v  
// Copyright 2011 (c) Lattice Semiconductor Corporation. All rights reserved.
// ===========================================================================

`timescale 1ns/100ps

module ddr3_ip_inst (

   // Clock and reset
   eclk,
   sclk,
   rst_n,
   mem_rst_n,  			

   // Input signals from the User I/F  
   init_start,  
   cmd,
   addr,
   cmd_burst_cnt,
   cmd_valid,   
   ofly_burst_len, 
   write_data,
   datain_rdy,
   data_mask,
   ddr_rst,
   dqsdel,
   dqsbuf_pause,
   clocking_good,
   update_done,
   

   // Output signals to the User I/F
   cmd_rdy,
   init_done,
   rt_err,  
   wl_err,  
   read_data,
   read_data_valid,
   dll_update,


   // Memory side signals
   em_ddr_reset_n,   				
   em_ddr_data,
   em_ddr_dqs,
   em_ddr_clk,
   em_ddr_cke,
   em_ddr_ras_n,
   em_ddr_cas_n,
   em_ddr_we_n,
   em_ddr_cs_n,
   em_ddr_odt,
   em_ddr_dm,    				
   em_ddr_ba,
   em_ddr_addr
);

// ====================================================================
// Port definition 
// ====================================================================
input                            eclk;
input                            sclk;
input                            rst_n;
input                            mem_rst_n;

// Input signals from the User I/F
input                            init_start; 
input   [3:0]                    cmd;
input   [26:0]           addr;
input   [4:0]                    cmd_burst_cnt;
input                            cmd_valid;
input                            ofly_burst_len;

input   [63:0]                write_data;
input   [7:0]              data_mask;
input                            ddr_rst;
input   [1:0]                 dqsdel;
input                            dqsbuf_pause;
input                            clocking_good;
input                            update_done;

output  [63:0]                read_data /* synthesis syn_useioff = 0 */;

output                           datain_rdy;


// Output signals to the User I/F
output                           cmd_rdy;
output                           init_done;
output                           rt_err;  
output                           wl_err;  
output                           read_data_valid  /* synthesis syn_useioff = 0 */;

output                           dll_update;

// Memory side signals 
inout   [15:0]           em_ddr_data;
output                           em_ddr_reset_n;
inout   [1:0]            em_ddr_dqs;
output  [1:0]            em_ddr_dm;
output  [0:0]           em_ddr_clk;
output  [0:0]            em_ddr_cke;
output                           em_ddr_ras_n;
output                           em_ddr_cas_n;
output                           em_ddr_we_n;
output  [0:0]          em_ddr_cs_n;
output  [0:0]             em_ddr_odt;
output  [13:0]            em_ddr_addr;
output  [2:0]           em_ddr_ba;



// ====================================================================
// Wires & Registers
// ====================================================================

wire                             datain_rdy;  
wire                             cmd_rdy;  
wire                             init_done;
wire                             rt_err;  
wire                             wl_err;  
wire    [63:0]                read_data; 
wire                             read_data_valid; 

wire    [7:0]              dfi_wrdata_mask;  
wire    [0:0]             dfi_odt; 

wire                             cal_bc4; 
wire    [1:0]            prmbdet;  
wire                             wl_dq; 

wire    [0:0]           em_ddr_clk;  
wire    [0:0]             em_ddr_odt;  
wire 	  [1:0]            em_ddr_dm;   
wire    [2:0]           em_ddr_ba; 
wire    [13:0]            em_ddr_addr; 

wire                             em_ddr_reset_n;
wire                             em_ddr_ras_n;  
wire                             em_ddr_we_n;   
wire                             em_ddr_cas_n;  
wire    [0:0]          em_ddr_cs_n;   
wire    [0:0]            em_ddr_cke;    

wire    [13:0]            dfi_address; 
wire    [2:0]           dfi_bank;   
wire    [0:0]            dfi_cke;  
wire                             dfi_ras_n; 
wire                             dfi_we_n;  
wire                             dfi_cas_n; 
wire    [0:0]             dfi_cs_n;  

wire    [63:0]                dfi_wrdata; 
wire		                        dfi_wrdata_en; 
wire 	  [1:0]            ddr_dqs_out;  
wire                             ddr_dqs_out_en;  
wire                             ddr_dqs_out_en_erly;  
wire                             ddr_wr_lat_odd;  
wire                             ddr_rd_lat_odd;  

wire 	                           mirror_on;  

wire                             init_start1;

wire                             dfi_rddata_valid; 
wire    [63:0]                dfi_rddata; 
wire                             phy_init_act;
wire                             wl_act;


//===================================================================
assign init_start1 = init_start & clocking_good;

assign read_data_valid = dfi_rddata_valid;
assign read_data =  dfi_rddata;

// ====================================================================
// PHY logic 
// ====================================================================
ddr3_sdram_phy_ddr3_ip_inst U1_ddr3_sdram_phy(
   // clock sync signals
   .rst_n             (rst_n),            				
   .sclk              (sclk),             				
   .eclk              (eclk),             				
   .sclk2x            (1'b1),             				
   .clocking_good     (clocking_good),                      
   .ddr_rst           (ddr_rst),                      
   .dqsdel            (dqsdel),                                         	
   .update_done       (update_done),
   .dll_update        (dll_update),
   .dqsbuf_pause      (dqsbuf_pause),

   // controller side standard signals
   .dfi_address       (dfi_address), 
   .dfi_bank          (dfi_bank),   
   .dfi_cs_n          (dfi_cs_n),  
   .dfi_ras_n         (dfi_ras_n), 
   .dfi_cas_n         (dfi_cas_n), 
   .dfi_we_n          (dfi_we_n),  
   .dfi_cke           (dfi_cke),  
   .dfi_odt           (dfi_odt),          		                

   .dfi_wrdata        (dfi_wrdata),      			
   .dfi_wrdata_en     (dfi_wrdata_en),  		
   .dfi_wrdata_mask   (dfi_wrdata_mask),	                

   .dfi_rddata        (dfi_rddata),                          
   .dfi_rddata_valid  (dfi_rddata_valid),                             

   .dfi_init_start    (init_start),
   .dfi_init_complete (dfi_init_complete),                             

   // Non-dfi signals
   .mem_rst_n         (mem_rst_n),           	                        
   .wl_act            (wl_act),                             
   .wl_err            (wl_err),                             
   .rt_err            (rt_err),                             
   .phy_init_act      (phy_init_act),                             

   //-----------

   //-----------

   // external memory side signals
   .em_ddr_reset_n    (em_ddr_reset_n), 
   .em_ddr_addr       (em_ddr_addr), 
   .em_ddr_ba         (em_ddr_ba),   
   .em_ddr_ras_n      (em_ddr_ras_n), 
   .em_ddr_cas_n      (em_ddr_cas_n), 
   .em_ddr_we_n       (em_ddr_we_n),  
   .em_ddr_cs_n       (em_ddr_cs_n),  
   .em_ddr_cke        (em_ddr_cke),  

   .em_ddr_clk        (em_ddr_clk),        				
   .em_ddr_odt        (em_ddr_odt),        		                
   .em_ddr_dm         (em_ddr_dm),                		                
   .em_ddr_data       (em_ddr_data),       				
   .em_ddr_dqs        (em_ddr_dqs)  
);

// ====================================================================
// Lattice MAC 
// ====================================================================

ddr3_ip_inst_core U1_ddr3_sdram_core(
// Inputs
    .clk                    (sclk),    			   
    .rst_n                  (rst_n),   			   
 
    .param_trcd             (2'b11),
    .param_trp              (2'b11),
    .param_twr              (2'b11),
    .param_tras             (4'b1000),
    .param_trc              (4'b1010),
    .param_trrd             (2'b11),
    .param_trtp             (2'b10),
    .param_twtr             (2'b10),
    .param_tckesr           (2'b10),
    .param_tzqoper          (8'b10000000),
    .param_tzqs             (6'b100000),
    .param_tmrd             (2'b10),
    .param_tpd              (2'b10),
    .param_txpdll           (3'b101),
    .param_tcke             (2'b10),
    .param_txpr             (6'b100010),
    .param_tmod             (3'b110),
    .param_tzqinit          (9'b100000000),
  
    .addr_init_0            (16'b0001010100010000),
    .addr_init_1            (16'b0000000000000100),
    .addr_init_2            (16'b0000001000000000),
    .addr_init_3            (16'b0000000000000000),
  
    .wl_phase_dly_cnt       (8'b00000000),                      
    .phy_init_act           (phy_init_act),
    .wl_act                 (wl_act),
    .wl_done                (dfi_init_complete),                          

// Input signals from the User I/F  
    .init_start             (init_start1),                      
    .cmd                    (cmd),                                    
    .addr                   (addr),                                  
    .cmd_burst_cnt          (cmd_burst_cnt),                   
    .cmd_valid              (cmd_valid),                       
    .ofly_burst_len         (ofly_burst_len),                 
  

// Input signals from  configuration 
    .trefi                  (16'b0000011000011000),                            
    .ar_burst_cnt           (3'b000),               
  
//data  coming from user I/F
    .datain                 (write_data),  
    .dmsel                  (data_mask),   
    .DataRdy2Data           (2'b10), 
  
//data coming from IOs (read)   

// Outputs
// To the IOs
    .pio_read               (),        
    .cal_bc4                (cal_bc4),        
    .ddr_cs_n               (dfi_cs_n),   
    .ddr_ras_n              (dfi_ras_n),  
    .ddr_cas_n              (dfi_cas_n), 
    .ddr_we_n               (dfi_we_n),  
    .ddr_ba                 (dfi_bank),    
    .ddr_addr               (dfi_address),  
    .ddr_cke                (dfi_cke),   
    .datain_valid           (datain_rdy),                

// Output signals to the User I/F
    .cmd_rdy                (cmd_rdy),                         
    .init_done              (init_done),  
  
// Signals going to IOs for wtite      
    .ddr_dq_out             (dfi_wrdata),      
    .ddr_wr_lat_odd         (ddr_wr_lat_odd),      
    .dqs_out                (ddr_dqs_out),
    .dqs_out_en             (ddr_dqs_out_en),
    .dqs_out_en_erly        (ddr_dqs_out_en_erly),
    .dq_out_en              (dfi_wrdata_en),
    .ddr_dqm                (dfi_wrdata_mask),           
  
    .mem_odt_out            (dfi_odt),          
    .cntl_odt_out           ( ) ,
    .rd_odd                 (ddr_rd_lat_odd ),       

    .mirror_on              (mirror_on )
) /*synthesis HGROUP="ddr3_core" PBBOX="22,25" */ ;

endmodule
