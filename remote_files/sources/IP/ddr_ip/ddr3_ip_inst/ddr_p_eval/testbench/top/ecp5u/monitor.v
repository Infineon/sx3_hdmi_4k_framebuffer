// ===========================================================================
// Verilog module generated by IPexpress
// Filename: monitor.v(DDR3) 
// Copyright 2013 (c) Lattice Semiconductor Corporation. All rights reserved.
// ===========================================================================

`timescale 1 ps / 1 ps
`include "ddr3_sdram_mem_params_ddr3_ip_inst.v"
module monitor_ddr3_ip_inst(
    //------- Signals from User Interface
    clk,
    mem_clk,
    rst_n,
    cmd,		             // Command 
    cmd_valid,           // Command valid
    cmd_rdy,			    // Ready to accept a command
    dmsel,               // Data mask inputs 
    addr,                // Address bus 
    datain,              // Data input bus 
    burst_cnt,           // Burst access count
    init_start,          // request initialization
    init_done,           // init complete
    ar_burst_en,         // Auto refresh burst
    dataout,			    // Data output bus
    dataout_valid,		 // Valid signal for read data 
    datain_valid,        // data ack.(write data)

    //------- Signals from SDRAM side
    ddr_cke,             // DDR SDRAM Clock enable
    ddr_cs_n,            // DDR SDRAM Chip select
    ddr_ad,              // DDR SDRAM Address bus
    ddr_ba,              // DDR SDRAM Bank bus
    ddr_dqm,             // DDR SDRAM Data Mask signal
    ddr_dq,              // DDR SDRAM Data Bus 
    ddr_ras_n,           // DDR SDRAM Row address strobe
    ddr_cas_n,           // DDR SDRAM Column address strobe
    ddr_we_n,            // DDR SDRAM Write enable
    ddr_dqs,             // DDR SDRAM Data Strobe

    //------- Signals from the test bench
    user_clk,
    endoftest,           // when high, signals the end of the test
    db_size,             // data bus size

    mem_write_cnt,
    mem_read_cnt,
    //------- Signals to the user interface
    burst_len,
    cas_latency_true,
    cas_write_latency_true,
    self_ref_done

);

//------- Signals from User Interface
input                    clk;
input                    mem_clk;
input                    rst_n;

input  [3:0]             cmd;
input  [`ddr3_ip_inst_DSIZE/8-1:0]    dmsel;
input  [`ddr3_ip_inst_ADDR_WIDTH-1:0] addr;
input  [`ddr3_ip_inst_DSIZE-1:0]      datain;
input  [4:0]             burst_cnt;
input                    init_start;
input                    init_done;
input  [2:0]             ar_burst_en;
input  [`ddr3_ip_inst_DSIZE-1:0]      dataout;
input                    cmd_rdy;
input                    cmd_valid;
input                    dataout_valid;
input                    datain_valid;

//------- Signals from SDRAM side
input                    ddr_cke;
input  [`ddr3_ip_inst_CS_WIDTH-1:0]   ddr_cs_n;
`ifdef ddr3_ip_inst_ROW_WIDTH_12
input  [`ddr3_ip_inst_ROW_WIDTH:0]  ddr_ad;
`else
input  [`ddr3_ip_inst_ROW_WIDTH-1:0]  ddr_ad;
`endif
input  [2:0]             ddr_ba;
input                    ddr_we_n;
input                    ddr_cas_n;
input                    ddr_ras_n;
input  [`ddr3_ip_inst_DATA_WIDTH-1:0] ddr_dq;
//input  [`DSIZE/4-1:0]  ddr_dq;
input  [`ddr3_ip_inst_DQS_WIDTH-1:0]  ddr_dqm;
input  [`ddr3_ip_inst_DQS_WIDTH-1:0]  ddr_dqs;

//------- Signals from the test bench
input                    user_clk;
input                    endoftest;
input  [3:0]             db_size;

output  [31:0]           mem_write_cnt;
output  [31:0]           mem_read_cnt;
output  [1:0]            burst_len;
output  [3:0]            cas_latency_true;
output  [3:0]            cas_write_latency_true;
output                   self_ref_done;

reg                      init_start_d0;
reg                      init_start_d1;
reg                      init_start_d2;
reg                      until_init_done;
reg                      until_init_done_d0;
reg                      init_finish;

reg                    init_done_r;

`ifdef ddr3_ip_inst_x4
`define ddr3_ip_inst_DM_X 2
`else
`define ddr3_ip_inst_DM_X 1
`endif

always @ (posedge clk or negedge rst_n) begin
   if (!rst_n)
      init_done_r     <= 1'b0;
   else if (init_done)
      init_done_r     <= 1'b1;
   else if (init_start)
      init_done_r     <= 1'b0;
end

///////////////////////////////////////////////////////////////////////
// delay the DQS signal so that the edge is sepearted from the clock.
wire   [`ddr3_ip_inst_DQS_WIDTH-1:0] ddr_dqs_dly;
wire   [`ddr3_ip_inst_DQS_WIDTH-1:0] ddr_dqs_org;
assign #1 ddr_dqs_org = ddr_dqs;
assign #2 ddr_dqs_dly = ddr_dqs;

wire   [`ddr3_ip_inst_DQS_WIDTH-1:0] ddr_dqs_modified;
wire   ddr_dqs_original;

genvar gen_i;

`ifdef ddr3_ip_inst_DQS_WIDTH_1
   assign ddr_dqs_modified[0] = (ddr_dqs_dly[0] === 1'bz) ? 1'b0 : ddr_dqs_dly[0];
`endif
`ifdef ddr3_ip_inst_DQS_WIDTH_2
   assign ddr_dqs_modified[0] = (ddr_dqs_dly[0] === 1'bz) ? 1'b0 : ddr_dqs_dly[0];
   assign ddr_dqs_modified[1] = (ddr_dqs_dly[1] === 1'bz) ? 1'b0 : ddr_dqs_dly[1];
`endif
`ifdef ddr3_ip_inst_DQS_WIDTH_3
   assign ddr_dqs_modified[0] = (ddr_dqs_dly[0] === 1'bz) ? 1'b0 : ddr_dqs_dly[0];
   assign ddr_dqs_modified[1] = (ddr_dqs_dly[1] === 1'bz) ? 1'b0 : ddr_dqs_dly[1];
   assign ddr_dqs_modified[2] = (ddr_dqs_dly[2] === 1'bz) ? 1'b0 : ddr_dqs_dly[2];
`endif
`ifdef ddr3_ip_inst_DQS_WIDTH_4
   `ifdef ddr3_ip_inst_RDIMM
      `ifdef ddr3_ip_inst_x4
         assign ddr_dqs_modified[0] = (ddr_dqs_dly[0] === 1'bz) ? 1'b0 : ddr_dqs_dly[0];
         assign ddr_dqs_modified[1] = (ddr_dqs_dly[2] === 1'bz) ? 1'b0 : ddr_dqs_dly[2];
         assign ddr_dqs_modified[2] = (ddr_dqs_dly[1] === 1'bz) ? 1'b0 : ddr_dqs_dly[1];
         assign ddr_dqs_modified[3] = (ddr_dqs_dly[3] === 1'bz) ? 1'b0 : ddr_dqs_dly[3];
      `else
         assign ddr_dqs_modified[0] = (ddr_dqs_dly[0] === 1'bz) ? 1'b0 : ddr_dqs_dly[0];
         assign ddr_dqs_modified[1] = (ddr_dqs_dly[1] === 1'bz) ? 1'b0 : ddr_dqs_dly[1];
         assign ddr_dqs_modified[2] = (ddr_dqs_dly[2] === 1'bz) ? 1'b0 : ddr_dqs_dly[2];
         assign ddr_dqs_modified[3] = (ddr_dqs_dly[3] === 1'bz) ? 1'b0 : ddr_dqs_dly[3];
      `endif
   `else
         assign ddr_dqs_modified[0] = (ddr_dqs_dly[0] === 1'bz) ? 1'b0 : ddr_dqs_dly[0];
         assign ddr_dqs_modified[1] = (ddr_dqs_dly[1] === 1'bz) ? 1'b0 : ddr_dqs_dly[1];
         assign ddr_dqs_modified[2] = (ddr_dqs_dly[2] === 1'bz) ? 1'b0 : ddr_dqs_dly[2];
         assign ddr_dqs_modified[3] = (ddr_dqs_dly[3] === 1'bz) ? 1'b0 : ddr_dqs_dly[3];
   `endif
`endif
`ifdef ddr3_ip_inst_DQS_WIDTH_5
   assign ddr_dqs_modified[0] = (ddr_dqs_dly[0] === 1'bz) ? 1'b0 : ddr_dqs_dly[0];
   assign ddr_dqs_modified[1] = (ddr_dqs_dly[1] === 1'bz) ? 1'b0 : ddr_dqs_dly[1];
   assign ddr_dqs_modified[2] = (ddr_dqs_dly[2] === 1'bz) ? 1'b0 : ddr_dqs_dly[2];
   assign ddr_dqs_modified[3] = (ddr_dqs_dly[3] === 1'bz) ? 1'b0 : ddr_dqs_dly[3];
   assign ddr_dqs_modified[4] = (ddr_dqs_dly[4] === 1'bz) ? 1'b0 : ddr_dqs_dly[4];
`endif
`ifdef ddr3_ip_inst_DQS_WIDTH_6
   `ifdef ddr3_ip_inst_RDIMM
      `ifdef ddr3_ip_inst_x4
         assign ddr_dqs_modified[0] = (ddr_dqs_dly[0] === 1'bz) ? 1'b0 : ddr_dqs_dly[0];
         assign ddr_dqs_modified[1] = (ddr_dqs_dly[3] === 1'bz) ? 1'b0 : ddr_dqs_dly[3];
         assign ddr_dqs_modified[2] = (ddr_dqs_dly[1] === 1'bz) ? 1'b0 : ddr_dqs_dly[1];
         assign ddr_dqs_modified[3] = (ddr_dqs_dly[4] === 1'bz) ? 1'b0 : ddr_dqs_dly[4];
         assign ddr_dqs_modified[4] = (ddr_dqs_dly[2] === 1'bz) ? 1'b0 : ddr_dqs_dly[2];
         assign ddr_dqs_modified[5] = (ddr_dqs_dly[5] === 1'bz) ? 1'b0 : ddr_dqs_dly[5];
      `else
         assign ddr_dqs_modified[0] = (ddr_dqs_dly[0] === 1'bz) ? 1'b0 : ddr_dqs_dly[0];
         assign ddr_dqs_modified[1] = (ddr_dqs_dly[1] === 1'bz) ? 1'b0 : ddr_dqs_dly[1];
         assign ddr_dqs_modified[2] = (ddr_dqs_dly[2] === 1'bz) ? 1'b0 : ddr_dqs_dly[2];
         assign ddr_dqs_modified[3] = (ddr_dqs_dly[3] === 1'bz) ? 1'b0 : ddr_dqs_dly[3];
         assign ddr_dqs_modified[4] = (ddr_dqs_dly[4] === 1'bz) ? 1'b0 : ddr_dqs_dly[4];
         assign ddr_dqs_modified[5] = (ddr_dqs_dly[5] === 1'bz) ? 1'b0 : ddr_dqs_dly[5];
      `endif
   `else
         assign ddr_dqs_modified[0] = (ddr_dqs_dly[0] === 1'bz) ? 1'b0 : ddr_dqs_dly[0];
         assign ddr_dqs_modified[1] = (ddr_dqs_dly[1] === 1'bz) ? 1'b0 : ddr_dqs_dly[1];
         assign ddr_dqs_modified[2] = (ddr_dqs_dly[2] === 1'bz) ? 1'b0 : ddr_dqs_dly[2];
         assign ddr_dqs_modified[3] = (ddr_dqs_dly[3] === 1'bz) ? 1'b0 : ddr_dqs_dly[3];
         assign ddr_dqs_modified[4] = (ddr_dqs_dly[4] === 1'bz) ? 1'b0 : ddr_dqs_dly[4];
         assign ddr_dqs_modified[5] = (ddr_dqs_dly[5] === 1'bz) ? 1'b0 : ddr_dqs_dly[5];
   `endif
`endif
`ifdef ddr3_ip_inst_DQS_WIDTH_7
         assign ddr_dqs_modified[0] = (ddr_dqs_dly[0] === 1'bz) ? 1'b0 : ddr_dqs_dly[0];
         assign ddr_dqs_modified[1] = (ddr_dqs_dly[1] === 1'bz) ? 1'b0 : ddr_dqs_dly[1];
         assign ddr_dqs_modified[2] = (ddr_dqs_dly[2] === 1'bz) ? 1'b0 : ddr_dqs_dly[2];
         assign ddr_dqs_modified[3] = (ddr_dqs_dly[3] === 1'bz) ? 1'b0 : ddr_dqs_dly[3];
         assign ddr_dqs_modified[4] = (ddr_dqs_dly[4] === 1'bz) ? 1'b0 : ddr_dqs_dly[4];
         assign ddr_dqs_modified[5] = (ddr_dqs_dly[5] === 1'bz) ? 1'b0 : ddr_dqs_dly[5];
         assign ddr_dqs_modified[6] = (ddr_dqs_dly[6] === 1'bz) ? 1'b0 : ddr_dqs_dly[6];
`endif
`ifdef ddr3_ip_inst_DQS_WIDTH_8
   `ifdef ddr3_ip_inst_RDIMM
      `ifdef ddr3_ip_inst_x4
         assign ddr_dqs_modified[0] = (ddr_dqs_dly[0] === 1'bz) ? 1'b0 : ddr_dqs_dly[0];
         assign ddr_dqs_modified[1] = (ddr_dqs_dly[4] === 1'bz) ? 1'b0 : ddr_dqs_dly[4];
         assign ddr_dqs_modified[2] = (ddr_dqs_dly[1] === 1'bz) ? 1'b0 : ddr_dqs_dly[1];
         assign ddr_dqs_modified[3] = (ddr_dqs_dly[5] === 1'bz) ? 1'b0 : ddr_dqs_dly[5];
         assign ddr_dqs_modified[4] = (ddr_dqs_dly[2] === 1'bz) ? 1'b0 : ddr_dqs_dly[2];
         assign ddr_dqs_modified[5] = (ddr_dqs_dly[6] === 1'bz) ? 1'b0 : ddr_dqs_dly[6];
         assign ddr_dqs_modified[6] = (ddr_dqs_dly[3] === 1'bz) ? 1'b0 : ddr_dqs_dly[3];
         assign ddr_dqs_modified[7] = (ddr_dqs_dly[7] === 1'bz) ? 1'b0 : ddr_dqs_dly[7];
      `else
         assign ddr_dqs_modified[0] = (ddr_dqs_dly[0] === 1'bz) ? 1'b0 : ddr_dqs_dly[0];
         assign ddr_dqs_modified[1] = (ddr_dqs_dly[1] === 1'bz) ? 1'b0 : ddr_dqs_dly[1];
         assign ddr_dqs_modified[2] = (ddr_dqs_dly[2] === 1'bz) ? 1'b0 : ddr_dqs_dly[2];
         assign ddr_dqs_modified[3] = (ddr_dqs_dly[3] === 1'bz) ? 1'b0 : ddr_dqs_dly[3];
         assign ddr_dqs_modified[4] = (ddr_dqs_dly[4] === 1'bz) ? 1'b0 : ddr_dqs_dly[4];
         assign ddr_dqs_modified[5] = (ddr_dqs_dly[5] === 1'bz) ? 1'b0 : ddr_dqs_dly[5];
         assign ddr_dqs_modified[6] = (ddr_dqs_dly[6] === 1'bz) ? 1'b0 : ddr_dqs_dly[6];
         assign ddr_dqs_modified[7] = (ddr_dqs_dly[7] === 1'bz) ? 1'b0 : ddr_dqs_dly[7];
      `endif
   `else
         assign ddr_dqs_modified[0] = (ddr_dqs_dly[0] === 1'bz) ? 1'b0 : ddr_dqs_dly[0];
         assign ddr_dqs_modified[1] = (ddr_dqs_dly[1] === 1'bz) ? 1'b0 : ddr_dqs_dly[1];
         assign ddr_dqs_modified[2] = (ddr_dqs_dly[2] === 1'bz) ? 1'b0 : ddr_dqs_dly[2];
         assign ddr_dqs_modified[3] = (ddr_dqs_dly[3] === 1'bz) ? 1'b0 : ddr_dqs_dly[3];
         assign ddr_dqs_modified[4] = (ddr_dqs_dly[4] === 1'bz) ? 1'b0 : ddr_dqs_dly[4];
         assign ddr_dqs_modified[5] = (ddr_dqs_dly[5] === 1'bz) ? 1'b0 : ddr_dqs_dly[5];
         assign ddr_dqs_modified[6] = (ddr_dqs_dly[6] === 1'bz) ? 1'b0 : ddr_dqs_dly[6];
         assign ddr_dqs_modified[7] = (ddr_dqs_dly[7] === 1'bz) ? 1'b0 : ddr_dqs_dly[7];
   `endif
`endif
`ifdef ddr3_ip_inst_DQS_WIDTH_9
   assign ddr_dqs_modified[0] = (ddr_dqs_dly[0] === 1'bz) ? 1'b0 : ddr_dqs_dly[0];
   assign ddr_dqs_modified[1] = (ddr_dqs_dly[1] === 1'bz) ? 1'b0 : ddr_dqs_dly[1];
   assign ddr_dqs_modified[2] = (ddr_dqs_dly[2] === 1'bz) ? 1'b0 : ddr_dqs_dly[2];
   assign ddr_dqs_modified[3] = (ddr_dqs_dly[3] === 1'bz) ? 1'b0 : ddr_dqs_dly[3];
   assign ddr_dqs_modified[4] = (ddr_dqs_dly[4] === 1'bz) ? 1'b0 : ddr_dqs_dly[4];
   assign ddr_dqs_modified[5] = (ddr_dqs_dly[5] === 1'bz) ? 1'b0 : ddr_dqs_dly[5];
   assign ddr_dqs_modified[6] = (ddr_dqs_dly[6] === 1'bz) ? 1'b0 : ddr_dqs_dly[6];
   assign ddr_dqs_modified[7] = (ddr_dqs_dly[7] === 1'bz) ? 1'b0 : ddr_dqs_dly[7];
   assign ddr_dqs_modified[8] = (ddr_dqs_dly[8] === 1'bz) ? 1'b0 : ddr_dqs_dly[8];
`endif
`ifdef ddr3_ip_inst_DQS_WIDTH_10
   `ifdef ddr3_ip_inst_RDIMM
         assign ddr_dqs_modified[0] = (ddr_dqs_dly[0] === 1'bz) ? 1'b0 : ddr_dqs_dly[0];
         assign ddr_dqs_modified[1] = (ddr_dqs_dly[5] === 1'bz) ? 1'b0 : ddr_dqs_dly[5];
         assign ddr_dqs_modified[2] = (ddr_dqs_dly[1] === 1'bz) ? 1'b0 : ddr_dqs_dly[1];
         assign ddr_dqs_modified[3] = (ddr_dqs_dly[6] === 1'bz) ? 1'b0 : ddr_dqs_dly[6];
         assign ddr_dqs_modified[4] = (ddr_dqs_dly[2] === 1'bz) ? 1'b0 : ddr_dqs_dly[2];
         assign ddr_dqs_modified[5] = (ddr_dqs_dly[7] === 1'bz) ? 1'b0 : ddr_dqs_dly[7];
         assign ddr_dqs_modified[6] = (ddr_dqs_dly[3] === 1'bz) ? 1'b0 : ddr_dqs_dly[3];
         assign ddr_dqs_modified[7] = (ddr_dqs_dly[8] === 1'bz) ? 1'b0 : ddr_dqs_dly[8];
         assign ddr_dqs_modified[8] = (ddr_dqs_dly[4] === 1'bz) ? 1'b0 : ddr_dqs_dly[4];
         assign ddr_dqs_modified[9] = (ddr_dqs_dly[9] === 1'bz) ? 1'b0 : ddr_dqs_dly[9];
   `else
         assign ddr_dqs_modified[0] = (ddr_dqs_dly[0] === 1'bz) ? 1'b0 : ddr_dqs_dly[0];
         assign ddr_dqs_modified[1] = (ddr_dqs_dly[1] === 1'bz) ? 1'b0 : ddr_dqs_dly[1];
         assign ddr_dqs_modified[2] = (ddr_dqs_dly[2] === 1'bz) ? 1'b0 : ddr_dqs_dly[2];
         assign ddr_dqs_modified[3] = (ddr_dqs_dly[3] === 1'bz) ? 1'b0 : ddr_dqs_dly[3];
         assign ddr_dqs_modified[4] = (ddr_dqs_dly[4] === 1'bz) ? 1'b0 : ddr_dqs_dly[4];
         assign ddr_dqs_modified[5] = (ddr_dqs_dly[5] === 1'bz) ? 1'b0 : ddr_dqs_dly[5];
         assign ddr_dqs_modified[6] = (ddr_dqs_dly[6] === 1'bz) ? 1'b0 : ddr_dqs_dly[6];
         assign ddr_dqs_modified[7] = (ddr_dqs_dly[7] === 1'bz) ? 1'b0 : ddr_dqs_dly[7];
         assign ddr_dqs_modified[8] = (ddr_dqs_dly[8] === 1'bz) ? 1'b0 : ddr_dqs_dly[8];
         assign ddr_dqs_modified[9] = (ddr_dqs_dly[9] === 1'bz) ? 1'b0 : ddr_dqs_dly[9];
   `endif
`endif
`ifdef ddr3_ip_inst_DQS_WIDTH_12
   `ifdef ddr3_ip_inst_RDIMM
         assign ddr_dqs_modified[ 0] = (ddr_dqs_dly[ 0] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 0];
         assign ddr_dqs_modified[ 1] = (ddr_dqs_dly[ 6] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 6];
         assign ddr_dqs_modified[ 2] = (ddr_dqs_dly[ 1] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 1];
         assign ddr_dqs_modified[ 3] = (ddr_dqs_dly[ 7] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 7];
         assign ddr_dqs_modified[ 4] = (ddr_dqs_dly[ 2] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 2];
         assign ddr_dqs_modified[ 5] = (ddr_dqs_dly[ 8] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 8];
         assign ddr_dqs_modified[ 6] = (ddr_dqs_dly[ 3] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 3];
         assign ddr_dqs_modified[ 7] = (ddr_dqs_dly[ 9] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 9];
         assign ddr_dqs_modified[ 8] = (ddr_dqs_dly[ 4] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 4];
         assign ddr_dqs_modified[ 9] = (ddr_dqs_dly[10] === 1'bz) ? 1'b0 : ddr_dqs_dly[10];
         assign ddr_dqs_modified[10] = (ddr_dqs_dly[ 5] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 5];
         assign ddr_dqs_modified[11] = (ddr_dqs_dly[11] === 1'bz) ? 1'b0 : ddr_dqs_dly[11];
   `else
         assign ddr_dqs_modified[ 0] = (ddr_dqs_dly[ 0] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 0];
         assign ddr_dqs_modified[ 1] = (ddr_dqs_dly[ 1] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 1];
         assign ddr_dqs_modified[ 2] = (ddr_dqs_dly[ 2] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 2];
         assign ddr_dqs_modified[ 3] = (ddr_dqs_dly[ 3] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 3];
         assign ddr_dqs_modified[ 4] = (ddr_dqs_dly[ 4] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 4];
         assign ddr_dqs_modified[ 5] = (ddr_dqs_dly[ 5] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 5];
         assign ddr_dqs_modified[ 6] = (ddr_dqs_dly[ 6] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 6];
         assign ddr_dqs_modified[ 7] = (ddr_dqs_dly[ 7] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 7];
         assign ddr_dqs_modified[ 8] = (ddr_dqs_dly[ 8] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 8];
         assign ddr_dqs_modified[ 9] = (ddr_dqs_dly[ 9] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 9];
         assign ddr_dqs_modified[10] = (ddr_dqs_dly[10] === 1'bz) ? 1'b0 : ddr_dqs_dly[10];
         assign ddr_dqs_modified[11] = (ddr_dqs_dly[11] === 1'bz) ? 1'b0 : ddr_dqs_dly[11];
   `endif
`endif
`ifdef ddr3_ip_inst_DQS_WIDTH_14
   `ifdef ddr3_ip_inst_RDIMM
         assign ddr_dqs_modified[ 0] = (ddr_dqs_dly[ 0] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 0];
         assign ddr_dqs_modified[ 1] = (ddr_dqs_dly[ 7] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 7];
         assign ddr_dqs_modified[ 2] = (ddr_dqs_dly[ 1] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 1];
         assign ddr_dqs_modified[ 3] = (ddr_dqs_dly[ 8] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 8];
         assign ddr_dqs_modified[ 4] = (ddr_dqs_dly[ 2] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 2];
         assign ddr_dqs_modified[ 5] = (ddr_dqs_dly[ 9] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 9];
         assign ddr_dqs_modified[ 6] = (ddr_dqs_dly[ 3] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 3];
         assign ddr_dqs_modified[ 7] = (ddr_dqs_dly[10] === 1'bz) ? 1'b0 : ddr_dqs_dly[10];
         assign ddr_dqs_modified[ 8] = (ddr_dqs_dly[ 4] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 4];
         assign ddr_dqs_modified[ 9] = (ddr_dqs_dly[11] === 1'bz) ? 1'b0 : ddr_dqs_dly[11];
         assign ddr_dqs_modified[10] = (ddr_dqs_dly[ 5] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 5];
         assign ddr_dqs_modified[11] = (ddr_dqs_dly[12] === 1'bz) ? 1'b0 : ddr_dqs_dly[12];
         assign ddr_dqs_modified[12] = (ddr_dqs_dly[ 6] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 6];
         assign ddr_dqs_modified[13] = (ddr_dqs_dly[13] === 1'bz) ? 1'b0 : ddr_dqs_dly[13];
   `else
         assign ddr_dqs_modified[ 0] = (ddr_dqs_dly[ 0] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 0];
         assign ddr_dqs_modified[ 1] = (ddr_dqs_dly[ 1] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 1];
         assign ddr_dqs_modified[ 2] = (ddr_dqs_dly[ 2] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 2];
         assign ddr_dqs_modified[ 3] = (ddr_dqs_dly[ 3] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 3];
         assign ddr_dqs_modified[ 4] = (ddr_dqs_dly[ 4] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 4];
         assign ddr_dqs_modified[ 5] = (ddr_dqs_dly[ 5] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 5];
         assign ddr_dqs_modified[ 6] = (ddr_dqs_dly[ 6] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 6];
         assign ddr_dqs_modified[ 7] = (ddr_dqs_dly[ 7] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 7];
         assign ddr_dqs_modified[ 8] = (ddr_dqs_dly[ 8] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 8];
         assign ddr_dqs_modified[ 9] = (ddr_dqs_dly[ 9] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 9];
         assign ddr_dqs_modified[10] = (ddr_dqs_dly[10] === 1'bz) ? 1'b0 : ddr_dqs_dly[10];
         assign ddr_dqs_modified[11] = (ddr_dqs_dly[11] === 1'bz) ? 1'b0 : ddr_dqs_dly[11];
         assign ddr_dqs_modified[12] = (ddr_dqs_dly[12] === 1'bz) ? 1'b0 : ddr_dqs_dly[12];
         assign ddr_dqs_modified[13] = (ddr_dqs_dly[13] === 1'bz) ? 1'b0 : ddr_dqs_dly[13];
   `endif
`endif
`ifdef ddr3_ip_inst_DQS_WIDTH_16
   `ifdef ddr3_ip_inst_RDIMM
         assign ddr_dqs_modified[0]  = (ddr_dqs_dly[ 0] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 0];
         assign ddr_dqs_modified[1]  = (ddr_dqs_dly[ 8] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 8];
         assign ddr_dqs_modified[2]  = (ddr_dqs_dly[ 1] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 1];
         assign ddr_dqs_modified[3]  = (ddr_dqs_dly[ 9] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 9];
         assign ddr_dqs_modified[4]  = (ddr_dqs_dly[ 2] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 2];
         assign ddr_dqs_modified[5]  = (ddr_dqs_dly[10] === 1'bz) ? 1'b0 : ddr_dqs_dly[10];
         assign ddr_dqs_modified[6]  = (ddr_dqs_dly[ 3] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 3];
         assign ddr_dqs_modified[7]  = (ddr_dqs_dly[11] === 1'bz) ? 1'b0 : ddr_dqs_dly[11];
         assign ddr_dqs_modified[8]  = (ddr_dqs_dly[ 4] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 4];
         assign ddr_dqs_modified[9]  = (ddr_dqs_dly[12] === 1'bz) ? 1'b0 : ddr_dqs_dly[12];
         assign ddr_dqs_modified[10] = (ddr_dqs_dly[ 5] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 5];
         assign ddr_dqs_modified[11] = (ddr_dqs_dly[13] === 1'bz) ? 1'b0 : ddr_dqs_dly[13];
         assign ddr_dqs_modified[12] = (ddr_dqs_dly[ 6] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 6];
         assign ddr_dqs_modified[13] = (ddr_dqs_dly[14] === 1'bz) ? 1'b0 : ddr_dqs_dly[14];
         assign ddr_dqs_modified[14] = (ddr_dqs_dly[ 7] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 7];
         assign ddr_dqs_modified[15] = (ddr_dqs_dly[15] === 1'bz) ? 1'b0 : ddr_dqs_dly[15];
   `else
         assign ddr_dqs_modified[0] = (ddr_dqs_dly[0] === 1'bz) ? 1'b0 : ddr_dqs_dly[0];
         assign ddr_dqs_modified[1] = (ddr_dqs_dly[1] === 1'bz) ? 1'b0 : ddr_dqs_dly[1];
         assign ddr_dqs_modified[2] = (ddr_dqs_dly[2] === 1'bz) ? 1'b0 : ddr_dqs_dly[2];
         assign ddr_dqs_modified[3] = (ddr_dqs_dly[3] === 1'bz) ? 1'b0 : ddr_dqs_dly[3];
         assign ddr_dqs_modified[4] = (ddr_dqs_dly[4] === 1'bz) ? 1'b0 : ddr_dqs_dly[4];
         assign ddr_dqs_modified[5] = (ddr_dqs_dly[5] === 1'bz) ? 1'b0 : ddr_dqs_dly[5];
         assign ddr_dqs_modified[6] = (ddr_dqs_dly[6] === 1'bz) ? 1'b0 : ddr_dqs_dly[6];
         assign ddr_dqs_modified[7] = (ddr_dqs_dly[7] === 1'bz) ? 1'b0 : ddr_dqs_dly[7];
         assign ddr_dqs_modified[8] = (ddr_dqs_dly[8] === 1'bz) ? 1'b0 : ddr_dqs_dly[8];
         assign ddr_dqs_modified[9] = (ddr_dqs_dly[9] === 1'bz) ? 1'b0 : ddr_dqs_dly[9];
         assign ddr_dqs_modified[10] = (ddr_dqs_dly[10] === 1'bz) ? 1'b0 : ddr_dqs_dly[10];
         assign ddr_dqs_modified[11] = (ddr_dqs_dly[11] === 1'bz) ? 1'b0 : ddr_dqs_dly[11];
         assign ddr_dqs_modified[12] = (ddr_dqs_dly[12] === 1'bz) ? 1'b0 : ddr_dqs_dly[12];
         assign ddr_dqs_modified[13] = (ddr_dqs_dly[13] === 1'bz) ? 1'b0 : ddr_dqs_dly[13];
         assign ddr_dqs_modified[14] = (ddr_dqs_dly[14] === 1'bz) ? 1'b0 : ddr_dqs_dly[14];
         assign ddr_dqs_modified[15] = (ddr_dqs_dly[15] === 1'bz) ? 1'b0 : ddr_dqs_dly[15];
   `endif
`endif

`ifdef ddr3_ip_inst_DQS_WIDTH_18
   `ifdef ddr3_ip_inst_RDIMM
         assign ddr_dqs_modified[ 0] = (ddr_dqs_dly[ 0] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 0];
         assign ddr_dqs_modified[ 1] = (ddr_dqs_dly[ 9] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 9];
         assign ddr_dqs_modified[ 2] = (ddr_dqs_dly[ 1] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 1];
         assign ddr_dqs_modified[ 3] = (ddr_dqs_dly[10] === 1'bz) ? 1'b0 : ddr_dqs_dly[10];
         assign ddr_dqs_modified[ 4] = (ddr_dqs_dly[ 2] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 2];
         assign ddr_dqs_modified[ 5] = (ddr_dqs_dly[11] === 1'bz) ? 1'b0 : ddr_dqs_dly[11];
         assign ddr_dqs_modified[ 6] = (ddr_dqs_dly[ 3] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 3];
         assign ddr_dqs_modified[ 7] = (ddr_dqs_dly[12] === 1'bz) ? 1'b0 : ddr_dqs_dly[12];
         assign ddr_dqs_modified[ 8] = (ddr_dqs_dly[ 4] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 4];
         assign ddr_dqs_modified[ 9] = (ddr_dqs_dly[13] === 1'bz) ? 1'b0 : ddr_dqs_dly[13];
         assign ddr_dqs_modified[10] = (ddr_dqs_dly[ 5] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 5];
         assign ddr_dqs_modified[11] = (ddr_dqs_dly[14] === 1'bz) ? 1'b0 : ddr_dqs_dly[14];
         assign ddr_dqs_modified[12] = (ddr_dqs_dly[ 6] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 6];
         assign ddr_dqs_modified[13] = (ddr_dqs_dly[15] === 1'bz) ? 1'b0 : ddr_dqs_dly[15];
         assign ddr_dqs_modified[14] = (ddr_dqs_dly[ 7] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 7];
         assign ddr_dqs_modified[15] = (ddr_dqs_dly[16] === 1'bz) ? 1'b0 : ddr_dqs_dly[16];
         assign ddr_dqs_modified[16] = (ddr_dqs_dly[ 8] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 8];
         assign ddr_dqs_modified[17] = (ddr_dqs_dly[17] === 1'bz) ? 1'b0 : ddr_dqs_dly[17];
   `else
         assign ddr_dqs_modified[ 0] = (ddr_dqs_dly[ 0] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 0];
         assign ddr_dqs_modified[ 1] = (ddr_dqs_dly[ 1] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 1];
         assign ddr_dqs_modified[ 2] = (ddr_dqs_dly[ 2] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 2];
         assign ddr_dqs_modified[ 3] = (ddr_dqs_dly[ 3] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 3];
         assign ddr_dqs_modified[ 4] = (ddr_dqs_dly[ 4] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 4];
         assign ddr_dqs_modified[ 5] = (ddr_dqs_dly[ 5] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 5];
         assign ddr_dqs_modified[ 6] = (ddr_dqs_dly[ 6] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 6];
         assign ddr_dqs_modified[ 7] = (ddr_dqs_dly[ 7] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 7];
         assign ddr_dqs_modified[ 8] = (ddr_dqs_dly[ 8] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 8];
         assign ddr_dqs_modified[ 9] = (ddr_dqs_dly[ 9] === 1'bz) ? 1'b0 : ddr_dqs_dly[ 9];
         assign ddr_dqs_modified[10] = (ddr_dqs_dly[10] === 1'bz) ? 1'b0 : ddr_dqs_dly[10];
         assign ddr_dqs_modified[11] = (ddr_dqs_dly[11] === 1'bz) ? 1'b0 : ddr_dqs_dly[11];
         assign ddr_dqs_modified[12] = (ddr_dqs_dly[12] === 1'bz) ? 1'b0 : ddr_dqs_dly[12];
         assign ddr_dqs_modified[13] = (ddr_dqs_dly[13] === 1'bz) ? 1'b0 : ddr_dqs_dly[13];
         assign ddr_dqs_modified[14] = (ddr_dqs_dly[14] === 1'bz) ? 1'b0 : ddr_dqs_dly[14];
         assign ddr_dqs_modified[15] = (ddr_dqs_dly[15] === 1'bz) ? 1'b0 : ddr_dqs_dly[15];
         assign ddr_dqs_modified[16] = (ddr_dqs_dly[16] === 1'bz) ? 1'b0 : ddr_dqs_dly[16];
         assign ddr_dqs_modified[17] = (ddr_dqs_dly[17] === 1'bz) ? 1'b0 : ddr_dqs_dly[17];
   `endif
`endif

`ifdef ddr3_ip_inst_RDIMM
  assign ddr_dqs_original = (|(ddr_dqs_org) !== 1'b1) ? 1'b0 : |(ddr_dqs_org);
`else
assign ddr_dqs_original = (ddr_dqs_org[0] === 1'bz) ? 1'b0 : ddr_dqs_org[0];
`endif

// Since a lot of signals will be in a state of flux initially, disable checks on them.

reg     sr_cmd_active;
integer disable_check;
integer i;

initial begin
    disable_check      = 0;
    init_start_d0      = 0; 
    init_start_d1      = 0;
    init_start_d2      = 0;
    until_init_done    = 1;
    until_init_done_d0 = 1;
end

always @ (posedge mem_clk) begin
    disable_check    <= disable_check +1 ;
    init_start_d0    <= init_start;
    init_start_d1    <= init_start_d0;
    init_start_d2    <= init_start_d1;
    if ({init_start_d2, init_start_d1} == 2'b10)
       until_init_done    <= 1'b0;
    until_init_done_d0    <= until_init_done;
end

always @ (ddr_dqs) begin
    for (i=0;i<`ddr3_ip_inst_DQS_WIDTH;i=i+1) begin
        if ((ddr_dqs[i] === 1'bx) && (disable_check > 10)) begin
          $display ("MON ERROR: Unknown values found on dqs[%0d] at time %0t\n",i,$time);
          test_mem_ctrl.error_flg <= 1'b1;
        end
    end
end
///////////////////////////////////////////////////////////////////////
// Delay the cmd_rdy and cmd_valid in RTL simulations

wire               cmd_valid_dly;
wire               cmd_rdy_dly;

reg               cmd_valid_dly2;
reg               cmd_rdy_dly2;

`ifdef ddr3_ip_inst_NO_WRITE_LEVEL
`else
reg wl_act;
reg wl_act_d;
always @(posedge mem_clk or negedge rst_n) begin
   if (!rst_n) begin
      wl_act_d <= 1'b0;
   end
   else begin
      wl_act_d <= wl_act;
      if ({wl_act_d,wl_act} == 2'b01) begin
//   $display ("\nMON INFO : Write Leveling procedure Entry. Ignore warnings until Write Leveling procedure Exit\n");
      end
      else if ({wl_act_d,wl_act} == 2'b10) begin
//   $display ("\nMON INFO : Write Leveling procedure Exit.\n");
      end
   end
end
`endif
   
    assign #100 cmd_valid_dly = cmd_valid;
    assign #100 cmd_rdy_dly = cmd_rdy;

/*
`ifdef ddr3_ip_inst_GATE_SIM
    assign #2600 cmd_valid_dly = cmd_valid;
    assign #2600 cmd_rdy_dly = cmd_rdy;
`else
    assign #100 cmd_valid_dly = cmd_valid;
    assign #100 cmd_rdy_dly = cmd_rdy;
`endif
*/

always @(negedge clk) begin
    cmd_valid_dly2 <= cmd_valid_dly;
    cmd_rdy_dly2   <= cmd_rdy_dly;
end

///////////////////////////////////////////////////////////////////////
// Shadow registers in the test bench
reg   [1:0]            burst_len;
reg   [3:0]            cas_lat;
reg   [1:0]            add_lat;

// Static programmable registers
reg   [15:0]           trefi;

initial begin
    //trefi            = 16'h0c30;
    trefi            = (`ddr3_ip_inst_TREFI<<1);  //need to calculate the correct count.
end
///////////////////////////////////////////////////////////////////////
// logic that compares the address of every read/write command presented on the 
// user interface with the corresponding read/write command at the memory 
// interface.

// For every command received at the user interface, prepare a table listing:
// Expected command at the memory interface: 
//     read, write, self ref, powerdown, load_mr
// Expected address:
//     row address, column address, bank address

// These values will be compared against the controller output whenever 
// a command is presented on the interface.  They will be stored in a 
// FIFO that is 64 locations deep.

// negative edge is used to prevent any clocking issues 

// Addr, Command compare FIFO signals
reg   [5:0]             wr_addr;
reg   [5:0]             rd_addr;
reg   [40:0]            mem_bnk[0:63];
reg   [40:0]            fifo_out;
wire                    fifo_rd;
wire  [3:0]             fifo_out_cmd;
wire  [`ddr3_ip_inst_ROW_WIDTH-1:0]  fifo_out_row;
wire  [`ddr3_ip_inst_COL_WIDTH-1:0]  fifo_out_col;
wire  [4:0]             fifo_out_bank;
reg   [`ddr3_ip_inst_ROW_WIDTH-1:0]  mem_row_addr [0:31];
reg   [`ddr3_ip_inst_ROW_WIDTH-1:0]  mem_row_addr_out;
reg   [4:0]             orig_mem_burst_cnt;
reg   [4:0]             mem_burst_cnt;
reg   [`ddr3_ip_inst_COL_WIDTH-1:0]  burst_cycle;

reg   [`ddr3_ip_inst_COL_WIDTH-1:0]  actual_col_addr;
// signals that indicate the type of command at the memory interface
wire                    mem_sref_cmd;
wire                    mem_sref_ext_cmd;
wire                    mem_pd_cmd;
wire                    mem_pd_ext_cmd;
wire                    mem_lmr_cmd;
`ifdef ddr3_ip_inst_CS_WIDTH_1
`else
reg                     mem_lmr_cmd_cnt;
`endif
wire                    mem_aref_cmd;
wire                    mem_act_cmd;
wire                    mem_pre_cmd;
wire                    mem_rd_cmd;
wire                    mem_wr_cmd;
wire                    mem_zqcl_cmd;
wire                    mem_zqcs_cmd;
wire                    mem_nop_cmd;

// power active 
reg                     pd_active;
reg                     sr_active;
reg                     pd_active_d;
reg                     sr_active_d;

// flopped signals
reg            	      mem_pd_cmd_d;
reg            	      mem_pd_cmd_2d;
reg            	      mem_pd_ext_cmd_d;
reg 	                  mem_sref_cmd_d;
reg 	                  mem_sref_ext_cmd_d;
reg                     mem_zqcl_cmd_d;
reg                     mem_zqcs_cmd_d;
reg	                  mem_rd_cmd_d;
reg	                  mem_rd_cmd_2d;
reg	                  mem_rd_cmd_3d;
reg	                  mem_rd_cmd_4d;
reg	                  mem_rd_cmd_5d;
reg	                  mem_wr_cmd_d;
reg	                  mem_wr_cmd_2d;
reg	                  mem_wr_cmd_3d;
reg	                  mem_wr_cmd_4d;
reg	                  mem_wr_cmd_5d;
reg                     mem_lmr_cmd_d;
wire  [7:0]             ddr_cs_n_d;
wire  [`ddr3_ip_inst_BANK_WIDTH-1:0] ddr_ba_d;
wire  [`ddr3_ip_inst_ROW_WIDTH-1:0]  ddr_ad_d;

reg   [7:0]             flop_ddr_cs_n;
reg   [`ddr3_ip_inst_BANK_WIDTH-1:0] flop_ddr_ba;
`ifdef ddr3_ip_inst_ROW_WIDTH_12
reg   [`ddr3_ip_inst_ROW_WIDTH:0]  flop_ddr_ad;
`else
reg   [`ddr3_ip_inst_ROW_WIDTH-1:0]  flop_ddr_ad;
`endif

`ifdef ddr3_ip_inst_ROW_WIDTH_GT_13
assign ddr_ad_d = {1'b0, flop_ddr_ad[`ddr3_ip_inst_ROW_WIDTH-1:13], flop_ddr_ad[11:0]};
`else
  `ifdef ddr3_ip_inst_ROW_WIDTH_EQ_13
      assign ddr_ad_d = {1'b0, flop_ddr_ad[`ddr3_ip_inst_ROW_WIDTH-2:0]};
  `else
      assign ddr_ad_d = flop_ddr_ad[`ddr3_ip_inst_ROW_WIDTH-1:0];
  `endif
`endif

assign ddr_ba_d = flop_ddr_ba;
assign ddr_cs_n_d = flop_ddr_cs_n;

///////////////////////////////////////////////////////////////////////
// This part of the logic tracks the LMR command on the memory 
// interface and updates the shadow mode registers.

reg   [3:0]            int_burst_len;
reg   [3:0]            int_burst_len_cmd;
reg   [3:0]            int_cas_lat;
reg   [3:0]            int_add_lat;

always @ (posedge mem_clk or negedge rst_n) begin
    if (!rst_n) begin
      burst_len             <= 2'b00;
      cas_lat               <= 4'b0010;
      add_lat               <= 3'b000;
    end
    `ifdef ddr3_ip_inst_ADDR_MIRROR
       `ifdef ddr3_ip_inst_CS_WIDTH_2
           else if (mem_lmr_cmd && (ddr_cs_n == 2'b01) && (ddr_ba[1:0] == 2'b00)) begin // MR0
             burst_len             <= ddr_ad[1:0];
             cas_lat               <= {ddr_ad[5],ddr_ad[6],ddr_ad[3:2]};
           end
           else if (mem_lmr_cmd && (ddr_cs_n == 2'b10) && (ddr_ba[1:0] == 2'b00)) begin // MR0
             burst_len             <= ddr_ad[1:0];
             cas_lat               <= {ddr_ad[6:4],ddr_ad[2]};
           end
           else if (mem_lmr_cmd && (ddr_cs_n == 2'b01) && (ddr_ba[1:0] == 2'b10)) begin // MR1
             add_lat               <= {ddr_ad[3],ddr_ad[4]};
           end
           else if (mem_lmr_cmd && (ddr_cs_n == 2'b01) && (ddr_ba[1:0] == 2'b01)) begin // MR1
             add_lat               <= ddr_ad[4:3];
           end
       `endif //CS_WIDTH_2

       `ifdef ddr3_ip_inst_CS_WIDTH_4
           else if (mem_lmr_cmd && (ddr_cs_n == 4'b1101 || ddr_cs_n == 4'b0111 || ddr_cs_n == 4'b0101) && (ddr_ba[1:0] == 2'b00)) begin // MR0
             burst_len             <= ddr_ad[1:0];
             cas_lat               <= {ddr_ad[5],ddr_ad[6],ddr_ad[3:2]};
           end
           else if (mem_lmr_cmd && (ddr_cs_n == 4'b1110 || ddr_cs_n == 4'b1011 || ddr_cs_n == 4'b1010) && (ddr_ba[1:0] == 2'b00)) begin // MR0
             burst_len             <= ddr_ad[1:0];
             cas_lat               <= {ddr_ad[6:4],ddr_ad[2]};
           end
           else if (mem_lmr_cmd && (ddr_cs_n == 4'b1101 || ddr_cs_n == 4'b0111 || ddr_cs_n == 4'b0101) && (ddr_ba[1:0] == 2'b10)) begin // MR1
             add_lat               <= {ddr_ad[3],ddr_ad[4]};
           end
           else if (mem_lmr_cmd && (ddr_cs_n == 4'b1110 || ddr_cs_n == 4'b1011 || ddr_cs_n == 4'b1010) && (ddr_ba[1:0] == 2'b01)) begin // MR1
             add_lat               <= ddr_ad[4:3];
           end
       `endif //CS_WIDTH_4

    `else //NO_ADDR_MIRROR
       else if (mem_lmr_cmd && (ddr_ba[1:0] == 2'b00)) begin // MR0
         burst_len             <= ddr_ad[1:0];
         cas_lat               <= {ddr_ad[6:4],ddr_ad[2]};
       end
       else if (mem_lmr_cmd && (ddr_ba[1:0] == 2'b01)) begin // MR1
         add_lat               <= ddr_ad[4:3];
       end
    `endif //ADDR_MIRROR
end

always @ (cas_lat) begin
    case (cas_lat)
        4'b0010 : int_cas_lat = 4'b0101;
        4'b0100 : int_cas_lat = 4'b0110;
        4'b0110 : int_cas_lat = 4'b0111;
        4'b1000 : int_cas_lat = 4'b1000;
        4'b1010 : int_cas_lat = 4'b1001;
        4'b1100 : int_cas_lat = 4'b1010;
        default : int_cas_lat = 4'b0101;
    endcase
end

always @ (add_lat or int_cas_lat) begin
    case (add_lat)
        2'b00   : int_add_lat = 4'b0000;
     	  2'b01   : int_add_lat = int_cas_lat-1;
     	  2'b10   : int_add_lat = int_cas_lat-2;
	     default : int_add_lat = 4'b0000;
    endcase
end

//reg controller_pd_state;
//reg controller_sr_state;
reg controller_pd_state;
reg controller_sr_state;

wire disable_cmd_fifo;
reg  pd_inactive;

initial begin
  controller_pd_state = 1'b0;
  controller_sr_state = 1'b0;
end

always @ (cmd_rdy_dly2 or cmd_valid_dly2 or cmd
       or cmd_rdy or cmd_valid or controller_pd_state) begin
  controller_pd_state <= ((cmd_rdy_dly2 && cmd_valid_dly2 && (cmd == 4'b0101)) || controller_pd_state)
                      && ~(cmd_rdy      && cmd_valid      && (cmd == 4'b1011));
end

always @ (cmd_rdy_dly2 or cmd_valid_dly2 or cmd
       or cmd_rdy or cmd_valid or cmd or controller_sr_state) begin
  controller_sr_state <= ((cmd_rdy_dly2 && cmd_valid_dly2 && (cmd == 4'b1000)) || controller_sr_state)
                      && ~(cmd_rdy      && cmd_valid      && (cmd == 4'b1001));
end

//assign controller_pd_state = ((cmd_rdy_dly && cmd_valid_dly && (cmd == 4'b0101)) || controller_pd_state)
//                             && ~(cmd_rdy && cmd_valid && (cmd == 4'b1011));
//assign controller_sr_state = ((cmd_rdy_dly && cmd_valid_dly && (cmd == 4'b1000)) || controller_sr_state)
//                             && ~(cmd_rdy && cmd_valid && (cmd == 4'b1001));

assign disable_cmd_fifo = controller_pd_state || controller_sr_state;

//assign pd_inactive = (~controller_pd_state && cmd == 4'b1011);

always @ (negedge clk or negedge rst_n) begin
    if (!rst_n) begin
      sr_cmd_active    <= 1'b0;
    end
    else begin
       if (controller_sr_state)
          sr_cmd_active    <= 1'b1;
       else if (mem_sref_ext_cmd)
          sr_cmd_active    <= 1'b0;
    end
end

always @ (negedge clk or negedge rst_n) begin
    if (!rst_n) begin
      pd_inactive    <= 1'b1;
    end
    else begin
       if (cmd_rdy_dly && cmd_valid_dly && (cmd == 4'b0101))
          pd_inactive    <= 1'b0;
       else if (cmd_rdy_dly && cmd_valid_dly && (cmd == 4'b1011))
          pd_inactive    <= 1'b1;
    end
end

///////////////////////////////////////////////////////////////////////
// store the command received at the user interface in the command fifo.
always @ (negedge clk or negedge rst_n) begin
    if (!rst_n) begin
      wr_addr                      <= 0;
    end
    else begin
      if (cmd_rdy_dly && cmd_valid_dly && ~disable_cmd_fifo && ~(pd_inactive && (cmd == 4'b1011))) begin // user presents a valid command
	    case (wr_addr)
           6'd0  : mem_bnk[0]   <= {burst_cnt,cmd, addr};
           6'd1  : mem_bnk[1]   <= {burst_cnt,cmd, addr};
           6'd2  : mem_bnk[2]   <= {burst_cnt,cmd, addr};
           6'd3  : mem_bnk[3]   <= {burst_cnt,cmd, addr};
           6'd4  : mem_bnk[4]   <= {burst_cnt,cmd, addr};
           6'd5  : mem_bnk[5]   <= {burst_cnt,cmd, addr};
           6'd6  : mem_bnk[6]   <= {burst_cnt,cmd, addr};
           6'd7  : mem_bnk[7]   <= {burst_cnt,cmd, addr};
           6'd8  : mem_bnk[8]   <= {burst_cnt,cmd, addr};
           6'd9  : mem_bnk[9]   <= {burst_cnt,cmd, addr};
           6'd10 : mem_bnk[10]  <= {burst_cnt,cmd, addr};
           6'd11 : mem_bnk[11]  <= {burst_cnt,cmd, addr};
           6'd12 : mem_bnk[12]  <= {burst_cnt,cmd, addr};
           6'd13 : mem_bnk[13]  <= {burst_cnt,cmd, addr};
           6'd14 : mem_bnk[14]  <= {burst_cnt,cmd, addr};
           6'd15 : mem_bnk[15]  <= {burst_cnt,cmd, addr};
           6'd16 : mem_bnk[16]  <= {burst_cnt,cmd, addr};
           6'd17 : mem_bnk[17]  <= {burst_cnt,cmd, addr};
           6'd18 : mem_bnk[18]  <= {burst_cnt,cmd, addr};
           6'd19 : mem_bnk[19]  <= {burst_cnt,cmd, addr};
           6'd20 : mem_bnk[20]  <= {burst_cnt,cmd, addr};
           6'd21 : mem_bnk[21]  <= {burst_cnt,cmd, addr};
           6'd22 : mem_bnk[22]  <= {burst_cnt,cmd, addr};
           6'd23 : mem_bnk[23]  <= {burst_cnt,cmd, addr};
           6'd24 : mem_bnk[24]  <= {burst_cnt,cmd, addr};
           6'd25 : mem_bnk[25]  <= {burst_cnt,cmd, addr};
           6'd26 : mem_bnk[26]  <= {burst_cnt,cmd, addr};
           6'd27 : mem_bnk[27]  <= {burst_cnt,cmd, addr};
           6'd28 : mem_bnk[28]  <= {burst_cnt,cmd, addr};
           6'd29 : mem_bnk[29]  <= {burst_cnt,cmd, addr};
           6'd30 : mem_bnk[30]  <= {burst_cnt,cmd, addr};
           6'd31 : mem_bnk[31]  <= {burst_cnt,cmd, addr};
           6'd32 : mem_bnk[32]  <= {burst_cnt,cmd, addr};
           6'd33 : mem_bnk[33]  <= {burst_cnt,cmd, addr};
           6'd34 : mem_bnk[34]  <= {burst_cnt,cmd, addr};
           6'd35 : mem_bnk[35]  <= {burst_cnt,cmd, addr};
           6'd36 : mem_bnk[36]  <= {burst_cnt,cmd, addr};
           6'd37 : mem_bnk[37]  <= {burst_cnt,cmd, addr};
           6'd38 : mem_bnk[38]  <= {burst_cnt,cmd, addr};
           6'd39 : mem_bnk[39]  <= {burst_cnt,cmd, addr};
           6'd40 : mem_bnk[40]  <= {burst_cnt,cmd, addr};
           6'd41 : mem_bnk[41]  <= {burst_cnt,cmd, addr};
           6'd42 : mem_bnk[42]  <= {burst_cnt,cmd, addr};
           6'd43 : mem_bnk[43]  <= {burst_cnt,cmd, addr};
           6'd44 : mem_bnk[44]  <= {burst_cnt,cmd, addr};
           6'd45 : mem_bnk[45]  <= {burst_cnt,cmd, addr};
           6'd46 : mem_bnk[46]  <= {burst_cnt,cmd, addr};
           6'd47 : mem_bnk[47]  <= {burst_cnt,cmd, addr};
           6'd48 : mem_bnk[48]  <= {burst_cnt,cmd, addr};
           6'd49 : mem_bnk[49]  <= {burst_cnt,cmd, addr};
           6'd50 : mem_bnk[50]  <= {burst_cnt,cmd, addr};
           6'd51 : mem_bnk[51]  <= {burst_cnt,cmd, addr};
           6'd52 : mem_bnk[52]  <= {burst_cnt,cmd, addr};
           6'd53 : mem_bnk[53]  <= {burst_cnt,cmd, addr};
           6'd54 : mem_bnk[54]  <= {burst_cnt,cmd, addr};
           6'd55 : mem_bnk[55]  <= {burst_cnt,cmd, addr};
           6'd56 : mem_bnk[56]  <= {burst_cnt,cmd, addr};
           6'd57 : mem_bnk[57]  <= {burst_cnt,cmd, addr};
           6'd58 : mem_bnk[58]  <= {burst_cnt,cmd, addr};
           6'd59 : mem_bnk[59]  <= {burst_cnt,cmd, addr};
           6'd60 : mem_bnk[60]  <= {burst_cnt,cmd, addr};
           6'd61 : mem_bnk[61]  <= {burst_cnt,cmd, addr};
           6'd62 : mem_bnk[62]  <= {burst_cnt,cmd, addr};
           6'd63 : mem_bnk[63]  <= {burst_cnt,cmd, addr};
	    endcase
	    wr_addr           <= wr_addr + 1;
	  end // if (cmd_rdy && cmd_valid) begin
   end // else
end // always @ (negedge clk or negedge rst_n) begin

// The FIFO at the memory interface is read whenever a read, write,
// self ref, pdown or load mr command is received.  For burst reads or writes,
// the FIFO is read only once at the start of the burst.

// self refresh: cke=0, cs=0, ras=0, cas=0, we=1
// powerdown: cke=0
// lmr: cs=0, ras=0, cas=0, we=0
// act: cs=0, ras=0, cas=1, we=1
// pre: cs=0, ras=0, cas=1, we=0
// nop: cs=0, ras=1, cas=1, we=1
// read: cs=0, ras=1, cas=0, we=1
// write: cs=0, ras=1, cas=0, we=0

assign mem_sref_cmd = ~(&ddr_cs_n) & init_done_r & ~ddr_ras_n & ~ddr_cas_n & ddr_we_n & ~ddr_cke;
assign mem_aref_cmd = ~(&ddr_cs_n) & init_done_r & ddr_cke & ~ddr_ras_n & ~ddr_cas_n & ddr_we_n;
assign mem_pd_cmd   = ((~(&ddr_cs_n) & init_done_r & ddr_ras_n & ddr_cas_n & ddr_we_n & ~ddr_cke) | ((&ddr_cs_n) & ~ddr_cke)) & ~sr_active;
assign mem_lmr_cmd  = ~(&ddr_cs_n) & ~ddr_ras_n & ~ddr_cas_n & ~ddr_we_n;
assign mem_act_cmd  = ~(&ddr_cs_n) & init_done_r & ~ddr_ras_n & ddr_cas_n & ddr_we_n;
assign mem_pre_cmd  = ~(&ddr_cs_n) & init_done_r & ~ddr_ras_n & ddr_cas_n & ~ddr_we_n;
assign mem_nop_cmd  = (~(&ddr_cs_n) & ddr_ras_n & ddr_cas_n & ddr_we_n) | &ddr_cs_n;
assign mem_rd_cmd = ~(&ddr_cs_n) & init_done_r & ddr_ras_n & ~ddr_cas_n & ddr_we_n;
assign mem_wr_cmd = ~(&ddr_cs_n) & init_done_r & ddr_ras_n & ~ddr_cas_n & ~ddr_we_n;

assign mem_zqcl_cmd = ~(&ddr_cs_n) & init_done_r & ddr_ras_n & ddr_cas_n & ~ddr_we_n & ddr_ad[10];
assign mem_zqcs_cmd = ~(&ddr_cs_n) & init_done_r & ddr_ras_n & ddr_cas_n & ~ddr_we_n & ~ddr_ad[10];

always @(posedge mem_clk or negedge rst_n) begin
   if (!rst_n) begin
      pd_active   <= 1'b0;
      sr_active   <= 1'b0;
      pd_active_d <= 1'b0;
      sr_active_d <= 1'b0;
   end
   else begin
      pd_active   <= (mem_pd_cmd   | pd_active) & ~ddr_cke;
      sr_active   <= (mem_sref_cmd | sr_active) & ~ddr_cke;
      pd_active_d <= pd_active;
      sr_active_d <= sr_active;
   end
end

assign mem_pd_ext_cmd   = ~pd_active & pd_active_d;
assign mem_sref_ext_cmd = ~sr_active & sr_active_d;

///////////////////////////////////////////////////
//         tXPR check -- 21 JUL 08               //
///////////////////////////////////////////////////


// calculate the memory size to decide the expected tRFC && tXPR
reg [63:0] mem_size;
reg [7:0] exp_txpr;
reg [7:0] exp_trfc;
reg [4:0] mem_db_width;


initial begin
`ifdef ddr3_ip_inst_x4
   mem_db_width = 4;
`else //x4
   `ifdef ddr3_ip_inst_x8
      mem_db_width = 8;
   `else //x8
      `ifdef ddr3_ip_inst_x16
         mem_db_width = 16;
      `endif //x16
   `endif //x8
`endif //x4
mem_size = (mem_db_width * (1<<`ddr3_ip_inst_ROW_WIDTH) * (1<< `ddr3_ip_inst_COL_WIDTH) * (1<<`ddr3_ip_inst_BANK_WIDTH)) >> 20;
//$display ("Memory size is %0d Mb\n", mem_size);
end

always @(mem_size) begin
   case (mem_size)
      //512 Mb
      512   : begin
                exp_txpr <= 8'd40;
                exp_trfc <= 8'd36;
              end
     //1 Gb
      1024  : begin
                exp_txpr <= 8'd48;
                exp_trfc <= 8'd44;
              end
      //2 Gb
      2048  : begin
                exp_txpr <= 8'd68;
                exp_trfc <= 8'd64;
              end
      //4 Gb
      4096  : begin
                exp_txpr <= 8'd124;
                exp_trfc <= 8'd120;
              end
      //8 Gb
      8192  : begin
                exp_txpr <= 8'd144;
                exp_trfc <= 8'd140;
              end
      // other size fixed to 100ns
      default : begin
                  exp_txpr <= 8'd40;
                  exp_trfc <= 8'd36;
                end
   endcase
end // always

// detect CKE goes high
reg  ddr_cke_d;
wire cke_goes_high;

always @(posedge mem_clk or negedge rst_n) begin
   if (!rst_n) begin
      ddr_cke_d <= 1'b1;
   end
   else begin
      ddr_cke_d <= ddr_cke;
   end
end // always

assign cke_goes_high = (ddr_cke_d == 1'b0 && ddr_cke == 1'b1);

// check txpr
wire valid_cmd;
reg mem_aref_cmd_d;
wire txpr_violation;
wire trfc_violation;
reg trfc_pass;
reg [7:0] txpr_cnt;
reg [7:0] trfc_cnt;

assign valid_cmd = mem_sref_cmd || mem_aref_cmd || mem_pd_cmd || mem_lmr_cmd || mem_act_cmd ||
                   mem_rd_cmd || mem_wr_cmd || mem_pre_cmd || mem_zqcl_cmd || mem_zqcs_cmd;

always @(posedge mem_clk or negedge rst_n) begin
   if (!rst_n) begin
      mem_aref_cmd_d <= 1'b0;
   end
   else begin
      mem_aref_cmd_d <= mem_aref_cmd;
   end
end //always


always @(posedge mem_clk or negedge rst_n) begin
   if (!rst_n) begin
      txpr_cnt <= 8'd0;
   end
   else begin
      if (cke_goes_high) begin
         txpr_cnt <= 1;
      end
      else if (txpr_violation) begin
         txpr_cnt <= 8'hff;
      end
      else if (txpr_cnt != 8'd0) begin
         txpr_cnt <= txpr_cnt + 1;
      end
      else begin
         txpr_cnt <= 8'd0;
      end
   end
end //always

always @(posedge mem_clk or negedge rst_n) begin
   if (!rst_n) begin
      trfc_cnt <= 8'd0;
   end
   else begin
      if (mem_aref_cmd) begin
         trfc_cnt <= 8'd1;
      end
      else if (|trfc_cnt) begin
         trfc_cnt <= trfc_cnt + 1;
      end
      else begin
         trfc_cnt <= 8'd0;
      end
   end
end //always

always @(posedge mem_clk or negedge rst_n) begin
   if (!rst_n) begin
      trfc_pass <= 1'b1;
   end
   else begin
      trfc_pass <= ((trfc_cnt>exp_trfc)|| trfc_pass) && ~mem_aref_cmd_d;
   end
end //always


assign txpr_violation = valid_cmd && (txpr_cnt != 8'd0) && (txpr_cnt < exp_txpr) && init_start;
assign trfc_violation = valid_cmd && (!trfc_pass);

//always @(txpr_violation) begin
//   if (txpr_violation) begin
//     $display ("MON ERROR: tXPR violation, tXPR is %0d tCKs for %0d Mb memory, the current period between one valid cmd and the CKE goes high is %0d tCKs.\n", exp_txpr, mem_size, txpr_cnt);
//          test_mem_ctrl.error_flg <= 1'b1;
//   end
//end //always
//
//always @(trfc_violation) begin
//   if (trfc_violation) begin
//     $display ("MON ERROR: tRFC violation, tRFC is %0d tCKs for %0d Mb memory, the current period between one valid cmd and the Auto Refresh cmd is %0d tCKs.\n", exp_trfc, mem_size, trfc_cnt);
//          test_mem_ctrl.error_flg <= 1'b1;
//   end
//end //always

////////////////////////////////////////////////////
assign fifo_rd = (burst_cycle == 0) & ~until_init_done_d0
// & (mem_rd_cmd | mem_wr_cmd | mem_lmr_cmd | mem_aref_cmd 
   & (mem_rd_cmd | mem_wr_cmd | mem_lmr_cmd | mem_zqcl_cmd | mem_zqcs_cmd
   | (mem_pd_cmd & ~mem_pd_cmd_d) | (mem_sref_cmd & ~mem_sref_cmd_d)
   | (mem_sref_ext_cmd) | (mem_pd_ext_cmd));

assign fifo_out_cmd = fifo_out[`ddr3_ip_inst_ADDR_WIDTH+3:`ddr3_ip_inst_ADDR_WIDTH];
assign fifo_out_row = fifo_out[`ddr3_ip_inst_ADDR_WIDTH-1:`ddr3_ip_inst_BSIZE+`ddr3_ip_inst_COL_WIDTH];
assign fifo_out_col = fifo_out[`ddr3_ip_inst_COL_WIDTH-1:0];
assign fifo_out_bank = fifo_out[`ddr3_ip_inst_COL_WIDTH+`ddr3_ip_inst_BSIZE-1:`ddr3_ip_inst_COL_WIDTH];

reg [`ddr3_ip_inst_COL_WIDTH-1:0] lt_10_exp_col_addr;

// compute the expected column address.

//always @ (fifo_out_col or burst_cycle or int_burst_len_cmd) begin
//    lt_10_exp_col_addr = fifo_out_col + ((burst_cycle-1)*int_burst_len_cmd);
//end

always @ (posedge mem_clk or negedge rst_n) begin
   if (!rst_n)
    lt_10_exp_col_addr = 0;
   else
      if (mem_wr_cmd || mem_rd_cmd) begin
         lt_10_exp_col_addr = fifo_out_col + ((burst_cycle-1)*int_burst_len_cmd);
      end
end

always @(posedge mem_clk) begin
   if (!rst_n) begin
      int_burst_len_cmd = 0;
   end
   else
      if (mem_rd_cmd || mem_wr_cmd) begin
            casex ({burst_len, ddr_ad[12]})
                3'b00x   : int_burst_len_cmd = 4'b1000;
                3'b010   : int_burst_len_cmd = 4'b0100;
                3'b011   : int_burst_len_cmd = 4'b1000;
                3'b10x   : int_burst_len_cmd = 4'b0100;
                default : int_burst_len_cmd = 4'b1000;
            endcase
      end
end

`ifdef ddr3_ip_inst_CS_WIDTH_1
`else
always @ (posedge mem_clk or negedge rst_n) begin
   if (!rst_n) begin
      mem_lmr_cmd_cnt       <= 1'b0;
   end
   else begin
      if (mem_lmr_cmd && init_finish)
         mem_lmr_cmd_cnt    <= ~mem_lmr_cmd_cnt;
   end
end
`endif

////////////////////////////////////////////////////////////////////
// Sample the commands on the sdram memory interface
always @ (posedge mem_clk or negedge rst_n) begin
    if (!rst_n) begin
	rd_addr               <= 6'd0;
	mem_pd_cmd_d          <= 1'b0;
	mem_pd_cmd_2d         <= 1'b0;
	mem_pd_ext_cmd_d      <= 1'b0;
	mem_sref_cmd_d        <= 1'b0;
	mem_sref_ext_cmd_d    <= 1'b0;
	mem_zqcl_cmd_d        <= 1'b0;
	mem_zqcs_cmd_d        <= 1'b0;
	mem_burst_cnt          = 5'd0;
	mem_rd_cmd_d          <= 1'b0;
	mem_rd_cmd_2d         <= 1'b0;
	mem_rd_cmd_3d         <= 1'b0;
	mem_rd_cmd_4d         <= 1'b0;
	mem_rd_cmd_5d         <= 1'b0;
	mem_wr_cmd_d          <= 1'b0;
	mem_wr_cmd_2d         <= 1'b0;
	mem_wr_cmd_3d         <= 1'b0;
	mem_wr_cmd_4d         <= 1'b0;
	mem_wr_cmd_5d         <= 1'b0;
	mem_lmr_cmd_d         <= 1'b0;
	burst_cycle           <= 0;
	flop_ddr_ad           <= 0;
	flop_ddr_cs_n         <= 8'hff;
	flop_ddr_ba           <= 3'd0;
    end
    else begin

if (mem_lmr_cmd) begin
 `ifdef ddr3_ip_inst_ADDR_MIRROR
   `ifdef ddr3_ip_inst_CS_WIDTH_2
      if (ddr_cs_n == 2'b01) begin
	      flop_ddr_ad           <= {ddr_ad[`ddr3_ip_inst_ROW_WIDTH-1:9],ddr_ad[7],ddr_ad[8],ddr_ad[5],ddr_ad[6],ddr_ad[3],ddr_ad[4],ddr_ad[2:0]};
         flop_ddr_ba           <= {ddr_ba[2],ddr_ba[0],ddr_ba[1]};
      end
      else begin
	      flop_ddr_ad           <= ddr_ad;
	      flop_ddr_ba           <= ddr_ba;
      end
   `endif //CS_WIDTH_2
   `ifdef ddr3_ip_inst_CS_WIDTH_4
      if (ddr_cs_n == 4'b1101 || ddr_cs_n == 4'b0111 || ddr_cs_n == 4'b0101) begin
	      flop_ddr_ad           <= {ddr_ad[`ddr3_ip_inst_ROW_WIDTH-1:9],ddr_ad[7],ddr_ad[8],ddr_ad[5],ddr_ad[6],ddr_ad[3],ddr_ad[4],ddr_ad[2:0]};
         flop_ddr_ba           <= {ddr_ba[2],ddr_ba[0],ddr_ba[1]};
      end
      else begin
	      flop_ddr_ad           <= ddr_ad;
	      flop_ddr_ba           <= ddr_ba;
      end
   `endif //CS_WIDTH_4
 `else //NO_ADDR_MIRROR
	flop_ddr_ad           <= ddr_ad;
	flop_ddr_ba           <= ddr_ba;
 `endif //ADDR_MIRROR
end
else if (mem_wr_cmd || mem_rd_cmd || mem_act_cmd) begin
	flop_ddr_ad           <= ddr_ad;
	flop_ddr_ba           <= ddr_ba;
end
	flop_ddr_cs_n         <= ddr_cs_n;

	mem_pd_cmd_d          <= mem_pd_cmd;
	mem_pd_cmd_2d         <= mem_pd_cmd_d;
	mem_pd_ext_cmd_d      <= mem_pd_ext_cmd;
	mem_sref_cmd_d        <= mem_sref_cmd;
	mem_sref_ext_cmd_d    <= mem_sref_ext_cmd;
	mem_zqcl_cmd_d        <= mem_zqcl_cmd;
	mem_zqcs_cmd_d        <= mem_zqcs_cmd;
	mem_rd_cmd_d          <= mem_rd_cmd;
	mem_rd_cmd_2d         <= mem_rd_cmd_d;
	mem_rd_cmd_3d         <= mem_rd_cmd_2d;
	mem_rd_cmd_4d         <= mem_rd_cmd_3d;
	mem_rd_cmd_5d         <= mem_rd_cmd_4d;
	mem_wr_cmd_d          <= mem_wr_cmd;
	mem_lmr_cmd_d         <= mem_lmr_cmd;
	mem_wr_cmd_2d         <= mem_wr_cmd_d;
	mem_wr_cmd_3d         <= mem_wr_cmd_2d;
	mem_wr_cmd_4d         <= mem_wr_cmd_3d;
	mem_wr_cmd_5d         <= mem_wr_cmd_4d;

	if (fifo_rd) begin
     `ifdef ddr3_ip_inst_CS_WIDTH_1 
       rd_addr           <= rd_addr + 1;
     `else
       if (mem_lmr_cmd && !mem_lmr_cmd_cnt)
       rd_addr           <= rd_addr;
       else
       rd_addr           <= rd_addr + 1;
     `endif

	    // blocking statement is used intentionally so that comparison 
	    // can happen straight away.
	    case (rd_addr)
	        6'd0  : fifo_out  = mem_bnk[0];
	        6'd1  : fifo_out  = mem_bnk[1];
	        6'd2  : fifo_out  = mem_bnk[2];
	        6'd3  : fifo_out  = mem_bnk[3];
	        6'd4  : fifo_out  = mem_bnk[4];
	        6'd5  : fifo_out  = mem_bnk[5];
	        6'd6  : fifo_out  = mem_bnk[6];
	        6'd7  : fifo_out  = mem_bnk[7];
	        6'd8  : fifo_out  = mem_bnk[8];
	        6'd9  : fifo_out  = mem_bnk[9];
	        6'd10 : fifo_out  = mem_bnk[10];
	        6'd11 : fifo_out  = mem_bnk[11];
	        6'd12 : fifo_out  = mem_bnk[12];
	        6'd13 : fifo_out  = mem_bnk[13];
	        6'd14 : fifo_out  = mem_bnk[14];
	        6'd15 : fifo_out  = mem_bnk[15];
	        6'd16 : fifo_out  = mem_bnk[16];
	        6'd17 : fifo_out  = mem_bnk[17];
	        6'd18 : fifo_out  = mem_bnk[18];
	        6'd19 : fifo_out  = mem_bnk[19];
	        6'd20 : fifo_out  = mem_bnk[20];
	        6'd21 : fifo_out  = mem_bnk[21];
	        6'd22 : fifo_out  = mem_bnk[22];
	        6'd23 : fifo_out  = mem_bnk[23];
	        6'd24 : fifo_out  = mem_bnk[24];
	        6'd25 : fifo_out  = mem_bnk[25];
	        6'd26 : fifo_out  = mem_bnk[26];
	        6'd27 : fifo_out  = mem_bnk[27];
	        6'd28 : fifo_out  = mem_bnk[28];
	        6'd29 : fifo_out  = mem_bnk[29];
	        6'd30 : fifo_out  = mem_bnk[30];
	        6'd31 : fifo_out  = mem_bnk[31];
	        6'd32 : fifo_out  = mem_bnk[32];
	        6'd33 : fifo_out  = mem_bnk[33];
	        6'd34 : fifo_out  = mem_bnk[34];
	        6'd35 : fifo_out  = mem_bnk[35];
	        6'd36 : fifo_out  = mem_bnk[36];
	        6'd37 : fifo_out  = mem_bnk[37];
	        6'd38 : fifo_out  = mem_bnk[38];
	        6'd39 : fifo_out  = mem_bnk[39];
	        6'd40 : fifo_out  = mem_bnk[40];
	        6'd41 : fifo_out  = mem_bnk[41];
	        6'd42 : fifo_out  = mem_bnk[42];
	        6'd43 : fifo_out  = mem_bnk[43];
	        6'd44 : fifo_out  = mem_bnk[44];
	        6'd45 : fifo_out  = mem_bnk[45];
	        6'd46 : fifo_out  = mem_bnk[46];
	        6'd47 : fifo_out  = mem_bnk[47];
	        6'd48 : fifo_out  = mem_bnk[48];
	        6'd49 : fifo_out  = mem_bnk[49];
	        6'd50 : fifo_out  = mem_bnk[50];
	        6'd51 : fifo_out  = mem_bnk[51];
	        6'd52 : fifo_out  = mem_bnk[52];
	        6'd53 : fifo_out  = mem_bnk[53];
	        6'd54 : fifo_out  = mem_bnk[54];
	        6'd55 : fifo_out  = mem_bnk[55];
	        6'd56 : fifo_out  = mem_bnk[56];
	        6'd57 : fifo_out  = mem_bnk[57];
	        6'd58 : fifo_out  = mem_bnk[58];
	        6'd59 : fifo_out  = mem_bnk[59];
	        6'd60 : fifo_out  = mem_bnk[60];
	        6'd61 : fifo_out  = mem_bnk[61];
	        6'd62 : fifo_out  = mem_bnk[62];
	        6'd63 : fifo_out  = mem_bnk[63];
	    endcase

       if (mem_rd_cmd || mem_wr_cmd)
           mem_burst_cnt  =  fifo_out[`ddr3_ip_inst_ADDR_WIDTH+8:`ddr3_ip_inst_ADDR_WIDTH+4];
       end //fifo_rd
       // assign the burst count value to the mem_burst_cnt signal.
       orig_mem_burst_cnt  = fifo_out[`ddr3_ip_inst_ADDR_WIDTH+8:`ddr3_ip_inst_ADDR_WIDTH+4];


       // Compare the command presented at the user interface with
       // the command seen on the memory interface

       // ---------------  Read command comparison  ---------------------
	    if (mem_rd_cmd_d && ((fifo_out_cmd == 4'b0001) || (fifo_out_cmd == 4'b0011))) begin
          `ifdef ddr3_ip_inst_NO_DEBUG
          `else
              $display ("MON INFO: Read command at time %0t\n",$time);
          `endif
       end

       if (mem_rd_cmd_d && !((fifo_out_cmd == 4'b0001) || (fifo_out_cmd == 4'b0011))) begin
           $display ("MON ERROR: Unexpected Read command at time %0t\n",$time);
          test_mem_ctrl.error_flg <= 1'b1;
       end

       // ---------------  Write command comparison  ---------------------
	    if (mem_wr_cmd_d && ((fifo_out_cmd == 4'b0010) || (fifo_out_cmd == 4'b0100))) begin
       `ifdef ddr3_ip_inst_NO_DEBUG
       `else
           $display ("MON INFO: Write command at time %0t\n",$time);
       `endif
       end

	    if (mem_wr_cmd_d && !((fifo_out_cmd == 4'b0010) || (fifo_out_cmd == 4'b0100))) begin
           $display ("MON ERROR: Unexpected Write command at time %0t\n",$time);
          test_mem_ctrl.error_flg <= 1'b1;
       end

	// ---------------  LMR command comparison  ---------------------
       if (mem_lmr_cmd_d && (fifo_out_cmd == 4'b0110)) begin
//       `ifdef NO_DEBUG
//       `else
           $display ("MON INFO: LMR command at time %0t\n",$time);
//       `endif
       end

       if (mem_lmr_cmd_d && (fifo_out_cmd != 4'b0110)) begin
           $display ("MON ERROR: Unexpected LMR command at time %0t\n",$time);
          test_mem_ctrl.error_flg <= 1'b1;
       end

	// ---------------  Self Ref command comparison  ------------------
       if (mem_sref_cmd_d && (fifo_out_cmd == 4'b1000)) begin
       //`ifdef NO_DEBUG
       //`else
           $display ("MON INFO: Self Ref command at time %0t\n",$time);
       //`endif
       end

       if (mem_sref_cmd_d && (fifo_out_cmd != 4'b1000)) begin
           $display ("MON ERROR: Unexpected Self Ref command at time %0t\n",$time);
          test_mem_ctrl.error_flg <= 1'b1;
       end

       if (mem_sref_ext_cmd_d && (fifo_out_cmd == 4'b1001)) begin
       //`ifdef NO_DEBUG
       //`else
           $display ("MON INFO: Self Ref Exit command at time %0t\n",$time);
       //`endif
       end

       if (mem_sref_ext_cmd_d && (fifo_out_cmd != 4'b1001)) begin
           $display ("MON ERROR: Unexpected Self Ref Exit command at time %0t\n",$time);
          test_mem_ctrl.error_flg <= 1'b1;
       end

       // ---------------  Powerdown command comparison  ------------------
       if (mem_pd_cmd_d && !mem_pd_cmd_2d && (fifo_out_cmd == 4'b0101)) begin
       //`ifdef NO_DEBUG
       //`else
           $display ("MON INFO: Powerdown command at time %0t\n",$time);
       //`endif
       end
       
       if (mem_pd_cmd_d && !mem_pd_cmd_2d && (fifo_out_cmd != 4'b0101)) begin
           $display ("MON ERROR: Unexpected Powerdown command at time %0t\n",$time);
          test_mem_ctrl.error_flg <= 1'b1;
       end

       if (mem_pd_ext_cmd_d && (fifo_out_cmd == 4'b1011)) begin
       //`ifdef NO_DEBUG
       //`else
           $display ("MON INFO: Powerdown Exit command at time %0t\n",$time);
       //`endif
       end
       
       if (mem_pd_ext_cmd_d && (fifo_out_cmd != 4'b1011)) begin
           $display ("MON ERROR: Unexpected Powerdown Exit command at time %0t\n",$time);
          test_mem_ctrl.error_flg <= 1'b1;
       end


       // ---------------  Powerdown command comparison  ------------------
       if (mem_zqcl_cmd_d && (fifo_out_cmd == 4'b1100)) begin
       //`ifdef NO_DEBUG
       //`else
           $display ("MON INFO: ZQ Calibration Long command at time %0t\n",$time);
       //`endif
       end

       if (mem_zqcl_cmd_d && (fifo_out_cmd != 4'b1100)) begin
           $display ("MON ERROR: Unexpected ZQ Calibration Long command at time %0t\n",$time);
          test_mem_ctrl.error_flg <= 1'b1;
       end

       if (mem_zqcs_cmd_d && (fifo_out_cmd == 4'b1101)) begin
       //`ifdef NO_DEBUG
       //`else
           $display ("MON INFO: ZQ Calibration Short command at time %0t\n",$time);
       //`endif
       end

       if (mem_zqcs_cmd_d && (fifo_out_cmd != 4'b1101)) begin
           $display ("MON ERROR: Unexpected ZQ Calibration Short command at time %0t\n",$time);
          test_mem_ctrl.error_flg <= 1'b1;
       end


       if (mem_aref_cmd) begin
//     `ifdef NO_DEBUG
//     `else
           $display ("MON INFO: Auto Refresh at time %0t\n",$time);
//     `endif
       end

    // Every time an Active command is detected, store the address (row).
    // This will be compared with the user provided address when
    // the fifo is read upon detecting a read/write command

       if (mem_act_cmd) begin
         case ({ddr_cs_n,ddr_ba})
       `ifdef ddr3_ip_inst_CS_WIDTH_1
          4'b0_000 : mem_row_addr[0] = ddr_ad;
          4'b0_001 : mem_row_addr[1] = ddr_ad;
          4'b0_010 : mem_row_addr[2] = ddr_ad;
          4'b0_011 : mem_row_addr[3] = ddr_ad;
          4'b0_100 : mem_row_addr[4] = ddr_ad;
          4'b0_101 : mem_row_addr[5] = ddr_ad;
          4'b0_110 : mem_row_addr[6] = ddr_ad;
          4'b0_111 : mem_row_addr[7] = ddr_ad;
      `endif //CS_WIDTH_1

      `ifdef ddr3_ip_inst_CS_WIDTH_2
            5'b10_000 : mem_row_addr[0] = ddr_ad;
            5'b10_001 : mem_row_addr[1] = ddr_ad;
            5'b10_010 : mem_row_addr[2] = ddr_ad;
            5'b10_011 : mem_row_addr[3] = ddr_ad;
            5'b10_100 : mem_row_addr[4] = ddr_ad;
            5'b10_101 : mem_row_addr[5] = ddr_ad;
            5'b10_110 : mem_row_addr[6] = ddr_ad;
            5'b10_111 : mem_row_addr[7] = ddr_ad;
          
            5'b01_000 : mem_row_addr[8] = ddr_ad;
            5'b01_001 : mem_row_addr[9] = ddr_ad;
            5'b01_010 : mem_row_addr[10] = ddr_ad;
            5'b01_011 : mem_row_addr[11] = ddr_ad;
            5'b01_100 : mem_row_addr[12] = ddr_ad;
            5'b01_101 : mem_row_addr[13] = ddr_ad;
            5'b01_110 : mem_row_addr[14] = ddr_ad;
            5'b01_111 : mem_row_addr[15] = ddr_ad;
      `endif //CS_WIDTH_2

      `ifdef ddr3_ip_inst_CS_WIDTH_4

            7'b1110_000 : mem_row_addr[0] = ddr_ad;
            7'b1110_001 : mem_row_addr[1] = ddr_ad;
            7'b1110_010 : mem_row_addr[2] = ddr_ad;
            7'b1110_011 : mem_row_addr[3] = ddr_ad;
            7'b1110_100 : mem_row_addr[4] = ddr_ad;
            7'b1110_101 : mem_row_addr[5] = ddr_ad;
            7'b1110_110 : mem_row_addr[6] = ddr_ad;
            7'b1110_111 : mem_row_addr[7] = ddr_ad;
            
            7'b1101_000 : mem_row_addr[8] = ddr_ad;
            7'b1101_001 : mem_row_addr[9] = ddr_ad;
            7'b1101_010 : mem_row_addr[10] = ddr_ad;
            7'b1101_011 : mem_row_addr[11] = ddr_ad;
            7'b1101_100 : mem_row_addr[12] = ddr_ad;
            7'b1101_101 : mem_row_addr[13] = ddr_ad;
            7'b1101_110 : mem_row_addr[14] = ddr_ad;
            7'b1101_111 : mem_row_addr[15] = ddr_ad;
            
            7'b1011_000 : mem_row_addr[16] = ddr_ad;
            7'b1011_001 : mem_row_addr[17] = ddr_ad;
            7'b1011_010 : mem_row_addr[18] = ddr_ad;
            7'b1011_011 : mem_row_addr[19] = ddr_ad;
            7'b1011_101 : mem_row_addr[21] = ddr_ad;
            7'b1011_110 : mem_row_addr[22] = ddr_ad;
            7'b1011_111 : mem_row_addr[23] = ddr_ad;
            
            7'b0111_000 : mem_row_addr[24] = ddr_ad;
            7'b0111_001 : mem_row_addr[25] = ddr_ad;
            7'b0111_010 : mem_row_addr[26] = ddr_ad;
            7'b0111_011 : mem_row_addr[27] = ddr_ad;
            7'b0111_100 : mem_row_addr[28] = ddr_ad;
            7'b0111_101 : mem_row_addr[29] = ddr_ad;
            7'b0111_110 : mem_row_addr[30] = ddr_ad;
            7'b0111_111 : mem_row_addr[31] = ddr_ad;
      `endif //CS_WIDTH_4
         endcase
          `ifdef ddr3_ip_inst_NO_DEBUG
          `else
             $display ("MON INFO: At time %0t, Row addr is %0h\n",$time, ddr_ad);
          `endif //NO_DEBUG
       end

       if (mem_burst_cnt == 0)
           burst_cycle   <= 0;
       
         if (mem_rd_cmd_d || mem_wr_cmd_d) begin
           // To compare the column address, it is imperative to know if the
           // current cycle is the only cycle in the burst or the last cycle
           // of a multiple burst.  If burst_cycle is high, then the cycle is
           // a part of a multiple burst.

         if (orig_mem_burst_cnt == 1 || burst_cycle == 1) begin
           // not a burst cycle, or first of the burst cycle
           actual_col_addr = fifo_out_col + ((burst_cycle-1)*int_burst_len_cmd);
           // Write/Read with no AP
         `ifdef ddr3_ip_inst_COL_WIDTH_GT_10
            if (((fifo_out_cmd == 4'b0010) || (fifo_out_cmd == 4'b0001)) && (fifo_out_col != {ddr_ad_d[`ddr3_ip_inst_ROW_WIDTH-1:11],ddr_ad_d[9:0]})) begin
         `else
            if (((fifo_out_cmd == 4'b0010) || (fifo_out_cmd == 4'b0001)) && (fifo_out_col != ddr_ad_d[`ddr3_ip_inst_COL_WIDTH-1:0])) begin
         `endif
             $display ("MON ERROR: Col address mismatch at %0t, Expected %0h, Actual, %0h\n", $time, fifo_out_col, ddr_ad_d);
             test_mem_ctrl.error_flg <= 1'b1;
          end


           // Write/Read with auto precharge
        if ((orig_mem_burst_cnt != 1))begin
          `ifdef ddr3_ip_inst_COL_WIDTH_GT_10
             if (((fifo_out_cmd == 4'b0010) || (fifo_out_cmd == 4'b0001)) && (fifo_out_col != {ddr_ad_d[`ddr3_ip_inst_ROW_WIDTH-1:11],ddr_ad_d[9:0]})) begin
         `else
            if (((fifo_out_cmd == 4'b0010) || (fifo_out_cmd == 4'b0001)) && (fifo_out_col != ddr_ad_d[`ddr3_ip_inst_COL_WIDTH-1:0])) begin
         `endif
             $display ("MON ERROR: Col address mismatch at %0t, Expected %0h, Actual, %0h\n", $time, fifo_out_col, ddr_ad_d);
          test_mem_ctrl.error_flg <= 1'b1;
          end

         end //(orig_mem_burst_cnt != 1)
         else begin //(orig_mem_burst_cnt == 1)
        `ifdef ddr3_ip_inst_COL_WIDTH_GT_10
           if (((fifo_out_cmd == 4'b0011) || (fifo_out_cmd == 4'b0100)) && ({fifo_out_col [`ddr3_ip_inst_COL_WIDTH-1:10], 1'b1, fifo_out_col[9:0]} != ddr_ad_d[`ddr3_ip_inst_COL_WIDTH:0])) begin
            $display ("MON ERROR: Col address mismatch at %0t, Expected %0h, Actual, %0h\n", $time, {fifo_out_col [`ddr3_ip_inst_COL_WIDTH-1:10], 1'b1,fifo_out_col[9:0]}, ddr_ad_d);
          test_mem_ctrl.error_flg <= 1'b1;
           end
        `endif

        `ifdef ddr3_ip_inst_COL_WIDTH_LT_10
           if (((fifo_out_cmd == 4'b0011) || (fifo_out_cmd == 4'b0100)) && ({1'b1,{10-`ddr3_ip_inst_COL_WIDTH{1'b0}},fifo_out_col[`ddr3_ip_inst_COL_WIDTH-1:0]} != ddr_ad_d[10:0])) begin
                $display ("MON ERROR: Col address mismatch at %0t, Expected %0h, Actual, %0h\n", $time, {1'b1,{10-`ddr3_ip_inst_COL_WIDTH{1'b0}},fifo_out_col[`ddr3_ip_inst_COL_WIDTH-1:0]}, ddr_ad_d);
          test_mem_ctrl.error_flg <= 1'b1;
          end
        `endif
        
        `ifdef ddr3_ip_inst_COL_WIDTH_EQ_10
           if (((fifo_out_cmd == 4'b0011) || (fifo_out_cmd == 4'b0100)) && ({1'b1,fifo_out_col[9:0]} != ddr_ad_d[10:0])) begin
                $display ("MON ERROR: Col address mismatch at %0t, Expected %0h, Actual, %0h\n", $time, {1'b1,fifo_out_col[`ddr3_ip_inst_COL_WIDTH-1:0]}, ddr_ad_d);
          test_mem_ctrl.error_flg <= 1'b1;
          end
        `endif
         end // (orig_mem_burst_cnt == 1)

       end //if (orig_mem_burst_cnt == 1 || burst_cycle == 1) begin
	    else begin
       // Write/Read with no auto precharge
      actual_col_addr = fifo_out_col + ((burst_cycle-1)*int_burst_len_cmd);
		`ifdef ddr3_ip_inst_COL_WIDTH_GT_10
		    if ((fifo_out_cmd == 4'b0010) || (fifo_out_cmd == 4'b0001)) begin
             if ({ddr_ad_d[`ddr3_ip_inst_ROW_WIDTH-1:11],ddr_ad_d[9:0]} != actual_col_addr) begin
		            $display ("MON ERROR: Col address mismatch at %0t, Expected %0h, Actual, %0h\n", $time, actual_col_addr, ddr_ad_d);
                  test_mem_ctrl.error_flg <= 1'b1;
             end
		    end
		`endif

		`ifdef ddr3_ip_inst_COL_WIDTH_LT_10
		    if ((fifo_out_cmd == 4'b0010) || (fifo_out_cmd == 4'b0001)) begin
             if (ddr_ad_d[`ddr3_ip_inst_COL_WIDTH-1:0] != actual_col_addr) begin
		            $display ("MON ERROR: Col address mismatch at %0t, Expected %0h, Actual, %0h\n", $time, actual_col_addr, ddr_ad_d);
                  test_mem_ctrl.error_flg <= 1'b1;
             end
		    end
		`endif

		`ifdef ddr3_ip_inst_COL_WIDTH_EQ_10
		    if ((fifo_out_cmd == 4'b0010) || (fifo_out_cmd == 4'b0001)) begin
             if (ddr_ad_d[`ddr3_ip_inst_COL_WIDTH-1:0] != actual_col_addr) begin
		            $display ("MON ERROR: Col address mismatch at %0t, Expected %0h, Actual, %0h\n", $time, actual_col_addr, ddr_ad_d);
                  test_mem_ctrl.error_flg <= 1'b1;
             end
		    end
		`endif

       // Write/Read with auto precharge
		`ifdef ddr3_ip_inst_COL_WIDTH_GT_10
		    else if ((fifo_out_cmd == 4'b0100) || (fifo_out_cmd == 4'b0011)) begin
             if (burst_cycle == orig_mem_burst_cnt) begin
                if ({ddr_ad_d[`ddr3_ip_inst_ROW_WIDTH-1:11],ddr_ad_d[9:0]} != actual_col_addr) begin
		            $display ("MON ERROR: Col address mismatch at %0t, Expected %0h, Actual, %0h\n", $time, actual_col_addr, {ddr_ad_d[`ddr3_ip_inst_ROW_WIDTH-1:11],ddr_ad_d[9:0]});
                  test_mem_ctrl.error_flg <= 1'b1;
                end
            end else begin
               if ({ddr_ad_d[`ddr3_ip_inst_ROW_WIDTH-1:11],ddr_ad_d[9:0]} != actual_col_addr) begin
		            $display ("MON ERROR: Col address mismatch at %0t, Expected %0h, Actual, %0h\n", $time, actual_col_addr, {ddr_ad_d[`ddr3_ip_inst_ROW_WIDTH-1:11],ddr_ad_d[9:0]});
                  test_mem_ctrl.error_flg <= 1'b1;
               end
            end
		    end
		`endif

		`ifdef ddr3_ip_inst_COL_WIDTH_LT_10
		    else if ((fifo_out_cmd == 4'b0100) || (fifo_out_cmd == 4'b0011)) begin
             if (burst_cycle == orig_mem_burst_cnt) begin
                if (ddr_ad_d != ({1'b1,{10-`ddr3_ip_inst_COL_WIDTH{1'b0}},fifo_out_col[`ddr3_ip_inst_COL_WIDTH-1:0]} + ((burst_cycle-1)*int_burst_len_cmd))) begin
		            $display ("MON ERROR: Col address mismatch at %0t, Expected %0h, Actual, %0h\n", $time, ({1'b1,{10-`ddr3_ip_inst_COL_WIDTH{1'b0}},fifo_out_col[`ddr3_ip_inst_COL_WIDTH-1:0]} + ((burst_cycle-1)*int_burst_len_cmd)), ddr_ad_d);
                  test_mem_ctrl.error_flg <= 1'b1;
                end
             end else begin
                if (ddr_ad_d != actual_col_addr) begin
		            $display ("MON ERROR: Col address mismatch at %0t, Expected %0h, Actual, %0h\n", $time, actual_col_addr, ddr_ad_d);
                  test_mem_ctrl.error_flg <= 1'b1;
                end
             end
		    end
		`endif
      
      `ifdef ddr3_ip_inst_COL_WIDTH_EQ_10
		    else if ((fifo_out_cmd == 4'b0100) || (fifo_out_cmd == 4'b0011)) begin
             if (burst_cycle == orig_mem_burst_cnt) begin
                if (ddr_ad_d != {1'b1,actual_col_addr[9:0]}) begin
		            $display ("MON ERROR: Col address mismatch at %0t, Expected %0h, Actual, %0h\n", $time, {1'b1,actual_col_addr[9:0]}, ddr_ad_d);
                  test_mem_ctrl.error_flg <= 1'b1;
                end
             end else begin
                if (ddr_ad_d != actual_col_addr) begin
		            $display ("MON ERROR: Col address mismatch at %0t, Expected %0h, Actual, %0h\n", $time, actual_col_addr, ddr_ad_d);
                  test_mem_ctrl.error_flg <= 1'b1;
                end
             end
		    end
		`endif

	    end
	end

	    if (mem_rd_cmd_d || mem_wr_cmd_d) begin
            `ifdef ddr3_ip_inst_NO_DEBUG
            `else
	       $display ("MON INFO: At time %0t, Col addr is %0h\n",$time, ddr_ad_d);
            `endif

	  case ({ddr_cs_n_d,ddr_ba_d})
   `ifdef ddr3_ip_inst_CS_WIDTH_1
		4'b0_000 : mem_row_addr_out = mem_row_addr[0];
		4'b0_001 : mem_row_addr_out = mem_row_addr[1];
		4'b0_010 : mem_row_addr_out = mem_row_addr[2];
		4'b0_011 : mem_row_addr_out = mem_row_addr[3];
		4'b0_100 : mem_row_addr_out = mem_row_addr[4];
		4'b0_101 : mem_row_addr_out = mem_row_addr[5];
		4'b0_110 : mem_row_addr_out = mem_row_addr[6];
		4'b0_111 : mem_row_addr_out = mem_row_addr[7];
   `endif

   `ifdef ddr3_ip_inst_CS_WIDTH_2
		5'b10_000 : mem_row_addr_out = mem_row_addr[0];
		5'b10_001 : mem_row_addr_out = mem_row_addr[1];
		5'b10_010 : mem_row_addr_out = mem_row_addr[2];
		5'b10_011 : mem_row_addr_out = mem_row_addr[3];
		5'b10_100 : mem_row_addr_out = mem_row_addr[4];
		5'b10_101 : mem_row_addr_out = mem_row_addr[5];
		5'b10_110 : mem_row_addr_out = mem_row_addr[6];
		5'b10_111 : mem_row_addr_out = mem_row_addr[7];

		5'b01_000 : mem_row_addr_out = mem_row_addr[8];
		5'b01_001 : mem_row_addr_out = mem_row_addr[9];
		5'b01_010 : mem_row_addr_out = mem_row_addr[10];
		5'b01_011 : mem_row_addr_out = mem_row_addr[11];
		5'b01_100 : mem_row_addr_out = mem_row_addr[12];
		5'b01_101 : mem_row_addr_out = mem_row_addr[13];
		5'b01_110 : mem_row_addr_out = mem_row_addr[14];
		5'b01_111 : mem_row_addr_out = mem_row_addr[15];
   `endif

   `ifdef ddr3_ip_inst_CS_WIDTH_4
		7'b1110_000 : mem_row_addr_out = mem_row_addr[0];
		7'b1110_001 : mem_row_addr_out = mem_row_addr[1];
		7'b1110_010 : mem_row_addr_out = mem_row_addr[2];
		7'b1110_011 : mem_row_addr_out = mem_row_addr[3];
		7'b1110_100 : mem_row_addr_out = mem_row_addr[4];
		7'b1110_101 : mem_row_addr_out = mem_row_addr[5];
		7'b1110_110 : mem_row_addr_out = mem_row_addr[6];
		7'b1110_111 : mem_row_addr_out = mem_row_addr[7];

		7'b1101_000 : mem_row_addr_out = mem_row_addr[8];
		7'b1101_001 : mem_row_addr_out = mem_row_addr[9];
		7'b1101_010 : mem_row_addr_out = mem_row_addr[10];
		7'b1101_011 : mem_row_addr_out = mem_row_addr[11];
		7'b1101_100 : mem_row_addr_out = mem_row_addr[12];
		7'b1101_101 : mem_row_addr_out = mem_row_addr[13];
		7'b1101_110 : mem_row_addr_out = mem_row_addr[14];
		7'b1101_111 : mem_row_addr_out = mem_row_addr[15];

		7'b1011_000 : mem_row_addr_out = mem_row_addr[16];
		7'b1011_001 : mem_row_addr_out = mem_row_addr[17];
		7'b1011_010 : mem_row_addr_out = mem_row_addr[18];
		7'b1011_011 : mem_row_addr_out = mem_row_addr[19];
		7'b1011_100 : mem_row_addr_out = mem_row_addr[20];
		7'b1011_101 : mem_row_addr_out = mem_row_addr[21];
		7'b1011_110 : mem_row_addr_out = mem_row_addr[22];
		7'b1011_111 : mem_row_addr_out = mem_row_addr[23];

		7'b0111_000 : mem_row_addr_out = mem_row_addr[24];
		7'b0111_001 : mem_row_addr_out = mem_row_addr[25];
		7'b0111_010 : mem_row_addr_out = mem_row_addr[26];
		7'b0111_011 : mem_row_addr_out = mem_row_addr[27];
		7'b0111_100 : mem_row_addr_out = mem_row_addr[28];
		7'b0111_101 : mem_row_addr_out = mem_row_addr[29];
		7'b0111_110 : mem_row_addr_out = mem_row_addr[30];
		7'b0111_111 : mem_row_addr_out = mem_row_addr[31];
   `endif
	  endcase

     if (fifo_out_row != mem_row_addr_out) begin
        $display ("MON ERROR: Row address mismatch at %0t, Expected %0h, Actual, %0h\n", $time, fifo_out_row, mem_row_addr_out);
        test_mem_ctrl.error_flg <= 1'b1;
     end

     end

     if (mem_rd_cmd || mem_wr_cmd) begin
       // decrement the burst counter after every read or write cycle

       // This logic sets a bit indicating that the following read/write 
       // commands are a part of the burst.  This is used to compare the 
       // addresses

       if (mem_burst_cnt != 5'b0) begin
           mem_burst_cnt = mem_burst_cnt - 1;
           burst_cycle   = burst_cycle + 1;
       end
       else begin
           mem_burst_cnt = 0;
           burst_cycle   = 0;
       end
     end

	//if (fifo_rd)
	    //mem_burst_cnt = orig_mem_burst_cnt;

	casex ({mem_sref_cmd, mem_pd_cmd, mem_lmr_cmd,
	      mem_aref_cmd, mem_act_cmd, mem_pre_cmd,
	      mem_rd_cmd, mem_wr_cmd, mem_nop_cmd})

	    9'b000000000,
	    9'b100000000,
	    9'bx1xxxxxxx,
	    9'b001000000,
	    9'b000100000,
	    9'b000010000,
	    9'b000001000,
	    9'b000000100,
	    9'b000000010,
	    9'b000000001 : begin
	    end
       default      : begin $display ("MON ERROR: Invalid command found on the DDR interface at %0t\n",$time);
                            test_mem_ctrl.error_flg <= 1'b1;
                      end
	endcase

	//if (mem_sref_cmd || (mem_lmr_cmd && (ddr_ba[1:0] != 2'b01))) begin
	if (mem_sref_cmd) begin
      if (ddr_cs_n != 8'h00) begin
	        $display ("MON ERROR: Chip selects not 8'h00 at time %0t\n",$time);
           test_mem_ctrl.error_flg <= 1'b1;
      end
	end

	if (mem_rd_cmd || mem_wr_cmd || mem_act_cmd || mem_pre_cmd) begin
	    
	    `ifdef ddr3_ip_inst_CS_WIDTH_8
	        case (ddr_cs_n)
		    8'b11111110,
		    8'b11111101,
		    8'b11111011,
		    8'b11110111,
		    8'b11101111,
		    8'b11011111,
		    8'b10111111,
		    8'b01111111 : begin
		    end
		    default : begin
                if (mem_pre_cmd && ~ddr_ad[10]) begin
                            $display ("MON ERROR: Illegal chip select at time %0t\n",$time);
                              test_mem_ctrl.error_flg <= 1'b1;
                end
              end
	       endcase
	    `endif

	    `ifdef ddr3_ip_inst_CS_WIDTH_4
	        case (ddr_cs_n)
		    4'b1110,
		    4'b1101,
		    4'b1011,
		    4'b0111 : begin
		    end
		    default : begin
                if (mem_pre_cmd && ~ddr_ad[10]) begin
                            $display ("MON ERROR: Illegal chip select at time %0t\n",$time);
                              test_mem_ctrl.error_flg <= 1'b1;
                end
                    end
	       endcase
	    `endif

	    `ifdef ddr3_ip_inst_CS_WIDTH_2
	        case (ddr_cs_n)
		    2'b10,
		    2'b01 : begin
		    end
		    default : begin
                if (mem_pre_cmd && ~ddr_ad[10]) begin
                $display ("MON ERROR: Illegal chip select at time %0t\n",$time);
                              test_mem_ctrl.error_flg <= 1'b1;
                end
              end
	       endcase
	    `endif

	    `ifdef ddr3_ip_inst_CS_WIDTH_1
	        case (ddr_cs_n)
		    1'b0,
		    1'b1 : begin
		    end
		    default : begin
                if (mem_pre_cmd && ~ddr_ad[10]) begin
                            $display ("MON ERROR: Illegal chip select at time %0t\n",$time);
                              test_mem_ctrl.error_flg <= 1'b1;
                end
                    end
	       endcase
	    `endif
	end
    end
end     // always @ (posedge clk) begin

///////////////////////////////////////////////////////////////////////
// Logic that monitors the commands at the memory interface and checks whether 
// precharge and/or activate command should be issued based on the 
// bank management logic.  This logic is closely linked with the 
// assertion of chip selects.

reg   [13:0]           row_table[0:31];
reg   [31:0]           bnksts_tab;       //1: open, 0:closed
reg   [31:0]           rowtab_en;
reg   [7:0]            cs_n;
reg                    bnksts_tab_out;

integer                rt;
integer                bt;


// determine the expected chip select based on the bank address provided by
// the user.
   // Only four chip selects possible
   always @ (fifo_out_bank) begin
       case(fifo_out_bank[4:3])
           2'b00 : cs_n = 8'b1111_1110;
           2'b01 : cs_n = 8'b1111_1101;
           2'b10 : cs_n = 8'b1111_1011;
           2'b11 : cs_n = 8'b1111_0111;
       endcase
   end

always @ (posedge mem_clk or negedge rst_n) begin
    if (!rst_n) begin
       bnksts_tab            <= 32'b0;
       for (rt=0;rt<32;rt=rt+1) begin
          row_table[rt]     <= 14'b0;
       end
    end
    else begin
   // compare the actual chip selects with the expected value.
       if ((mem_rd_cmd_d) || (mem_wr_cmd_d)) begin
   
       `ifdef ddr3_ip_inst_CS_WIDTH_4
          if (ddr_cs_n_d != cs_n[3:0]) begin
   	    $display ("MON ERROR: Chip select mismatch at time %0t.  Expected %0b, Actual %0b\n", $time, cs_n[3:0], ddr_cs_n_d);
            test_mem_ctrl.error_flg <= 1'b1;
          end
       `endif
   
       `ifdef ddr3_ip_inst_CS_WIDTH_2
          if (ddr_cs_n_d != cs_n[1:0]) begin
   	    $display ("MON ERROR: Chip select mismatch at time %0t.  Expected %0b, Actual %0b\n", $time, cs_n[1:0], ddr_cs_n_d);
            test_mem_ctrl.error_flg <= 1'b1;
          end
       `endif
   
       `ifdef ddr3_ip_inst_CS_WIDTH_1
          if (ddr_cs_n_d != cs_n[0]) begin
   	    $display ("MON ERROR: Chip select mismatch at time %0t.  Expected %0b, Actual %0b\n", $time, cs_n[0], ddr_cs_n_d);
            test_mem_ctrl.error_flg <= 1'b1;
          end
       `endif
   
    end
   
   // when a lmr or auto refresh command is issued, set all 
   // banks to close state.
   if (mem_aref_cmd || mem_lmr_cmd || mem_sref_cmd || mem_zqcl_cmd || mem_zqcs_cmd) begin
       bnksts_tab        <= 32'b0;
   end
   
   // update the row table and bank status table when an activate
   // or precharge command is seen on the memory interface
   for (bt=0;bt<32;bt=bt+1) begin
       if (mem_act_cmd && rowtab_en[bt]) begin
          row_table[bt]                  <= ddr_ad;
          bnksts_tab[bt]                 <= 1'b1;
       end
       else if ((mem_pre_cmd && rowtab_en[bt]) || 
               ((mem_wr_cmd || mem_rd_cmd) && ddr_ad[10])) begin
          bnksts_tab[bt]                 <= 1'b0;
       end
   end
   
   // When ever an activate command is issued, check the row address 
   // to determine whether the command should have been received.  
   
   if (mem_act_cmd && bnksts_tab_out) begin // The row was open
       $display ("MON ERROR: Activate command issued for an open bank at time %0t\n",$time);
       test_mem_ctrl.error_flg <= 1'b1;
   end
   
   // When a precharge command is issued, check the row address
   // to determine whether the command should have been received.
   
   //if (mem_pre_cmd && !bnksts_tab_out)  // The row was closed
       //$display ("MON INFO: Precharge command issued for a closed bank at time %0t\n",$time);
   
   end
end

// generate the enable signal to write into a specific row table location.
always @ (ddr_cs_n or ddr_ba) begin
    if ( rst_n && ~(&ddr_cs_n) && ((ddr_ba[2] === 1'bx) || (ddr_ba[1] === 1'bx) || 
			 (ddr_ba[0] === 1'bx))) begin
        $display ("MON ERROR: Unknown values on ddr_ba = %d signal at time %0t\n",ddr_ba, $time);
        test_mem_ctrl.error_flg <= 1'b1;
    end
    rowtab_en = 32'b0;
    case ({ddr_cs_n, ddr_ba})

`ifdef ddr3_ip_inst_CS_WIDTH_1
	4'b0_000 : rowtab_en[0]  = 1;
	4'b0_001 : rowtab_en[1]  = 1;
	4'b0_010 : rowtab_en[2]  = 1;
	4'b0_011 : rowtab_en[3]  = 1;
	4'b0_100 : rowtab_en[4]  = 1;
	4'b0_101 : rowtab_en[5]  = 1;
	4'b0_110 : rowtab_en[6]  = 1;
	4'b0_111 : rowtab_en[7]  = 1;
`endif //CS_WIDTH_1


`ifdef ddr3_ip_inst_CS_WIDTH_2
      5'b10_000 : rowtab_en[0]  = 1;
      5'b10_001 : rowtab_en[1]  = 1;
      5'b10_010 : rowtab_en[2]  = 1;
      5'b10_011 : rowtab_en[3]  = 1;
      5'b10_100 : rowtab_en[4]  = 1;
      5'b10_101 : rowtab_en[5]  = 1;
      5'b10_110 : rowtab_en[6]  = 1;
      5'b10_111 : rowtab_en[7]  = 1;
      
      5'b01_000 : rowtab_en[8]  = 1;
      5'b01_001 : rowtab_en[9]  = 1;
      5'b01_010 : rowtab_en[10] = 1;
      5'b01_011 : rowtab_en[11] = 1;
      5'b01_100 : rowtab_en[12] = 1;
      5'b01_101 : rowtab_en[13] = 1;
      5'b01_110 : rowtab_en[14] = 1;
      5'b01_111 : rowtab_en[15] = 1;
`endif //CS_WIDTH_2

`ifdef ddr3_ip_inst_CS_WIDTH_4

      7'b1110_000 : rowtab_en[0]  = 1;
      7'b1110_001 : rowtab_en[1]  = 1;
      7'b1110_010 : rowtab_en[2]  = 1;
      7'b1110_011 : rowtab_en[3]  = 1;
      7'b1110_100 : rowtab_en[4]  = 1;
      7'b1110_101 : rowtab_en[5]  = 1;
      7'b1110_110 : rowtab_en[6]  = 1;
      7'b1110_111 : rowtab_en[7]  = 1;
      
      7'b1101_000 : rowtab_en[8]  = 1;
      7'b1101_001 : rowtab_en[9]  = 1;
      7'b1101_010 : rowtab_en[10] = 1;
      7'b1101_011 : rowtab_en[11] = 1;
      7'b1101_100 : rowtab_en[12] = 1;
      7'b1101_101 : rowtab_en[13] = 1;
      7'b1101_110 : rowtab_en[14] = 1;
      7'b1101_111 : rowtab_en[15] = 1;
      
      7'b1011_000 : rowtab_en[16] = 1;
      7'b1011_001 : rowtab_en[17] = 1;
      7'b1011_010 : rowtab_en[18] = 1;
      7'b1011_011 : rowtab_en[19] = 1;
      7'b1011_100 : rowtab_en[20] = 1;
      7'b1011_101 : rowtab_en[21] = 1;
      7'b1011_110 : rowtab_en[22] = 1;
      7'b1011_111 : rowtab_en[23] = 1;
      
      7'b0111_000 : rowtab_en[24] = 1;
      7'b0111_001 : rowtab_en[25] = 1;
      7'b0111_010 : rowtab_en[26] = 1;
      7'b0111_011 : rowtab_en[27] = 1;
      7'b0111_100 : rowtab_en[28] = 1;
      7'b0111_101 : rowtab_en[29] = 1;
      7'b0111_110 : rowtab_en[30] = 1;
      7'b0111_111 : rowtab_en[31] = 1;

`endif //CS_WIDTH_4
        default : rowtab_en     = 0;
    endcase
end

// Based on the address given out by the controller, select the bank status bit

always @ (ddr_cs_n or ddr_ba or bnksts_tab) begin
    case ({ddr_cs_n, ddr_ba})

`ifdef ddr3_ip_inst_CS_WIDTH_1
   4'b0_000 : bnksts_tab_out = bnksts_tab[0];
   4'b0_001 : bnksts_tab_out = bnksts_tab[1];
   4'b0_010 : bnksts_tab_out = bnksts_tab[2];
   4'b0_011 : bnksts_tab_out = bnksts_tab[3];
   4'b0_100 : bnksts_tab_out = bnksts_tab[4];
   4'b0_101 : bnksts_tab_out = bnksts_tab[5];
   4'b0_110 : bnksts_tab_out = bnksts_tab[6];
   4'b0_111 : bnksts_tab_out = bnksts_tab[7];
`endif //CS_WIDTH_1

`ifdef ddr3_ip_inst_CS_WIDTH_2
      5'b10_000 : bnksts_tab_out = bnksts_tab[0];
      5'b10_001 : bnksts_tab_out = bnksts_tab[1];
      5'b10_010 : bnksts_tab_out = bnksts_tab[2];
      5'b10_011 : bnksts_tab_out = bnksts_tab[3];
      5'b10_100 : bnksts_tab_out = bnksts_tab[4];
      5'b10_101 : bnksts_tab_out = bnksts_tab[5];
      5'b10_110 : bnksts_tab_out = bnksts_tab[6];
      5'b10_111 : bnksts_tab_out = bnksts_tab[7];
      
      5'b01_000 : bnksts_tab_out = bnksts_tab[8];
      5'b01_001 : bnksts_tab_out = bnksts_tab[9];
      5'b01_010 : bnksts_tab_out = bnksts_tab[10];
      5'b01_011 : bnksts_tab_out = bnksts_tab[11];
      5'b01_100 : bnksts_tab_out = bnksts_tab[12];
      5'b01_101 : bnksts_tab_out = bnksts_tab[13];
      5'b01_110 : bnksts_tab_out = bnksts_tab[14];
      5'b01_111 : bnksts_tab_out = bnksts_tab[15];
`endif //CS_WIDTH_2

`ifdef ddr3_ip_inst_CS_WIDTH_4
      7'b1110_000 : bnksts_tab_out = bnksts_tab[0];
      7'b1110_001 : bnksts_tab_out = bnksts_tab[1];
      7'b1110_010 : bnksts_tab_out = bnksts_tab[2];
      7'b1110_011 : bnksts_tab_out = bnksts_tab[3];
      7'b1110_100 : bnksts_tab_out = bnksts_tab[4];
      7'b1110_101 : bnksts_tab_out = bnksts_tab[5];
      7'b1110_110 : bnksts_tab_out = bnksts_tab[6];
      7'b1110_111 : bnksts_tab_out = bnksts_tab[7];
      
      7'b1101_000 : bnksts_tab_out = bnksts_tab[8];
      7'b1101_001 : bnksts_tab_out = bnksts_tab[9];
      7'b1101_010 : bnksts_tab_out = bnksts_tab[10];
      7'b1101_011 : bnksts_tab_out = bnksts_tab[11];
      7'b1101_100 : bnksts_tab_out = bnksts_tab[12];
      7'b1101_101 : bnksts_tab_out = bnksts_tab[13];
      7'b1101_110 : bnksts_tab_out = bnksts_tab[14];
      7'b1101_111 : bnksts_tab_out = bnksts_tab[15];
      
      7'b1011_000 : bnksts_tab_out = bnksts_tab[16];
      7'b1011_001 : bnksts_tab_out = bnksts_tab[17];
      7'b1011_010 : bnksts_tab_out = bnksts_tab[18];
      7'b1011_011 : bnksts_tab_out = bnksts_tab[19];
      7'b1011_100 : bnksts_tab_out = bnksts_tab[20];
      7'b1011_101 : bnksts_tab_out = bnksts_tab[21];
      7'b1011_110 : bnksts_tab_out = bnksts_tab[22];
      7'b1011_111 : bnksts_tab_out = bnksts_tab[23];
      
      7'b0111_000 : bnksts_tab_out = bnksts_tab[24];
      7'b0111_001 : bnksts_tab_out = bnksts_tab[25];
      7'b0111_010 : bnksts_tab_out = bnksts_tab[26];
      7'b0111_011 : bnksts_tab_out = bnksts_tab[27];
      7'b0111_100 : bnksts_tab_out = bnksts_tab[28];
      7'b0111_101 : bnksts_tab_out = bnksts_tab[29];
      7'b0111_110 : bnksts_tab_out = bnksts_tab[30];
      7'b0111_111 : bnksts_tab_out = bnksts_tab[31];
`endif //CS_WIDTH_4
    endcase
end

///////////////////////////////////////////////////////////////////////
// Logic that ensures that the number of read and write commands presented at 
// the user interface matches with the number seen on the memory interface.

reg [31:0] usr_read_cnt;
reg [31:0] usr_write_cnt;
reg [31:0] mem_read_cnt;
reg [31:0] mem_write_cnt;
reg [31:0] wr_cmd_clkcnt;
reg [31:0] rd_cmd_clkcnt;
reg     mon_endoftest;


initial begin
    mon_endoftest    = 0;
end

always @ (posedge mem_clk or negedge rst_n) begin
    if (!rst_n) begin
      mem_read_cnt          <= 0;
      mem_write_cnt         <= 0;
    end
    else begin
    // count the number of read/write commands seen at the memory
    // interface
      if (mem_rd_cmd)
         mem_read_cnt      <= mem_read_cnt + 1;
      if (mem_wr_cmd)
         mem_write_cnt     <= mem_write_cnt + 1;
    end
end

always @ (posedge clk or negedge rst_n) begin
   if (!rst_n) begin
      usr_read_cnt          <= 0;
      usr_write_cnt         <= 0;
      wr_cmd_clkcnt         <= 0;
      rd_cmd_clkcnt         <= 0;
   end
   else begin
   // count the number of read/write commands issued at the 
   // user interface
   
   if (cmd_rdy && cmd_valid && 
       ((cmd == 4'b0010) || (cmd == 4'b0100)) && ~disable_cmd_fifo)
            usr_write_cnt     <= usr_write_cnt + burst_cnt;
   
   if (cmd_rdy && cmd_valid && 
       ((cmd == 4'b0001) || (cmd == 4'b0011)) && ~disable_cmd_fifo)
            usr_read_cnt      <= usr_read_cnt + burst_cnt;
   
   // Count the number of clock cycles where the user supplied
   // commands are more than those seen on the mem interface
   
   if (usr_write_cnt > mem_write_cnt + 3) begin
       if (mem_wr_cmd)
           wr_cmd_clkcnt     <= 0;
       else
           wr_cmd_clkcnt     <= wr_cmd_clkcnt + 1;
   end
   else if (mem_write_cnt == usr_write_cnt)
       wr_cmd_clkcnt     <= 0;
   
   if (usr_read_cnt > mem_read_cnt + 3)
       if (mem_rd_cmd)
   	rd_cmd_clkcnt     <= 0;
       else 
           rd_cmd_clkcnt     <= rd_cmd_clkcnt + 1;
   else if (mem_read_cnt == usr_read_cnt)
       rd_cmd_clkcnt     <= 0;
    end
end

//always @ (wr_cmd_clkcnt) begin
//    if (wr_cmd_clkcnt > 2000) begin
//        $display ("MON ERROR: At time %0t, more than 2000 clocks elapsed without a write cycle.  Ending test.\n", $time);
//        test_mem_ctrl.error_flg <= 1'b1;
//        mon_endoftest     = 1;
//	//$finish;
//    end
//end
//
//always @ (rd_cmd_clkcnt) begin
//    if (rd_cmd_clkcnt > 2000) begin
//        $display ("MON ERROR: At time %0t, more than 2000 clocks elapsed without a read cycle.  Ending test.\n", $time);
//        test_mem_ctrl.error_flg <= 1'b1;
//        mon_endoftest     = 1;
//	$finish;
//    end
//end

always @ (endoftest or mon_endoftest) begin
   if (endoftest || mon_endoftest) begin
        if (mem_read_cnt == 0) begin
            $display ("MON ERROR: At the end of test, No Read commands on memory interface is detected." );
            test_mem_ctrl.error_flg = 1'b1;
        end
        if (usr_read_cnt != mem_read_cnt) begin
            $display ("MON ERROR: At the end of test, Read commands on user interface is %0d, memory interface is %0d\n", usr_read_cnt, mem_read_cnt);
            test_mem_ctrl.error_flg = 1'b1;
        end
        else
        //  `ifdef NO_DEBUG
        //  `else
              $display ("MON INFO: At the end of test, Read commands on user interface is %0d, equal to the number of Read command on memory interface\n", usr_read_cnt);
        //  `endif

        if (mem_write_cnt == 0) begin
            $display ("MON ERROR: At the end of test, No Write commands on memory interface is detected." );
            test_mem_ctrl.error_flg = 1'b1;
        end
        else if (usr_write_cnt != mem_write_cnt) begin
            $display ("MON ERROR: At the end of test, Write commands on user interface is %0d, memory interface is %0d\n", usr_write_cnt, mem_write_cnt);
            test_mem_ctrl.error_flg = 1'b1;
        end
        else
        //  `ifdef NO_DEBUG
        //  `else
	           $display ("MON INFO: At the end of test, Write commands on user interface is %0d, equal to the number of Write command on memory interface\n", usr_write_cnt);
        //  `endif
        if (test_mem_ctrl.error_flg == 1'b0 && test_mem_ctrl.odt_error_flg == 1'b0)
 	           $display ("TB INFO: The simulation has PASSED through monitor\n");
        else
 	           $display ("TB INFO: The simulation is FAILED through monitor\n");
   end
end


///////////////////////////////////////////////////////////////////////
// Logic that monitors the initialization sequence

///////////////////////////////////////////////////////////////////////
// Logic to ensure auto refresh commands are issued periodically at 
// proper intervals.

// Once the initialization process ends, the refresh period starts.  
// This logic flags an error if an auto refresh cycle was not asserted
// before the period was over.  While the self ref period is in place, 
// the refresh counter stops and resumes once the memory device is ready 
// to accept commands again

integer           ref_period_cnt;   // counts the clocks between refresh commands
reg               mem_sref_cmd_sth;
wire       [3:0]  int_ar_burst_en;
reg        [3:0]  aref_cmd_cnt;   // counts the number of aref commands 
reg        [3:0]  aref_cmd_cnt_d;   // counts the number of aref commands 

wire              txsdll_count_en;
reg        [8:0]  txsdll_count;
wire              self_ref_done;

assign int_ar_burst_en = {~(|ar_burst_en),ar_burst_en};

// generate the timepoint that begin the AR count
//
assign txsdll_count_en = (mem_sref_ext_cmd|txsdll_count_en) & ~(self_ref_done);
assign self_ref_done = (txsdll_count == 511);

always @ (posedge mem_clk or negedge rst_n) begin
   if (!rst_n)
      txsdll_count <= 'h0;
   else begin
      if (txsdll_count_en)
         txsdll_count <= txsdll_count + 1;
      else
         txsdll_count <= 'h0;
   end
end

always @ (posedge mem_clk) begin
    if (!rst_n) begin
        mem_sref_cmd_sth  <= 0;
        ref_period_cnt    <= 0;
        aref_cmd_cnt      <= 0;
        aref_cmd_cnt_d    <= 0;
        init_finish       <= 0;
    end
    else begin
        init_finish       <= (init_finish | init_done);
        aref_cmd_cnt_d    <= aref_cmd_cnt;
        mem_sref_cmd_sth  <= (mem_sref_cmd | mem_sref_cmd_sth) & ~(self_ref_done);

        if (mem_aref_cmd || mem_sref_cmd) begin
            ref_period_cnt    <= 0;
        end
        else begin

    
        // Do not increment counter while in self refresh state
        if (~mem_sref_cmd_sth && init_finish)
            ref_period_cnt    <= ref_period_cnt + 1;
        end
    
        if (ref_period_cnt >= (int_ar_burst_en*trefi)) begin
            $display("MON ERROR: At time %0t, Auto refresh not asserted for %0d clock cycles\n", $time, (int_ar_burst_en*trefi));
            test_mem_ctrl.error_flg <= 1'b1;
            ref_period_cnt <= 0;
        end
    
        // This logic counts the number of auto refresh cycles
    
        if (mem_aref_cmd)
            aref_cmd_cnt      <= aref_cmd_cnt + 1;
        else if (mem_sref_cmd || mem_rd_cmd || mem_wr_cmd || mem_pd_cmd ||
                 mem_lmr_cmd || mem_act_cmd || (aref_cmd_cnt == int_ar_burst_en)) begin
            aref_cmd_cnt      <= 0;
        end 

        if ((aref_cmd_cnt_d != 0) && (aref_cmd_cnt == 0)) begin
        // Perform check only outside init sequence.
// sk        if (~init_start && (aref_cmd_cnt_d != int_ar_burst_en)) begin
        if (~init_start && (aref_cmd_cnt_d != int_ar_burst_en) && !sr_cmd_active) begin
               $display ("MON ERROR: At time %0t, Auto Refresh command gen error.  Expected number is %0d, actual is %0d\n",$time,int_ar_burst_en, aref_cmd_cnt_d);
               test_mem_ctrl.error_flg <= 1'b1;
            end
        end

    end
end

///////////////////////////////////////////////////////////////////////
// Generate the mem_wr_cmd_lat & mem_rd_cmd_lat signal
// 

reg [4:0] mem_rd_cmd_cnt;
reg [4:0] mem_wr_cmd_cnt;
reg       mem_rd_cmd_cmplt;
reg       mem_wr_cmd_cmplt;
reg       mem_rd_cmd_arrive;
reg       mem_wr_cmd_arrive;
reg       mem_rd_first;
reg       mem_wr_first;
reg       mem_rd_cmd_lat_new;
reg       mem_wr_cmd_lat_new;

reg [3:0]  cas_latency_true;
reg [3:0]  cas_write_latency_true;
reg [3:0]  write_recov_true;
reg [1:0]  additive_latency;
wire [3:0] additive_latency_true;

reg        lmr_valid;

always @(posedge mem_clk or negedge rst_n) begin
   if (!rst_n)
     lmr_valid <= 1'b0; 
   else
      if (init_start)
         lmr_valid <= 1'b1;
end

always @(posedge mem_clk or negedge rst_n) begin
   if (!rst_n) begin
      cas_latency_true       <= 6;
      write_recov_true       <= 6;
      cas_write_latency_true <= 5;
      additive_latency       <= `ddr3_ip_inst_AL;
   end
   else begin
      if (lmr_valid & mem_lmr_cmd_d) begin
         // get CL&WR from LMR_0 cmd
         if (flop_ddr_ba[1:0] == 2'b00) begin
            case ({flop_ddr_ad[6:4],flop_ddr_ad[2]})
                4'b0010 : cas_latency_true <= 4'd5;
                4'b0100 : cas_latency_true <= 4'd6;
                4'b0110 : cas_latency_true <= 4'd7;
                4'b1000 : cas_latency_true <= 4'd8;
                4'b1010 : cas_latency_true <= 4'd9;
                4'b1100 : cas_latency_true <= 4'd10;
            default    : begin 
                             cas_latency_true <= 6;
                          $display("MON ERROR: Invalid Cas Latency setting: %0b", {flop_ddr_ad[6:4],flop_ddr_ad[2]});
                             $display("TB INFO: The simulation is FAILED through monitor\n");
                          $finish;
                         end
            endcase

            case (flop_ddr_ad[11:9])
               3'b001 : write_recov_true <= 4'd5;
               3'b010 : write_recov_true <= 4'd6;
               3'b011 : write_recov_true <= 4'd7;
               3'b100 : write_recov_true <= 4'd8;
               3'b101 : write_recov_true <= 4'd10;
               3'b110 : write_recov_true <= 4'd12;
               default    : begin 
                             write_recov_true <= 6;
                             $display("MON ERROR: Invalid Write Recovery setting: %0b", flop_ddr_ad[11:9]);
                             $display("TB INFO: The simulation is FAILED through monitor\n");
                             $finish;
                            end
            endcase
         end

         // get AL from LMR_1 cmd
         if (flop_ddr_ba[1:0] == 2'b01) begin
            case (flop_ddr_ad[4:3])
               2'b00 : additive_latency <= 2'd0;
               2'b01 : additive_latency <= 2'd1;
               2'b10 : additive_latency <= 2'd2;
               default    : begin 
                             additive_latency <= `ddr3_ip_inst_AL;
                             $display("MON ERROR: Invalid Additive Latency setting: %0b", flop_ddr_ad[4:3]);
                             $display("TB INFO: The simulation is FAILED through monitor\n");
                             $finish;
                            end
            endcase
         end

         // get CWL from LMR_2 cmd
         if (flop_ddr_ba[1:0] == 2'b10) begin
            case (flop_ddr_ad[5:3])
               3'b000 : cas_write_latency_true <= 4'd5;
               3'b001 : cas_write_latency_true <= 4'd6;
               3'b010 : cas_write_latency_true <= 4'd7;
               3'b011 : cas_write_latency_true <= 4'd8;
               default    : begin
                             cas_write_latency_true <= `ddr3_ip_inst_CWL*2;
                             $display("MON ERROR: Invalid Cas Write Latency setting: %0b", flop_ddr_ad[5:3]);
                             $display("TB INFO: The simulation is FAILED through monitor\n");
                             $finish;
                            end
            endcase
         end
      end // mem_lmr_cmd
   end // posedge clk
end

assign additive_latency_true = (additive_latency == 0)? 0 : (cas_latency_true - additive_latency);

always @(posedge mem_clk or negedge rst_n) begin
   if (!rst_n) begin
      mem_rd_cmd_cnt   <= 0;
      mem_rd_cmd_cmplt <= 1'b1;
   end
   else begin
      if (mem_rd_cmd) begin
         mem_rd_cmd_cnt <= 0;
         mem_rd_cmd_cmplt <= 1'b0;
      end
      else if (mem_rd_cmd_cnt == additive_latency_true + cas_latency_true + 3) begin
         mem_rd_cmd_cnt <= mem_rd_cmd_cnt;
         mem_rd_cmd_cmplt <= 1'b1;
      end
      else begin
         mem_rd_cmd_cnt <= mem_rd_cmd_cnt + 1;
         mem_rd_cmd_cmplt <= mem_rd_cmd_cmplt;
      end
   end
end

always @(posedge mem_clk or negedge rst_n) begin
   if (!rst_n) begin
      mem_wr_cmd_cnt   <= 0;
      mem_wr_cmd_cmplt <= 1'b1;
   end
   else begin
      if (mem_wr_cmd) begin
         mem_wr_cmd_cnt <= 0;
         mem_wr_cmd_cmplt <= 1'b0;
      end
      else if (mem_wr_cmd_cnt == additive_latency_true + cas_write_latency_true + 3) begin
         mem_wr_cmd_cnt <= mem_wr_cmd_cnt;
         mem_wr_cmd_cmplt <= 1'b1;
      end
      else begin
         mem_wr_cmd_cnt <= mem_wr_cmd_cnt + 1;
         mem_wr_cmd_cmplt <= mem_wr_cmd_cmplt;
      end
   end
end

always @(posedge mem_clk or negedge rst_n) begin
   if (!rst_n) begin
       mem_rd_first <= 1'b0;
   end
   else begin
      if (mem_rd_cmd) begin
         mem_rd_first <= 1'b1;
      end
   end
end

always @(posedge mem_clk or negedge rst_n) begin
   if (!rst_n) begin
       mem_wr_first <= 1'b0;
   end
   else begin
      if (mem_wr_cmd) begin
         mem_wr_first <= 1'b1;
      end
   end
end

always @(posedge mem_clk or negedge rst_n) begin
   if (!rst_n) begin
       mem_rd_cmd_arrive <= 1'b0;
       mem_wr_cmd_arrive <= 1'b0;
   end
   else begin
      if ((mem_rd_cmd_cnt == 2) && (mem_rd_first)) begin
         mem_rd_cmd_arrive <= 1'b1;
         mem_wr_cmd_arrive <= 1'b0;
      end
      if ((mem_wr_cmd_cnt == 2) && (mem_wr_first)) begin
         mem_rd_cmd_arrive <= 1'b0;
         mem_wr_cmd_arrive <= 1'b1;
      end
   end
end

//write leveling detection.
`ifdef ddr3_ip_inst_NO_WRITE_LEVEL
`else
always @(posedge mem_clk or negedge rst_n) begin
   if (!rst_n) begin
      wl_act <= 1'b0;
   end
   else begin
    `ifdef ddr3_ip_inst_ADDR_MIRROR
       `ifdef ddr3_ip_inst_CS_WIDTH_2
          if ((mem_lmr_cmd && (ddr_cs_n == 2'b10) && (ddr_ba[1:0] == 2'b01) && (ddr_ad[7] == 1'b1)) ||
              (mem_lmr_cmd && (ddr_cs_n == 2'b01) && (ddr_ba[1:0] == 2'b10) && (ddr_ad[8] == 1'b1)))
          begin // MR1, Enter write leveling
       `endif
       `ifdef ddr3_ip_inst_CS_WIDTH_4
          if ((mem_lmr_cmd && (ddr_cs_n == 4'b1110 || ddr_cs_n == 4'b1011) && (ddr_ba[1:0] == 2'b01) && (ddr_ad[7] == 1'b1))
           || (mem_lmr_cmd && (ddr_cs_n == 4'b1101 || ddr_cs_n == 4'b0111) && (ddr_ba[1:0] == 2'b10) && (ddr_ad[8] == 1'b1))) 
          begin // MR1, Enter write leveling
       `endif
    `else
         if (mem_lmr_cmd && (ddr_ba[1:0] == 2'b01) && (ddr_ad[7] == 1'b1)) begin // MR1, Enter write leveling
    `endif
            wl_act <= 1'b1;
         end

    `ifdef ddr3_ip_inst_ADDR_MIRROR
       `ifdef ddr3_ip_inst_CS_WIDTH_2
          else if ((mem_lmr_cmd && (ddr_cs_n == 2'b10) && (ddr_ba[1:0] == 2'b01) && (ddr_ad[7] == 1'b0)) ||
                   (mem_lmr_cmd && (ddr_cs_n == 2'b01) && (ddr_ba[1:0] == 2'b10) && (ddr_ad[8] == 1'b0)))
          begin // MR1, Enter write leveling
       `endif //CS_WIDTH_2
       `ifdef ddr3_ip_inst_CS_WIDTH_4
          else if ((mem_lmr_cmd && (ddr_cs_n == 4'b1110 || ddr_cs_n == 4'b1011) && (ddr_ba[1:0] == 2'b01) && (ddr_ad[7] == 1'b0))
                || (mem_lmr_cmd && (ddr_cs_n == 4'b1101 || ddr_cs_n == 4'b0111) && (ddr_ba[1:0] == 2'b10) && (ddr_ad[8] == 1'b0))) 
          begin // MR1, Enter write leveling
       `endif //CS_WIDTH_4
    `else //NO_ADDR_MIRROR
      else if (mem_lmr_cmd && (ddr_ba[1:0] == 2'b01) && (ddr_ad[7] == 1'b0)) begin // MR1, Quit write leveling
    `endif //ADDR_MIRROR
         wl_act <= 1'b0;
      end
   end
end //always
`endif

always @(posedge mem_clk or negedge rst_n) begin
   if (!rst_n) begin
      mem_rd_cmd_lat_new <= 1'b0;
      mem_wr_cmd_lat_new <= 1'b0;
   end
   else begin
      mem_rd_cmd_lat_new <= (mem_rd_cmd_lat_new | (mem_wr_cmd_cmplt && mem_rd_cmd_arrive)) 
                            && ~(mem_rd_cmd_cmplt && mem_wr_cmd_arrive);
      mem_wr_cmd_lat_new <= (mem_wr_cmd_lat_new | (mem_rd_cmd_cmplt && mem_wr_cmd_arrive)) 
                            && ~(mem_wr_cmd_cmplt && mem_rd_cmd_arrive);
   end
end

///////////////////////////////////////////////////////////////////////
// Logic that compares the data presented at the user interface with the 
// data written into the memory during write cycles


reg   [287+36:0]         wr_data_fifo    [0:63];
reg   [287+36:0]         wr_data_fifo_out;
wire  [287+36:0]         int_wdata_cmp;
wire  [287:0]            wdata_cmp;
wire  [35:0]             wdm_cmp;
wire  [35:0]             int_wdm_cmp;
reg   [5:0]              wdf_wr_addr;
reg   [6:0]              wdf_rd_addr;
wire                      mem_wr_cmd_lat;
//reg                      mem_wr_cmd_lat;
reg                      datain_valid_d;
reg                      datain_valid_2d;


reg  [7:0]               wdf_rd_addr_cnt [`ddr3_ip_inst_DQS_WIDTH-1:0];
reg                      wdf_rd_addr_en  [`ddr3_ip_inst_DQS_WIDTH-1:0];
`ifdef ddr3_ip_inst_x4
reg  [3:0]   data_piece_0 [`ddr3_ip_inst_DQS_WIDTH-1:0];
reg  [3:0]   data_piece_1 [`ddr3_ip_inst_DQS_WIDTH-1:0];
reg  [3:0]   data_piece_2 [`ddr3_ip_inst_DQS_WIDTH-1:0];
reg     dm_piece_0 [`ddr3_ip_inst_DQS_WIDTH-1:0];
reg     dm_piece_1 [`ddr3_ip_inst_DQS_WIDTH-1:0];
reg     dm_piece_2 [`ddr3_ip_inst_DQS_WIDTH-1:0];
parameter DQ_PER_DQS = 4;
`else
reg  [7:0]   data_piece_0 [`ddr3_ip_inst_DQS_WIDTH-1:0];
reg  [7:0]   data_piece_1 [`ddr3_ip_inst_DQS_WIDTH-1:0];
reg  [7:0]   data_piece_2 [`ddr3_ip_inst_DQS_WIDTH-1:0];
reg     dm_piece_0 [`ddr3_ip_inst_DQS_WIDTH-1:0];
reg     dm_piece_1 [`ddr3_ip_inst_DQS_WIDTH-1:0];
reg     dm_piece_2 [`ddr3_ip_inst_DQS_WIDTH-1:0];
parameter DQ_PER_DQS = 8;
`endif


// Write the data submitted by the user into the fifo

// When a write command is seen on the memory interface, generate a 
// latched signal that is asserted until a read command is presented again.
// This signal along with the dqs signal is used to read the fifo and
// the actual data written into the fifo is compared against the user 
// submitted data.

//always @ (posedge mem_clk or negedge rst_n) begin
//    if (!rst_n) begin
//       mem_wr_cmd_lat <= 0;
//    end
//    else begin
//       mem_wr_cmd_lat <= (mem_wr_cmd_4d | mem_wr_cmd_lat) & ~(mem_rd_cmd_4d);
//    end
//end
assign mem_wr_cmd_lat = mem_wr_cmd_lat_new;

always @ (posedge user_clk or negedge rst_n) begin
    if (!rst_n) begin
       wdf_wr_addr                  <= 0;
       datain_valid_d               <= 0;
       datain_valid_2d              <= 0;
    end
    else begin
       datain_valid_d               <= datain_valid;
       datain_valid_2d               <= datain_valid_d;
     if (`ddr3_ip_inst_WrRqDDelay == 2'b01) begin
       if (datain_valid_d) begin
          wdf_wr_addr               <= wdf_wr_addr + 1;
       end

       case (wdf_wr_addr)
          6'd0   : wr_data_fifo[0]    <= {dmsel,datain};
          6'd1   : wr_data_fifo[1]    <= {dmsel,datain};
          6'd2   : wr_data_fifo[2]    <= {dmsel,datain};
          6'd3   : wr_data_fifo[3]    <= {dmsel,datain};
          6'd4   : wr_data_fifo[4]    <= {dmsel,datain};
          6'd5   : wr_data_fifo[5]    <= {dmsel,datain};
          6'd6   : wr_data_fifo[6]    <= {dmsel,datain};
          6'd7   : wr_data_fifo[7]    <= {dmsel,datain};
          6'd8   : wr_data_fifo[8]    <= {dmsel,datain};
          6'd9   : wr_data_fifo[9]    <= {dmsel,datain};
          6'd10  : wr_data_fifo[10]   <= {dmsel,datain};
          6'd11  : wr_data_fifo[11]   <= {dmsel,datain};
          6'd12  : wr_data_fifo[12]   <= {dmsel,datain};
          6'd13  : wr_data_fifo[13]   <= {dmsel,datain};
          6'd14  : wr_data_fifo[14]   <= {dmsel,datain};
          6'd15  : wr_data_fifo[15]   <= {dmsel,datain};
          6'd16  : wr_data_fifo[16]   <= {dmsel,datain};
          6'd17  : wr_data_fifo[17]   <= {dmsel,datain};
          6'd18  : wr_data_fifo[18]   <= {dmsel,datain};
          6'd19  : wr_data_fifo[19]   <= {dmsel,datain};
          6'd20  : wr_data_fifo[20]   <= {dmsel,datain};
          6'd21  : wr_data_fifo[21]   <= {dmsel,datain};
          6'd22  : wr_data_fifo[22]   <= {dmsel,datain};
          6'd23  : wr_data_fifo[23]   <= {dmsel,datain};
          6'd24  : wr_data_fifo[24]   <= {dmsel,datain};
          6'd25  : wr_data_fifo[25]   <= {dmsel,datain};
          6'd26  : wr_data_fifo[26]   <= {dmsel,datain};
          6'd27  : wr_data_fifo[27]   <= {dmsel,datain};
          6'd28  : wr_data_fifo[28]   <= {dmsel,datain};
          6'd29  : wr_data_fifo[29]   <= {dmsel,datain};
          6'd30  : wr_data_fifo[30]   <= {dmsel,datain};
          6'd31  : wr_data_fifo[31]   <= {dmsel,datain};
          6'd32  : wr_data_fifo[32]   <= {dmsel,datain};
          6'd33  : wr_data_fifo[33]   <= {dmsel,datain};
          6'd34  : wr_data_fifo[34]   <= {dmsel,datain};
          6'd35  : wr_data_fifo[35]   <= {dmsel,datain};
          6'd36  : wr_data_fifo[36]   <= {dmsel,datain};
          6'd37  : wr_data_fifo[37]   <= {dmsel,datain};
          6'd38  : wr_data_fifo[38]   <= {dmsel,datain};
          6'd39  : wr_data_fifo[39]   <= {dmsel,datain};
          6'd40  : wr_data_fifo[40]   <= {dmsel,datain};
          6'd41  : wr_data_fifo[41]   <= {dmsel,datain};
          6'd42  : wr_data_fifo[42]   <= {dmsel,datain};
          6'd43  : wr_data_fifo[43]   <= {dmsel,datain};
          6'd44  : wr_data_fifo[44]   <= {dmsel,datain};
          6'd45  : wr_data_fifo[45]   <= {dmsel,datain};
          6'd46  : wr_data_fifo[46]   <= {dmsel,datain};
          6'd47  : wr_data_fifo[47]   <= {dmsel,datain};
          6'd48  : wr_data_fifo[48]   <= {dmsel,datain};
          6'd49  : wr_data_fifo[49]   <= {dmsel,datain};
          6'd50  : wr_data_fifo[50]   <= {dmsel,datain};
          6'd51  : wr_data_fifo[51]   <= {dmsel,datain};
          6'd52  : wr_data_fifo[52]   <= {dmsel,datain};
          6'd53  : wr_data_fifo[53]   <= {dmsel,datain};
          6'd54  : wr_data_fifo[54]   <= {dmsel,datain};
          6'd55  : wr_data_fifo[55]   <= {dmsel,datain};
          6'd56  : wr_data_fifo[56]   <= {dmsel,datain};
          6'd57  : wr_data_fifo[57]   <= {dmsel,datain};
          6'd58  : wr_data_fifo[58]   <= {dmsel,datain};
          6'd59  : wr_data_fifo[59]   <= {dmsel,datain};
          6'd60  : wr_data_fifo[60]   <= {dmsel,datain};
          6'd61  : wr_data_fifo[61]   <= {dmsel,datain};
          6'd62  : wr_data_fifo[62]   <= {dmsel,datain};
          6'd63  : wr_data_fifo[63]   <= {dmsel,datain};
       endcase
     end
     else if (`ddr3_ip_inst_WrRqDDelay == 2'b10) begin
       if (datain_valid_2d) begin
          wdf_wr_addr               <= wdf_wr_addr + 1;
       end

       case (wdf_wr_addr)
          6'd0   : wr_data_fifo[0]    <= {dmsel,datain};
          6'd1   : wr_data_fifo[1]    <= {dmsel,datain};
          6'd2   : wr_data_fifo[2]    <= {dmsel,datain};
          6'd3   : wr_data_fifo[3]    <= {dmsel,datain};
          6'd4   : wr_data_fifo[4]    <= {dmsel,datain};
          6'd5   : wr_data_fifo[5]    <= {dmsel,datain};
          6'd6   : wr_data_fifo[6]    <= {dmsel,datain};
          6'd7   : wr_data_fifo[7]    <= {dmsel,datain};
          6'd8   : wr_data_fifo[8]    <= {dmsel,datain};
          6'd9   : wr_data_fifo[9]    <= {dmsel,datain};
          6'd10  : wr_data_fifo[10]   <= {dmsel,datain};
          6'd11  : wr_data_fifo[11]   <= {dmsel,datain};
          6'd12  : wr_data_fifo[12]   <= {dmsel,datain};
          6'd13  : wr_data_fifo[13]   <= {dmsel,datain};
          6'd14  : wr_data_fifo[14]   <= {dmsel,datain};
          6'd15  : wr_data_fifo[15]   <= {dmsel,datain};
          6'd16  : wr_data_fifo[16]   <= {dmsel,datain};
          6'd17  : wr_data_fifo[17]   <= {dmsel,datain};
          6'd18  : wr_data_fifo[18]   <= {dmsel,datain};
          6'd19  : wr_data_fifo[19]   <= {dmsel,datain};
          6'd20  : wr_data_fifo[20]   <= {dmsel,datain};
          6'd21  : wr_data_fifo[21]   <= {dmsel,datain};
          6'd22  : wr_data_fifo[22]   <= {dmsel,datain};
          6'd23  : wr_data_fifo[23]   <= {dmsel,datain};
          6'd24  : wr_data_fifo[24]   <= {dmsel,datain};
          6'd25  : wr_data_fifo[25]   <= {dmsel,datain};
          6'd26  : wr_data_fifo[26]   <= {dmsel,datain};
          6'd27  : wr_data_fifo[27]   <= {dmsel,datain};
          6'd28  : wr_data_fifo[28]   <= {dmsel,datain};
          6'd29  : wr_data_fifo[29]   <= {dmsel,datain};
          6'd30  : wr_data_fifo[30]   <= {dmsel,datain};
          6'd31  : wr_data_fifo[31]   <= {dmsel,datain};
          6'd32  : wr_data_fifo[32]   <= {dmsel,datain};
          6'd33  : wr_data_fifo[33]   <= {dmsel,datain};
          6'd34  : wr_data_fifo[34]   <= {dmsel,datain};
          6'd35  : wr_data_fifo[35]   <= {dmsel,datain};
          6'd36  : wr_data_fifo[36]   <= {dmsel,datain};
          6'd37  : wr_data_fifo[37]   <= {dmsel,datain};
          6'd38  : wr_data_fifo[38]   <= {dmsel,datain};
          6'd39  : wr_data_fifo[39]   <= {dmsel,datain};
          6'd40  : wr_data_fifo[40]   <= {dmsel,datain};
          6'd41  : wr_data_fifo[41]   <= {dmsel,datain};
          6'd42  : wr_data_fifo[42]   <= {dmsel,datain};
          6'd43  : wr_data_fifo[43]   <= {dmsel,datain};
          6'd44  : wr_data_fifo[44]   <= {dmsel,datain};
          6'd45  : wr_data_fifo[45]   <= {dmsel,datain};
          6'd46  : wr_data_fifo[46]   <= {dmsel,datain};
          6'd47  : wr_data_fifo[47]   <= {dmsel,datain};
          6'd48  : wr_data_fifo[48]   <= {dmsel,datain};
          6'd49  : wr_data_fifo[49]   <= {dmsel,datain};
          6'd50  : wr_data_fifo[50]   <= {dmsel,datain};
          6'd51  : wr_data_fifo[51]   <= {dmsel,datain};
          6'd52  : wr_data_fifo[52]   <= {dmsel,datain};
          6'd53  : wr_data_fifo[53]   <= {dmsel,datain};
          6'd54  : wr_data_fifo[54]   <= {dmsel,datain};
          6'd55  : wr_data_fifo[55]   <= {dmsel,datain};
          6'd56  : wr_data_fifo[56]   <= {dmsel,datain};
          6'd57  : wr_data_fifo[57]   <= {dmsel,datain};
          6'd58  : wr_data_fifo[58]   <= {dmsel,datain};
          6'd59  : wr_data_fifo[59]   <= {dmsel,datain};
          6'd60  : wr_data_fifo[60]   <= {dmsel,datain};
          6'd61  : wr_data_fifo[61]   <= {dmsel,datain};
          6'd62  : wr_data_fifo[62]   <= {dmsel,datain};
          6'd63  : wr_data_fifo[63]   <= {dmsel,datain};
       endcase
     end
   end
end

`ifdef ddr3_ip_inst_DQS_WIDTH_1
  always @ (posedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_0[0] = 0;
        dm_piece_0[0]   = 0;
        data_piece_2[0] = 0;
        dm_piece_2[0]   = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
          if (wdf_rd_addr_cnt[0][0] == 1) begin
            data_piece_0[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_0[0]   = ddr_dqm[0];
          end
          else
             if (wdf_rd_addr_cnt[0][0] == 0) begin
                data_piece_2[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
                dm_piece_2[0]   = ddr_dqm[0];
             end
        end
  end
     
  always @ (negedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_1[0] = 0;
        dm_piece_1[0] = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
           if (wdf_rd_addr_cnt[0][0] == 0) begin
            data_piece_1[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_1[0]   = ddr_dqm[0];
           end
        end
  end
`endif

`ifdef ddr3_ip_inst_DQS_WIDTH_2
  always @ (posedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_0[0] = 0;
        dm_piece_0[0]   = 0;
        data_piece_2[0] = 0;
        dm_piece_2[0]   = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
          if (wdf_rd_addr_cnt[0][0] == 1) begin
            data_piece_0[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_0[0]   = ddr_dqm[0];
          end
          else
             if (wdf_rd_addr_cnt[0][0] == 0) begin
                data_piece_2[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
                dm_piece_2[0]   = ddr_dqm[0];
             end
        end
  end
     
  always @ (negedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_1[0] = 0;
        dm_piece_1[0] = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
           if (wdf_rd_addr_cnt[0][0] == 0) begin
            data_piece_1[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_1[0]   = ddr_dqm[0];
           end
        end
  end

//  =================================================================
    always @ (posedge ddr_dqs_modified[1] or negedge rst_n) begin
         if (!rst_n) begin
            data_piece_0[1] = 0;
            dm_piece_0[1]   = 0;
            data_piece_2[1] = 0;
            dm_piece_2[1]   = 0;
         end
         else
            if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
              if (wdf_rd_addr_cnt[1][0] == 1) begin
                data_piece_0[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
                dm_piece_0[1]   = ddr_dqm[1];
              end
              else
                 if (wdf_rd_addr_cnt[1][0] == 0) begin
                    data_piece_2[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
                    dm_piece_2[1]   = ddr_dqm[1];
                 end
            end
      end
         
      always @ (negedge ddr_dqs_modified[1] or negedge rst_n) begin
         if (!rst_n) begin
            data_piece_1[1] = 0;
            dm_piece_1[1] = 0;
         end
         else
            if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
               if (wdf_rd_addr_cnt[1][0] == 0) begin
                data_piece_1[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
                dm_piece_1[1]   = ddr_dqm[1];
               end
            end
      end
`endif

//==============================================
`ifdef ddr3_ip_inst_DQS_WIDTH_3
  always @ (posedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_0[0] = 0;
        dm_piece_0[0]   = 0;
        data_piece_2[0] = 0;
        dm_piece_2[0]   = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
          if (wdf_rd_addr_cnt[0][0] == 1) begin
            data_piece_0[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_0[0]   = ddr_dqm[0];
          end
          else
             if (wdf_rd_addr_cnt[0][0] == 0) begin
                data_piece_2[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
                dm_piece_2[0]   = ddr_dqm[0];
             end
        end
  end
     
  always @ (negedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_1[0] = 0;
        dm_piece_1[0] = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
           if (wdf_rd_addr_cnt[0][0] == 0) begin
            data_piece_1[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_1[0]   = ddr_dqm[0];
           end
        end
  end
//  =================================================================
  always @ (posedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[1] = 0;
          dm_piece_0[1]   = 0;
          data_piece_2[1] = 0;
          dm_piece_2[1]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[1][0] == 1) begin
              data_piece_0[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_0[1]   = ddr_dqm[1];
            end
            else
               if (wdf_rd_addr_cnt[1][0] == 0) begin
                  data_piece_2[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
                  dm_piece_2[1]   = ddr_dqm[1];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[1] = 0;
          dm_piece_1[1] = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[1][0] == 0) begin
              data_piece_1[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_1[1]   = ddr_dqm[1];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[2] = 0;
          dm_piece_0[2]   = 0;
          data_piece_2[2] = 0;
          dm_piece_2[2]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[2][0] == 1) begin
              data_piece_0[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_0[2]   = ddr_dqm[2];
            end
            else
               if (wdf_rd_addr_cnt[2][0] == 0) begin
                  data_piece_2[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
                  dm_piece_2[2]   = ddr_dqm[2];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[2] = 0;
          dm_piece_1[2] = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[2][0] == 0) begin
              data_piece_1[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_1[2]   = ddr_dqm[2];
             end
          end
    end
`endif

//==============================================
`ifdef ddr3_ip_inst_DQS_WIDTH_4
  always @ (posedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_0[0] = 0;
        dm_piece_0[0]   = 0;
        data_piece_2[0] = 0;
        dm_piece_2[0]   = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
          if (wdf_rd_addr_cnt[0][0] == 1) begin
            data_piece_0[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_0[0]   = ddr_dqm[0];
          end
          else
             if (wdf_rd_addr_cnt[0][0] == 0) begin
                data_piece_2[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
                dm_piece_2[0]   = ddr_dqm[0];
             end
        end
  end
     
  always @ (negedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_1[0] = 0;
        dm_piece_1[0] = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
           if (wdf_rd_addr_cnt[0][0] == 0) begin
            data_piece_1[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_1[0]   = ddr_dqm[0];
           end
        end
  end

//  =================================================================
  always @ (posedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[1] = 0;
          dm_piece_0[1]   = 0;
          data_piece_2[1] = 0;
          dm_piece_2[1]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[1][0] == 1) begin
              data_piece_0[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_0[1]   = ddr_dqm[1];
            end
            else
               if (wdf_rd_addr_cnt[1][0] == 0) begin
                  data_piece_2[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
                  dm_piece_2[1]   = ddr_dqm[1];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[1] = 0;
          dm_piece_1[1] = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[1][0] == 0) begin
              data_piece_1[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_1[1]   = ddr_dqm[1];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[2] = 0;
          dm_piece_0[2]   = 0;
          data_piece_2[2] = 0;
          dm_piece_2[2]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[2][0] == 1) begin
              data_piece_0[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_0[2]   = ddr_dqm[2];
            end
            else
               if (wdf_rd_addr_cnt[2][0] == 0) begin
                  data_piece_2[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
                  dm_piece_2[2]   = ddr_dqm[2];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[2] = 0;
          dm_piece_1[2] = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[2][0] == 0) begin
              data_piece_1[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_1[2]   = ddr_dqm[2];
             end
          end
    end

//  =================================================================
    always @ (posedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[3] = 0;
          dm_piece_0[3]   = 0;
          data_piece_2[3] = 0;
          dm_piece_2[3]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[3][0] == 1) begin
              data_piece_0[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_0[3]   = ddr_dqm[3];
            end
            else
               if (wdf_rd_addr_cnt[3][0] == 0) begin
                  data_piece_2[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
                  dm_piece_2[3]   = ddr_dqm[3];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[3] = 0;
          dm_piece_1[3] = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[3][0] == 0) begin
              data_piece_1[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_1[3]   = ddr_dqm[3];
             end
          end
    end

`endif

//==============================================
`ifdef ddr3_ip_inst_DQS_WIDTH_5
  always @ (posedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_0[0] = 0;
        dm_piece_0[0]   = 0;
        data_piece_2[0] = 0;
        dm_piece_2[0]   = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
          if (wdf_rd_addr_cnt[0][0] == 1) begin
            data_piece_0[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_0[0]   = ddr_dqm[0];
          end
          else
             if (wdf_rd_addr_cnt[0][0] == 0) begin
                data_piece_2[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
                dm_piece_2[0]   = ddr_dqm[0];
             end
        end
  end
     
  always @ (negedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_1[0] = 0;
        dm_piece_1[0] = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
           if (wdf_rd_addr_cnt[0][0] == 0) begin
            data_piece_1[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_1[0]   = ddr_dqm[0];
           end
        end
  end

//  =================================================================
  always @ (posedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[1] = 0;
          dm_piece_0[1]   = 0;
          data_piece_2[1] = 0;
          dm_piece_2[1]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[1][0] == 1) begin
              data_piece_0[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_0[1]   = ddr_dqm[1];
            end
            else
               if (wdf_rd_addr_cnt[1][0] == 0) begin
                  data_piece_2[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
                  dm_piece_2[1]   = ddr_dqm[1];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[1] = 0;
          dm_piece_1[1] = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[1][0] == 0) begin
              data_piece_1[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_1[1]   = ddr_dqm[1];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[2] = 0;
          dm_piece_0[2]   = 0;
          data_piece_2[2] = 0;
          dm_piece_2[2]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[2][0] == 1) begin
              data_piece_0[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_0[2]   = ddr_dqm[2];
            end
            else
               if (wdf_rd_addr_cnt[2][0] == 0) begin
                  data_piece_2[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
                  dm_piece_2[2]   = ddr_dqm[2];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[2] = 0;
          dm_piece_1[2] = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[2][0] == 0) begin
              data_piece_1[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_1[2]   = ddr_dqm[2];
             end
          end
    end

//  =================================================================
    always @ (posedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[3] = 0;
          dm_piece_0[3]   = 0;
          data_piece_2[3] = 0;
          dm_piece_2[3]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[3][0] == 1) begin
              data_piece_0[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_0[3]   = ddr_dqm[3];
            end
            else
               if (wdf_rd_addr_cnt[3][0] == 0) begin
                  data_piece_2[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
                  dm_piece_2[3]   = ddr_dqm[3];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[3] = 0;
          dm_piece_1[3] = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[3][0] == 0) begin
              data_piece_1[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_1[3]   = ddr_dqm[3];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[4] = 0;
          dm_piece_0[4]   = 0;
          data_piece_2[4] = 0;
          dm_piece_2[4]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[4][0] == 1) begin
              data_piece_0[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_0[4]   = ddr_dqm[4];
            end
            else
               if (wdf_rd_addr_cnt[4][0] == 0) begin
                  data_piece_2[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
                  dm_piece_2[4]   = ddr_dqm[4];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[4] = 0;
          dm_piece_1[4] = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[4][0] == 0) begin
              data_piece_1[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_1[4]   = ddr_dqm[4];
             end
          end
    end

`endif
	
//==============================================
`ifdef ddr3_ip_inst_DQS_WIDTH_6
  always @ (posedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_0[0] = 0;
        dm_piece_0[0]   = 0;
        data_piece_2[0] = 0;
        dm_piece_2[0]   = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
          if (wdf_rd_addr_cnt[0][0] == 1) begin
            data_piece_0[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_0[0]   = ddr_dqm[0];
          end
          else
             if (wdf_rd_addr_cnt[0][0] == 0) begin
                data_piece_2[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
                dm_piece_2[0]   = ddr_dqm[0];
             end
        end
  end
     
  always @ (negedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_1[0] = 0;
        dm_piece_1[0] = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
           if (wdf_rd_addr_cnt[0][0] == 0) begin
            data_piece_1[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_1[0]   = ddr_dqm[0];
           end
        end
  end
//  =================================================================
  always @ (posedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[1] = 0;
          dm_piece_0[1]   = 0;
          data_piece_2[1] = 0;
          dm_piece_2[1]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[1][0] == 1) begin
              data_piece_0[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_0[1]   = ddr_dqm[1];
            end
            else
               if (wdf_rd_addr_cnt[1][0] == 0) begin
                  data_piece_2[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
                  dm_piece_2[1]   = ddr_dqm[1];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[1] = 0;
          dm_piece_1[1] = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[1][0] == 0) begin
              data_piece_1[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_1[1]   = ddr_dqm[1];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[2] = 0;
          dm_piece_0[2]   = 0;
          data_piece_2[2] = 0;
          dm_piece_2[2]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[2][0] == 1) begin
              data_piece_0[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_0[2]   = ddr_dqm[2];
            end
            else
               if (wdf_rd_addr_cnt[2][0] == 0) begin
                  data_piece_2[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
                  dm_piece_2[2]   = ddr_dqm[2];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[2] = 0;
          dm_piece_1[2] = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[2][0] == 0) begin
              data_piece_1[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_1[2]   = ddr_dqm[2];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[3] = 0;
          dm_piece_0[3]   = 0;
          data_piece_2[3] = 0;
          dm_piece_2[3]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[3][0] == 1) begin
              data_piece_0[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_0[3]   = ddr_dqm[3];
            end
            else
               if (wdf_rd_addr_cnt[3][0] == 0) begin
                  data_piece_2[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
                  dm_piece_2[3]   = ddr_dqm[3];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[3] = 0;
          dm_piece_1[3] = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[3][0] == 0) begin
              data_piece_1[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_1[3]   = ddr_dqm[3];
             end
          end
    end
//  =================================================================sk4
    always @ (posedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[4] = 0;
          dm_piece_0[4]   = 0;
          data_piece_2[4] = 0;
          dm_piece_2[4]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[4][0] == 1) begin
              data_piece_0[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_0[4]   = ddr_dqm[4];
            end
            else
               if (wdf_rd_addr_cnt[4][0] == 0) begin
                  data_piece_2[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
                  dm_piece_2[4]   = ddr_dqm[4];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[4] = 0;
          dm_piece_1[4] = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[4][0] == 0) begin
              data_piece_1[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_1[4]   = ddr_dqm[4];
             end
          end
    end
//  =================================================================sk5
    always @ (posedge ddr_dqs_modified[5] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[5] = 0;
          dm_piece_0[5]   = 0;
          data_piece_2[5] = 0;
          dm_piece_2[5]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[5] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[5][0] == 1) begin
              data_piece_0[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
              dm_piece_0[5]   = ddr_dqm[5];
            end
            else
               if (wdf_rd_addr_cnt[5][0] == 0) begin
                  data_piece_2[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
                  dm_piece_2[5]   = ddr_dqm[5];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[5] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[5] = 0;
          dm_piece_1[5] = 0;
       end
       else
          if (wdf_rd_addr_cnt[5] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[5][0] == 0) begin
              data_piece_1[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
              dm_piece_1[5]   = ddr_dqm[5];
             end
          end
    end
`endif


//================================================== sk7
`ifdef ddr3_ip_inst_DQS_WIDTH_7
  always @ (posedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_0[0] = 0;
        dm_piece_0[0]   = 0;
        data_piece_2[0] = 0;
        dm_piece_2[0]   = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
          if (wdf_rd_addr_cnt[0][0] == 1) begin
            data_piece_0[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_0[0]   = ddr_dqm[0];
          end
          else
             if (wdf_rd_addr_cnt[0][0] == 0) begin
                data_piece_2[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
                dm_piece_2[0]   = ddr_dqm[0];
             end
        end
  end
     
  always @ (negedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_1[0] = 0;
        dm_piece_1[0] = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
           if (wdf_rd_addr_cnt[0][0] == 0) begin
            data_piece_1[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_1[0]   = ddr_dqm[0];
           end
        end
  end
//  =================================================================
  always @ (posedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[1] = 0;
          dm_piece_0[1]   = 0;
          data_piece_2[1] = 0;
          dm_piece_2[1]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[1][0] == 1) begin
              data_piece_0[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_0[1]   = ddr_dqm[1];
            end
            else
               if (wdf_rd_addr_cnt[1][0] == 0) begin
                  data_piece_2[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
                  dm_piece_2[1]   = ddr_dqm[1];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[1] = 0;
          dm_piece_1[1] = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[1][0] == 0) begin
              data_piece_1[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_1[1]   = ddr_dqm[1];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[2] = 0;
          dm_piece_0[2]   = 0;
          data_piece_2[2] = 0;
          dm_piece_2[2]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[2][0] == 1) begin
              data_piece_0[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_0[2]   = ddr_dqm[2];
            end
            else
               if (wdf_rd_addr_cnt[2][0] == 0) begin
                  data_piece_2[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
                  dm_piece_2[2]   = ddr_dqm[2];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[2] = 0;
          dm_piece_1[2] = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[2][0] == 0) begin
              data_piece_1[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_1[2]   = ddr_dqm[2];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[3] = 0;
          dm_piece_0[3]   = 0;
          data_piece_2[3] = 0;
          dm_piece_2[3]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[3][0] == 1) begin
              data_piece_0[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_0[3]   = ddr_dqm[3];
            end
            else
               if (wdf_rd_addr_cnt[3][0] == 0) begin
                  data_piece_2[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
                  dm_piece_2[3]   = ddr_dqm[3];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[3] = 0;
          dm_piece_1[3] = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[3][0] == 0) begin
              data_piece_1[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_1[3]   = ddr_dqm[3];
             end
          end
    end
//  =================================================================sk4
    always @ (posedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[4] = 0;
          dm_piece_0[4]   = 0;
          data_piece_2[4] = 0;
          dm_piece_2[4]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[4][0] == 1) begin
              data_piece_0[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_0[4]   = ddr_dqm[4];
            end
            else
               if (wdf_rd_addr_cnt[4][0] == 0) begin
                  data_piece_2[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
                  dm_piece_2[4]   = ddr_dqm[4];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[4] = 0;
          dm_piece_1[4] = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[4][0] == 0) begin
              data_piece_1[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_1[4]   = ddr_dqm[4];
             end
          end
    end
//  =================================================================sk5
    always @ (posedge ddr_dqs_modified[5] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[5] = 0;
          dm_piece_0[5]   = 0;
          data_piece_2[5] = 0;
          dm_piece_2[5]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[5] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[5][0] == 1) begin
              data_piece_0[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
              dm_piece_0[5]   = ddr_dqm[5];
            end
            else
               if (wdf_rd_addr_cnt[5][0] == 0) begin
                  data_piece_2[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
                  dm_piece_2[5]   = ddr_dqm[5];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[5] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[5] = 0;
          dm_piece_1[5] = 0;
       end
       else
          if (wdf_rd_addr_cnt[5] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[5][0] == 0) begin
              data_piece_1[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
              dm_piece_1[5]   = ddr_dqm[5];
             end
          end
    end
//  =================================================================sk6
    always @ (posedge ddr_dqs_modified[6] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[6] = 0;
          dm_piece_0[6]   = 0;
          data_piece_2[6] = 0;
          dm_piece_2[6]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[6] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[6][0] == 1) begin
              data_piece_0[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
              dm_piece_0[6]   = ddr_dqm[6];
            end
            else
               if (wdf_rd_addr_cnt[6][0] == 0) begin
                  data_piece_2[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
                  dm_piece_2[6]   = ddr_dqm[6];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[6] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[6] = 0;
          dm_piece_1[6] = 0;
       end
       else
          if (wdf_rd_addr_cnt[6] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[6][0] == 0) begin
              data_piece_1[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
              dm_piece_1[6]   = ddr_dqm[6];
             end
          end
    end
`endif

//======================================================
`ifdef ddr3_ip_inst_DQS_WIDTH_8
  always @ (posedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_0[0] = 0;
        dm_piece_0[0]   = 0;
        data_piece_2[0] = 0;
        dm_piece_2[0]   = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
          if (wdf_rd_addr_cnt[0][0] == 1) begin
            data_piece_0[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_0[0]   = ddr_dqm[0];
          end
          else
             if (wdf_rd_addr_cnt[0][0] == 0) begin
                data_piece_2[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
                dm_piece_2[0]   = ddr_dqm[0];
             end
        end
  end
     
  always @ (negedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_1[0] = 0;
        dm_piece_1[0] = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
           if (wdf_rd_addr_cnt[0][0] == 0) begin
            data_piece_1[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_1[0]   = ddr_dqm[0];
           end
        end
  end

//  =================================================================
  always @ (posedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[1] = 0;
          dm_piece_0[1]   = 0;
          data_piece_2[1] = 0;
          dm_piece_2[1]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[1][0] == 1) begin
              data_piece_0[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_0[1]   = ddr_dqm[1];
            end
            else
               if (wdf_rd_addr_cnt[1][0] == 0) begin
                  data_piece_2[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
                  dm_piece_2[1]   = ddr_dqm[1];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[1] = 0;
          dm_piece_1[1] = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[1][0] == 0) begin
              data_piece_1[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_1[1]   = ddr_dqm[1];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[2] = 0;
          dm_piece_0[2]   = 0;
          data_piece_2[2] = 0;
          dm_piece_2[2]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[2][0] == 1) begin
              data_piece_0[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_0[2]   = ddr_dqm[2];
            end
            else
               if (wdf_rd_addr_cnt[2][0] == 0) begin
                  data_piece_2[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
                  dm_piece_2[2]   = ddr_dqm[2];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[2] = 0;
          dm_piece_1[2] = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[2][0] == 0) begin
              data_piece_1[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_1[2]   = ddr_dqm[2];
             end
          end
    end

//  =================================================================
    always @ (posedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[3] = 0;
          dm_piece_0[3]   = 0;
          data_piece_2[3] = 0;
          dm_piece_2[3]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[3][0] == 1) begin
              data_piece_0[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_0[3]   = ddr_dqm[3];
            end
            else
               if (wdf_rd_addr_cnt[3][0] == 0) begin
                  data_piece_2[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
                  dm_piece_2[3]   = ddr_dqm[3];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[3] = 0;
          dm_piece_1[3] = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[3][0] == 0) begin
              data_piece_1[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_1[3]   = ddr_dqm[3];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[4] = 0;
          dm_piece_0[4]   = 0;
          data_piece_2[4] = 0;
          dm_piece_2[4]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[4][0] == 1) begin
              data_piece_0[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_0[4]   = ddr_dqm[4];
            end
            else
               if (wdf_rd_addr_cnt[4][0] == 0) begin
                  data_piece_2[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
                  dm_piece_2[4]   = ddr_dqm[4];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[4] = 0;
          dm_piece_1[4] = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[4][0] == 0) begin
              data_piece_1[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_1[4]   = ddr_dqm[4];
             end
          end
    end

//  =================================================================
    always @ (posedge ddr_dqs_modified[5] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[5] = 0;
          dm_piece_0[5]   = 0;
          data_piece_2[5] = 0;
          dm_piece_2[5]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[5] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[5][0] == 1) begin
              data_piece_0[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
              dm_piece_0[5]   = ddr_dqm[5];
            end
            else
               if (wdf_rd_addr_cnt[5][0] == 0) begin
                  data_piece_2[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
                  dm_piece_2[5]   = ddr_dqm[5];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[5] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[5] = 0;
          dm_piece_1[5] = 0;
       end
       else
          if (wdf_rd_addr_cnt[5] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[5][0] == 0) begin
              data_piece_1[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
              dm_piece_1[5]   = ddr_dqm[5];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[6] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[6] = 0;
          dm_piece_0[6]   = 0;
          data_piece_2[6] = 0;
          dm_piece_2[6]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[6] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[6][0] == 1) begin
              data_piece_0[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
              dm_piece_0[6]   = ddr_dqm[6];
            end
            else
               if (wdf_rd_addr_cnt[6][0] == 0) begin
                  data_piece_2[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
                  dm_piece_2[6]   = ddr_dqm[6];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[6] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[6] = 0;
          dm_piece_1[6] = 0;
       end
       else
          if (wdf_rd_addr_cnt[6] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[6][0] == 0) begin
              data_piece_1[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
              dm_piece_1[6]   = ddr_dqm[6];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[7] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[7] = 0;
          dm_piece_0[7]   = 0;
          data_piece_2[7] = 0;
          dm_piece_2[7]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[7] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[7][0] == 1) begin
              data_piece_0[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
              dm_piece_0[7]   = ddr_dqm[7];
            end
            else
               if (wdf_rd_addr_cnt[7][0] == 0) begin
                  data_piece_2[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
                  dm_piece_2[7]   = ddr_dqm[7];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[7] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[7] = 0;
          dm_piece_1[7] = 0;
       end
       else
          if (wdf_rd_addr_cnt[7] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[7][0] == 0) begin
              data_piece_1[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
              dm_piece_1[7]   = ddr_dqm[7];
             end
          end
    end

`endif

//======================================================
`ifdef ddr3_ip_inst_DQS_WIDTH_9
  always @ (posedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_0[0] = 0;
        dm_piece_0[0]   = 0;
        data_piece_2[0] = 0;
        dm_piece_2[0]   = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
          if (wdf_rd_addr_cnt[0][0] == 1) begin
            data_piece_0[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_0[0]   = ddr_dqm[0];
          end
          else
             if (wdf_rd_addr_cnt[0][0] == 0) begin
                data_piece_2[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
                dm_piece_2[0]   = ddr_dqm[0];
             end
        end
  end
     
  always @ (negedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_1[0] = 0;
        dm_piece_1[0] = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
           if (wdf_rd_addr_cnt[0][0] == 0) begin
            data_piece_1[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_1[0]   = ddr_dqm[0];
           end
        end
  end

//  =================================================================
  always @ (posedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[1] = 0;
          dm_piece_0[1]   = 0;
          data_piece_2[1] = 0;
          dm_piece_2[1]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[1][0] == 1) begin
              data_piece_0[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_0[1]   = ddr_dqm[1];
            end
            else
               if (wdf_rd_addr_cnt[1][0] == 0) begin
                  data_piece_2[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
                  dm_piece_2[1]   = ddr_dqm[1];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[1] = 0;
          dm_piece_1[1] = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[1][0] == 0) begin
              data_piece_1[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_1[1]   = ddr_dqm[1];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[2] = 0;
          dm_piece_0[2]   = 0;
          data_piece_2[2] = 0;
          dm_piece_2[2]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[2][0] == 1) begin
              data_piece_0[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_0[2]   = ddr_dqm[2];
            end
            else
               if (wdf_rd_addr_cnt[2][0] == 0) begin
                  data_piece_2[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
                  dm_piece_2[2]   = ddr_dqm[2];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[2] = 0;
          dm_piece_1[2] = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[2][0] == 0) begin
              data_piece_1[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_1[2]   = ddr_dqm[2];
             end
          end
    end

//  =================================================================
    always @ (posedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[3] = 0;
          dm_piece_0[3]   = 0;
          data_piece_2[3] = 0;
          dm_piece_2[3]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[3][0] == 1) begin
              data_piece_0[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_0[3]   = ddr_dqm[3];
            end
            else
               if (wdf_rd_addr_cnt[3][0] == 0) begin
                  data_piece_2[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
                  dm_piece_2[3]   = ddr_dqm[3];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[3] = 0;
          dm_piece_1[3] = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[3][0] == 0) begin
              data_piece_1[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_1[3]   = ddr_dqm[3];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[4] = 0;
          dm_piece_0[4]   = 0;
          data_piece_2[4] = 0;
          dm_piece_2[4]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[4][0] == 1) begin
              data_piece_0[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_0[4]   = ddr_dqm[4];
            end
            else
               if (wdf_rd_addr_cnt[4][0] == 0) begin
                  data_piece_2[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
                  dm_piece_2[4]   = ddr_dqm[4];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[4] = 0;
          dm_piece_1[4] = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[4][0] == 0) begin
              data_piece_1[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_1[4]   = ddr_dqm[4];
             end
          end
    end

//  =================================================================
    always @ (posedge ddr_dqs_modified[5] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[5] = 0;
          dm_piece_0[5]   = 0;
          data_piece_2[5] = 0;
          dm_piece_2[5]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[5] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[5][0] == 1) begin
              data_piece_0[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
              dm_piece_0[5]   = ddr_dqm[5];
            end
            else
               if (wdf_rd_addr_cnt[5][0] == 0) begin
                  data_piece_2[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
                  dm_piece_2[5]   = ddr_dqm[5];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[5] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[5] = 0;
          dm_piece_1[5] = 0;
       end
       else
          if (wdf_rd_addr_cnt[5] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[5][0] == 0) begin
              data_piece_1[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
              dm_piece_1[5]   = ddr_dqm[5];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[6] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[6] = 0;
          dm_piece_0[6]   = 0;
          data_piece_2[6] = 0;
          dm_piece_2[6]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[6] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[6][0] == 1) begin
              data_piece_0[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
              dm_piece_0[6]   = ddr_dqm[6];
            end
            else
               if (wdf_rd_addr_cnt[6][0] == 0) begin
                  data_piece_2[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
                  dm_piece_2[6]   = ddr_dqm[6];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[6] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[6] = 0;
          dm_piece_1[6] = 0;
       end
       else
          if (wdf_rd_addr_cnt[6] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[6][0] == 0) begin
              data_piece_1[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
              dm_piece_1[6]   = ddr_dqm[6];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[7] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[7] = 0;
          dm_piece_0[7]   = 0;
          data_piece_2[7] = 0;
          dm_piece_2[7]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[7] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[7][0] == 1) begin
              data_piece_0[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
              dm_piece_0[7]   = ddr_dqm[7];
            end
            else
               if (wdf_rd_addr_cnt[7][0] == 0) begin
                  data_piece_2[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
                  dm_piece_2[7]   = ddr_dqm[7];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[7] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[7] = 0;
          dm_piece_1[7] = 0;
       end
       else
          if (wdf_rd_addr_cnt[7] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[7][0] == 0) begin
              data_piece_1[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
              dm_piece_1[7]   = ddr_dqm[7];
             end
          end
    end

    //  =================================================================
    always @ (posedge ddr_dqs_modified[8] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[8] = 0;
          dm_piece_0[8]   = 0;
          data_piece_2[8] = 0;
          dm_piece_2[8]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[8] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[8][0] == 1) begin
              data_piece_0[8] = ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
              dm_piece_0[8]   = ddr_dqm[8];
            end
            else
               if (wdf_rd_addr_cnt[8][0] == 0) begin
                  data_piece_2[8] = ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
                  dm_piece_2[8]   = ddr_dqm[8];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[8] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[8] = 0;
          dm_piece_1[8] = 0;
       end
       else
          if (wdf_rd_addr_cnt[8] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[8][0] == 0) begin
              data_piece_1[8] = ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
              dm_piece_1[8]   = ddr_dqm[8];
             end
          end
    end
`endif

//======================================================
`ifdef ddr3_ip_inst_DQS_WIDTH_10
  always @ (posedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_0[0] = 0;
        dm_piece_0[0]   = 0;
        data_piece_2[0] = 0;
        dm_piece_2[0]   = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
          if (wdf_rd_addr_cnt[0][0] == 1) begin
            data_piece_0[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_0[0]   = ddr_dqm[0];
          end
          else
             if (wdf_rd_addr_cnt[0][0] == 0) begin
                data_piece_2[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
                dm_piece_2[0]   = ddr_dqm[0];
             end
        end
  end
     
  always @ (negedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_1[0] = 0;
        dm_piece_1[0] = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
           if (wdf_rd_addr_cnt[0][0] == 0) begin
            data_piece_1[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_1[0]   = ddr_dqm[0];
           end
        end
  end

//  =================================================================
  always @ (posedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[1] = 0;
          dm_piece_0[1]   = 0;
          data_piece_2[1] = 0;
          dm_piece_2[1]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[1][0] == 1) begin
              data_piece_0[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_0[1]   = ddr_dqm[1];
            end
            else
               if (wdf_rd_addr_cnt[1][0] == 0) begin
                  data_piece_2[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
                  dm_piece_2[1]   = ddr_dqm[1];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[1] = 0;
          dm_piece_1[1] = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[1][0] == 0) begin
              data_piece_1[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_1[1]   = ddr_dqm[1];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[2] = 0;
          dm_piece_0[2]   = 0;
          data_piece_2[2] = 0;
          dm_piece_2[2]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[2][0] == 1) begin
              data_piece_0[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_0[2]   = ddr_dqm[2];
            end
            else
               if (wdf_rd_addr_cnt[2][0] == 0) begin
                  data_piece_2[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
                  dm_piece_2[2]   = ddr_dqm[2];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[2] = 0;
          dm_piece_1[2] = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[2][0] == 0) begin
              data_piece_1[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_1[2]   = ddr_dqm[2];
             end
          end
    end

//  =================================================================
    always @ (posedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[3] = 0;
          dm_piece_0[3]   = 0;
          data_piece_2[3] = 0;
          dm_piece_2[3]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[3][0] == 1) begin
              data_piece_0[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_0[3]   = ddr_dqm[3];
            end
            else
               if (wdf_rd_addr_cnt[3][0] == 0) begin
                  data_piece_2[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
                  dm_piece_2[3]   = ddr_dqm[3];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[3] = 0;
          dm_piece_1[3] = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[3][0] == 0) begin
              data_piece_1[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_1[3]   = ddr_dqm[3];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[4] = 0;
          dm_piece_0[4]   = 0;
          data_piece_2[4] = 0;
          dm_piece_2[4]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[4][0] == 1) begin
              data_piece_0[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_0[4]   = ddr_dqm[4];
            end
            else
               if (wdf_rd_addr_cnt[4][0] == 0) begin
                  data_piece_2[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
                  dm_piece_2[4]   = ddr_dqm[4];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[4] = 0;
          dm_piece_1[4] = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[4][0] == 0) begin
              data_piece_1[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_1[4]   = ddr_dqm[4];
             end
          end
    end

//  =================================================================
    always @ (posedge ddr_dqs_modified[5] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[5] = 0;
          dm_piece_0[5]   = 0;
          data_piece_2[5] = 0;
          dm_piece_2[5]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[5] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[5][0] == 1) begin
              data_piece_0[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
              dm_piece_0[5]   = ddr_dqm[5];
            end
            else
               if (wdf_rd_addr_cnt[5][0] == 0) begin
                  data_piece_2[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
                  dm_piece_2[5]   = ddr_dqm[5];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[5] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[5] = 0;
          dm_piece_1[5] = 0;
       end
       else
          if (wdf_rd_addr_cnt[5] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[5][0] == 0) begin
              data_piece_1[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
              dm_piece_1[5]   = ddr_dqm[5];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[6] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[6] = 0;
          dm_piece_0[6]   = 0;
          data_piece_2[6] = 0;
          dm_piece_2[6]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[6] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[6][0] == 1) begin
              data_piece_0[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
              dm_piece_0[6]   = ddr_dqm[6];
            end
            else
               if (wdf_rd_addr_cnt[6][0] == 0) begin
                  data_piece_2[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
                  dm_piece_2[6]   = ddr_dqm[6];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[6] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[6] = 0;
          dm_piece_1[6] = 0;
       end
       else
          if (wdf_rd_addr_cnt[6] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[6][0] == 0) begin
              data_piece_1[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
              dm_piece_1[6]   = ddr_dqm[6];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[7] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[7] = 0;
          dm_piece_0[7]   = 0;
          data_piece_2[7] = 0;
          dm_piece_2[7]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[7] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[7][0] == 1) begin
              data_piece_0[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
              dm_piece_0[7]   = ddr_dqm[7];
            end
            else
               if (wdf_rd_addr_cnt[7][0] == 0) begin
                  data_piece_2[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
                  dm_piece_2[7]   = ddr_dqm[7];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[7] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[7] = 0;
          dm_piece_1[7] = 0;
       end
       else
          if (wdf_rd_addr_cnt[7] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[7][0] == 0) begin
              data_piece_1[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
              dm_piece_1[7]   = ddr_dqm[7];
             end
          end
    end

    //  =================================================================
    always @ (posedge ddr_dqs_modified[8] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[8] = 0;
          dm_piece_0[8]   = 0;
          data_piece_2[8] = 0;
          dm_piece_2[8]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[8] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[8][0] == 1) begin
              data_piece_0[8] = ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
              dm_piece_0[8]   = ddr_dqm[8];
            end
            else
               if (wdf_rd_addr_cnt[8][0] == 0) begin
                  data_piece_2[8] = ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
                  dm_piece_2[8]   = ddr_dqm[8];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[8] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[8] = 0;
          dm_piece_1[8] = 0;
       end
       else
          if (wdf_rd_addr_cnt[8] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[8][0] == 0) begin
              data_piece_1[8] = ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
              dm_piece_1[8]   = ddr_dqm[8];
             end
          end
    end

    //  =================================================================
    always @ (posedge ddr_dqs_modified[9] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[9] = 0;
          dm_piece_0[9]   = 0;
          data_piece_2[9] = 0;
          dm_piece_2[9]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[9] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[9][0] == 1) begin
              data_piece_0[9] = ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9];
              dm_piece_0[9]   = ddr_dqm[9];
            end
            else
               if (wdf_rd_addr_cnt[9][0] == 0) begin
                  data_piece_2[9] = ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9];
                  dm_piece_2[9]   = ddr_dqm[9];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[9] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[9] = 0;
          dm_piece_1[9] = 0;
       end
       else
          if (wdf_rd_addr_cnt[9] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[9][0] == 0) begin
              data_piece_1[9] = ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9];
              dm_piece_1[9]   = ddr_dqm[9];
             end
          end
    end

`endif

//======================================================
`ifdef ddr3_ip_inst_DQS_WIDTH_12
  always @ (posedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_0[0] = 0;
        dm_piece_0[0]   = 0;
        data_piece_2[0] = 0;
        dm_piece_2[0]   = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
          if (wdf_rd_addr_cnt[0][0] == 1) begin
            data_piece_0[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_0[0]   = ddr_dqm[0];
          end
          else
             if (wdf_rd_addr_cnt[0][0] == 0) begin
                data_piece_2[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
                dm_piece_2[0]   = ddr_dqm[0];
             end
        end
  end
     
  always @ (negedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_1[0] = 0;
        dm_piece_1[0] = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
           if (wdf_rd_addr_cnt[0][0] == 0) begin
            data_piece_1[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_1[0]   = ddr_dqm[0];
           end
        end
  end

//  =================================================================
  always @ (posedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[1] = 0;
          dm_piece_0[1]   = 0;
          data_piece_2[1] = 0;
          dm_piece_2[1]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[1][0] == 1) begin
              data_piece_0[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_0[1]   = ddr_dqm[1];
            end
            else
               if (wdf_rd_addr_cnt[1][0] == 0) begin
                  data_piece_2[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
                  dm_piece_2[1]   = ddr_dqm[1];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[1] = 0;
          dm_piece_1[1] = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[1][0] == 0) begin
              data_piece_1[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_1[1]   = ddr_dqm[1];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[2] = 0;
          dm_piece_0[2]   = 0;
          data_piece_2[2] = 0;
          dm_piece_2[2]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[2][0] == 1) begin
              data_piece_0[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_0[2]   = ddr_dqm[2];
            end
            else
               if (wdf_rd_addr_cnt[2][0] == 0) begin
                  data_piece_2[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
                  dm_piece_2[2]   = ddr_dqm[2];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[2] = 0;
          dm_piece_1[2] = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[2][0] == 0) begin
              data_piece_1[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_1[2]   = ddr_dqm[2];
             end
          end
    end

//  =================================================================
    always @ (posedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[3] = 0;
          dm_piece_0[3]   = 0;
          data_piece_2[3] = 0;
          dm_piece_2[3]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[3][0] == 1) begin
              data_piece_0[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_0[3]   = ddr_dqm[3];
            end
            else
               if (wdf_rd_addr_cnt[3][0] == 0) begin
                  data_piece_2[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
                  dm_piece_2[3]   = ddr_dqm[3];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[3] = 0;
          dm_piece_1[3] = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[3][0] == 0) begin
              data_piece_1[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_1[3]   = ddr_dqm[3];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[4] = 0;
          dm_piece_0[4]   = 0;
          data_piece_2[4] = 0;
          dm_piece_2[4]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[4][0] == 1) begin
              data_piece_0[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_0[4]   = ddr_dqm[4];
            end
            else
               if (wdf_rd_addr_cnt[4][0] == 0) begin
                  data_piece_2[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
                  dm_piece_2[4]   = ddr_dqm[4];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[4] = 0;
          dm_piece_1[4] = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[4][0] == 0) begin
              data_piece_1[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_1[4]   = ddr_dqm[4];
             end
          end
    end

//  =================================================================
    always @ (posedge ddr_dqs_modified[5] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[5] = 0;
          dm_piece_0[5]   = 0;
          data_piece_2[5] = 0;
          dm_piece_2[5]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[5] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[5][0] == 1) begin
              data_piece_0[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
              dm_piece_0[5]   = ddr_dqm[5];
            end
            else
               if (wdf_rd_addr_cnt[5][0] == 0) begin
                  data_piece_2[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
                  dm_piece_2[5]   = ddr_dqm[5];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[5] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[5] = 0;
          dm_piece_1[5] = 0;
       end
       else
          if (wdf_rd_addr_cnt[5] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[5][0] == 0) begin
              data_piece_1[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
              dm_piece_1[5]   = ddr_dqm[5];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[6] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[6] = 0;
          dm_piece_0[6]   = 0;
          data_piece_2[6] = 0;
          dm_piece_2[6]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[6] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[6][0] == 1) begin
              data_piece_0[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
              dm_piece_0[6]   = ddr_dqm[6];
            end
            else
               if (wdf_rd_addr_cnt[6][0] == 0) begin
                  data_piece_2[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
                  dm_piece_2[6]   = ddr_dqm[6];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[6] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[6] = 0;
          dm_piece_1[6] = 0;
       end
       else
          if (wdf_rd_addr_cnt[6] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[6][0] == 0) begin
              data_piece_1[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
              dm_piece_1[6]   = ddr_dqm[6];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[7] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[7] = 0;
          dm_piece_0[7]   = 0;
          data_piece_2[7] = 0;
          dm_piece_2[7]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[7] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[7][0] == 1) begin
              data_piece_0[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
              dm_piece_0[7]   = ddr_dqm[7];
            end
            else
               if (wdf_rd_addr_cnt[7][0] == 0) begin
                  data_piece_2[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
                  dm_piece_2[7]   = ddr_dqm[7];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[7] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[7] = 0;
          dm_piece_1[7] = 0;
       end
       else
          if (wdf_rd_addr_cnt[7] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[7][0] == 0) begin
              data_piece_1[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
              dm_piece_1[7]   = ddr_dqm[7];
             end
          end
    end

    //  =================================================================
    always @ (posedge ddr_dqs_modified[8] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[8] = 0;
          dm_piece_0[8]   = 0;
          data_piece_2[8] = 0;
          dm_piece_2[8]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[8] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[8][0] == 1) begin
              data_piece_0[8] = ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
              dm_piece_0[8]   = ddr_dqm[8];
            end
            else
               if (wdf_rd_addr_cnt[8][0] == 0) begin
                  data_piece_2[8] = ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
                  dm_piece_2[8]   = ddr_dqm[8];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[8] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[8] = 0;
          dm_piece_1[8] = 0;
       end
       else
          if (wdf_rd_addr_cnt[8] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[8][0] == 0) begin
              data_piece_1[8] = ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
              dm_piece_1[8]   = ddr_dqm[8];
             end
          end
    end

    //  =================================================================
    always @ (posedge ddr_dqs_modified[9] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[9] = 0;
          dm_piece_0[9]   = 0;
          data_piece_2[9] = 0;
          dm_piece_2[9]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[9] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[9][0] == 1) begin
              data_piece_0[9] = ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9];
              dm_piece_0[9]   = ddr_dqm[9];
            end
            else
               if (wdf_rd_addr_cnt[9][0] == 0) begin
                  data_piece_2[9] = ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9];
                  dm_piece_2[9]   = ddr_dqm[9];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[9] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[9] = 0;
          dm_piece_1[9] = 0;
       end
       else
          if (wdf_rd_addr_cnt[9] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[9][0] == 0) begin
              data_piece_1[9] = ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9];
              dm_piece_1[9]   = ddr_dqm[9];
             end
          end
    end

    //  =================================================================
    always @ (posedge ddr_dqs_modified[10] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[10] = 0;
          dm_piece_0[10]   = 0;
          data_piece_2[10] = 0;
          dm_piece_2[10]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[10] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[10][0] == 1) begin
              data_piece_0[10] = ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10];
              dm_piece_0[10]   = ddr_dqm[10];
            end
            else
               if (wdf_rd_addr_cnt[10][0] == 0) begin
                  data_piece_2[10] = ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10];
                  dm_piece_2[10]   = ddr_dqm[10];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[10] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[10] = 0;
          dm_piece_1[10] = 0;
       end
       else
          if (wdf_rd_addr_cnt[10] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[10][0] == 0) begin
              data_piece_1[10] = ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10];
              dm_piece_1[10]   = ddr_dqm[10];
             end
          end
    end

    //  =================================================================
    always @ (posedge ddr_dqs_modified[11] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[11] = 0;
          dm_piece_0[11]   = 0;
          data_piece_2[11] = 0;
          dm_piece_2[11]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[11] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[11][0] == 1) begin
              data_piece_0[11] = ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11];
              dm_piece_0[11]   = ddr_dqm[11];
            end
            else
               if (wdf_rd_addr_cnt[11][0] == 0) begin
                  data_piece_2[11] = ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11];
                  dm_piece_2[11]   = ddr_dqm[11];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[11] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[11] = 0;
          dm_piece_1[11] = 0;
       end
       else
          if (wdf_rd_addr_cnt[11] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[11][0] == 0) begin
              data_piece_1[11] = ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11];
              dm_piece_1[11]   = ddr_dqm[11];
             end
          end
    end

`endif

//======================================================
`ifdef ddr3_ip_inst_DQS_WIDTH_14
  always @ (posedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_0[0] = 0;
        dm_piece_0[0]   = 0;
        data_piece_2[0] = 0;
        dm_piece_2[0]   = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
          if (wdf_rd_addr_cnt[0][0] == 1) begin
            data_piece_0[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_0[0]   = ddr_dqm[0];
          end
          else
             if (wdf_rd_addr_cnt[0][0] == 0) begin
                data_piece_2[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
                dm_piece_2[0]   = ddr_dqm[0];
             end
        end
  end
     
  always @ (negedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_1[0] = 0;
        dm_piece_1[0] = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
           if (wdf_rd_addr_cnt[0][0] == 0) begin
            data_piece_1[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_1[0]   = ddr_dqm[0];
           end
        end
  end

//  =================================================================
  always @ (posedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[1] = 0;
          dm_piece_0[1]   = 0;
          data_piece_2[1] = 0;
          dm_piece_2[1]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[1][0] == 1) begin
              data_piece_0[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_0[1]   = ddr_dqm[1];
            end
            else
               if (wdf_rd_addr_cnt[1][0] == 0) begin
                  data_piece_2[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
                  dm_piece_2[1]   = ddr_dqm[1];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[1] = 0;
          dm_piece_1[1] = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[1][0] == 0) begin
              data_piece_1[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_1[1]   = ddr_dqm[1];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[2] = 0;
          dm_piece_0[2]   = 0;
          data_piece_2[2] = 0;
          dm_piece_2[2]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[2][0] == 1) begin
              data_piece_0[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_0[2]   = ddr_dqm[2];
            end
            else
               if (wdf_rd_addr_cnt[2][0] == 0) begin
                  data_piece_2[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
                  dm_piece_2[2]   = ddr_dqm[2];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[2] = 0;
          dm_piece_1[2] = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[2][0] == 0) begin
              data_piece_1[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_1[2]   = ddr_dqm[2];
             end
          end
    end

//  =================================================================
    always @ (posedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[3] = 0;
          dm_piece_0[3]   = 0;
          data_piece_2[3] = 0;
          dm_piece_2[3]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[3][0] == 1) begin
              data_piece_0[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_0[3]   = ddr_dqm[3];
            end
            else
               if (wdf_rd_addr_cnt[3][0] == 0) begin
                  data_piece_2[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
                  dm_piece_2[3]   = ddr_dqm[3];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[3] = 0;
          dm_piece_1[3] = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[3][0] == 0) begin
              data_piece_1[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_1[3]   = ddr_dqm[3];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[4] = 0;
          dm_piece_0[4]   = 0;
          data_piece_2[4] = 0;
          dm_piece_2[4]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[4][0] == 1) begin
              data_piece_0[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_0[4]   = ddr_dqm[4];
            end
            else
               if (wdf_rd_addr_cnt[4][0] == 0) begin
                  data_piece_2[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
                  dm_piece_2[4]   = ddr_dqm[4];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[4] = 0;
          dm_piece_1[4] = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[4][0] == 0) begin
              data_piece_1[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_1[4]   = ddr_dqm[4];
             end
          end
    end

//  =================================================================
    always @ (posedge ddr_dqs_modified[5] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[5] = 0;
          dm_piece_0[5]   = 0;
          data_piece_2[5] = 0;
          dm_piece_2[5]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[5] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[5][0] == 1) begin
              data_piece_0[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
              dm_piece_0[5]   = ddr_dqm[5];
            end
            else
               if (wdf_rd_addr_cnt[5][0] == 0) begin
                  data_piece_2[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
                  dm_piece_2[5]   = ddr_dqm[5];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[5] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[5] = 0;
          dm_piece_1[5] = 0;
       end
       else
          if (wdf_rd_addr_cnt[5] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[5][0] == 0) begin
              data_piece_1[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
              dm_piece_1[5]   = ddr_dqm[5];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[6] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[6] = 0;
          dm_piece_0[6]   = 0;
          data_piece_2[6] = 0;
          dm_piece_2[6]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[6] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[6][0] == 1) begin
              data_piece_0[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
              dm_piece_0[6]   = ddr_dqm[6];
            end
            else
               if (wdf_rd_addr_cnt[6][0] == 0) begin
                  data_piece_2[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
                  dm_piece_2[6]   = ddr_dqm[6];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[6] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[6] = 0;
          dm_piece_1[6] = 0;
       end
       else
          if (wdf_rd_addr_cnt[6] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[6][0] == 0) begin
              data_piece_1[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
              dm_piece_1[6]   = ddr_dqm[6];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[7] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[7] = 0;
          dm_piece_0[7]   = 0;
          data_piece_2[7] = 0;
          dm_piece_2[7]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[7] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[7][0] == 1) begin
              data_piece_0[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
              dm_piece_0[7]   = ddr_dqm[7];
            end
            else
               if (wdf_rd_addr_cnt[7][0] == 0) begin
                  data_piece_2[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
                  dm_piece_2[7]   = ddr_dqm[7];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[7] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[7] = 0;
          dm_piece_1[7] = 0;
       end
       else
          if (wdf_rd_addr_cnt[7] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[7][0] == 0) begin
              data_piece_1[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
              dm_piece_1[7]   = ddr_dqm[7];
             end
          end
    end

    //  =================================================================
    always @ (posedge ddr_dqs_modified[8] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[8] = 0;
          dm_piece_0[8]   = 0;
          data_piece_2[8] = 0;
          dm_piece_2[8]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[8] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[8][0] == 1) begin
              data_piece_0[8] = ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
              dm_piece_0[8]   = ddr_dqm[8];
            end
            else
               if (wdf_rd_addr_cnt[8][0] == 0) begin
                  data_piece_2[8] = ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
                  dm_piece_2[8]   = ddr_dqm[8];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[8] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[8] = 0;
          dm_piece_1[8] = 0;
       end
       else
          if (wdf_rd_addr_cnt[8] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[8][0] == 0) begin
              data_piece_1[8] = ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
              dm_piece_1[8]   = ddr_dqm[8];
             end
          end
    end

    //  =================================================================
    always @ (posedge ddr_dqs_modified[9] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[9] = 0;
          dm_piece_0[9]   = 0;
          data_piece_2[9] = 0;
          dm_piece_2[9]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[9] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[9][0] == 1) begin
              data_piece_0[9] = ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9];
              dm_piece_0[9]   = ddr_dqm[9];
            end
            else
               if (wdf_rd_addr_cnt[9][0] == 0) begin
                  data_piece_2[9] = ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9];
                  dm_piece_2[9]   = ddr_dqm[9];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[9] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[9] = 0;
          dm_piece_1[9] = 0;
       end
       else
          if (wdf_rd_addr_cnt[9] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[9][0] == 0) begin
              data_piece_1[9] = ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9];
              dm_piece_1[9]   = ddr_dqm[9];
             end
          end
    end

    //  =================================================================
    always @ (posedge ddr_dqs_modified[10] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[10] = 0;
          dm_piece_0[10]   = 0;
          data_piece_2[10] = 0;
          dm_piece_2[10]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[10] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[10][0] == 1) begin
              data_piece_0[10] = ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10];
              dm_piece_0[10]   = ddr_dqm[10];
            end
            else
               if (wdf_rd_addr_cnt[10][0] == 0) begin
                  data_piece_2[10] = ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10];
                  dm_piece_2[10]   = ddr_dqm[10];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[10] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[10] = 0;
          dm_piece_1[10] = 0;
       end
       else
          if (wdf_rd_addr_cnt[10] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[10][0] == 0) begin
              data_piece_1[10] = ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10];
              dm_piece_1[10]   = ddr_dqm[10];
             end
          end
    end

    //  =================================================================
    always @ (posedge ddr_dqs_modified[11] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[11] = 0;
          dm_piece_0[11]   = 0;
          data_piece_2[11] = 0;
          dm_piece_2[11]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[11] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[11][0] == 1) begin
              data_piece_0[11] = ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11];
              dm_piece_0[11]   = ddr_dqm[11];
            end
            else
               if (wdf_rd_addr_cnt[11][0] == 0) begin
                  data_piece_2[11] = ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11];
                  dm_piece_2[11]   = ddr_dqm[11];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[11] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[11] = 0;
          dm_piece_1[11] = 0;
       end
       else
          if (wdf_rd_addr_cnt[11] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[11][0] == 0) begin
              data_piece_1[11] = ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11];
              dm_piece_1[11]   = ddr_dqm[11];
             end
          end
    end


    //  =================================================================
    always @ (posedge ddr_dqs_modified[12] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[12] = 0;
          dm_piece_0[12]   = 0;
          data_piece_2[12] = 0;
          dm_piece_2[12]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[12] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[12][0] == 1) begin
              data_piece_0[12] = ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12];
              dm_piece_0[12]   = ddr_dqm[12];
            end
            else
               if (wdf_rd_addr_cnt[12][0] == 0) begin
                  data_piece_2[12] = ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12];
                  dm_piece_2[12]   = ddr_dqm[12];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[12] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[12] = 0;
          dm_piece_1[12] = 0;
       end
       else
          if (wdf_rd_addr_cnt[12] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[12][0] == 0) begin
              data_piece_1[12] = ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12];
              dm_piece_1[12]   = ddr_dqm[12];
             end
          end
    end


    //  =================================================================
    always @ (posedge ddr_dqs_modified[13] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[13] = 0;
          dm_piece_0[13]   = 0;
          data_piece_2[13] = 0;
          dm_piece_2[13]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[13] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[13][0] == 1) begin
              data_piece_0[13] = ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13];
              dm_piece_0[13]   = ddr_dqm[13];
            end
            else
               if (wdf_rd_addr_cnt[13][0] == 0) begin
                  data_piece_2[13] = ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13];
                  dm_piece_2[13]   = ddr_dqm[13];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[13] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[13] = 0;
          dm_piece_1[13] = 0;
       end
       else
          if (wdf_rd_addr_cnt[13] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[13][0] == 0) begin
              data_piece_1[13] = ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13];
              dm_piece_1[13]   = ddr_dqm[13];
             end
          end
    end

`endif

//======================================================
`ifdef ddr3_ip_inst_DQS_WIDTH_16
  always @ (posedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_0[0] = 0;
        dm_piece_0[0]   = 0;
        data_piece_2[0] = 0;
        dm_piece_2[0]   = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
          if (wdf_rd_addr_cnt[0][0] == 1) begin
            data_piece_0[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_0[0]   = ddr_dqm[0];
          end
          else
             if (wdf_rd_addr_cnt[0][0] == 0) begin
                data_piece_2[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
                dm_piece_2[0]   = ddr_dqm[0];
             end
        end
  end
     
  always @ (negedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_1[0] = 0;
        dm_piece_1[0] = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
           if (wdf_rd_addr_cnt[0][0] == 0) begin
            data_piece_1[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_1[0]   = ddr_dqm[0];
           end
        end
  end

//  =================================================================
  always @ (posedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[1] = 0;
          dm_piece_0[1]   = 0;
          data_piece_2[1] = 0;
          dm_piece_2[1]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[1][0] == 1) begin
              data_piece_0[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_0[1]   = ddr_dqm[1];
            end
            else
               if (wdf_rd_addr_cnt[1][0] == 0) begin
                  data_piece_2[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
                  dm_piece_2[1]   = ddr_dqm[1];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[1] = 0;
          dm_piece_1[1] = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[1][0] == 0) begin
              data_piece_1[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_1[1]   = ddr_dqm[1];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[2] = 0;
          dm_piece_0[2]   = 0;
          data_piece_2[2] = 0;
          dm_piece_2[2]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[2][0] == 1) begin
              data_piece_0[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_0[2]   = ddr_dqm[2];
            end
            else
               if (wdf_rd_addr_cnt[2][0] == 0) begin
                  data_piece_2[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
                  dm_piece_2[2]   = ddr_dqm[2];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[2] = 0;
          dm_piece_1[2] = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[2][0] == 0) begin
              data_piece_1[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_1[2]   = ddr_dqm[2];
             end
          end
    end

//  =================================================================
    always @ (posedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[3] = 0;
          dm_piece_0[3]   = 0;
          data_piece_2[3] = 0;
          dm_piece_2[3]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[3][0] == 1) begin
              data_piece_0[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_0[3]   = ddr_dqm[3];
            end
            else
               if (wdf_rd_addr_cnt[3][0] == 0) begin
                  data_piece_2[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
                  dm_piece_2[3]   = ddr_dqm[3];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[3] = 0;
          dm_piece_1[3] = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[3][0] == 0) begin
              data_piece_1[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_1[3]   = ddr_dqm[3];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[4] = 0;
          dm_piece_0[4]   = 0;
          data_piece_2[4] = 0;
          dm_piece_2[4]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[4][0] == 1) begin
              data_piece_0[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_0[4]   = ddr_dqm[4];
            end
            else
               if (wdf_rd_addr_cnt[4][0] == 0) begin
                  data_piece_2[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
                  dm_piece_2[4]   = ddr_dqm[4];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[4] = 0;
          dm_piece_1[4] = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[4][0] == 0) begin
              data_piece_1[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_1[4]   = ddr_dqm[4];
             end
          end
    end

//  =================================================================
    always @ (posedge ddr_dqs_modified[5] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[5] = 0;
          dm_piece_0[5]   = 0;
          data_piece_2[5] = 0;
          dm_piece_2[5]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[5] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[5][0] == 1) begin
              data_piece_0[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
              dm_piece_0[5]   = ddr_dqm[5];
            end
            else
               if (wdf_rd_addr_cnt[5][0] == 0) begin
                  data_piece_2[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
                  dm_piece_2[5]   = ddr_dqm[5];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[5] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[5] = 0;
          dm_piece_1[5] = 0;
       end
       else
          if (wdf_rd_addr_cnt[5] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[5][0] == 0) begin
              data_piece_1[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
              dm_piece_1[5]   = ddr_dqm[5];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[6] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[6] = 0;
          dm_piece_0[6]   = 0;
          data_piece_2[6] = 0;
          dm_piece_2[6]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[6] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[6][0] == 1) begin
              data_piece_0[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
              dm_piece_0[6]   = ddr_dqm[6];
            end
            else
               if (wdf_rd_addr_cnt[6][0] == 0) begin
                  data_piece_2[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
                  dm_piece_2[6]   = ddr_dqm[6];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[6] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[6] = 0;
          dm_piece_1[6] = 0;
       end
       else
          if (wdf_rd_addr_cnt[6] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[6][0] == 0) begin
              data_piece_1[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
              dm_piece_1[6]   = ddr_dqm[6];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[7] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[7] = 0;
          dm_piece_0[7]   = 0;
          data_piece_2[7] = 0;
          dm_piece_2[7]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[7] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[7][0] == 1) begin
              data_piece_0[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
              dm_piece_0[7]   = ddr_dqm[7];
            end
            else
               if (wdf_rd_addr_cnt[7][0] == 0) begin
                  data_piece_2[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
                  dm_piece_2[7]   = ddr_dqm[7];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[7] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[7] = 0;
          dm_piece_1[7] = 0;
       end
       else
          if (wdf_rd_addr_cnt[7] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[7][0] == 0) begin
              data_piece_1[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
              dm_piece_1[7]   = ddr_dqm[7];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[8] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[8] = 0;
          dm_piece_0[8]   = 0;
          data_piece_2[8] = 0;
          dm_piece_2[8]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[8] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[8][0] == 1) begin
              data_piece_0[8] = ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
              dm_piece_0[8]   = ddr_dqm[8];
            end
            else
               if (wdf_rd_addr_cnt[8][0] == 0) begin
                  data_piece_2[8] = ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
                  dm_piece_2[8]   = ddr_dqm[8];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[8] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[8] = 0;
          dm_piece_1[8] = 0;
       end
       else
          if (wdf_rd_addr_cnt[8] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[8][0] == 0) begin
              data_piece_1[8] = ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
              dm_piece_1[8]   = ddr_dqm[8];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[9] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[9] = 0;
          dm_piece_0[9]   = 0;
          data_piece_2[9] = 0;
          dm_piece_2[9]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[9] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[9][0] == 1) begin
              data_piece_0[9] = ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9];
              dm_piece_0[9]   = ddr_dqm[9];
            end
            else
               if (wdf_rd_addr_cnt[9][0] == 0) begin
                  data_piece_2[9] = ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9];
                  dm_piece_2[9]   = ddr_dqm[9];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[9] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[9] = 0;
          dm_piece_1[9] = 0;
       end
       else
          if (wdf_rd_addr_cnt[9] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[9][0] == 0) begin
              data_piece_1[9] = ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9];
              dm_piece_1[9]   = ddr_dqm[9];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[10] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[10] = 0;
          dm_piece_0[10]   = 0;
          data_piece_2[10] = 0;
          dm_piece_2[10]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[10] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[10][0] == 1) begin
              data_piece_0[10] = ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10];
              dm_piece_0[10]   = ddr_dqm[10];
            end
            else
               if (wdf_rd_addr_cnt[10][0] == 0) begin
                  data_piece_2[10] = ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10];
                  dm_piece_2[10]   = ddr_dqm[10];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[10] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[10] = 0;
          dm_piece_1[10] = 0;
       end
       else
          if (wdf_rd_addr_cnt[10] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[10][0] == 0) begin
              data_piece_1[10] = ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10];
              dm_piece_1[10]   = ddr_dqm[10];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[11] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[11] = 0;
          dm_piece_0[11]   = 0;
          data_piece_2[11] = 0;
          dm_piece_2[11]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[11] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[11][0] == 1) begin
              data_piece_0[11] = ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11];
              dm_piece_0[11]   = ddr_dqm[11];
            end
            else
               if (wdf_rd_addr_cnt[11][0] == 0) begin
                  data_piece_2[11] = ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11];
                  dm_piece_2[11]   = ddr_dqm[11];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[11] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[11] = 0;
          dm_piece_1[11] = 0;
       end
       else
          if (wdf_rd_addr_cnt[11] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[11][0] == 0) begin
              data_piece_1[11] = ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11];
              dm_piece_1[11]   = ddr_dqm[11];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[12] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[12] = 0;
          dm_piece_0[12]   = 0;
          data_piece_2[12] = 0;
          dm_piece_2[12]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[12] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[12][0] == 1) begin
              data_piece_0[12] = ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12];
              dm_piece_0[12]   = ddr_dqm[12];
            end
            else
               if (wdf_rd_addr_cnt[12][0] == 0) begin
                  data_piece_2[12] = ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12];
                  dm_piece_2[12]   = ddr_dqm[12];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[12] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[12] = 0;
          dm_piece_1[12] = 0;
       end
       else
          if (wdf_rd_addr_cnt[12] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[12][0] == 0) begin
              data_piece_1[12] = ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12];
              dm_piece_1[12]   = ddr_dqm[12];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[13] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[13] = 0;
          dm_piece_0[13]   = 0;
          data_piece_2[13] = 0;
          dm_piece_2[13]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[13] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[13][0] == 1) begin
              data_piece_0[13] = ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13];
              dm_piece_0[13]   = ddr_dqm[13];
            end
            else
               if (wdf_rd_addr_cnt[13][0] == 0) begin
                  data_piece_2[13] = ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13];
                  dm_piece_2[13]   = ddr_dqm[13];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[13] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[13] = 0;
          dm_piece_1[13] = 0;
       end
       else
          if (wdf_rd_addr_cnt[13] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[13][0] == 0) begin
              data_piece_1[13] = ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13];
              dm_piece_1[13]   = ddr_dqm[13];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[14] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[14] = 0;
          dm_piece_0[14]   = 0;
          data_piece_2[14] = 0;
          dm_piece_2[14]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[14] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[14][0] == 1) begin
              data_piece_0[14] = ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14];
              dm_piece_0[14]   = ddr_dqm[14];
            end
            else
               if (wdf_rd_addr_cnt[14][0] == 0) begin
                  data_piece_2[14] = ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14];
                  dm_piece_2[14]   = ddr_dqm[14];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[14] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[14] = 0;
          dm_piece_1[14] = 0;
       end
       else
          if (wdf_rd_addr_cnt[14] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[14][0] == 0) begin
              data_piece_1[14] = ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14];
              dm_piece_1[14]   = ddr_dqm[14];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[15] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[15] = 0;
          dm_piece_0[15]   = 0;
          data_piece_2[15] = 0;
          dm_piece_2[15]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[15] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[15][0] == 1) begin
              data_piece_0[15] = ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15];
              dm_piece_0[15]   = ddr_dqm[15];
            end
            else
               if (wdf_rd_addr_cnt[15][0] == 0) begin
                  data_piece_2[15] = ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15];
                  dm_piece_2[15]   = ddr_dqm[15];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[15] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[15] = 0;
          dm_piece_1[15] = 0;
       end
       else
          if (wdf_rd_addr_cnt[15] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[15][0] == 0) begin
              data_piece_1[15] = ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15];
              dm_piece_1[15]   = ddr_dqm[15];
             end
          end
    end

`endif

//======================================================
`ifdef ddr3_ip_inst_DQS_WIDTH_18
  always @ (posedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_0[0] = 0;
        dm_piece_0[0]   = 0;
        data_piece_2[0] = 0;
        dm_piece_2[0]   = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
          if (wdf_rd_addr_cnt[0][0] == 1) begin
            data_piece_0[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_0[0]   = ddr_dqm[0];
          end
          else
             if (wdf_rd_addr_cnt[0][0] == 0) begin
                data_piece_2[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
                dm_piece_2[0]   = ddr_dqm[0];
             end
        end
  end
     
  always @ (negedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (!rst_n) begin
        data_piece_1[0] = 0;
        dm_piece_1[0] = 0;
     end
     else
        if (wdf_rd_addr_cnt[0] != 0) begin // skip the first cycle of dps bus during write
           if (wdf_rd_addr_cnt[0][0] == 0) begin
            data_piece_1[0] = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
            dm_piece_1[0]   = ddr_dqm[0];
           end
        end
  end

//  =================================================================
  always @ (posedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[1] = 0;
          dm_piece_0[1]   = 0;
          data_piece_2[1] = 0;
          dm_piece_2[1]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[1][0] == 1) begin
              data_piece_0[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_0[1]   = ddr_dqm[1];
            end
            else
               if (wdf_rd_addr_cnt[1][0] == 0) begin
                  data_piece_2[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
                  dm_piece_2[1]   = ddr_dqm[1];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[1] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[1] = 0;
          dm_piece_1[1] = 0;
       end
       else
          if (wdf_rd_addr_cnt[1] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[1][0] == 0) begin
              data_piece_1[1] = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
              dm_piece_1[1]   = ddr_dqm[1];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[2] = 0;
          dm_piece_0[2]   = 0;
          data_piece_2[2] = 0;
          dm_piece_2[2]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[2][0] == 1) begin
              data_piece_0[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_0[2]   = ddr_dqm[2];
            end
            else
               if (wdf_rd_addr_cnt[2][0] == 0) begin
                  data_piece_2[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
                  dm_piece_2[2]   = ddr_dqm[2];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[2] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[2] = 0;
          dm_piece_1[2] = 0;
       end
       else
          if (wdf_rd_addr_cnt[2] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[2][0] == 0) begin
              data_piece_1[2] = ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
              dm_piece_1[2]   = ddr_dqm[2];
             end
          end
    end

//  =================================================================
    always @ (posedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[3] = 0;
          dm_piece_0[3]   = 0;
          data_piece_2[3] = 0;
          dm_piece_2[3]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[3][0] == 1) begin
              data_piece_0[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_0[3]   = ddr_dqm[3];
            end
            else
               if (wdf_rd_addr_cnt[3][0] == 0) begin
                  data_piece_2[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
                  dm_piece_2[3]   = ddr_dqm[3];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[3] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[3] = 0;
          dm_piece_1[3] = 0;
       end
       else
          if (wdf_rd_addr_cnt[3] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[3][0] == 0) begin
              data_piece_1[3] = ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
              dm_piece_1[3]   = ddr_dqm[3];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[4] = 0;
          dm_piece_0[4]   = 0;
          data_piece_2[4] = 0;
          dm_piece_2[4]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[4][0] == 1) begin
              data_piece_0[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_0[4]   = ddr_dqm[4];
            end
            else
               if (wdf_rd_addr_cnt[4][0] == 0) begin
                  data_piece_2[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
                  dm_piece_2[4]   = ddr_dqm[4];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[4] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[4] = 0;
          dm_piece_1[4] = 0;
       end
       else
          if (wdf_rd_addr_cnt[4] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[4][0] == 0) begin
              data_piece_1[4] = ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
              dm_piece_1[4]   = ddr_dqm[4];
             end
          end
    end

//  =================================================================
    always @ (posedge ddr_dqs_modified[5] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[5] = 0;
          dm_piece_0[5]   = 0;
          data_piece_2[5] = 0;
          dm_piece_2[5]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[5] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[5][0] == 1) begin
              data_piece_0[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
              dm_piece_0[5]   = ddr_dqm[5];
            end
            else
               if (wdf_rd_addr_cnt[5][0] == 0) begin
                  data_piece_2[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
                  dm_piece_2[5]   = ddr_dqm[5];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[5] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[5] = 0;
          dm_piece_1[5] = 0;
       end
       else
          if (wdf_rd_addr_cnt[5] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[5][0] == 0) begin
              data_piece_1[5] = ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
              dm_piece_1[5]   = ddr_dqm[5];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[6] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[6] = 0;
          dm_piece_0[6]   = 0;
          data_piece_2[6] = 0;
          dm_piece_2[6]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[6] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[6][0] == 1) begin
              data_piece_0[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
              dm_piece_0[6]   = ddr_dqm[6];
            end
            else
               if (wdf_rd_addr_cnt[6][0] == 0) begin
                  data_piece_2[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
                  dm_piece_2[6]   = ddr_dqm[6];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[6] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[6] = 0;
          dm_piece_1[6] = 0;
       end
       else
          if (wdf_rd_addr_cnt[6] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[6][0] == 0) begin
              data_piece_1[6] = ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
              dm_piece_1[6]   = ddr_dqm[6];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[7] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[7] = 0;
          dm_piece_0[7]   = 0;
          data_piece_2[7] = 0;
          dm_piece_2[7]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[7] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[7][0] == 1) begin
              data_piece_0[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
              dm_piece_0[7]   = ddr_dqm[7];
            end
            else
               if (wdf_rd_addr_cnt[7][0] == 0) begin
                  data_piece_2[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
                  dm_piece_2[7]   = ddr_dqm[7];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[7] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[7] = 0;
          dm_piece_1[7] = 0;
       end
       else
          if (wdf_rd_addr_cnt[7] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[7][0] == 0) begin
              data_piece_1[7] = ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
              dm_piece_1[7]   = ddr_dqm[7];
             end
          end
    end
//  =================================================================
    always @ (posedge ddr_dqs_modified[8] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[8] = 0;
          dm_piece_0[8]   = 0;
          data_piece_2[8] = 0;
          dm_piece_2[8]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[8] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[8][0] == 1) begin
              data_piece_0[8] = ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
              dm_piece_0[8]   = ddr_dqm[8];
            end
            else
               if (wdf_rd_addr_cnt[8][0] == 0) begin
                  data_piece_2[8] = ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
                  dm_piece_2[8]   = ddr_dqm[8];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[8] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[8] = 0;
          dm_piece_1[8] = 0;
       end
       else
          if (wdf_rd_addr_cnt[8] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[8][0] == 0) begin
              data_piece_1[8] = ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
              dm_piece_1[8]   = ddr_dqm[8];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[9] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[9] = 0;
          dm_piece_0[9]   = 0;
          data_piece_2[9] = 0;
          dm_piece_2[9]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[9] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[9][0] == 1) begin
              data_piece_0[9] = ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9];
              dm_piece_0[9]   = ddr_dqm[9];
            end
            else
               if (wdf_rd_addr_cnt[9][0] == 0) begin
                  data_piece_2[9] = ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9];
                  dm_piece_2[9]   = ddr_dqm[9];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[9] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[9] = 0;
          dm_piece_1[9] = 0;
       end
       else
          if (wdf_rd_addr_cnt[9] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[9][0] == 0) begin
              data_piece_1[9] = ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9];
              dm_piece_1[9]   = ddr_dqm[9];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[10] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[10] = 0;
          dm_piece_0[10]   = 0;
          data_piece_2[10] = 0;
          dm_piece_2[10]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[10] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[10][0] == 1) begin
              data_piece_0[10] = ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10];
              dm_piece_0[10]   = ddr_dqm[10];
            end
            else
               if (wdf_rd_addr_cnt[10][0] == 0) begin
                  data_piece_2[10] = ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10];
                  dm_piece_2[10]   = ddr_dqm[10];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[10] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[10] = 0;
          dm_piece_1[10] = 0;
       end
       else
          if (wdf_rd_addr_cnt[10] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[10][0] == 0) begin
              data_piece_1[10] = ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10];
              dm_piece_1[10]   = ddr_dqm[10];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[11] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[11] = 0;
          dm_piece_0[11]   = 0;
          data_piece_2[11] = 0;
          dm_piece_2[11]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[11] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[11][0] == 1) begin
              data_piece_0[11] = ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11];
              dm_piece_0[11]   = ddr_dqm[11];
            end
            else
               if (wdf_rd_addr_cnt[11][0] == 0) begin
                  data_piece_2[11] = ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11];
                  dm_piece_2[11]   = ddr_dqm[11];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[11] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[11] = 0;
          dm_piece_1[11] = 0;
       end
       else
          if (wdf_rd_addr_cnt[11] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[11][0] == 0) begin
              data_piece_1[11] = ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11];
              dm_piece_1[11]   = ddr_dqm[11];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[12] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[12] = 0;
          dm_piece_0[12]   = 0;
          data_piece_2[12] = 0;
          dm_piece_2[12]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[12] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[12][0] == 1) begin
              data_piece_0[12] = ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12];
              dm_piece_0[12]   = ddr_dqm[12];
            end
            else
               if (wdf_rd_addr_cnt[12][0] == 0) begin
                  data_piece_2[12] = ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12];
                  dm_piece_2[12]   = ddr_dqm[12];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[12] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[12] = 0;
          dm_piece_1[12] = 0;
       end
       else
          if (wdf_rd_addr_cnt[12] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[12][0] == 0) begin
              data_piece_1[12] = ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12];
              dm_piece_1[12]   = ddr_dqm[12];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[13] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[13] = 0;
          dm_piece_0[13]   = 0;
          data_piece_2[13] = 0;
          dm_piece_2[13]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[13] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[13][0] == 1) begin
              data_piece_0[13] = ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13];
              dm_piece_0[13]   = ddr_dqm[13];
            end
            else
               if (wdf_rd_addr_cnt[13][0] == 0) begin
                  data_piece_2[13] = ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13];
                  dm_piece_2[13]   = ddr_dqm[13];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[13] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[13] = 0;
          dm_piece_1[13] = 0;
       end
       else
          if (wdf_rd_addr_cnt[13] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[13][0] == 0) begin
              data_piece_1[13] = ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13];
              dm_piece_1[13]   = ddr_dqm[13];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[14] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[14] = 0;
          dm_piece_0[14]   = 0;
          data_piece_2[14] = 0;
          dm_piece_2[14]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[14] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[14][0] == 1) begin
              data_piece_0[14] = ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14];
              dm_piece_0[14]   = ddr_dqm[14];
            end
            else
               if (wdf_rd_addr_cnt[14][0] == 0) begin
                  data_piece_2[14] = ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14];
                  dm_piece_2[14]   = ddr_dqm[14];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[14] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[14] = 0;
          dm_piece_1[14] = 0;
       end
       else
          if (wdf_rd_addr_cnt[14] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[14][0] == 0) begin
              data_piece_1[14] = ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14];
              dm_piece_1[14]   = ddr_dqm[14];
             end
          end
    end


//  =================================================================
    always @ (posedge ddr_dqs_modified[15] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[15] = 0;
          dm_piece_0[15]   = 0;
          data_piece_2[15] = 0;
          dm_piece_2[15]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[15] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[15][0] == 1) begin
              data_piece_0[15] = ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15];
              dm_piece_0[15]   = ddr_dqm[15];
            end
            else
               if (wdf_rd_addr_cnt[15][0] == 0) begin
                  data_piece_2[15] = ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15];
                  dm_piece_2[15]   = ddr_dqm[15];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[15] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[15] = 0;
          dm_piece_1[15] = 0;
       end
       else
          if (wdf_rd_addr_cnt[15] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[15][0] == 0) begin
              data_piece_1[15] = ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15];
              dm_piece_1[15]   = ddr_dqm[15];
             end
          end
    end

//  =================================================================
    always @ (posedge ddr_dqs_modified[16] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[16] = 0;
          dm_piece_0[16]   = 0;
          data_piece_2[16] = 0;
          dm_piece_2[16]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[16] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[16][0] == 1) begin
              data_piece_0[16] = ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16];
              dm_piece_0[16]   = ddr_dqm[16];
            end
            else
               if (wdf_rd_addr_cnt[16][0] == 0) begin
                  data_piece_2[16] = ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16];
                  dm_piece_2[16]   = ddr_dqm[16];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[16] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[16] = 0;
          dm_piece_1[16] = 0;
       end
       else
          if (wdf_rd_addr_cnt[16] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[16][0] == 0) begin
              data_piece_1[16] = ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16];
              dm_piece_1[16]   = ddr_dqm[16];
             end
          end
    end

//  =================================================================
    always @ (posedge ddr_dqs_modified[17] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_0[17] = 0;
          dm_piece_0[17]   = 0;
          data_piece_2[17] = 0;
          dm_piece_2[17]   = 0;
       end
       else
          if (wdf_rd_addr_cnt[17] != 0) begin // skip the first cycle of dps bus during write
            if (wdf_rd_addr_cnt[17][0] == 1) begin
              data_piece_0[17] = ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17];
              dm_piece_0[17]   = ddr_dqm[17];
            end
            else
               if (wdf_rd_addr_cnt[17][0] == 0) begin
                  data_piece_2[17] = ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17];
                  dm_piece_2[17]   = ddr_dqm[17];
               end
          end
    end
       
    always @ (negedge ddr_dqs_modified[17] or negedge rst_n) begin
       if (!rst_n) begin
          data_piece_1[17] = 0;
          dm_piece_1[17] = 0;
       end
       else
          if (wdf_rd_addr_cnt[17] != 0) begin // skip the first cycle of dps bus during write
             if (wdf_rd_addr_cnt[17][0] == 0) begin
              data_piece_1[17] = ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17];
              dm_piece_1[17]   = ddr_dqm[17];
             end
          end
    end

`endif


assign int_wdata_cmp = wr_data_fifo_out;
assign wdata_cmp = int_wdata_cmp;
assign wdm_cmp = int_wdm_cmp;

`ifdef ddr3_ip_inst_DATA_SIZE_72
   assign int_wdm_cmp = int_wdata_cmp[323:288];
`endif

`ifdef ddr3_ip_inst_DATA_SIZE_64
   assign int_wdm_cmp = int_wdata_cmp[287:256];
`endif

`ifdef ddr3_ip_inst_DATA_SIZE_56
   assign int_wdm_cmp = int_wdata_cmp[251:224];
`endif

`ifdef ddr3_ip_inst_DATA_SIZE_48
   assign int_wdm_cmp = int_wdata_cmp[215:192];
`endif

`ifdef ddr3_ip_inst_DATA_SIZE_40
   assign int_wdm_cmp = int_wdata_cmp[179:160];
`endif

`ifdef ddr3_ip_inst_DATA_SIZE_32
   assign int_wdm_cmp = int_wdata_cmp[143:128];
`endif

`ifdef ddr3_ip_inst_DATA_SIZE_24
   assign int_wdm_cmp = int_wdata_cmp[107:96];
`endif

`ifdef ddr3_ip_inst_DATA_SIZE_16
   assign int_wdm_cmp = int_wdata_cmp[71:64];
`endif

`ifdef ddr3_ip_inst_DATA_SIZE_8
   assign int_wdm_cmp = int_wdata_cmp[35:32];
`endif

always @ (posedge mem_clk) begin
    case (wdf_rd_addr[6:1])
      6'd0  : wr_data_fifo_out   <= wr_data_fifo[0];
      6'd1  : wr_data_fifo_out   <= wr_data_fifo[1];
      6'd2  : wr_data_fifo_out   <= wr_data_fifo[2];
      6'd3  : wr_data_fifo_out   <= wr_data_fifo[3];
      6'd4  : wr_data_fifo_out   <= wr_data_fifo[4];
      6'd5  : wr_data_fifo_out   <= wr_data_fifo[5];
      6'd6  : wr_data_fifo_out   <= wr_data_fifo[6];
      6'd7  : wr_data_fifo_out   <= wr_data_fifo[7];
      6'd8  : wr_data_fifo_out   <= wr_data_fifo[8];
      6'd9  : wr_data_fifo_out   <= wr_data_fifo[9];
      6'd10 : wr_data_fifo_out   <= wr_data_fifo[10];
      6'd11 : wr_data_fifo_out   <= wr_data_fifo[11];
      6'd12 : wr_data_fifo_out   <= wr_data_fifo[12];
      6'd13 : wr_data_fifo_out   <= wr_data_fifo[13];
      6'd14 : wr_data_fifo_out   <= wr_data_fifo[14];
      6'd15 : wr_data_fifo_out   <= wr_data_fifo[15];
      6'd16 : wr_data_fifo_out   <= wr_data_fifo[16];
      6'd17 : wr_data_fifo_out   <= wr_data_fifo[17];
      6'd18 : wr_data_fifo_out   <= wr_data_fifo[18];
      6'd19 : wr_data_fifo_out   <= wr_data_fifo[19];
      6'd20 : wr_data_fifo_out   <= wr_data_fifo[20];
      6'd21 : wr_data_fifo_out   <= wr_data_fifo[21];
      6'd22 : wr_data_fifo_out   <= wr_data_fifo[22];
      6'd23 : wr_data_fifo_out   <= wr_data_fifo[23];
      6'd24 : wr_data_fifo_out   <= wr_data_fifo[24];
      6'd25 : wr_data_fifo_out   <= wr_data_fifo[25];
      6'd26 : wr_data_fifo_out   <= wr_data_fifo[26];
      6'd27 : wr_data_fifo_out   <= wr_data_fifo[27];
      6'd28 : wr_data_fifo_out   <= wr_data_fifo[28];
      6'd29 : wr_data_fifo_out   <= wr_data_fifo[29];
      6'd30 : wr_data_fifo_out   <= wr_data_fifo[30];
      6'd31 : wr_data_fifo_out   <= wr_data_fifo[31];
      6'd32 : wr_data_fifo_out   <= wr_data_fifo[32];
      6'd33 : wr_data_fifo_out   <= wr_data_fifo[33];
      6'd34 : wr_data_fifo_out   <= wr_data_fifo[34];
      6'd35 : wr_data_fifo_out   <= wr_data_fifo[35];
      6'd36 : wr_data_fifo_out   <= wr_data_fifo[36];
      6'd37 : wr_data_fifo_out   <= wr_data_fifo[37];
      6'd38 : wr_data_fifo_out   <= wr_data_fifo[38];
      6'd39 : wr_data_fifo_out   <= wr_data_fifo[39];
      6'd40 : wr_data_fifo_out   <= wr_data_fifo[40];
      6'd41 : wr_data_fifo_out   <= wr_data_fifo[41];
      6'd42 : wr_data_fifo_out   <= wr_data_fifo[42];
      6'd43 : wr_data_fifo_out   <= wr_data_fifo[43];
      6'd44 : wr_data_fifo_out   <= wr_data_fifo[44];
      6'd45 : wr_data_fifo_out   <= wr_data_fifo[45];
      6'd46 : wr_data_fifo_out   <= wr_data_fifo[46];
      6'd47 : wr_data_fifo_out   <= wr_data_fifo[47];
      6'd48 : wr_data_fifo_out   <= wr_data_fifo[48];
      6'd49 : wr_data_fifo_out   <= wr_data_fifo[49];
      6'd50 : wr_data_fifo_out   <= wr_data_fifo[50];
      6'd51 : wr_data_fifo_out   <= wr_data_fifo[51];
      6'd52 : wr_data_fifo_out   <= wr_data_fifo[52];
      6'd53 : wr_data_fifo_out   <= wr_data_fifo[53];
      6'd54 : wr_data_fifo_out   <= wr_data_fifo[54];
      6'd55 : wr_data_fifo_out   <= wr_data_fifo[55];
      6'd56 : wr_data_fifo_out   <= wr_data_fifo[56];
      6'd57 : wr_data_fifo_out   <= wr_data_fifo[57];
      6'd58 : wr_data_fifo_out   <= wr_data_fifo[58];
      6'd59 : wr_data_fifo_out   <= wr_data_fifo[59];
      6'd60 : wr_data_fifo_out   <= wr_data_fifo[60];
      6'd61 : wr_data_fifo_out   <= wr_data_fifo[61];
      6'd62 : wr_data_fifo_out   <= wr_data_fifo[62];
      6'd63 : wr_data_fifo_out   <= wr_data_fifo[63];
    endcase
end

/////////////////////////////////////////////////////////////////////////////
// the least inteval between 2 commands is 4-clock cycles, for bl8 cases(also
// last for 4-clock cycles), it's assumed that the seamless RD/WR of least 
// inteval commands is impossible because of the bank management operation 
// latency.
reg   [4:0]            wr_burst_fifo[7:0];
reg   [2:0]            wr_burst_fifo_wr_addr;
reg   [2:0]            wr_burst_fifo_rd_addr;
reg   [4:0]            wr_burst_fifo_out;
reg   [4:0]            write_burst_cnt;
reg                    dqs_reg1;
reg                    dqs_reg2;
reg                    dqs_reg3;
reg                    dqs_reg4;
reg                    dqs_reg5;
reg                    dqs_reg6;
reg                    dqs_reg7;


always @ (negedge clk or negedge rst_n) begin
    if (!rst_n) begin
        wr_burst_fifo_wr_addr <= 0;
    end
    else begin
       if (cmd_rdy_dly && cmd_valid_dly && ((cmd == 4'b0010) || (cmd == 4'b0100)) && ~disable_cmd_fifo) begin
          case (wr_burst_fifo_wr_addr)
             4'd0  : wr_burst_fifo[0]  <= burst_cnt;
             4'd1  : wr_burst_fifo[1]  <= burst_cnt;
             4'd2  : wr_burst_fifo[2]  <= burst_cnt;
             4'd3  : wr_burst_fifo[3]  <= burst_cnt;
             4'd4  : wr_burst_fifo[4]  <= burst_cnt;
             4'd5  : wr_burst_fifo[5]  <= burst_cnt;
             4'd6  : wr_burst_fifo[6]  <= burst_cnt;
             4'd7  : wr_burst_fifo[7]  <= burst_cnt;
         endcase
         wr_burst_fifo_wr_addr <= wr_burst_fifo_wr_addr + 1;
       end // if (cmd_rdy_dly && cmd_valid_dly && (writea||write))
    end //else
end //always

always @ (wr_burst_fifo_rd_addr or wr_burst_fifo[0] or wr_burst_fifo[1] or wr_burst_fifo[2] or 
          wr_burst_fifo[3] or wr_burst_fifo[4] or wr_burst_fifo[5] or wr_burst_fifo[6] or 
          wr_burst_fifo[7]) begin
        case (wr_burst_fifo_rd_addr)
             4'd0  : wr_burst_fifo_out <= wr_burst_fifo[0];
             4'd1  : wr_burst_fifo_out <= wr_burst_fifo[1];
             4'd2  : wr_burst_fifo_out <= wr_burst_fifo[2];
             4'd3  : wr_burst_fifo_out <= wr_burst_fifo[3];
             4'd4  : wr_burst_fifo_out <= wr_burst_fifo[4];
             4'd5  : wr_burst_fifo_out <= wr_burst_fifo[5];
             4'd6  : wr_burst_fifo_out <= wr_burst_fifo[6];
             4'd7  : wr_burst_fifo_out <= wr_burst_fifo[7];
        endcase        
end

wire update_burst_cnt;
assign update_burst_cnt = ((({mem_wr_cmd_lat,ddr_dqs_original,dqs_reg1,dqs_reg2} == 4'b1100) 
                            && (int_burst_len == 4'h4))
                            || 
                           (({mem_wr_cmd_lat,ddr_dqs_original,dqs_reg1} == 4'b110) 
                            && (int_burst_len == 4'h8))
                            )? 1'b1:1'b0;

always @ (posedge update_burst_cnt or negedge rst_n) begin
   if (!rst_n) begin
       write_burst_cnt <= 0;
       wr_burst_fifo_rd_addr <= 0;
   end
   else begin
       write_burst_cnt <= wr_burst_fifo_out;
       wr_burst_fifo_rd_addr <= wr_burst_fifo_rd_addr + 1;
   end //else
end //always

`ifdef ddr3_ip_inst_RDIMM
   `define ddr3_ip_inst_DQS_BIT 0
`else
`ifdef ddr3_ip_inst_DQS_WIDTH_1
   `define ddr3_ip_inst_DQS_BIT 0
`else
`ifdef ddr3_ip_inst_DQS_WIDTH_2
   `define ddr3_ip_inst_DQS_BIT 1
`else
`ifdef ddr3_ip_inst_DQS_WIDTH_3
   `define ddr3_ip_inst_DQS_BIT 2
`else
`ifdef ddr3_ip_inst_DQS_WIDTH_4
   `define ddr3_ip_inst_DQS_BIT 3
`else
`ifdef ddr3_ip_inst_DQS_WIDTH_5
   `define ddr3_ip_inst_DQS_BIT 4
`else
`ifdef ddr3_ip_inst_DQS_WIDTH_6
   `define ddr3_ip_inst_DQS_BIT 5
`else
`ifdef ddr3_ip_inst_DQS_WIDTH_7
   `define ddr3_ip_inst_DQS_BIT 6
`else
`ifdef ddr3_ip_inst_DQS_WIDTH_8
   `define ddr3_ip_inst_DQS_BIT 7
`else
`ifdef ddr3_ip_inst_DQS_WIDTH_9
   `define ddr3_ip_inst_DQS_BIT 8
`else
`ifdef ddr3_ip_inst_DQS_WIDTH_10
   `define ddr3_ip_inst_DQS_BIT 9
`else
`ifdef ddr3_ip_inst_DQS_WIDTH_12
   `define ddr3_ip_inst_DQS_BIT 11 
`else
`ifdef ddr3_ip_inst_DQS_WIDTH_14
   `define ddr3_ip_inst_DQS_BIT 13 
`else
`ifdef ddr3_ip_inst_DQS_WIDTH_16
   `define ddr3_ip_inst_DQS_BIT 15
`else
`ifdef ddr3_ip_inst_DQS_WIDTH_18
   `define ddr3_ip_inst_DQS_BIT 17
`endif //18
`endif //16
`endif //14
`endif //12
`endif //10
`endif //9
`endif //8
`endif //7
`endif //6
`endif //5
`endif //4
`endif //3
`endif //2
`endif //1
`endif //RDIMM

//---------------------------------

 always @ (negedge ddr_dqs_modified[`ddr3_ip_inst_DQS_BIT] or negedge rst_n) begin
    if (!rst_n) begin
      wdf_rd_addr                  <= 0;
    end
    else begin
      if (mem_wr_cmd_lat) begin
         if (wdf_rd_addr_en[`ddr3_ip_inst_DQS_BIT] == 1'b1)
            wdf_rd_addr <= wdf_rd_addr + 1;
      end
    end
end

//---------------------------------sk10

always @ (posedge ddr_dqs_modified[0] or negedge rst_n) begin
   if (!rst_n) begin
      wdf_rd_addr_cnt[0] <= 0;
      wdf_rd_addr_en[0]  <= 1'b1;
   end
   else begin
      if (mem_wr_cmd_lat) begin
        if (int_burst_len == 4'b1000) begin // BL8 (Fixed or OTF)
           if (wdf_rd_addr_cnt[0] == 4 * write_burst_cnt)
               wdf_rd_addr_cnt[0] <= 0;
           else
               wdf_rd_addr_cnt[0] <= wdf_rd_addr_cnt[0] + 1;
        end
        else if (int_burst_len == 4'b0100) begin // BC4 (Fixed or OTF)
           if (wdf_rd_addr_cnt[0] == 2)
               wdf_rd_addr_cnt[0] <= 0;
           else
               wdf_rd_addr_cnt[0] <= wdf_rd_addr_cnt[0] + 1;
        end

        if (wdf_rd_addr_cnt[0] != 0)
            wdf_rd_addr_en[0]  <= 1'b1;
        else
            wdf_rd_addr_en[0]  <= 1'b0;

     end // mem_wr_cmd_lat
   end // else
end


wire    [31:0] exp_data0, m_wr_data0, exp_data0h,wdata_cmp_0;

assign  exp_data0  = {wdata_cmp[DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],wdata_cmp[DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],
	              wdata_cmp[DQ_PER_DQS*(0+1)+  `ddr3_ip_inst_DATA_WIDTH-1:  `ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],wdata_cmp[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]};

//assign  wdata_cmp_0 =  wdata_cmp[31:0];
//assign  exp_data0  = {wdata_cmp_0[31],wdata_cmp_0[27],wdata_cmp_0[23],wdata_cmp_0[19],wdata_cmp_0[15],wdata_cmp_0[11],wdata_cmp_0[7],wdata_cmp_0[3],
//	              wdata_cmp_0[30],wdata_cmp_0[26],wdata_cmp_0[22],wdata_cmp_0[18],wdata_cmp_0[14],wdata_cmp_0[10],wdata_cmp_0[6],wdata_cmp_0[2],
//	              wdata_cmp_0[29],wdata_cmp_0[25],wdata_cmp_0[21],wdata_cmp_0[17],wdata_cmp_0[13],wdata_cmp_0[ 9],wdata_cmp_0[5],wdata_cmp_0[1],
//	              wdata_cmp_0[28],wdata_cmp_0[24],wdata_cmp_0[20],wdata_cmp_0[16],wdata_cmp_0[12],wdata_cmp_0 [8],wdata_cmp_0[4],wdata_cmp_0[0]};

assign  m_wr_data0 = {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0], data_piece_2[0], data_piece_1[0], data_piece_0[0]};

wire [7:0] sk_cnt;
wire [7:0] a,b,c,d;
assign a= data_piece_0[0];
assign b= data_piece_1[0];
assign c= data_piece_2[0];
assign d= ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];

wire    en;
assign en = wdf_rd_addr_en[0];
assign sk_cnt = wdf_rd_addr_cnt[0][7:0];

always @ (negedge ddr_dqs_modified[0] or negedge rst_n) begin
     if (mem_wr_cmd_lat) begin
           if ((wdf_rd_addr_cnt[0][0] == 1'b1 || wdf_rd_addr_cnt[0] == 0) && wdf_rd_addr_en[0] == 1'b1) begin
              if ( exp_data0 != m_wr_data0) begin
                $display("MON ERROR: At time %0t, data written into_ddr3_ip_inst memory (dqs0) is %h, Expected data is %h\n",$time, m_wr_data0, exp_data0);
                test_mem_ctrl.error_flg <= 1'b1;
              end
//	      else
//                $display("MON INFO02: At time %0t, data written into memory is %h, Expected data is %h\n",$time, m_wr_data0, exp_data0);
              if ({wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+0/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+0/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+0/`ddr3_ip_inst_DM_X],wdm_cmp[0/`ddr3_ip_inst_DM_X]} != {ddr_dqm[0],dm_piece_2[0],dm_piece_1[0],dm_piece_0[0]}) begin
                 $display("MON ERROR: At time %0t, Data Mask to memory is %h, Expected data Mask is %h\n",$time, {ddr_dqm[0], dm_piece_2[0], dm_piece_1[0], dm_piece_0[0]},
			   {wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+0/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+0/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+0/`ddr3_ip_inst_DM_X],wdm_cmp[0/`ddr3_ip_inst_DM_X]});
                 test_mem_ctrl.error_flg <= 1'b1;
              end
          end 
     end 
end 

`ifdef ddr3_ip_inst_DQS_WIDTH_1
`else
wire [7:0] sk_cnt1;
wire [7:0] a1,b1,c1,d1;
assign a1= data_piece_0[1];
assign b1= data_piece_1[1];
assign c1= data_piece_2[1];
assign d1= ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];

wire    en1;
assign en1 = wdf_rd_addr_en[1];
assign sk_cnt1 = wdf_rd_addr_cnt[1][7:0];
//============================================================
always @ (posedge ddr_dqs_modified[1] or negedge rst_n) begin
   if (!rst_n) begin
      wdf_rd_addr_cnt[1] <= 0;
      wdf_rd_addr_en[1]  <= 1'b1;
   end
   else begin
      if (mem_wr_cmd_lat) begin
        if (int_burst_len == 4'b1000) begin // BL8 (Fixed or OTF)
           if (wdf_rd_addr_cnt[1] == 4 * write_burst_cnt)
               wdf_rd_addr_cnt[1] <= 0;
           else
               wdf_rd_addr_cnt[1] <= wdf_rd_addr_cnt[1] + 1;
        end
        else if (int_burst_len == 4'b0100) begin // BC4 (Fixed or OTF)
           if (wdf_rd_addr_cnt[1] == 2)
               wdf_rd_addr_cnt[1] <= 0;
           else
               wdf_rd_addr_cnt[1] <= wdf_rd_addr_cnt[1] + 1;
        end

        if (wdf_rd_addr_cnt[1] != 0)
            wdf_rd_addr_en[1]  <= 1'b1;
        else
            wdf_rd_addr_en[1]  <= 1'b0;

     end // mem_wr_cmd_lat
   end // else
end

wire    [31:0] exp_data1, m_wr_data1, exp_data1h,wdata_cmp_1;


assign  exp_data1 = {wdata_cmp[DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],wdata_cmp[DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],
	             wdata_cmp[DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],wdata_cmp[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]};

//assign  wdata_cmp_1 =  wdata_cmp[63:32];
//assign  exp_data1  = {wdata_cmp_1[31],wdata_cmp_1[27],wdata_cmp_1[23],wdata_cmp_1[19],wdata_cmp_1[15],wdata_cmp_1[11],wdata_cmp_1[7],wdata_cmp_1[3],
//	              wdata_cmp_1[30],wdata_cmp_1[26],wdata_cmp_1[22],wdata_cmp_1[18],wdata_cmp_1[14],wdata_cmp_1[10],wdata_cmp_1[6],wdata_cmp_1[2],
//	              wdata_cmp_1[29],wdata_cmp_1[25],wdata_cmp_1[21],wdata_cmp_1[17],wdata_cmp_1[13],wdata_cmp_1[ 9],wdata_cmp_1[5],wdata_cmp_1[1],
//	              wdata_cmp_1[28],wdata_cmp_1[24],wdata_cmp_1[20],wdata_cmp_1[16],wdata_cmp_1[12],wdata_cmp_1 [8],wdata_cmp_1[4],wdata_cmp_1[0]};

assign  m_wr_data1 = {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1], data_piece_2[1], data_piece_1[1], data_piece_0[1]};

always @ (negedge ddr_dqs_modified[1] or negedge rst_n) begin
     if (mem_wr_cmd_lat) begin
           if ((wdf_rd_addr_cnt[1][0] == 1'b1 || wdf_rd_addr_cnt[1] == 0) && wdf_rd_addr_en[1] == 1'b1) begin
              if ( exp_data1 != m_wr_data1) begin
                $display("MON ERROR: At time %0t, data written into_ddr3_ip_inst memory (dqs1) is %h, Expected data is %h\n",$time, m_wr_data1, exp_data1);
                test_mem_ctrl.error_flg <= 1'b1;
              end
//	      else
//                $display("MON INFO12: At time %0t, data written into memory is %h, Expected data is %h\n",$time, m_wr_data1, exp_data1);
               if ({wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+1/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+1/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+1/`ddr3_ip_inst_DM_X],wdm_cmp[1/`ddr3_ip_inst_DM_X]} != {ddr_dqm[1],dm_piece_2[1],dm_piece_1[1],dm_piece_0[1]}) begin
                  $display("MON ERROR: At time %0t, Data Mask to memory is %h, Expected data Mask is %h\n",$time, {ddr_dqm[1], dm_piece_2[1], dm_piece_1[1], dm_piece_0[1]}, {wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+1/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+1/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+1/`ddr3_ip_inst_DM_X],wdm_cmp[1/`ddr3_ip_inst_DM_X]});
                  test_mem_ctrl.error_flg <= 1'b1;
               end
          end 
     end 
end 

`ifdef ddr3_ip_inst_DQS_WIDTH_2
`else

//============================================================
always @ (posedge ddr_dqs_modified[2] or negedge rst_n) begin
   if (!rst_n) begin
      wdf_rd_addr_cnt[2] <= 0;
      wdf_rd_addr_en[2]  <= 1'b1;
   end
   else begin
      if (mem_wr_cmd_lat) begin
        if (int_burst_len == 4'b1000) begin // BL8 (Fixed or OTF)
           if (wdf_rd_addr_cnt[2] == 4 * write_burst_cnt)
               wdf_rd_addr_cnt[2] <= 0;
           else
               wdf_rd_addr_cnt[2] <= wdf_rd_addr_cnt[2] + 1;
        end
        else if (int_burst_len == 4'b0100) begin // BC4 (Fixed or OTF)
           if (wdf_rd_addr_cnt[2] == 2)
               wdf_rd_addr_cnt[2] <= 0;
           else
               wdf_rd_addr_cnt[2] <= wdf_rd_addr_cnt[2] + 1;
        end

        if (wdf_rd_addr_cnt[2] != 0)
            wdf_rd_addr_en[2]  <= 1'b1;
        else
            wdf_rd_addr_en[2]  <= 1'b0;

     end // mem_wr_cmd_lat
   end // else
end
wire    [31:0] exp_data2, m_wr_data2, exp_data2h,wdata_cmp_2;



assign  exp_data2 = {wdata_cmp[DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],wdata_cmp[DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],
	             wdata_cmp[DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],wdata_cmp[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]};

//assign  wdata_cmp_2 =  wdata_cmp[95:64];
//assign  exp_data2  = {wdata_cmp_2[31],wdata_cmp_2[27],wdata_cmp_2[23],wdata_cmp_2[19],wdata_cmp_2[15],wdata_cmp_2[11],wdata_cmp_2[7],wdata_cmp_2[3],
//	              wdata_cmp_2[30],wdata_cmp_2[26],wdata_cmp_2[22],wdata_cmp_2[18],wdata_cmp_2[14],wdata_cmp_2[10],wdata_cmp_2[6],wdata_cmp_2[2],
//	              wdata_cmp_2[29],wdata_cmp_2[25],wdata_cmp_2[21],wdata_cmp_2[17],wdata_cmp_2[13],wdata_cmp_2[ 9],wdata_cmp_2[5],wdata_cmp_2[1],
//	              wdata_cmp_2[28],wdata_cmp_2[24],wdata_cmp_2[20],wdata_cmp_2[16],wdata_cmp_2[12],wdata_cmp_2 [8],wdata_cmp_2[4],wdata_cmp_2[0]};



assign  m_wr_data2 = {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2], data_piece_2[2], data_piece_1[2], data_piece_0[2]};

always @ (negedge ddr_dqs_modified[2] or negedge rst_n) begin
     if (mem_wr_cmd_lat) begin
        `ifdef ddr3_ip_inst_DIS_WR_DT_CMP
        `else
           if ((wdf_rd_addr_cnt[2][0] == 1'b1 || wdf_rd_addr_cnt[2] == 0) && wdf_rd_addr_en[2] == 1'b1) begin
              if ( exp_data2 != m_wr_data2) begin
                $display("MON ERROR: At time %0t, data written into_ddr3_ip_inst memory (dqs2) is %h, Expected data is %h\n",$time, m_wr_data2, exp_data2);
                test_mem_ctrl.error_flg <= 1'b1;
              end
               if ({wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+2/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+2/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+2/`ddr3_ip_inst_DM_X],wdm_cmp[2/`ddr3_ip_inst_DM_X]} != {ddr_dqm[2],dm_piece_2[2],dm_piece_1[2],dm_piece_0[2]}) begin
                  $display("MON ERROR: At time %0t, Data Mask to memory is %h, Expected data Mask is %h\n",$time, {ddr_dqm[2], dm_piece_2[2], dm_piece_1[2], dm_piece_0[2]}, {wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+2/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+2/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+2/`ddr3_ip_inst_DM_X],wdm_cmp[2/`ddr3_ip_inst_DM_X]});
                  test_mem_ctrl.error_flg <= 1'b1;
               end
          end 
       `endif 
     end 
end 

`ifdef ddr3_ip_inst_DQS_WIDTH_3
`else
wire [7:0] sk_cnt3;
wire [7:0] a3,b3,c3,d3;
assign a3= data_piece_0[3];
assign b3= data_piece_1[3];
assign c3= data_piece_2[3];
assign d3= ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];

wire    en3;
assign en3 = wdf_rd_addr_en[3];
assign sk_cnt3 = wdf_rd_addr_cnt[3][7:0];
//============================================================
always @ (posedge ddr_dqs_modified[3] or negedge rst_n) begin
   if (!rst_n) begin
      wdf_rd_addr_cnt[3] <= 0;
      wdf_rd_addr_en[3]  <= 1'b1;
   end
   else begin
      if (mem_wr_cmd_lat) begin
        if (int_burst_len == 4'b1000) begin // BL8 (Fixed or OTF)
           if (wdf_rd_addr_cnt[3] == 4 * write_burst_cnt)
               wdf_rd_addr_cnt[3] <= 0;
           else
               wdf_rd_addr_cnt[3] <= wdf_rd_addr_cnt[3] + 1;
        end
        else if (int_burst_len == 4'b0100) begin // BC4 (Fixed or OTF)
           if (wdf_rd_addr_cnt[3] == 2)
               wdf_rd_addr_cnt[3] <= 0;
           else
               wdf_rd_addr_cnt[3] <= wdf_rd_addr_cnt[3] + 1;
        end

        if (wdf_rd_addr_cnt[3] != 0)
            wdf_rd_addr_en[3]  <= 1'b1;
        else
            wdf_rd_addr_en[3]  <= 1'b0;

     end // mem_wr_cmd_lat
   end // else
end

wire    [31:0] exp_data3, m_wr_data3, exp_data3h,wdata_cmp_3;

assign  exp_data3 = {wdata_cmp[DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],wdata_cmp[DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],
	             wdata_cmp[DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],wdata_cmp[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]};

//assign  wdata_cmp_3 =  wdata_cmp[127:96];
//assign  exp_data3  = {wdata_cmp_3[31],wdata_cmp_3[27],wdata_cmp_3[23],wdata_cmp_3[19],wdata_cmp_3[15],wdata_cmp_3[11],wdata_cmp_3[7],wdata_cmp_3[3],
//	              wdata_cmp_3[30],wdata_cmp_3[26],wdata_cmp_3[22],wdata_cmp_3[18],wdata_cmp_3[14],wdata_cmp_3[10],wdata_cmp_3[6],wdata_cmp_3[2],
//	              wdata_cmp_3[29],wdata_cmp_3[25],wdata_cmp_3[21],wdata_cmp_3[17],wdata_cmp_3[13],wdata_cmp_3[ 9],wdata_cmp_3[5],wdata_cmp_3[1],
//	              wdata_cmp_3[28],wdata_cmp_3[24],wdata_cmp_3[20],wdata_cmp_3[16],wdata_cmp_3[12],wdata_cmp_3 [8],wdata_cmp_3[4],wdata_cmp_3[0]};



assign  m_wr_data3 = {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3], data_piece_2[3], data_piece_1[3], data_piece_0[3]};

always @ (negedge ddr_dqs_modified[3] or negedge rst_n) begin
     if (mem_wr_cmd_lat) begin
        `ifdef ddr3_ip_inst_DIS_WR_DT_CMP
        `else
           if ((wdf_rd_addr_cnt[3][0] == 1'b1 || wdf_rd_addr_cnt[3] == 0) && wdf_rd_addr_en[3] == 1'b1) begin
              if ( exp_data3 != m_wr_data3) begin
                $display("MON ERROR: At time %0t, data written into_ddr3_ip_inst memory (dqs3) is %h, Expected data is %h\n",$time, m_wr_data3, exp_data3);
                test_mem_ctrl.error_flg <= 1'b1;
              end
               if ({wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+3/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+3/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+3/`ddr3_ip_inst_DM_X],wdm_cmp[3/`ddr3_ip_inst_DM_X]} != {ddr_dqm[3],dm_piece_2[3],dm_piece_1[3],dm_piece_0[3]}) begin
                  $display("MON ERROR: At time %0t, Data Mask to memory is %h, Expected data Mask is %h\n",$time, {ddr_dqm[3], dm_piece_2[3], dm_piece_1[3], dm_piece_0[3]}, {wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+3/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+3/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+3/`ddr3_ip_inst_DM_X],wdm_cmp[3/`ddr3_ip_inst_DM_X]});
                  test_mem_ctrl.error_flg <= 1'b1;
               end
          end 
       `endif 
     end 
end 

`ifdef ddr3_ip_inst_DQS_WIDTH_4
`else

//============================================================
always @ (posedge ddr_dqs_modified[4] or negedge rst_n) begin
   if (!rst_n) begin
      wdf_rd_addr_cnt[4] <= 0;
      wdf_rd_addr_en[4]  <= 1'b1;
   end
   else begin
      if (mem_wr_cmd_lat) begin
        if (int_burst_len == 4'b1000) begin // BL8 (Fixed or OTF)
           if (wdf_rd_addr_cnt[4] == 4 * write_burst_cnt)
               wdf_rd_addr_cnt[4] <= 0;
           else
               wdf_rd_addr_cnt[4] <= wdf_rd_addr_cnt[4] + 1;
        end
        else if (int_burst_len == 4'b0100) begin // BC4 (Fixed or OTF)
           if (wdf_rd_addr_cnt[4] == 2)
               wdf_rd_addr_cnt[4] <= 0;
           else
               wdf_rd_addr_cnt[4] <= wdf_rd_addr_cnt[4] + 1;
        end

        if (wdf_rd_addr_cnt[4] != 0)
            wdf_rd_addr_en[4]  <= 1'b1;
        else
            wdf_rd_addr_en[4]  <= 1'b0;

     end // mem_wr_cmd_lat
   end // else
end

wire    [31:0] exp_data4, m_wr_data4, exp_data4h;



assign  exp_data4 = {wdata_cmp[DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],wdata_cmp[DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],
	             wdata_cmp[DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],wdata_cmp[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]};

assign  m_wr_data4 = {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4], data_piece_2[4], data_piece_1[4], data_piece_0[4]};

always @ (negedge ddr_dqs_modified[4] or negedge rst_n) begin
     if (mem_wr_cmd_lat) begin
        `ifdef ddr3_ip_inst_DIS_WR_DT_CMP
        `else
           if ((wdf_rd_addr_cnt[4][0] == 1'b1 || wdf_rd_addr_cnt[4] == 0) && wdf_rd_addr_en[4] == 1'b1) begin
              if ( exp_data4 != m_wr_data4) begin
                $display("MON ERROR: At time %0t, data written into memory is %h, Expected data is %h\n",$time, m_wr_data4, exp_data4);
                test_mem_ctrl.error_flg <= 1'b1;
              end
               if ({wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+4/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+4/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+4/`ddr3_ip_inst_DM_X],wdm_cmp[4/`ddr3_ip_inst_DM_X]} != {ddr_dqm[4],dm_piece_2[4],dm_piece_1[4],dm_piece_0[4]}) begin
                  $display("MON ERROR: At time %0t, Data Mask to memory is %h, Expected data Mask is %h\n",$time, {ddr_dqm[4], dm_piece_2[4], dm_piece_1[4], dm_piece_0[4]}, {wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+4/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+4/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+4/`ddr3_ip_inst_DM_X],wdm_cmp[4/`ddr3_ip_inst_DM_X]});
                  test_mem_ctrl.error_flg <= 1'b1;
               end
          end 
       `endif 
     end 
end 

`ifdef ddr3_ip_inst_DQS_WIDTH_5
`else
//============================================================
always @ (posedge ddr_dqs_modified[5] or negedge rst_n) begin
   if (!rst_n) begin
      wdf_rd_addr_cnt[5] <= 0;
      wdf_rd_addr_en[5]  <= 1'b1;
   end
   else begin
      if (mem_wr_cmd_lat) begin
        if (int_burst_len == 4'b1000) begin // BL8 (Fixed or OTF)
           if (wdf_rd_addr_cnt[5] == 4 * write_burst_cnt)
               wdf_rd_addr_cnt[5] <= 0;
           else
               wdf_rd_addr_cnt[5] <= wdf_rd_addr_cnt[5] + 1;
        end
        else if (int_burst_len == 4'b0100) begin // BC4 (Fixed or OTF)
           if (wdf_rd_addr_cnt[5] == 2)
               wdf_rd_addr_cnt[5] <= 0;
           else
               wdf_rd_addr_cnt[5] <= wdf_rd_addr_cnt[5] + 1;
        end

        if (wdf_rd_addr_cnt[5] != 0)
            wdf_rd_addr_en[5]  <= 1'b1;
        else
            wdf_rd_addr_en[5]  <= 1'b0;

     end // mem_wr_cmd_lat
   end // else
end

wire    [31:0] exp_data5, m_wr_data5, exp_data5h;



assign  exp_data5 = {wdata_cmp[DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],wdata_cmp[DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],
	             wdata_cmp[DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],wdata_cmp[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]};

assign  m_wr_data5 = {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5], data_piece_2[5], data_piece_1[5], data_piece_0[5]};

always @ (negedge ddr_dqs_modified[5] or negedge rst_n) begin
     if (mem_wr_cmd_lat) begin
        `ifdef ddr3_ip_inst_DIS_WR_DT_CMP
        `else
           if ((wdf_rd_addr_cnt[5][0] == 1'b1 || wdf_rd_addr_cnt[5] == 0) && wdf_rd_addr_en[5] == 1'b1) begin
              if ( exp_data5 != m_wr_data5) begin
                $display("MON ERROR: At time %0t, data written into memory is %h, Expected data is %h\n",$time, m_wr_data5, exp_data5);
                test_mem_ctrl.error_flg <= 1'b1;
              end
               if ({wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+5/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+5/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+5/`ddr3_ip_inst_DM_X],wdm_cmp[5/`ddr3_ip_inst_DM_X]} != {ddr_dqm[5],dm_piece_2[5],dm_piece_1[5],dm_piece_0[5]}) begin
                  $display("MON ERROR: At time %0t, Data Mask to memory is %h, Expected data Mask is %h\n",$time, {ddr_dqm[5], dm_piece_2[5], dm_piece_1[5], dm_piece_0[5]}, {wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+5/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+5/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+5/`ddr3_ip_inst_DM_X],wdm_cmp[5/`ddr3_ip_inst_DM_X]});
                  test_mem_ctrl.error_flg <= 1'b1;
               end
          end 
       `endif 
     end 
end 

`ifdef ddr3_ip_inst_DQS_WIDTH_6
`else
//============================================================
always @ (posedge ddr_dqs_modified[6] or negedge rst_n) begin
   if (!rst_n) begin
      wdf_rd_addr_cnt[6] <= 0;
      wdf_rd_addr_en[6]  <= 1'b1;
   end
   else begin
      if (mem_wr_cmd_lat) begin
        if (int_burst_len == 4'b1000) begin // BL8 (Fixed or OTF)
           if (wdf_rd_addr_cnt[6] == 4 * write_burst_cnt)
               wdf_rd_addr_cnt[6] <= 0;
           else
               wdf_rd_addr_cnt[6] <= wdf_rd_addr_cnt[6] + 1;
        end
        else if (int_burst_len == 4'b0100) begin // BC4 (Fixed or OTF)
           if (wdf_rd_addr_cnt[6] == 2)
               wdf_rd_addr_cnt[6] <= 0;
           else
               wdf_rd_addr_cnt[6] <= wdf_rd_addr_cnt[6] + 1;
        end

        if (wdf_rd_addr_cnt[6] != 0)
            wdf_rd_addr_en[6]  <= 1'b1;
        else
            wdf_rd_addr_en[6]  <= 1'b0;

     end // mem_wr_cmd_lat
   end // else
end

wire    [31:0] exp_data6, m_wr_data6, exp_data6h;



assign  exp_data6 = {wdata_cmp[DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],wdata_cmp[DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],
	             wdata_cmp[DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],wdata_cmp[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]};

assign  m_wr_data6 = {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6], data_piece_2[6], data_piece_1[6], data_piece_0[6]};

always @ (negedge ddr_dqs_modified[6] or negedge rst_n) begin
     if (mem_wr_cmd_lat) begin
        `ifdef ddr3_ip_inst_DIS_WR_DT_CMP
        `else
           if ((wdf_rd_addr_cnt[6][0] == 1'b1 || wdf_rd_addr_cnt[6] == 0) && wdf_rd_addr_en[6] == 1'b1) begin
              if ( exp_data6 != m_wr_data6) begin
                $display("MON ERROR: At time %0t, data written into memory is %h, Expected data is %h\n",$time, m_wr_data6, exp_data6);
                test_mem_ctrl.error_flg <= 1'b1;
              end
               if ({wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+6/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+6/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+6/`ddr3_ip_inst_DM_X],wdm_cmp[6/`ddr3_ip_inst_DM_X]} != {ddr_dqm[6],dm_piece_2[6],dm_piece_1[6],dm_piece_0[6]}) begin
                  $display("MON ERROR: At time %0t, Data Mask to memory is %h, Expected data Mask is %h\n",$time, {ddr_dqm[6], dm_piece_2[6], dm_piece_1[6], dm_piece_0[6]}, {wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+6/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+6/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+6/`ddr3_ip_inst_DM_X],wdm_cmp[6/`ddr3_ip_inst_DM_X]});
                  test_mem_ctrl.error_flg <= 1'b1;
               end
          end 
       `endif 
     end 
end 

`ifdef ddr3_ip_inst_DQS_WIDTH_7
`else

//============================================================
always @ (posedge ddr_dqs_modified[7] or negedge rst_n) begin
   if (!rst_n) begin
      wdf_rd_addr_cnt[7] <= 0;
      wdf_rd_addr_en[7]  <= 1'b1;
   end
   else begin
      if (mem_wr_cmd_lat) begin
        if (int_burst_len == 4'b1000) begin // BL8 (Fixed or OTF)
           if (wdf_rd_addr_cnt[7] == 4 * write_burst_cnt)
               wdf_rd_addr_cnt[7] <= 0;
           else
               wdf_rd_addr_cnt[7] <= wdf_rd_addr_cnt[7] + 1;
        end
        else if (int_burst_len == 4'b0100) begin // BC4 (Fixed or OTF)
           if (wdf_rd_addr_cnt[7] == 2)
               wdf_rd_addr_cnt[7] <= 0;
           else
               wdf_rd_addr_cnt[7] <= wdf_rd_addr_cnt[7] + 1;
        end

        if (wdf_rd_addr_cnt[7] != 0)
            wdf_rd_addr_en[7]  <= 1'b1;
        else
            wdf_rd_addr_en[7]  <= 1'b0;

     end // mem_wr_cmd_lat
   end // else
end

wire    [31:0] exp_data7, m_wr_data7, exp_data7h;



assign  exp_data7 = {wdata_cmp[DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],wdata_cmp[DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],
	             wdata_cmp[DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],wdata_cmp[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]};

assign  m_wr_data7 = {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7], data_piece_2[7], data_piece_1[7], data_piece_0[7]};

always @ (negedge ddr_dqs_modified[7] or negedge rst_n) begin
     if (mem_wr_cmd_lat) begin
        `ifdef ddr3_ip_inst_DIS_WR_DT_CMP
        `else
           if ((wdf_rd_addr_cnt[7][0] == 1'b1 || wdf_rd_addr_cnt[7] == 0) && wdf_rd_addr_en[7] == 1'b1) begin
              if ( exp_data7 != m_wr_data7) begin
                $display("MON ERROR: At time %0t, data written into memory is %h, Expected data is %h\n",$time, m_wr_data7, exp_data7);
                test_mem_ctrl.error_flg <= 1'b1;
              end
               if ({wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+7/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+7/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+7/`ddr3_ip_inst_DM_X],wdm_cmp[7/`ddr3_ip_inst_DM_X]} != {ddr_dqm[7],dm_piece_2[7],dm_piece_1[7],dm_piece_0[7]}) begin
                  $display("MON ERROR: At time %0t, Data Mask to memory is %h, Expected data Mask is %h\n",$time, {ddr_dqm[7], dm_piece_2[7], dm_piece_1[7], dm_piece_0[7]}, {wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+7/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+7/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+7/`ddr3_ip_inst_DM_X],wdm_cmp[7/`ddr3_ip_inst_DM_X]});
                  test_mem_ctrl.error_flg <= 1'b1;
               end
          end 
       `endif 
     end 
end 

`ifdef ddr3_ip_inst_DQS_WIDTH_8
`else

//============================================================
always @ (posedge ddr_dqs_modified[8] or negedge rst_n) begin
   if (!rst_n) begin
      wdf_rd_addr_cnt[8] <= 0;
      wdf_rd_addr_en[8]  <= 1'b1;
   end
   else begin
      if (mem_wr_cmd_lat) begin
        if (int_burst_len == 4'b1000) begin // BL8 (Fixed or OTF)
           if (wdf_rd_addr_cnt[8] == 4 * write_burst_cnt)
               wdf_rd_addr_cnt[8] <= 0;
           else
               wdf_rd_addr_cnt[8] <= wdf_rd_addr_cnt[8] + 1;
        end
        else if (int_burst_len == 4'b0100) begin // BC4 (Fixed or OTF)
           if (wdf_rd_addr_cnt[8] == 2)
               wdf_rd_addr_cnt[8] <= 0;
           else
               wdf_rd_addr_cnt[8] <= wdf_rd_addr_cnt[8] + 1;
        end

        if (wdf_rd_addr_cnt[8] != 0)
            wdf_rd_addr_en[8]  <= 1'b1;
        else
            wdf_rd_addr_en[8]  <= 1'b0;

     end // mem_wr_cmd_lat
   end // else
end

wire    [31:0] exp_data8, m_wr_data8, exp_data8h;



assign  exp_data8 = {wdata_cmp[DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],wdata_cmp[DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],
	             wdata_cmp[DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],wdata_cmp[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]};

assign  m_wr_data8 = {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8], data_piece_2[8], data_piece_1[8], data_piece_0[8]};

always @ (negedge ddr_dqs_modified[8] or negedge rst_n) begin
     if (mem_wr_cmd_lat) begin
        `ifdef ddr3_ip_inst_DIS_WR_DT_CMP
        `else
           if ((wdf_rd_addr_cnt[8][0] == 1'b1 || wdf_rd_addr_cnt[8] == 0) && wdf_rd_addr_en[8] == 1'b1) begin
              if ( exp_data8 != m_wr_data8) begin
                $display("MON ERROR: At time %0t, data written into memory is %h, Expected data is %h\n",$time, m_wr_data8, exp_data8);
                test_mem_ctrl.error_flg <= 1'b1;
             end
               if ({wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+8/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+8/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+8/`ddr3_ip_inst_DM_X],wdm_cmp[8/`ddr3_ip_inst_DM_X]} != {ddr_dqm[8],dm_piece_2[8],dm_piece_1[8],dm_piece_0[8]}) begin
                  $display("MON ERROR: At time %0t, Data Mask to memory is %h, Expected data Mask is %h\n",$time, {ddr_dqm[8], dm_piece_2[8], dm_piece_1[8], dm_piece_0[8]}, {wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+8/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+8/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+8/`ddr3_ip_inst_DM_X],wdm_cmp[8/`ddr3_ip_inst_DM_X]});
                  test_mem_ctrl.error_flg <= 1'b1;
               end
          end 
       `endif 
     end 
end 

`ifdef ddr3_ip_inst_DQS_WIDTH_9
`else

//============================================================
always @ (posedge ddr_dqs_modified[9] or negedge rst_n) begin
   if (!rst_n) begin
      wdf_rd_addr_cnt[9] <= 0;
      wdf_rd_addr_en[9]  <= 1'b1;
   end
   else begin
      if (mem_wr_cmd_lat) begin
        if (int_burst_len == 4'b1000) begin // BL8 (Fixed or OTF)
           if (wdf_rd_addr_cnt[9] == 4 * write_burst_cnt)
               wdf_rd_addr_cnt[9] <= 0;
           else
               wdf_rd_addr_cnt[9] <= wdf_rd_addr_cnt[9] + 1;
        end
        else if (int_burst_len == 4'b0100) begin // BC4 (Fixed or OTF)
           if (wdf_rd_addr_cnt[9] == 2)
               wdf_rd_addr_cnt[9] <= 0;
           else
               wdf_rd_addr_cnt[9] <= wdf_rd_addr_cnt[9] + 1;
        end

        if (wdf_rd_addr_cnt[9] != 0)
            wdf_rd_addr_en[9]  <= 1'b1;
        else
            wdf_rd_addr_en[9]  <= 1'b0;

     end // mem_wr_cmd_lat
   end // else
end

wire    [31:0] exp_data9, m_wr_data9, exp_data9h;



assign  exp_data9 = {wdata_cmp[DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],wdata_cmp[DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],
	             wdata_cmp[DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],wdata_cmp[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]};

assign  m_wr_data9 = {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9], data_piece_2[9], data_piece_1[9], data_piece_0[9]};

always @ (negedge ddr_dqs_modified[9] or negedge rst_n) begin
     if (mem_wr_cmd_lat) begin
        `ifdef ddr3_ip_inst_DIS_WR_DT_CMP
        `else
           if ((wdf_rd_addr_cnt[9][0] == 1'b1 || wdf_rd_addr_cnt[9] == 0) && wdf_rd_addr_en[9] == 1'b1) begin
              if ( exp_data9 != m_wr_data9) begin
                $display("MON ERROR: At time %0t, data written into memory is %h, Expected data is %h\n",$time, m_wr_data9, exp_data9);
                test_mem_ctrl.error_flg <= 1'b1;
              end
               if ({wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+9/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+9/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+9/`ddr3_ip_inst_DM_X],wdm_cmp[9/`ddr3_ip_inst_DM_X]} != {ddr_dqm[9],dm_piece_2[9],dm_piece_1[9],dm_piece_0[9]}) begin
                  $display("MON ERROR: At time %0t, Data Mask to memory is %h, Expected data Mask is %h\n",$time, {ddr_dqm[9], dm_piece_2[9], dm_piece_1[9], dm_piece_0[9]}, {wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+9/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+9/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+9/`ddr3_ip_inst_DM_X],wdm_cmp[9/`ddr3_ip_inst_DM_X]});
                  test_mem_ctrl.error_flg <= 1'b1;
               end
          end 
       `endif 
     end 
end 

`ifdef ddr3_ip_inst_DQS_WIDTH_10
`else

//============================================================
always @ (posedge ddr_dqs_modified[10] or negedge rst_n) begin
   if (!rst_n) begin
      wdf_rd_addr_cnt[10] <= 0;
      wdf_rd_addr_en[10]  <= 1'b1;
   end
   else begin
      if (mem_wr_cmd_lat) begin
        if (int_burst_len == 4'b1000) begin // BL8 (Fixed or OTF)
           if (wdf_rd_addr_cnt[10] == 4 * write_burst_cnt)
               wdf_rd_addr_cnt[10] <= 0;
           else
               wdf_rd_addr_cnt[10] <= wdf_rd_addr_cnt[10] + 1;
        end
        else if (int_burst_len == 4'b0100) begin // BC4 (Fixed or OTF)
           if (wdf_rd_addr_cnt[10] == 2)
               wdf_rd_addr_cnt[10] <= 0;
           else
               wdf_rd_addr_cnt[10] <= wdf_rd_addr_cnt[10] + 1;
        end

        if (wdf_rd_addr_cnt[10] != 0)
            wdf_rd_addr_en[10]  <= 1'b1;
        else
            wdf_rd_addr_en[10]  <= 1'b0;

     end // mem_wr_cmd_lat
   end // else
end

wire    [31:0] exp_data10, m_wr_data10, exp_data10h;



assign  exp_data10 = {wdata_cmp[DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],wdata_cmp[DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],
	             wdata_cmp[DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],wdata_cmp[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]};

assign  m_wr_data10 = {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10], data_piece_2[10], data_piece_1[10], data_piece_0[10]};

always @ (negedge ddr_dqs_modified[10] or negedge rst_n) begin
     if (mem_wr_cmd_lat) begin
        `ifdef ddr3_ip_inst_DIS_WR_DT_CMP
        `else
           if ((wdf_rd_addr_cnt[10][0] == 1'b1 || wdf_rd_addr_cnt[10] == 0) && wdf_rd_addr_en[10] == 1'b1) begin
              if ( exp_data10 != m_wr_data10) begin
                $display("MON ERROR: At time %0t, data written into memory is %h, Expected data is %h\n",$time, m_wr_data10, exp_data10);
                test_mem_ctrl.error_flg <= 1'b1;
              end
               if ({wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+10/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+10/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+10/`ddr3_ip_inst_DM_X],wdm_cmp[10/`ddr3_ip_inst_DM_X]} != {ddr_dqm[10],dm_piece_2[10],dm_piece_1[10],dm_piece_0[10]}) begin
                  $display("MON ERROR: At time %0t, Data Mask to memory is %h, Expected data Mask is %h\n",$time, {ddr_dqm[10], dm_piece_2[10], dm_piece_1[10], dm_piece_0[10]}, {wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+10/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+10/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+10/`ddr3_ip_inst_DM_X],wdm_cmp[10/`ddr3_ip_inst_DM_X]});
                  test_mem_ctrl.error_flg <= 1'b1;
               end
          end 
       `endif 
     end 
end 

//============================================================
always @ (posedge ddr_dqs_modified[11] or negedge rst_n) begin
   if (!rst_n) begin
      wdf_rd_addr_cnt[11] <= 0;
      wdf_rd_addr_en[11]  <= 1'b1;
   end
   else begin
      if (mem_wr_cmd_lat) begin
        if (int_burst_len == 4'b1000) begin // BL8 (Fixed or OTF)
           if (wdf_rd_addr_cnt[11] == 4 * write_burst_cnt)
               wdf_rd_addr_cnt[11] <= 0;
           else
               wdf_rd_addr_cnt[11] <= wdf_rd_addr_cnt[11] + 1;
        end
        else if (int_burst_len == 4'b0100) begin // BC4 (Fixed or OTF)
           if (wdf_rd_addr_cnt[11] == 2)
               wdf_rd_addr_cnt[11] <= 0;
           else
               wdf_rd_addr_cnt[11] <= wdf_rd_addr_cnt[11] + 1;
        end

        if (wdf_rd_addr_cnt[11] != 0)
            wdf_rd_addr_en[11]  <= 1'b1;
        else
            wdf_rd_addr_en[11]  <= 1'b0;

     end // mem_wr_cmd_lat
   end // else
end

wire    [31:0] exp_data11, m_wr_data11, exp_data11h;



assign  exp_data11 = {wdata_cmp[DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],wdata_cmp[DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],
	             wdata_cmp[DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],wdata_cmp[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]};

assign  m_wr_data11 = {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11], data_piece_2[11], data_piece_1[11], data_piece_0[11]};

always @ (negedge ddr_dqs_modified[11] or negedge rst_n) begin
     if (mem_wr_cmd_lat) begin
        `ifdef ddr3_ip_inst_DIS_WR_DT_CMP
        `else
           //if ((wdf_rd_addr_cnt[11][1:0] == 2'b11 || wdf_rd_addr_cnt[11] == 0) && wdf_rd_addr_en[11] == 1'b1) begin
           if ((wdf_rd_addr_cnt[11][1:0] == 2'b11 ) && wdf_rd_addr_en[11] == 1'b1) begin
              if ( exp_data11 != m_wr_data11) begin
                $display("MON ERROR: At time %0t, data written into memory is %h, Expected data is %h\n",$time, m_wr_data11, exp_data11);
                test_mem_ctrl.error_flg <= 1'b1;
              end
               if ({wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+11/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+11/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+11/`ddr3_ip_inst_DM_X],wdm_cmp[11/`ddr3_ip_inst_DM_X]} != {ddr_dqm[11],dm_piece_2[11],dm_piece_1[11],dm_piece_0[11]}) begin
                  $display("MON ERROR: At time %0t, Data Mask to memory is %h, Expected data Mask is %h\n",$time, {ddr_dqm[11], dm_piece_2[11], dm_piece_1[11], dm_piece_0[11]}, {wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+11/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+11/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+11/`ddr3_ip_inst_DM_X],wdm_cmp[11/`ddr3_ip_inst_DM_X]});
                  test_mem_ctrl.error_flg <= 1'b1;
               end
          end 
       `endif 
     end 
end 

`ifdef ddr3_ip_inst_DQS_WIDTH_12
`else
//============================================================
always @ (posedge ddr_dqs_modified[12] or negedge rst_n) begin
   if (!rst_n) begin
      wdf_rd_addr_cnt[12] <= 0;
      wdf_rd_addr_en[12]  <= 1'b1;
   end
   else begin
      if (mem_wr_cmd_lat) begin
        if (int_burst_len == 4'b1000) begin // BL8 (Fixed or OTF)
           if (wdf_rd_addr_cnt[12] == 4 * write_burst_cnt)
               wdf_rd_addr_cnt[12] <= 0;
           else
               wdf_rd_addr_cnt[12] <= wdf_rd_addr_cnt[12] + 1;
        end
        else if (int_burst_len == 4'b0100) begin // BC4 (Fixed or OTF)
           if (wdf_rd_addr_cnt[12] == 2)
               wdf_rd_addr_cnt[12] <= 0;
           else
               wdf_rd_addr_cnt[12] <= wdf_rd_addr_cnt[12] + 1;
        end

        if (wdf_rd_addr_cnt[12] != 0)
            wdf_rd_addr_en[12]  <= 1'b1;
        else
            wdf_rd_addr_en[12]  <= 1'b0;

     end // mem_wr_cmd_lat
   end // else
end

wire    [31:0] exp_data12, m_wr_data12, exp_data12h;



assign  exp_data12 = {wdata_cmp[DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],wdata_cmp[DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],
	             wdata_cmp[DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],wdata_cmp[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]};

assign  m_wr_data12 = {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12], data_piece_2[12], data_piece_1[12], data_piece_0[12]};

always @ (negedge ddr_dqs_modified[12] or negedge rst_n) begin
     if (mem_wr_cmd_lat) begin
        `ifdef ddr3_ip_inst_DIS_WR_DT_CMP
        `else
           if ((wdf_rd_addr_cnt[12][0] == 1'b1 || wdf_rd_addr_cnt[12] == 0) && wdf_rd_addr_en[12] == 1'b1) begin
              if ( exp_data12 != m_wr_data12) begin
                $display("MON ERROR: At time %0t, data written into memory is %h, Expected data is %h\n",$time, m_wr_data12, exp_data12);
                test_mem_ctrl.error_flg <= 1'b1;
              end
               if ({wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+12/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+12/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+12/`ddr3_ip_inst_DM_X],wdm_cmp[12/`ddr3_ip_inst_DM_X]} != {ddr_dqm[12],dm_piece_2[12],dm_piece_1[12],dm_piece_0[12]}) begin
                  $display("MON ERROR: At time %0t, Data Mask to memory is %h, Expected data Mask is %h\n",$time, {ddr_dqm[12], dm_piece_2[12], dm_piece_1[12], dm_piece_0[12]}, {wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+12/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+12/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+12/`ddr3_ip_inst_DM_X],wdm_cmp[12/`ddr3_ip_inst_DM_X]});
                  test_mem_ctrl.error_flg <= 1'b1;
               end
          end 
       `endif 
     end 
end 

//============================================================
always @ (posedge ddr_dqs_modified[13] or negedge rst_n) begin
   if (!rst_n) begin
      wdf_rd_addr_cnt[13] <= 0;
      wdf_rd_addr_en[13]  <= 1'b1;
   end
   else begin
      if (mem_wr_cmd_lat) begin
        if (int_burst_len == 4'b1000) begin // BL8 (Fixed or OTF)
           if (wdf_rd_addr_cnt[13] == 4 * write_burst_cnt)
               wdf_rd_addr_cnt[13] <= 0;
           else
               wdf_rd_addr_cnt[13] <= wdf_rd_addr_cnt[13] + 1;
        end
        else if (int_burst_len == 4'b0100) begin // BC4 (Fixed or OTF)
           if (wdf_rd_addr_cnt[13] == 2)
               wdf_rd_addr_cnt[13] <= 0;
           else
               wdf_rd_addr_cnt[13] <= wdf_rd_addr_cnt[13] + 1;
        end

        if (wdf_rd_addr_cnt[13] != 0)
            wdf_rd_addr_en[13]  <= 1'b1;
        else
            wdf_rd_addr_en[13]  <= 1'b0;

     end // mem_wr_cmd_lat
   end // else
end

wire    [31:0] exp_data13, m_wr_data13, exp_data13h;



assign  exp_data13 = {wdata_cmp[DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],wdata_cmp[DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],
	             wdata_cmp[DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],wdata_cmp[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]};

assign  m_wr_data13 = {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13], data_piece_2[13], data_piece_1[13], data_piece_0[13]};

always @ (negedge ddr_dqs_modified[13] or negedge rst_n) begin
     if (mem_wr_cmd_lat) begin
        `ifdef ddr3_ip_inst_DIS_WR_DT_CMP
        `else
           if ((wdf_rd_addr_cnt[13][0] == 1'b1 || wdf_rd_addr_cnt[13] == 0) && wdf_rd_addr_en[13] == 1'b1) begin
              if ( exp_data13 != m_wr_data13) begin
                $display("MON ERROR: At time %0t, data written into memory is %h, Expected data is %h\n",$time, m_wr_data13, exp_data13);
                test_mem_ctrl.error_flg <= 1'b1;
              end
               if ({wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+13/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+13/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+13/`ddr3_ip_inst_DM_X],wdm_cmp[13/`ddr3_ip_inst_DM_X]} != {ddr_dqm[13],dm_piece_2[13],dm_piece_1[13],dm_piece_0[13]}) begin
                  $display("MON ERROR: At time %0t, Data Mask to memory is %h, Expected data Mask is %h\n",$time, {ddr_dqm[13], dm_piece_2[13], dm_piece_1[13], dm_piece_0[13]}, {wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+13/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+13/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+13/`ddr3_ip_inst_DM_X],wdm_cmp[13/`ddr3_ip_inst_DM_X]});
                  test_mem_ctrl.error_flg <= 1'b1;
               end
          end 
       `endif 
     end 
end 

`ifdef ddr3_ip_inst_DQS_WIDTH_14
`else
//============================================================
always @ (posedge ddr_dqs_modified[14] or negedge rst_n) begin
   if (!rst_n) begin
      wdf_rd_addr_cnt[14] <= 0;
      wdf_rd_addr_en[14]  <= 1'b1;
   end
   else begin
      if (mem_wr_cmd_lat) begin
        if (int_burst_len == 4'b1000) begin // BL8 (Fixed or OTF)
           if (wdf_rd_addr_cnt[14] == 4 * write_burst_cnt)
               wdf_rd_addr_cnt[14] <= 0;
           else
               wdf_rd_addr_cnt[14] <= wdf_rd_addr_cnt[14] + 1;
        end
        else if (int_burst_len == 4'b0100) begin // BC4 (Fixed or OTF)
           if (wdf_rd_addr_cnt[14] == 2)
               wdf_rd_addr_cnt[14] <= 0;
           else
               wdf_rd_addr_cnt[14] <= wdf_rd_addr_cnt[14] + 1;
        end

        if (wdf_rd_addr_cnt[14] != 0)
            wdf_rd_addr_en[14]  <= 1'b1;
        else
            wdf_rd_addr_en[14]  <= 1'b0;

     end // mem_wr_cmd_lat
   end // else
end

wire    [31:0] exp_data14, m_wr_data14, exp_data14h;



assign  exp_data14 = {wdata_cmp[DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],wdata_cmp[DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],
	             wdata_cmp[DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],wdata_cmp[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]};

assign  m_wr_data14 = {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14], data_piece_2[14], data_piece_1[14], data_piece_0[14]};

always @ (negedge ddr_dqs_modified[14] or negedge rst_n) begin
     if (mem_wr_cmd_lat) begin
        `ifdef ddr3_ip_inst_DIS_WR_DT_CMP
        `else
           if ((wdf_rd_addr_cnt[14][0] == 1'b1 || wdf_rd_addr_cnt[14] == 0) && wdf_rd_addr_en[14] == 1'b1) begin
              if ( exp_data14 != m_wr_data14) begin
                $display("MON ERROR: At time %0t, data written into memory is %h, Expected data is %h\n",$time, m_wr_data14, exp_data14);
                test_mem_ctrl.error_flg <= 1'b1;
              end
               if ({wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+14/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+14/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+14/`ddr3_ip_inst_DM_X],wdm_cmp[14/`ddr3_ip_inst_DM_X]} != {ddr_dqm[14],dm_piece_2[14],dm_piece_1[14],dm_piece_0[14]}) begin
                  $display("MON ERROR: At time %0t, Data Mask to memory is %h, Expected data Mask is %h\n",$time, {ddr_dqm[14], dm_piece_2[14], dm_piece_1[14], dm_piece_0[14]}, {wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+14/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+14/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+14/`ddr3_ip_inst_DM_X],wdm_cmp[14/`ddr3_ip_inst_DM_X]});
                  test_mem_ctrl.error_flg <= 1'b1;
               end
          end 
       `endif 
     end 
end 

//============================================================
always @ (posedge ddr_dqs_modified[15] or negedge rst_n) begin
   if (!rst_n) begin
      wdf_rd_addr_cnt[15] <= 0;
      wdf_rd_addr_en[15]  <= 1'b1;
   end
   else begin
      if (mem_wr_cmd_lat) begin
        if (int_burst_len == 4'b1000) begin // BL8 (Fixed or OTF)
           if (wdf_rd_addr_cnt[15] == 4 * write_burst_cnt)
               wdf_rd_addr_cnt[15] <= 0;
           else
               wdf_rd_addr_cnt[15] <= wdf_rd_addr_cnt[15] + 1;
        end
        else if (int_burst_len == 4'b0100) begin // BC4 (Fixed or OTF)
           if (wdf_rd_addr_cnt[15] == 2)
               wdf_rd_addr_cnt[15] <= 0;
           else
               wdf_rd_addr_cnt[15] <= wdf_rd_addr_cnt[15] + 1;
        end

        if (wdf_rd_addr_cnt[15] != 0)
            wdf_rd_addr_en[15]  <= 1'b1;
        else
            wdf_rd_addr_en[15]  <= 1'b0;

     end // mem_wr_cmd_lat
   end // else
end

wire    [31:0] exp_data15, m_wr_data15, exp_data15h;



assign  exp_data15 = {wdata_cmp[DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],wdata_cmp[DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],
	             wdata_cmp[DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],wdata_cmp[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]};

assign  m_wr_data15 = {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15], data_piece_2[15], data_piece_1[15], data_piece_0[15]};

always @ (negedge ddr_dqs_modified[15] or negedge rst_n) begin
     if (mem_wr_cmd_lat) begin
        `ifdef ddr3_ip_inst_DIS_WR_DT_CMP
        `else
           if ((wdf_rd_addr_cnt[15][0] == 1'b1 || wdf_rd_addr_cnt[15] == 0) && wdf_rd_addr_en[15] == 1'b1) begin
              if ( exp_data15 != m_wr_data15) begin
                $display("MON ERROR: At time %0t, data written into memory is %h, Expected data is %h\n",$time, m_wr_data15, exp_data15);
                test_mem_ctrl.error_flg <= 1'b1;
              end
               if ({wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+15/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+15/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+15/`ddr3_ip_inst_DM_X],wdm_cmp[15/`ddr3_ip_inst_DM_X]} != {ddr_dqm[15],dm_piece_2[15],dm_piece_1[15],dm_piece_0[15]}) begin
                  $display("MON ERROR: At time %0t, Data Mask to memory is %h, Expected data Mask is %h\n",$time, {ddr_dqm[15], dm_piece_2[15], dm_piece_1[15], dm_piece_0[15]}, {wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+15/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+15/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+15/`ddr3_ip_inst_DM_X],wdm_cmp[15/`ddr3_ip_inst_DM_X]});
                  test_mem_ctrl.error_flg <= 1'b1;
               end
          end 
       `endif 
     end 
end 

`ifdef ddr3_ip_inst_DQS_WIDTH_16
`else

//============================================================
always @ (posedge ddr_dqs_modified[16] or negedge rst_n) begin
   if (!rst_n) begin
      wdf_rd_addr_cnt[16] <= 0;
      wdf_rd_addr_en[16]  <= 1'b1;
   end
   else begin
      if (mem_wr_cmd_lat) begin
        if (int_burst_len == 4'b1000) begin // BL8 (Fixed or OTF)
           if (wdf_rd_addr_cnt[16] == 4 * write_burst_cnt)
               wdf_rd_addr_cnt[16] <= 0;
           else
               wdf_rd_addr_cnt[16] <= wdf_rd_addr_cnt[16] + 1;
        end
        else if (int_burst_len == 4'b0100) begin // BC4 (Fixed or OTF)
           if (wdf_rd_addr_cnt[16] == 2)
               wdf_rd_addr_cnt[16] <= 0;
           else
               wdf_rd_addr_cnt[16] <= wdf_rd_addr_cnt[16] + 1;
        end

        if (wdf_rd_addr_cnt[16] != 0)
            wdf_rd_addr_en[16]  <= 1'b1;
        else
            wdf_rd_addr_en[16]  <= 1'b0;

     end // mem_wr_cmd_lat
   end // else
end

wire    [31:0] exp_data16, m_wr_data16, exp_data16h;



assign  exp_data16 = {wdata_cmp[DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],wdata_cmp[DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],
	             wdata_cmp[DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],wdata_cmp[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]};

assign  m_wr_data16 = {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16], data_piece_2[16], data_piece_1[16], data_piece_0[16]};

always @ (negedge ddr_dqs_modified[16] or negedge rst_n) begin
     if (mem_wr_cmd_lat) begin
        `ifdef ddr3_ip_inst_DIS_WR_DT_CMP
        `else
           if ((wdf_rd_addr_cnt[16][0] == 1'b1 || wdf_rd_addr_cnt[16] == 0) && wdf_rd_addr_en[16] == 1'b1) begin
              if ( exp_data16 != m_wr_data16) begin
                $display("MON ERROR: At time %0t, data written into memory is %h, Expected data is %h\n",$time, m_wr_data16, exp_data16);
                test_mem_ctrl.error_flg <= 1'b1;
              end
               if ({wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+16/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+16/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+16/`ddr3_ip_inst_DM_X],wdm_cmp[16/`ddr3_ip_inst_DM_X]} != {ddr_dqm[16],dm_piece_2[16],dm_piece_1[16],dm_piece_0[16]}) begin
                  $display("MON ERROR: At time %0t, Data Mask to memory is %h, Expected data Mask is %h\n",$time, {ddr_dqm[16], dm_piece_2[16], dm_piece_1[16], dm_piece_0[16]}, {wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+16/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+16/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+16/`ddr3_ip_inst_DM_X],wdm_cmp[16/`ddr3_ip_inst_DM_X]});
                  test_mem_ctrl.error_flg <= 1'b1;
               end
          end 
       `endif 
     end 
end 

//============================================================
always @ (posedge ddr_dqs_modified[17] or negedge rst_n) begin
   if (!rst_n) begin
      wdf_rd_addr_cnt[17] <= 0;
      wdf_rd_addr_en[17]  <= 1'b1;
   end
   else begin
      if (mem_wr_cmd_lat) begin
        if (int_burst_len == 4'b1000) begin // BL8 (Fixed or OTF)
           if (wdf_rd_addr_cnt[17] == 4 * write_burst_cnt)
               wdf_rd_addr_cnt[17] <= 0;
           else
               wdf_rd_addr_cnt[17] <= wdf_rd_addr_cnt[17] + 1;
        end
        else if (int_burst_len == 4'b0100) begin // BC4 (Fixed or OTF)
           if (wdf_rd_addr_cnt[17] == 2)
               wdf_rd_addr_cnt[17] <= 0;
           else
               wdf_rd_addr_cnt[17] <= wdf_rd_addr_cnt[17] + 1;
        end

        if (wdf_rd_addr_cnt[17] != 0)
            wdf_rd_addr_en[17]  <= 1'b1;
        else
            wdf_rd_addr_en[17]  <= 1'b0;

     end // mem_wr_cmd_lat
   end // else
end

wire    [31:0] exp_data17, m_wr_data17, exp_data17h;



assign  exp_data17 = {wdata_cmp[DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],wdata_cmp[DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],
	              wdata_cmp[DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],wdata_cmp[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]};

assign  m_wr_data17 = {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17], data_piece_2[17], data_piece_1[17], data_piece_0[17]};

always @ (negedge ddr_dqs_modified[17] or negedge rst_n) begin
     if (mem_wr_cmd_lat) begin
        `ifdef ddr3_ip_inst_DIS_WR_DT_CMP
        `else
           if ((wdf_rd_addr_cnt[17][0] == 1'b1 || wdf_rd_addr_cnt[17] == 0) && wdf_rd_addr_en[17] == 1'b1) begin
              if ( exp_data17 != m_wr_data17) begin
                $display("MON ERROR: At time %0t, data written into memory is %h, Expected data is %h\n",$time, m_wr_data17, exp_data17);
                test_mem_ctrl.error_flg <= 1'b1;
              end
              if ({wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+17/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+17/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+17/`ddr3_ip_inst_DM_X],wdm_cmp[17/`ddr3_ip_inst_DM_X]} != {ddr_dqm[17],dm_piece_2[17],dm_piece_1[17],dm_piece_0[17]}) begin
                $display("MON ERROR: At time %0t, Data Mask to memory is %h, Expected data Mask is %h\n",$time, {ddr_dqm[17], dm_piece_2[17], dm_piece_1[17], dm_piece_0[17]}, {wdm_cmp[3*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+17/`ddr3_ip_inst_DM_X],wdm_cmp[2*`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+17/`ddr3_ip_inst_DM_X],wdm_cmp[`ddr3_ip_inst_USER_DM/`ddr3_ip_inst_DATA_X+17/`ddr3_ip_inst_DM_X],wdm_cmp[17/`ddr3_ip_inst_DM_X]});
                  test_mem_ctrl.error_flg <= 1'b1;
              end
          end 
       `endif 
     end 
end 

`endif //16
`endif //14
`endif //12
`endif //10
`endif //9
`endif //8
`endif //7
`endif //6
`endif //5
`endif //4
`endif //3 
`endif //2
`endif //1

///////////////////////////////////////////////////////////////////////
// Logic that compares the data presented at the memory with the 
// data written into the user interface during read cycles
reg   [287:0]            rd_data_fifo    [0:63];
reg   [287:0]            rd_data_fifo_out;
wire  [287:0]            int_rd_data_compare;
wire  [287:0]            rd_data_compare;

wire  [31:0] rdata_cmp_8, rdata_cmp_7, rdata_cmp_6, rdata_cmp_5, rdata_cmp_4, rdata_cmp_3, rdata_cmp_2, rdata_cmp_1, rdata_cmp_0;
wire  [31:0] rd_data_compare_8, rd_data_compare_7, rd_data_compare_6, rd_data_compare_5, rd_data_compare_4, rd_data_compare_3, rd_data_compare_2, rd_data_compare_1, rd_data_compare_0;

reg   [5:0]              rdf_rd_addr;
wire                     mem_rd_cmd_lat;


reg  [5:0]   rdf_wr_addr [`ddr3_ip_inst_DQS_WIDTH-1:0];
reg  [1:0]   rd_data_cnt [`ddr3_ip_inst_DQS_WIDTH-1:0];

`ifdef ddr3_ip_inst_x4
reg  [3:0]   rd_data_piece_0 [`ddr3_ip_inst_DQS_WIDTH-1:0];
reg  [3:0]   rd_data_piece_1 [`ddr3_ip_inst_DQS_WIDTH-1:0];
reg  [3:0]   rd_data_piece_2 [`ddr3_ip_inst_DQS_WIDTH-1:0];
`else
reg  [7:0]   rd_data_piece_0 [`ddr3_ip_inst_DQS_WIDTH-1:0];
reg  [7:0]   rd_data_piece_1 [`ddr3_ip_inst_DQS_WIDTH-1:0];
reg  [7:0]   rd_data_piece_2 [`ddr3_ip_inst_DQS_WIDTH-1:0];
`endif

// Write the data presented by the memory into the fifo
// flop the data seen on the rising edge to write into the fifo at 
// a later stage

wire [7:0] sk_rd_data_piece0;
wire [7:0] sk_rd_data_piece1;
wire [7:0] sk_rd_data_piece2;
wire [7:0] sk_rd_data_piece3;

wire [5:0] sk_rdf_wr_addr;

assign sk_rd_data_piece0 = rd_data_piece_0[0];
assign sk_rd_data_piece1 = rd_data_piece_1[0];
assign sk_rd_data_piece2 = rd_data_piece_2[0];
assign sk_rd_data_piece3 = ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];

assign sk_rdf_wr_addr = rdf_wr_addr[0];
//================================================================
always @ (posedge ddr_dqs_modified[0] or negedge rst_n) begin
    if (!rst_n) begin
       rd_data_cnt[0]                 <= 0;
    end
    else begin
	    if (mem_rd_cmd_lat)
          rd_data_cnt[0]              <= rd_data_cnt[0] + 1;
    end
end

always @ (posedge ddr_dqs_modified[0] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_0[0] <= 0;
      rd_data_piece_2[0] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[0][0] == 0)
             rd_data_piece_0[0] <= ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
         else if (rd_data_cnt[0][0] == 1)
             rd_data_piece_2[0] <= ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
   end
end

always @ (negedge ddr_dqs_modified[0] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_1[0] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[0][0] == 1)
             rd_data_piece_1[0] <= ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0];
   end
end

// Write a data pair into the fifo
always @ (negedge ddr_dqs_modified[0] or negedge rst_n) begin
    if (!rst_n) begin
	    rdf_wr_addr[0]       <= 0;
    end
    else begin
	if (mem_rd_cmd_lat) begin
     if (rd_data_cnt[0][0] == 0)
	    rdf_wr_addr[0]       <= rdf_wr_addr[0] + 1;
	end

	case (rdf_wr_addr[0])
      6'd0  : {rd_data_fifo[0][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[0][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[0][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[0][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}   <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd1  : {rd_data_fifo[1][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[1][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[1][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[1][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}   <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd2  : {rd_data_fifo[2][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[2][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[2][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[2][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}   <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd3  : {rd_data_fifo[3][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[3][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[3][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[3][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}   <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd4  : {rd_data_fifo[4][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[4][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[4][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[4][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}   <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd5  : {rd_data_fifo[5][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[5][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[5][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[5][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}   <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd6  : {rd_data_fifo[6][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[6][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[6][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[6][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}   <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd7  : {rd_data_fifo[7][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[7][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[7][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[7][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}   <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd8  : {rd_data_fifo[8][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[8][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[8][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[8][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}   <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd9  : {rd_data_fifo[9][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[9][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[9][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[9][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}   <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd10 : {rd_data_fifo[10][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[10][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[10][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[10][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd11 : {rd_data_fifo[11][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[11][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[11][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[11][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd12 : {rd_data_fifo[12][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[12][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[12][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[12][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd13 : {rd_data_fifo[13][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[13][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[13][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[13][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd14 : {rd_data_fifo[14][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[14][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[14][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[14][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd15 : {rd_data_fifo[15][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[15][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[15][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[15][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd16 : {rd_data_fifo[16][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[16][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[16][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[16][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd17 : {rd_data_fifo[17][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[17][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[17][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[17][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd18 : {rd_data_fifo[18][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[18][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[18][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[18][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd19 : {rd_data_fifo[19][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[19][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[19][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[19][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd20 : {rd_data_fifo[20][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[20][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[20][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[20][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd21 : {rd_data_fifo[21][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[21][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[21][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[21][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd22 : {rd_data_fifo[22][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[22][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[22][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[22][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd23 : {rd_data_fifo[23][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[23][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[23][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[23][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd24 : {rd_data_fifo[24][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[24][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[24][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[24][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd25 : {rd_data_fifo[25][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[25][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[25][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[25][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd26 : {rd_data_fifo[26][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[26][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[26][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[26][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd27 : {rd_data_fifo[27][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[27][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[27][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[27][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd28 : {rd_data_fifo[28][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[28][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[28][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[28][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd29 : {rd_data_fifo[29][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[29][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[29][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[29][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd30 : {rd_data_fifo[30][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[30][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[30][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[30][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd31 : {rd_data_fifo[31][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[31][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[31][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[31][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd32 : {rd_data_fifo[32][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[32][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[32][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[32][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd33 : {rd_data_fifo[33][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[33][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[33][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[33][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd34 : {rd_data_fifo[34][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[34][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[34][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[34][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd35 : {rd_data_fifo[35][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[35][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[35][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[35][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd36 : {rd_data_fifo[36][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[36][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[36][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[36][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd37 : {rd_data_fifo[37][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[37][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[37][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[37][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd38 : {rd_data_fifo[38][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[38][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[38][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[38][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd39 : {rd_data_fifo[39][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[39][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[39][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[39][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd40 : {rd_data_fifo[40][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[40][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[40][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[40][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd41 : {rd_data_fifo[41][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[41][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[41][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[41][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd42 : {rd_data_fifo[42][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[42][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[42][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[42][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd43 : {rd_data_fifo[43][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[43][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[43][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[43][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd44 : {rd_data_fifo[44][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[44][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[44][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[44][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd45 : {rd_data_fifo[45][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[45][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[45][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[45][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd46 : {rd_data_fifo[46][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[46][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[46][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[46][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd47 : {rd_data_fifo[47][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[47][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[47][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[47][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd48 : {rd_data_fifo[48][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[48][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[48][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[48][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd49 : {rd_data_fifo[49][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[49][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[49][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[49][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd50 : {rd_data_fifo[50][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[50][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[50][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[50][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd51 : {rd_data_fifo[51][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[51][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[51][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[51][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd52 : {rd_data_fifo[52][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[52][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[52][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[52][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd53 : {rd_data_fifo[53][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[53][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[53][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[53][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd54 : {rd_data_fifo[54][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[54][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[54][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[54][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd55 : {rd_data_fifo[55][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[55][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[55][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[55][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd56 : {rd_data_fifo[56][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[56][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[56][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[56][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd57 : {rd_data_fifo[57][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[57][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[57][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[57][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd58 : {rd_data_fifo[58][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[58][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[58][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[58][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd59 : {rd_data_fifo[59][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[59][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[59][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[59][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd60 : {rd_data_fifo[60][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[60][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[60][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[60][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd61 : {rd_data_fifo[61][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[61][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[61][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[61][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd62 : {rd_data_fifo[62][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[62][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[62][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[62][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
      6'd63 : {rd_data_fifo[63][DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[63][DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[63][DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],rd_data_fifo[63][DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]}  <= {ddr_dq[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0],rd_data_piece_2[0],rd_data_piece_1[0],rd_data_piece_0[0]};
	endcase
    end
end


`ifdef ddr3_ip_inst_DQS_WIDTH_1
`else

wire [7:0] sk_rd_data_piece1_0;
wire [7:0] sk_rd_data_piece1_1;
wire [7:0] sk_rd_data_piece1_2;
wire [7:0] sk_rd_data_piece1_3;

wire [5:0] sk_rdf_wr_addr1;

assign sk_rd_data_piece1_0 = rd_data_piece_0[1];
assign sk_rd_data_piece1_1 = rd_data_piece_1[1];
assign sk_rd_data_piece1_2 = rd_data_piece_2[1];
assign sk_rd_data_piece1_3 = ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];

assign sk_rdf_wr_addr1 = rdf_wr_addr[1];

//================================================================
always @ (posedge ddr_dqs_modified[1] or negedge rst_n) begin
    if (!rst_n) begin
       rd_data_cnt[1]                 <= 0;
    end
    else begin
	    if (mem_rd_cmd_lat)
          rd_data_cnt[1]              <= rd_data_cnt[1] + 1;
    end
end

always @ (posedge ddr_dqs_modified[1] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_0[1] <= 0;
      rd_data_piece_2[1] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[1][0] == 0)
             rd_data_piece_0[1] <= ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
         else if (rd_data_cnt[1][0] == 1)
             rd_data_piece_2[1] <= ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
   end
end

always @ (negedge ddr_dqs_modified[1] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_1[1] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[1][0] == 1)
             rd_data_piece_1[1] <= ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1];
   end
end

// Write a data pair into the fifo
always @ (negedge ddr_dqs_modified[1] or negedge rst_n) begin
    if (!rst_n) begin
	    rdf_wr_addr[1]       <= 0;
    end
    else begin
	if (mem_rd_cmd_lat) begin
     if (rd_data_cnt[1][0] == 0)
	    rdf_wr_addr[1]       <= rdf_wr_addr[1] + 1;
	end

	case (rdf_wr_addr[1])
      6'd0  : {rd_data_fifo[0][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[0][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[0][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[0][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}   <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd1  : {rd_data_fifo[1][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[1][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[1][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[1][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}   <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd2  : {rd_data_fifo[2][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[2][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[2][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[2][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}   <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd3  : {rd_data_fifo[3][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[3][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[3][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[3][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}   <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd4  : {rd_data_fifo[4][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[4][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[4][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[4][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}   <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd5  : {rd_data_fifo[5][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[5][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[5][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[5][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}   <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd6  : {rd_data_fifo[6][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[6][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[6][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[6][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}   <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd7  : {rd_data_fifo[7][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[7][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[7][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[7][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}   <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd8  : {rd_data_fifo[8][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[8][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[8][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[8][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}   <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd9  : {rd_data_fifo[9][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[9][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[9][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[9][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}   <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd10 : {rd_data_fifo[10][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[10][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[10][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[10][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd11 : {rd_data_fifo[11][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[11][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[11][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[11][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd12 : {rd_data_fifo[12][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[12][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[12][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[12][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd13 : {rd_data_fifo[13][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[13][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[13][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[13][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd14 : {rd_data_fifo[14][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[14][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[14][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[14][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd15 : {rd_data_fifo[15][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[15][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[15][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[15][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd16 : {rd_data_fifo[16][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[16][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[16][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[16][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd17 : {rd_data_fifo[17][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[17][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[17][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[17][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd18 : {rd_data_fifo[18][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[18][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[18][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[18][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd19 : {rd_data_fifo[19][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[19][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[19][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[19][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd20 : {rd_data_fifo[20][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[20][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[20][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[20][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd21 : {rd_data_fifo[21][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[21][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[21][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[21][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd22 : {rd_data_fifo[22][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[22][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[22][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[22][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd23 : {rd_data_fifo[23][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[23][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[23][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[23][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd24 : {rd_data_fifo[24][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[24][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[24][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[24][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd25 : {rd_data_fifo[25][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[25][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[25][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[25][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd26 : {rd_data_fifo[26][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[26][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[26][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[26][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd27 : {rd_data_fifo[27][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[27][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[27][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[27][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd28 : {rd_data_fifo[28][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[28][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[28][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[28][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd29 : {rd_data_fifo[29][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[29][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[29][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[29][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd30 : {rd_data_fifo[30][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[30][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[30][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[30][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd31 : {rd_data_fifo[31][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[31][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[31][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[31][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd32 : {rd_data_fifo[32][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[32][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[32][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[32][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd33 : {rd_data_fifo[33][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[33][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[33][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[33][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd34 : {rd_data_fifo[34][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[34][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[34][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[34][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd35 : {rd_data_fifo[35][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[35][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[35][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[35][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd36 : {rd_data_fifo[36][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[36][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[36][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[36][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd37 : {rd_data_fifo[37][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[37][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[37][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[37][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd38 : {rd_data_fifo[38][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[38][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[38][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[38][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd39 : {rd_data_fifo[39][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[39][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[39][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[39][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd40 : {rd_data_fifo[40][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[40][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[40][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[40][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd41 : {rd_data_fifo[41][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[41][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[41][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[41][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd42 : {rd_data_fifo[42][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[42][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[42][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[42][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd43 : {rd_data_fifo[43][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[43][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[43][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[43][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd44 : {rd_data_fifo[44][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[44][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[44][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[44][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd45 : {rd_data_fifo[45][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[45][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[45][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[45][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd46 : {rd_data_fifo[46][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[46][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[46][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[46][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd47 : {rd_data_fifo[47][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[47][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[47][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[47][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd48 : {rd_data_fifo[48][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[48][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[48][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[48][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd49 : {rd_data_fifo[49][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[49][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[49][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[49][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd50 : {rd_data_fifo[50][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[50][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[50][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[50][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd51 : {rd_data_fifo[51][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[51][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[51][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[51][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd52 : {rd_data_fifo[52][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[52][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[52][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[52][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd53 : {rd_data_fifo[53][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[53][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[53][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[53][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd54 : {rd_data_fifo[54][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[54][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[54][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[54][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd55 : {rd_data_fifo[55][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[55][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[55][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[55][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd56 : {rd_data_fifo[56][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[56][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[56][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[56][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd57 : {rd_data_fifo[57][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[57][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[57][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[57][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd58 : {rd_data_fifo[58][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[58][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[58][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[58][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd59 : {rd_data_fifo[59][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[59][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[59][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[59][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd60 : {rd_data_fifo[60][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[60][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[60][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[60][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd61 : {rd_data_fifo[61][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[61][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[61][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[61][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd62 : {rd_data_fifo[62][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[62][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[62][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[62][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
      6'd63 : {rd_data_fifo[63][DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[63][DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[63][DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],rd_data_fifo[63][DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]}  <= {ddr_dq[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1],rd_data_piece_2[1],rd_data_piece_1[1],rd_data_piece_0[1]};
	endcase
    end
end

`ifdef ddr3_ip_inst_DQS_WIDTH_2
`else
//================================================================
always @ (posedge ddr_dqs_modified[2] or negedge rst_n) begin
    if (!rst_n) begin
       rd_data_cnt[2]                 <= 0;
    end
    else begin
	    if (mem_rd_cmd_lat)
          rd_data_cnt[2]              <= rd_data_cnt[2] + 1;
    end
end

always @ (posedge ddr_dqs_modified[2] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_0[2] <= 0;
      rd_data_piece_2[2] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[2][0] == 0)
             rd_data_piece_0[2] <= ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
         else if (rd_data_cnt[2][0] == 1)
             rd_data_piece_2[2] <= ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
   end
end

always @ (negedge ddr_dqs_modified[2] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_1[2] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[2][0] == 1)
             rd_data_piece_1[2] <= ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2];
   end
end

// Write a data pair into the fifo
always @ (negedge ddr_dqs_modified[2] or negedge rst_n) begin
    if (!rst_n) begin
	    rdf_wr_addr[2]       <= 0;
    end
    else begin
	if (mem_rd_cmd_lat) begin
     if (rd_data_cnt[2][0] == 0)
	    rdf_wr_addr[2]       <= rdf_wr_addr[2] + 1;
	end

	case (rdf_wr_addr[2])
      6'd0  : {rd_data_fifo[0][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[0][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[0][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[0][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}   <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd1  : {rd_data_fifo[1][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[1][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[1][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[1][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}   <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd2  : {rd_data_fifo[2][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[2][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[2][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[2][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}   <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd3  : {rd_data_fifo[3][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[3][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[3][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[3][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}   <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd4  : {rd_data_fifo[4][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[4][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[4][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[4][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}   <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd5  : {rd_data_fifo[5][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[5][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[5][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[5][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}   <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd6  : {rd_data_fifo[6][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[6][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[6][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[6][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}   <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd7  : {rd_data_fifo[7][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[7][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[7][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[7][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}   <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd8  : {rd_data_fifo[8][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[8][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[8][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[8][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}   <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd9  : {rd_data_fifo[9][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[9][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[9][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[9][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}   <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd10 : {rd_data_fifo[10][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[10][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[10][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[10][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd11 : {rd_data_fifo[11][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[11][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[11][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[11][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd12 : {rd_data_fifo[12][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[12][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[12][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[12][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd13 : {rd_data_fifo[13][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[13][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[13][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[13][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd14 : {rd_data_fifo[14][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[14][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[14][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[14][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd15 : {rd_data_fifo[15][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[15][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[15][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[15][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd16 : {rd_data_fifo[16][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[16][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[16][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[16][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd17 : {rd_data_fifo[17][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[17][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[17][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[17][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd18 : {rd_data_fifo[18][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[18][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[18][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[18][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd19 : {rd_data_fifo[19][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[19][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[19][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[19][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd20 : {rd_data_fifo[20][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[20][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[20][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[20][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd21 : {rd_data_fifo[21][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[21][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[21][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[21][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd22 : {rd_data_fifo[22][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[22][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[22][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[22][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd23 : {rd_data_fifo[23][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[23][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[23][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[23][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd24 : {rd_data_fifo[24][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[24][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[24][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[24][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd25 : {rd_data_fifo[25][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[25][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[25][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[25][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd26 : {rd_data_fifo[26][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[26][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[26][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[26][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd27 : {rd_data_fifo[27][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[27][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[27][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[27][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd28 : {rd_data_fifo[28][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[28][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[28][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[28][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd29 : {rd_data_fifo[29][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[29][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[29][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[29][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd30 : {rd_data_fifo[30][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[30][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[30][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[30][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd31 : {rd_data_fifo[31][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[31][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[31][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[31][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd32 : {rd_data_fifo[32][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[32][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[32][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[32][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd33 : {rd_data_fifo[33][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[33][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[33][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[33][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd34 : {rd_data_fifo[34][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[34][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[34][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[34][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd35 : {rd_data_fifo[35][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[35][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[35][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[35][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd36 : {rd_data_fifo[36][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[36][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[36][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[36][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd37 : {rd_data_fifo[37][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[37][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[37][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[37][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd38 : {rd_data_fifo[38][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[38][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[38][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[38][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd39 : {rd_data_fifo[39][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[39][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[39][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[39][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd40 : {rd_data_fifo[40][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[40][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[40][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[40][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd41 : {rd_data_fifo[41][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[41][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[41][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[41][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd42 : {rd_data_fifo[42][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[42][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[42][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[42][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd43 : {rd_data_fifo[43][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[43][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[43][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[43][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd44 : {rd_data_fifo[44][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[44][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[44][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[44][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd45 : {rd_data_fifo[45][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[45][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[45][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[45][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd46 : {rd_data_fifo[46][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[46][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[46][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[46][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd47 : {rd_data_fifo[47][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[47][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[47][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[47][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd48 : {rd_data_fifo[48][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[48][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[48][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[48][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd49 : {rd_data_fifo[49][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[49][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[49][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[49][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd50 : {rd_data_fifo[50][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[50][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[50][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[50][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd51 : {rd_data_fifo[51][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[51][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[51][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[51][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd52 : {rd_data_fifo[52][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[52][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[52][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[52][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd53 : {rd_data_fifo[53][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[53][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[53][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[53][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd54 : {rd_data_fifo[54][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[54][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[54][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[54][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd55 : {rd_data_fifo[55][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[55][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[55][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[55][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd56 : {rd_data_fifo[56][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[56][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[56][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[56][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd57 : {rd_data_fifo[57][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[57][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[57][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[57][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd58 : {rd_data_fifo[58][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[58][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[58][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[58][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd59 : {rd_data_fifo[59][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[59][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[59][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[59][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd60 : {rd_data_fifo[60][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[60][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[60][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[60][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd61 : {rd_data_fifo[61][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[61][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[61][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[61][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd62 : {rd_data_fifo[62][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[62][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[62][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[62][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
      6'd63 : {rd_data_fifo[63][DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[63][DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[63][DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],rd_data_fifo[63][DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]}  <= {ddr_dq[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2],rd_data_piece_2[2],rd_data_piece_1[2],rd_data_piece_0[2]};
	endcase
    end
end

`ifdef ddr3_ip_inst_DQS_WIDTH_3
`else
//================================================================
always @ (posedge ddr_dqs_modified[3] or negedge rst_n) begin
    if (!rst_n) begin
       rd_data_cnt[3]                 <= 0;
    end
    else begin
	    if (mem_rd_cmd_lat)
          rd_data_cnt[3]              <= rd_data_cnt[3] + 1;
    end
end

always @ (posedge ddr_dqs_modified[3] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_0[3] <= 0;
      rd_data_piece_2[3] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[3][0] == 0)
             rd_data_piece_0[3] <= ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
         else if (rd_data_cnt[3][0] == 1)
             rd_data_piece_2[3] <= ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
   end
end

always @ (negedge ddr_dqs_modified[3] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_1[3] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[3][0] == 1)
             rd_data_piece_1[3] <= ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3];
   end
end

// Write a data pair into the fifo
always @ (negedge ddr_dqs_modified[3] or negedge rst_n) begin
    if (!rst_n) begin
	    rdf_wr_addr[3]       <= 0;
    end
    else begin
	if (mem_rd_cmd_lat) begin
     if (rd_data_cnt[3][0] == 0)
	    rdf_wr_addr[3]       <= rdf_wr_addr[3] + 1;
	end

	case (rdf_wr_addr[3])
      6'd0  : {rd_data_fifo[0][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[0][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[0][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[0][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}   <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd1  : {rd_data_fifo[1][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[1][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[1][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[1][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}   <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd2  : {rd_data_fifo[2][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[2][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[2][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[2][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}   <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd3  : {rd_data_fifo[3][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[3][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[3][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[3][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}   <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd4  : {rd_data_fifo[4][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[4][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[4][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[4][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}   <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd5  : {rd_data_fifo[5][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[5][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[5][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[5][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}   <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd6  : {rd_data_fifo[6][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[6][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[6][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[6][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}   <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd7  : {rd_data_fifo[7][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[7][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[7][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[7][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}   <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd8  : {rd_data_fifo[8][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[8][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[8][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[8][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}   <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd9  : {rd_data_fifo[9][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[9][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[9][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[9][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}   <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd10 : {rd_data_fifo[10][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[10][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[10][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[10][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd11 : {rd_data_fifo[11][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[11][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[11][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[11][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd12 : {rd_data_fifo[12][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[12][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[12][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[12][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd13 : {rd_data_fifo[13][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[13][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[13][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[13][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd14 : {rd_data_fifo[14][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[14][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[14][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[14][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd15 : {rd_data_fifo[15][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[15][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[15][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[15][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd16 : {rd_data_fifo[16][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[16][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[16][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[16][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd17 : {rd_data_fifo[17][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[17][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[17][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[17][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd18 : {rd_data_fifo[18][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[18][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[18][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[18][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd19 : {rd_data_fifo[19][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[19][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[19][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[19][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd20 : {rd_data_fifo[20][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[20][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[20][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[20][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd21 : {rd_data_fifo[21][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[21][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[21][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[21][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd22 : {rd_data_fifo[22][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[22][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[22][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[22][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd23 : {rd_data_fifo[23][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[23][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[23][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[23][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd24 : {rd_data_fifo[24][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[24][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[24][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[24][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd25 : {rd_data_fifo[25][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[25][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[25][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[25][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd26 : {rd_data_fifo[26][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[26][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[26][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[26][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd27 : {rd_data_fifo[27][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[27][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[27][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[27][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd28 : {rd_data_fifo[28][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[28][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[28][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[28][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd29 : {rd_data_fifo[29][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[29][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[29][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[29][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd30 : {rd_data_fifo[30][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[30][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[30][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[30][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd31 : {rd_data_fifo[31][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[31][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[31][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[31][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd32 : {rd_data_fifo[32][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[32][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[32][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[32][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd33 : {rd_data_fifo[33][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[33][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[33][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[33][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd34 : {rd_data_fifo[34][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[34][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[34][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[34][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd35 : {rd_data_fifo[35][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[35][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[35][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[35][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd36 : {rd_data_fifo[36][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[36][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[36][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[36][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd37 : {rd_data_fifo[37][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[37][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[37][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[37][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd38 : {rd_data_fifo[38][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[38][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[38][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[38][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd39 : {rd_data_fifo[39][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[39][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[39][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[39][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd40 : {rd_data_fifo[40][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[40][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[40][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[40][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd41 : {rd_data_fifo[41][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[41][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[41][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[41][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd42 : {rd_data_fifo[42][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[42][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[42][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[42][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd43 : {rd_data_fifo[43][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[43][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[43][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[43][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd44 : {rd_data_fifo[44][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[44][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[44][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[44][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd45 : {rd_data_fifo[45][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[45][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[45][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[45][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd46 : {rd_data_fifo[46][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[46][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[46][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[46][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd47 : {rd_data_fifo[47][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[47][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[47][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[47][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd48 : {rd_data_fifo[48][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[48][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[48][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[48][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd49 : {rd_data_fifo[49][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[49][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[49][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[49][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd50 : {rd_data_fifo[50][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[50][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[50][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[50][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd51 : {rd_data_fifo[51][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[51][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[51][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[51][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd52 : {rd_data_fifo[52][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[52][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[52][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[52][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd53 : {rd_data_fifo[53][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[53][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[53][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[53][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd54 : {rd_data_fifo[54][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[54][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[54][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[54][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd55 : {rd_data_fifo[55][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[55][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[55][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[55][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd56 : {rd_data_fifo[56][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[56][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[56][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[56][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd57 : {rd_data_fifo[57][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[57][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[57][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[57][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd58 : {rd_data_fifo[58][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[58][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[58][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[58][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd59 : {rd_data_fifo[59][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[59][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[59][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[59][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd60 : {rd_data_fifo[60][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[60][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[60][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[60][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd61 : {rd_data_fifo[61][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[61][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[61][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[61][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd62 : {rd_data_fifo[62][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[62][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[62][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[62][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
      6'd63 : {rd_data_fifo[63][DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[63][DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[63][DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],rd_data_fifo[63][DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]}  <= {ddr_dq[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3],rd_data_piece_2[3],rd_data_piece_1[3],rd_data_piece_0[3]};
	endcase
    end
end

`ifdef ddr3_ip_inst_DQS_WIDTH_4
`else
//================================================================
always @ (posedge ddr_dqs_modified[4] or negedge rst_n) begin
    if (!rst_n) begin
       rd_data_cnt[4]                 <= 0;
    end
    else begin
	    if (mem_rd_cmd_lat)
          rd_data_cnt[4]              <= rd_data_cnt[4] + 1;
    end
end

always @ (posedge ddr_dqs_modified[4] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_0[4] <= 0;
      rd_data_piece_2[4] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[4][0] == 0)
             rd_data_piece_0[4] <= ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
         else if (rd_data_cnt[4][0] == 1)
             rd_data_piece_2[4] <= ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
   end
end

always @ (negedge ddr_dqs_modified[4] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_1[4] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[4][0] == 1)
             rd_data_piece_1[4] <= ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4];
   end
end

// Write a data pair into the fifo
always @ (negedge ddr_dqs_modified[4] or negedge rst_n) begin
    if (!rst_n) begin
	    rdf_wr_addr[4]       <= 0;
    end
    else begin
	if (mem_rd_cmd_lat) begin
     if (rd_data_cnt[4][0] == 0)
	    rdf_wr_addr[4]       <= rdf_wr_addr[4] + 1;
	end

	case (rdf_wr_addr[4])
      6'd0  : {rd_data_fifo[0][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[0][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[0][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[0][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}   <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd1  : {rd_data_fifo[1][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[1][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[1][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[1][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}   <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd2  : {rd_data_fifo[2][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[2][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[2][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[2][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}   <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd3  : {rd_data_fifo[3][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[3][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[3][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[3][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}   <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd4  : {rd_data_fifo[4][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[4][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[4][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[4][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}   <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd5  : {rd_data_fifo[5][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[5][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[5][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[5][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}   <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd6  : {rd_data_fifo[6][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[6][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[6][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[6][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}   <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd7  : {rd_data_fifo[7][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[7][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[7][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[7][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}   <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd8  : {rd_data_fifo[8][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[8][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[8][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[8][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}   <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd9  : {rd_data_fifo[9][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[9][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[9][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[9][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}   <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd10 : {rd_data_fifo[10][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[10][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[10][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[10][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd11 : {rd_data_fifo[11][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[11][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[11][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[11][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd12 : {rd_data_fifo[12][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[12][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[12][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[12][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd13 : {rd_data_fifo[13][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[13][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[13][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[13][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd14 : {rd_data_fifo[14][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[14][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[14][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[14][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd15 : {rd_data_fifo[15][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[15][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[15][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[15][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd16 : {rd_data_fifo[16][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[16][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[16][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[16][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd17 : {rd_data_fifo[17][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[17][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[17][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[17][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd18 : {rd_data_fifo[18][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[18][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[18][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[18][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd19 : {rd_data_fifo[19][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[19][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[19][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[19][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd20 : {rd_data_fifo[20][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[20][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[20][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[20][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd21 : {rd_data_fifo[21][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[21][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[21][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[21][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd22 : {rd_data_fifo[22][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[22][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[22][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[22][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd23 : {rd_data_fifo[23][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[23][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[23][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[23][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd24 : {rd_data_fifo[24][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[24][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[24][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[24][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd25 : {rd_data_fifo[25][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[25][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[25][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[25][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd26 : {rd_data_fifo[26][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[26][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[26][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[26][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd27 : {rd_data_fifo[27][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[27][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[27][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[27][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd28 : {rd_data_fifo[28][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[28][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[28][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[28][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd29 : {rd_data_fifo[29][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[29][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[29][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[29][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd30 : {rd_data_fifo[30][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[30][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[30][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[30][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd31 : {rd_data_fifo[31][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[31][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[31][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[31][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd32 : {rd_data_fifo[32][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[32][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[32][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[32][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd33 : {rd_data_fifo[33][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[33][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[33][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[33][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd34 : {rd_data_fifo[34][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[34][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[34][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[34][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd35 : {rd_data_fifo[35][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[35][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[35][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[35][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd36 : {rd_data_fifo[36][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[36][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[36][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[36][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd37 : {rd_data_fifo[37][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[37][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[37][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[37][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd38 : {rd_data_fifo[38][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[38][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[38][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[38][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd39 : {rd_data_fifo[39][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[39][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[39][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[39][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd40 : {rd_data_fifo[40][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[40][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[40][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[40][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd41 : {rd_data_fifo[41][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[41][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[41][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[41][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd42 : {rd_data_fifo[42][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[42][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[42][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[42][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd43 : {rd_data_fifo[43][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[43][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[43][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[43][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd44 : {rd_data_fifo[44][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[44][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[44][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[44][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd45 : {rd_data_fifo[45][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[45][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[45][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[45][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd46 : {rd_data_fifo[46][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[46][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[46][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[46][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd47 : {rd_data_fifo[47][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[47][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[47][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[47][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd48 : {rd_data_fifo[48][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[48][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[48][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[48][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd49 : {rd_data_fifo[49][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[49][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[49][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[49][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd50 : {rd_data_fifo[50][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[50][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[50][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[50][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd51 : {rd_data_fifo[51][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[51][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[51][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[51][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd52 : {rd_data_fifo[52][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[52][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[52][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[52][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd53 : {rd_data_fifo[53][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[53][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[53][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[53][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd54 : {rd_data_fifo[54][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[54][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[54][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[54][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd55 : {rd_data_fifo[55][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[55][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[55][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[55][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd56 : {rd_data_fifo[56][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[56][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[56][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[56][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd57 : {rd_data_fifo[57][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[57][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[57][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[57][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd58 : {rd_data_fifo[58][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[58][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[58][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[58][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd59 : {rd_data_fifo[59][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[59][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[59][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[59][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd60 : {rd_data_fifo[60][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[60][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[60][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[60][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd61 : {rd_data_fifo[61][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[61][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[61][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[61][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd62 : {rd_data_fifo[62][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[62][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[62][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[62][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
      6'd63 : {rd_data_fifo[63][DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[63][DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[63][DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],rd_data_fifo[63][DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]}  <= {ddr_dq[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4],rd_data_piece_2[4],rd_data_piece_1[4],rd_data_piece_0[4]};
	endcase
    end
end

`ifdef ddr3_ip_inst_DQS_WIDTH_5
`else
//================================================================

always @ (posedge ddr_dqs_modified[5] or negedge rst_n) begin
    if (!rst_n) begin
       rd_data_cnt[5]                 <= 0;
    end
    else begin
	    if (mem_rd_cmd_lat)
          rd_data_cnt[5]              <= rd_data_cnt[5] + 1;
    end
end

always @ (posedge ddr_dqs_modified[5] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_0[5] <= 0;
      rd_data_piece_2[5] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[5][0] == 0)
             rd_data_piece_0[5] <= ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
         else if (rd_data_cnt[5][0] == 1)
             rd_data_piece_2[5] <= ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
   end
end

always @ (negedge ddr_dqs_modified[5] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_1[5] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[5][0] == 1)
             rd_data_piece_1[5] <= ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5];
   end
end

// Write a data pair into the fifo
always @ (negedge ddr_dqs_modified[5] or negedge rst_n) begin
    if (!rst_n) begin
	    rdf_wr_addr[5]       <= 0;
    end
    else begin
	if (mem_rd_cmd_lat) begin
     if (rd_data_cnt[5][0] == 0)
	    rdf_wr_addr[5]       <= rdf_wr_addr[5] + 1;
	end

	case (rdf_wr_addr[5])
      6'd0  : {rd_data_fifo[0][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[0][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[0][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[0][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}   <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd1  : {rd_data_fifo[1][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[1][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[1][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[1][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}   <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd2  : {rd_data_fifo[2][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[2][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[2][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[2][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}   <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd3  : {rd_data_fifo[3][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[3][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[3][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[3][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}   <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd4  : {rd_data_fifo[4][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[4][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[4][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[4][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}   <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd5  : {rd_data_fifo[5][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[5][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[5][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[5][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}   <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd6  : {rd_data_fifo[6][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[6][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[6][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[6][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}   <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd7  : {rd_data_fifo[7][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[7][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[7][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[7][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}   <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd8  : {rd_data_fifo[8][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[8][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[8][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[8][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}   <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd9  : {rd_data_fifo[9][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[9][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[9][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[9][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}   <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd10 : {rd_data_fifo[10][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[10][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[10][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[10][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd11 : {rd_data_fifo[11][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[11][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[11][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[11][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd12 : {rd_data_fifo[12][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[12][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[12][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[12][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd13 : {rd_data_fifo[13][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[13][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[13][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[13][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd14 : {rd_data_fifo[14][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[14][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[14][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[14][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd15 : {rd_data_fifo[15][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[15][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[15][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[15][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd16 : {rd_data_fifo[16][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[16][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[16][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[16][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd17 : {rd_data_fifo[17][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[17][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[17][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[17][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd18 : {rd_data_fifo[18][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[18][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[18][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[18][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd19 : {rd_data_fifo[19][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[19][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[19][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[19][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd20 : {rd_data_fifo[20][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[20][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[20][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[20][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd21 : {rd_data_fifo[21][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[21][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[21][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[21][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd22 : {rd_data_fifo[22][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[22][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[22][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[22][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd23 : {rd_data_fifo[23][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[23][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[23][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[23][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd24 : {rd_data_fifo[24][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[24][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[24][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[24][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd25 : {rd_data_fifo[25][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[25][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[25][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[25][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd26 : {rd_data_fifo[26][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[26][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[26][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[26][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd27 : {rd_data_fifo[27][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[27][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[27][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[27][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd28 : {rd_data_fifo[28][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[28][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[28][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[28][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd29 : {rd_data_fifo[29][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[29][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[29][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[29][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd30 : {rd_data_fifo[30][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[30][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[30][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[30][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd31 : {rd_data_fifo[31][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[31][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[31][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[31][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd32 : {rd_data_fifo[32][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[32][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[32][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[32][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd33 : {rd_data_fifo[33][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[33][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[33][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[33][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd34 : {rd_data_fifo[34][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[34][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[34][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[34][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd35 : {rd_data_fifo[35][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[35][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[35][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[35][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd36 : {rd_data_fifo[36][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[36][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[36][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[36][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd37 : {rd_data_fifo[37][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[37][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[37][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[37][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd38 : {rd_data_fifo[38][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[38][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[38][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[38][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd39 : {rd_data_fifo[39][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[39][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[39][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[39][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd40 : {rd_data_fifo[40][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[40][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[40][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[40][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd41 : {rd_data_fifo[41][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[41][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[41][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[41][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd42 : {rd_data_fifo[42][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[42][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[42][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[42][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd43 : {rd_data_fifo[43][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[43][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[43][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[43][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd44 : {rd_data_fifo[44][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[44][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[44][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[44][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd45 : {rd_data_fifo[45][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[45][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[45][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[45][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd46 : {rd_data_fifo[46][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[46][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[46][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[46][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd47 : {rd_data_fifo[47][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[47][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[47][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[47][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd48 : {rd_data_fifo[48][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[48][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[48][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[48][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd49 : {rd_data_fifo[49][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[49][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[49][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[49][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd50 : {rd_data_fifo[50][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[50][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[50][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[50][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd51 : {rd_data_fifo[51][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[51][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[51][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[51][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd52 : {rd_data_fifo[52][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[52][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[52][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[52][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd53 : {rd_data_fifo[53][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[53][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[53][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[53][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd54 : {rd_data_fifo[54][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[54][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[54][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[54][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd55 : {rd_data_fifo[55][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[55][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[55][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[55][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd56 : {rd_data_fifo[56][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[56][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[56][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[56][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd57 : {rd_data_fifo[57][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[57][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[57][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[57][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd58 : {rd_data_fifo[58][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[58][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[58][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[58][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd59 : {rd_data_fifo[59][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[59][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[59][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[59][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd60 : {rd_data_fifo[60][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[60][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[60][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[60][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd61 : {rd_data_fifo[61][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[61][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[61][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[61][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd62 : {rd_data_fifo[62][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[62][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[62][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[62][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
      6'd63 : {rd_data_fifo[63][DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[63][DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[63][DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],rd_data_fifo[63][DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]}  <= {ddr_dq[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5],rd_data_piece_2[5],rd_data_piece_1[5],rd_data_piece_0[5]};
	endcase
    end
end

`ifdef ddr3_ip_inst_DQS_WIDTH_6
`else
//================================================================

always @ (posedge ddr_dqs_modified[6] or negedge rst_n) begin
    if (!rst_n) begin
       rd_data_cnt[6]                 <= 0;
    end
    else begin
	    if (mem_rd_cmd_lat)
          rd_data_cnt[6]              <= rd_data_cnt[6] + 1;
    end
end

always @ (posedge ddr_dqs_modified[6] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_0[6] <= 0;
      rd_data_piece_2[6] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[6][0] == 0)
             rd_data_piece_0[6] <= ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
         else if (rd_data_cnt[6][0] == 1)
             rd_data_piece_2[6] <= ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
   end
end

always @ (negedge ddr_dqs_modified[6] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_1[6] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[6][0] == 1)
             rd_data_piece_1[6] <= ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6];
   end
end

// Write a data pair into the fifo
always @ (negedge ddr_dqs_modified[6] or negedge rst_n) begin
    if (!rst_n) begin
	    rdf_wr_addr[6]       <= 0;
    end
    else begin
	if (mem_rd_cmd_lat) begin
     if (rd_data_cnt[6][0] == 0)
	    rdf_wr_addr[6]       <= rdf_wr_addr[6] + 1;
	end

	case (rdf_wr_addr[6])
      6'd0  : {rd_data_fifo[0][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[0][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[0][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[0][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}   <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd1  : {rd_data_fifo[1][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[1][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[1][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[1][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}   <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd2  : {rd_data_fifo[2][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[2][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[2][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[2][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}   <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd3  : {rd_data_fifo[3][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[3][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[3][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[3][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}   <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd4  : {rd_data_fifo[4][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[4][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[4][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[4][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}   <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd5  : {rd_data_fifo[5][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[5][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[5][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[5][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}   <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd6  : {rd_data_fifo[6][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[6][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[6][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[6][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}   <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd7  : {rd_data_fifo[7][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[7][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[7][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[7][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}   <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd8  : {rd_data_fifo[8][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[8][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[8][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[8][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}   <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd9  : {rd_data_fifo[9][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[9][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[9][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[9][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}   <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd10 : {rd_data_fifo[10][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[10][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[10][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[10][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd11 : {rd_data_fifo[11][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[11][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[11][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[11][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd12 : {rd_data_fifo[12][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[12][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[12][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[12][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd13 : {rd_data_fifo[13][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[13][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[13][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[13][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd14 : {rd_data_fifo[14][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[14][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[14][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[14][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd15 : {rd_data_fifo[15][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[15][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[15][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[15][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd16 : {rd_data_fifo[16][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[16][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[16][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[16][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd17 : {rd_data_fifo[17][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[17][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[17][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[17][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd18 : {rd_data_fifo[18][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[18][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[18][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[18][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd19 : {rd_data_fifo[19][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[19][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[19][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[19][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd20 : {rd_data_fifo[20][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[20][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[20][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[20][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd21 : {rd_data_fifo[21][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[21][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[21][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[21][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd22 : {rd_data_fifo[22][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[22][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[22][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[22][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd23 : {rd_data_fifo[23][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[23][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[23][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[23][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd24 : {rd_data_fifo[24][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[24][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[24][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[24][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd25 : {rd_data_fifo[25][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[25][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[25][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[25][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd26 : {rd_data_fifo[26][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[26][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[26][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[26][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd27 : {rd_data_fifo[27][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[27][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[27][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[27][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd28 : {rd_data_fifo[28][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[28][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[28][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[28][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd29 : {rd_data_fifo[29][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[29][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[29][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[29][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd30 : {rd_data_fifo[30][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[30][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[30][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[30][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd31 : {rd_data_fifo[31][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[31][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[31][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[31][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd32 : {rd_data_fifo[32][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[32][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[32][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[32][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd33 : {rd_data_fifo[33][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[33][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[33][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[33][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd34 : {rd_data_fifo[34][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[34][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[34][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[34][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd35 : {rd_data_fifo[35][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[35][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[35][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[35][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd36 : {rd_data_fifo[36][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[36][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[36][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[36][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd37 : {rd_data_fifo[37][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[37][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[37][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[37][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd38 : {rd_data_fifo[38][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[38][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[38][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[38][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd39 : {rd_data_fifo[39][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[39][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[39][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[39][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd40 : {rd_data_fifo[40][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[40][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[40][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[40][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd41 : {rd_data_fifo[41][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[41][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[41][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[41][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd42 : {rd_data_fifo[42][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[42][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[42][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[42][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd43 : {rd_data_fifo[43][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[43][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[43][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[43][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd44 : {rd_data_fifo[44][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[44][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[44][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[44][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd45 : {rd_data_fifo[45][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[45][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[45][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[45][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd46 : {rd_data_fifo[46][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[46][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[46][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[46][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd47 : {rd_data_fifo[47][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[47][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[47][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[47][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd48 : {rd_data_fifo[48][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[48][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[48][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[48][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd49 : {rd_data_fifo[49][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[49][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[49][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[49][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd50 : {rd_data_fifo[50][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[50][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[50][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[50][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd51 : {rd_data_fifo[51][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[51][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[51][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[51][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd52 : {rd_data_fifo[52][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[52][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[52][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[52][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd53 : {rd_data_fifo[53][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[53][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[53][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[53][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd54 : {rd_data_fifo[54][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[54][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[54][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[54][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd55 : {rd_data_fifo[55][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[55][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[55][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[55][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd56 : {rd_data_fifo[56][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[56][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[56][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[56][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd57 : {rd_data_fifo[57][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[57][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[57][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[57][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd58 : {rd_data_fifo[58][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[58][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[58][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[58][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd59 : {rd_data_fifo[59][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[59][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[59][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[59][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd60 : {rd_data_fifo[60][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[60][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[60][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[60][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd61 : {rd_data_fifo[61][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[61][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[61][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[61][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd62 : {rd_data_fifo[62][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[62][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[62][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[62][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
      6'd63 : {rd_data_fifo[63][DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[63][DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[63][DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],rd_data_fifo[63][DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]}  <= {ddr_dq[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6],rd_data_piece_2[6],rd_data_piece_1[6],rd_data_piece_0[6]};
	endcase
    end
end

`ifdef ddr3_ip_inst_DQS_WIDTH_7
`else
//================================================================

always @ (posedge ddr_dqs_modified[7] or negedge rst_n) begin
    if (!rst_n) begin
       rd_data_cnt[7]                 <= 0;
    end
    else begin
	    if (mem_rd_cmd_lat)
          rd_data_cnt[7]              <= rd_data_cnt[7] + 1;
    end
end

always @ (posedge ddr_dqs_modified[7] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_0[7] <= 0;
      rd_data_piece_2[7] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[7][0] == 0)
             rd_data_piece_0[7] <= ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
         else if (rd_data_cnt[7][0] == 1)
             rd_data_piece_2[7] <= ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
   end
end

always @ (negedge ddr_dqs_modified[7] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_1[7] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[7][0] == 1)
             rd_data_piece_1[7] <= ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7];
   end
end

// Write a data pair into the fifo
always @ (negedge ddr_dqs_modified[7] or negedge rst_n) begin
    if (!rst_n) begin
	    rdf_wr_addr[7]       <= 0;
    end
    else begin
	if (mem_rd_cmd_lat) begin
     if (rd_data_cnt[7][0] == 0)
	    rdf_wr_addr[7]       <= rdf_wr_addr[7] + 1;
	end

	case (rdf_wr_addr[7])
      6'd0  : {rd_data_fifo[0][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[0][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[0][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[0][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}   <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd1  : {rd_data_fifo[1][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[1][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[1][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[1][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}   <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd2  : {rd_data_fifo[2][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[2][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[2][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[2][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}   <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd3  : {rd_data_fifo[3][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[3][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[3][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[3][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}   <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd4  : {rd_data_fifo[4][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[4][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[4][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[4][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}   <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd5  : {rd_data_fifo[5][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[5][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[5][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[5][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}   <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd6  : {rd_data_fifo[6][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[6][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[6][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[6][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}   <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd7  : {rd_data_fifo[7][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[7][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[7][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[7][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}   <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd8  : {rd_data_fifo[8][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[8][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[8][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[8][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}   <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd9  : {rd_data_fifo[9][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[9][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[9][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[9][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}   <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd10 : {rd_data_fifo[10][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[10][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[10][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[10][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd11 : {rd_data_fifo[11][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[11][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[11][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[11][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd12 : {rd_data_fifo[12][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[12][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[12][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[12][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd13 : {rd_data_fifo[13][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[13][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[13][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[13][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd14 : {rd_data_fifo[14][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[14][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[14][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[14][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd15 : {rd_data_fifo[15][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[15][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[15][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[15][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd16 : {rd_data_fifo[16][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[16][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[16][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[16][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd17 : {rd_data_fifo[17][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[17][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[17][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[17][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd18 : {rd_data_fifo[18][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[18][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[18][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[18][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd19 : {rd_data_fifo[19][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[19][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[19][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[19][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd20 : {rd_data_fifo[20][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[20][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[20][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[20][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd21 : {rd_data_fifo[21][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[21][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[21][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[21][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd22 : {rd_data_fifo[22][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[22][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[22][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[22][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd23 : {rd_data_fifo[23][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[23][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[23][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[23][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd24 : {rd_data_fifo[24][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[24][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[24][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[24][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd25 : {rd_data_fifo[25][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[25][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[25][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[25][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd26 : {rd_data_fifo[26][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[26][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[26][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[26][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd27 : {rd_data_fifo[27][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[27][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[27][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[27][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd28 : {rd_data_fifo[28][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[28][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[28][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[28][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd29 : {rd_data_fifo[29][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[29][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[29][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[29][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd30 : {rd_data_fifo[30][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[30][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[30][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[30][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd31 : {rd_data_fifo[31][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[31][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[31][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[31][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd32 : {rd_data_fifo[32][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[32][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[32][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[32][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd33 : {rd_data_fifo[33][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[33][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[33][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[33][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd34 : {rd_data_fifo[34][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[34][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[34][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[34][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd35 : {rd_data_fifo[35][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[35][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[35][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[35][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd36 : {rd_data_fifo[36][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[36][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[36][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[36][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd37 : {rd_data_fifo[37][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[37][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[37][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[37][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd38 : {rd_data_fifo[38][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[38][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[38][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[38][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd39 : {rd_data_fifo[39][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[39][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[39][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[39][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd40 : {rd_data_fifo[40][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[40][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[40][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[40][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd41 : {rd_data_fifo[41][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[41][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[41][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[41][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd42 : {rd_data_fifo[42][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[42][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[42][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[42][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd43 : {rd_data_fifo[43][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[43][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[43][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[43][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd44 : {rd_data_fifo[44][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[44][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[44][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[44][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd45 : {rd_data_fifo[45][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[45][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[45][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[45][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd46 : {rd_data_fifo[46][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[46][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[46][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[46][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd47 : {rd_data_fifo[47][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[47][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[47][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[47][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd48 : {rd_data_fifo[48][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[48][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[48][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[48][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd49 : {rd_data_fifo[49][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[49][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[49][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[49][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd50 : {rd_data_fifo[50][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[50][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[50][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[50][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd51 : {rd_data_fifo[51][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[51][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[51][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[51][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd52 : {rd_data_fifo[52][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[52][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[52][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[52][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd53 : {rd_data_fifo[53][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[53][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[53][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[53][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd54 : {rd_data_fifo[54][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[54][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[54][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[54][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd55 : {rd_data_fifo[55][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[55][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[55][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[55][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd56 : {rd_data_fifo[56][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[56][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[56][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[56][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd57 : {rd_data_fifo[57][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[57][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[57][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[57][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd58 : {rd_data_fifo[58][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[58][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[58][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[58][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd59 : {rd_data_fifo[59][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[59][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[59][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[59][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd60 : {rd_data_fifo[60][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[60][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[60][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[60][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd61 : {rd_data_fifo[61][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[61][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[61][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[61][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd62 : {rd_data_fifo[62][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[62][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[62][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[62][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
      6'd63 : {rd_data_fifo[63][DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[63][DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[63][DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],rd_data_fifo[63][DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]}  <= {ddr_dq[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7],rd_data_piece_2[7],rd_data_piece_1[7],rd_data_piece_0[7]};
	endcase
    end
end

`ifdef ddr3_ip_inst_DQS_WIDTH_8
`else
//================================================================

always @ (posedge ddr_dqs_modified[8] or negedge rst_n) begin
    if (!rst_n) begin
       rd_data_cnt[8]                 <= 0;
    end
    else begin
	    if (mem_rd_cmd_lat)
          rd_data_cnt[8]              <= rd_data_cnt[8] + 1;
    end
end

always @ (posedge ddr_dqs_modified[8] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_0[8] <= 0;
      rd_data_piece_2[8] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[8][0] == 0)
             rd_data_piece_0[8] <= ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
         else if (rd_data_cnt[8][0] == 1)
             rd_data_piece_2[8] <= ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
   end
end

always @ (negedge ddr_dqs_modified[8] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_1[8] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[8][0] == 1)
             rd_data_piece_1[8] <= ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
   end
end

// Write a data pair into the fifo
always @ (negedge ddr_dqs_modified[8] or negedge rst_n) begin
    if (!rst_n) begin
	    rdf_wr_addr[8]       <= 0;
    end
    else begin
	if (mem_rd_cmd_lat) begin
     if (rd_data_cnt[8][0] == 0)
	    rdf_wr_addr[8]       <= rdf_wr_addr[8] + 1;
	end

	case (rdf_wr_addr[8])
      6'd0  : {rd_data_fifo[0][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[0][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[0][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[0][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd1  : {rd_data_fifo[1][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[1][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[1][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[1][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd2  : {rd_data_fifo[2][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[2][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[2][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[2][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd3  : {rd_data_fifo[3][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[3][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[3][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[3][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd4  : {rd_data_fifo[4][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[4][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[4][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[4][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd5  : {rd_data_fifo[5][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[5][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[5][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[5][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd6  : {rd_data_fifo[6][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[6][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[6][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[6][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd7  : {rd_data_fifo[7][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[7][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[7][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[7][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd8  : {rd_data_fifo[8][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[8][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[8][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[8][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd9  : {rd_data_fifo[9][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[9][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[9][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[9][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd10 : {rd_data_fifo[10][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[10][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[10][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[10][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd11 : {rd_data_fifo[11][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[11][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[11][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[11][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd12 : {rd_data_fifo[12][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[12][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[12][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[12][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd13 : {rd_data_fifo[13][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[13][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[13][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[13][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd14 : {rd_data_fifo[14][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[14][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[14][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[14][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd15 : {rd_data_fifo[15][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[15][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[15][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[15][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd16 : {rd_data_fifo[16][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[16][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[16][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[16][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd17 : {rd_data_fifo[17][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[17][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[17][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[17][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd18 : {rd_data_fifo[18][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[18][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[18][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[18][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd19 : {rd_data_fifo[19][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[19][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[19][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[19][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd20 : {rd_data_fifo[20][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[20][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[20][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[20][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd21 : {rd_data_fifo[21][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[21][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[21][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[21][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd22 : {rd_data_fifo[22][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[22][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[22][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[22][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd23 : {rd_data_fifo[23][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[23][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[23][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[23][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd24 : {rd_data_fifo[24][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[24][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[24][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[24][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd25 : {rd_data_fifo[25][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[25][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[25][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[25][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd26 : {rd_data_fifo[26][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[26][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[26][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[26][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd27 : {rd_data_fifo[27][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[27][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[27][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[27][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd28 : {rd_data_fifo[28][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[28][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[28][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[28][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd29 : {rd_data_fifo[29][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[29][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[29][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[29][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd30 : {rd_data_fifo[30][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[30][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[30][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[30][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd31 : {rd_data_fifo[31][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[31][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[31][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[31][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd32 : {rd_data_fifo[32][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[32][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[32][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[32][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd33 : {rd_data_fifo[33][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[33][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[33][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[33][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd34 : {rd_data_fifo[34][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[34][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[34][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[34][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd35 : {rd_data_fifo[35][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[35][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[35][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[35][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd36 : {rd_data_fifo[36][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[36][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[36][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[36][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd37 : {rd_data_fifo[37][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[37][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[37][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[37][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd38 : {rd_data_fifo[38][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[38][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[38][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[38][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd39 : {rd_data_fifo[39][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[39][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[39][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[39][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd40 : {rd_data_fifo[40][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[40][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[40][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[40][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd41 : {rd_data_fifo[41][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[41][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[41][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[41][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd42 : {rd_data_fifo[42][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[42][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[42][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[42][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd43 : {rd_data_fifo[43][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[43][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[43][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[43][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd44 : {rd_data_fifo[44][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[44][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[44][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[44][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd45 : {rd_data_fifo[45][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[45][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[45][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[45][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd46 : {rd_data_fifo[46][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[46][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[46][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[46][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd47 : {rd_data_fifo[47][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[47][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[47][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[47][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd48 : {rd_data_fifo[48][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[48][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[48][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[48][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd49 : {rd_data_fifo[49][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[49][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[49][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[49][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd50 : {rd_data_fifo[50][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[50][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[50][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[50][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd51 : {rd_data_fifo[51][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[51][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[51][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[51][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd52 : {rd_data_fifo[52][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[52][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[52][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[52][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd53 : {rd_data_fifo[53][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[53][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[53][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[53][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd54 : {rd_data_fifo[54][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[54][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[54][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[54][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd55 : {rd_data_fifo[55][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[55][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[55][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[55][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd56 : {rd_data_fifo[56][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[56][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[56][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[56][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd57 : {rd_data_fifo[57][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[57][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[57][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[57][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd58 : {rd_data_fifo[58][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[58][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[58][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[58][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd59 : {rd_data_fifo[59][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[59][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[59][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[59][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd60 : {rd_data_fifo[60][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[60][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[60][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[60][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd61 : {rd_data_fifo[61][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[61][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[61][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[61][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd62 : {rd_data_fifo[62][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[62][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[62][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[62][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd63 : {rd_data_fifo[63][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[63][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[63][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[63][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
	endcase
    end
end

`ifdef ddr3_ip_inst_DQS_WIDTH_9
`else
//================================================================

always @ (posedge ddr_dqs_modified[8] or negedge rst_n) begin
    if (!rst_n) begin
       rd_data_cnt[8]                 <= 0;
    end
    else begin
	    if (mem_rd_cmd_lat)
          rd_data_cnt[8]              <= rd_data_cnt[8] + 1;
    end
end

always @ (posedge ddr_dqs_modified[8] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_0[8] <= 0;
      rd_data_piece_2[8] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[8][0] == 0)
             rd_data_piece_0[8] <= ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
         else if (rd_data_cnt[8][0] == 1)
             rd_data_piece_2[8] <= ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
   end
end

always @ (negedge ddr_dqs_modified[8] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_1[8] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[8][0] == 1)
             rd_data_piece_1[8] <= ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8];
   end
end

// Write a data pair into the fifo
always @ (negedge ddr_dqs_modified[8] or negedge rst_n) begin
    if (!rst_n) begin
	    rdf_wr_addr[8]       <= 0;
    end
    else begin
	if (mem_rd_cmd_lat) begin
     if (rd_data_cnt[8][0] == 0)
	    rdf_wr_addr[8]       <= rdf_wr_addr[8] + 1;
	end

	case (rdf_wr_addr[8])
      6'd0  : {rd_data_fifo[0][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[0][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[0][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[0][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd1  : {rd_data_fifo[1][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[1][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[1][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[1][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd2  : {rd_data_fifo[2][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[2][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[2][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[2][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd3  : {rd_data_fifo[3][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[3][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[3][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[3][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd4  : {rd_data_fifo[4][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[4][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[4][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[4][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd5  : {rd_data_fifo[5][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[5][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[5][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[5][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd6  : {rd_data_fifo[6][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[6][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[6][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[6][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd7  : {rd_data_fifo[7][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[7][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[7][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[7][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd8  : {rd_data_fifo[8][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[8][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[8][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[8][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd9  : {rd_data_fifo[9][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[9][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[9][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[9][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}   <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd10 : {rd_data_fifo[10][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[10][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[10][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[10][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd11 : {rd_data_fifo[11][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[11][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[11][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[11][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd12 : {rd_data_fifo[12][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[12][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[12][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[12][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd13 : {rd_data_fifo[13][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[13][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[13][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[13][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd14 : {rd_data_fifo[14][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[14][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[14][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[14][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd15 : {rd_data_fifo[15][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[15][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[15][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[15][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd16 : {rd_data_fifo[16][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[16][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[16][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[16][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd17 : {rd_data_fifo[17][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[17][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[17][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[17][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd18 : {rd_data_fifo[18][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[18][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[18][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[18][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd19 : {rd_data_fifo[19][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[19][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[19][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[19][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd20 : {rd_data_fifo[20][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[20][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[20][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[20][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd21 : {rd_data_fifo[21][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[21][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[21][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[21][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd22 : {rd_data_fifo[22][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[22][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[22][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[22][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd23 : {rd_data_fifo[23][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[23][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[23][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[23][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd24 : {rd_data_fifo[24][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[24][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[24][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[24][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd25 : {rd_data_fifo[25][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[25][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[25][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[25][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd26 : {rd_data_fifo[26][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[26][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[26][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[26][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd27 : {rd_data_fifo[27][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[27][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[27][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[27][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd28 : {rd_data_fifo[28][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[28][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[28][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[28][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd29 : {rd_data_fifo[29][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[29][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[29][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[29][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd30 : {rd_data_fifo[30][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[30][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[30][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[30][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd31 : {rd_data_fifo[31][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[31][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[31][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[31][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd32 : {rd_data_fifo[32][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[32][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[32][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[32][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd33 : {rd_data_fifo[33][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[33][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[33][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[33][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd34 : {rd_data_fifo[34][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[34][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[34][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[34][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd35 : {rd_data_fifo[35][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[35][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[35][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[35][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd36 : {rd_data_fifo[36][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[36][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[36][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[36][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd37 : {rd_data_fifo[37][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[37][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[37][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[37][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd38 : {rd_data_fifo[38][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[38][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[38][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[38][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd39 : {rd_data_fifo[39][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[39][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[39][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[39][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd40 : {rd_data_fifo[40][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[40][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[40][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[40][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd41 : {rd_data_fifo[41][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[41][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[41][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[41][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd42 : {rd_data_fifo[42][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[42][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[42][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[42][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd43 : {rd_data_fifo[43][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[43][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[43][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[43][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd44 : {rd_data_fifo[44][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[44][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[44][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[44][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd45 : {rd_data_fifo[45][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[45][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[45][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[45][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd46 : {rd_data_fifo[46][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[46][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[46][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[46][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd47 : {rd_data_fifo[47][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[47][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[47][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[47][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd48 : {rd_data_fifo[48][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[48][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[48][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[48][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd49 : {rd_data_fifo[49][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[49][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[49][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[49][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd50 : {rd_data_fifo[50][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[50][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[50][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[50][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd51 : {rd_data_fifo[51][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[51][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[51][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[51][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd52 : {rd_data_fifo[52][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[52][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[52][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[52][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd53 : {rd_data_fifo[53][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[53][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[53][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[53][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd54 : {rd_data_fifo[54][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[54][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[54][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[54][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd55 : {rd_data_fifo[55][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[55][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[55][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[55][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd56 : {rd_data_fifo[56][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[56][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[56][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[56][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd57 : {rd_data_fifo[57][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[57][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[57][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[57][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd58 : {rd_data_fifo[58][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[58][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[58][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[58][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd59 : {rd_data_fifo[59][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[59][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[59][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[59][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd60 : {rd_data_fifo[60][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[60][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[60][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[60][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd61 : {rd_data_fifo[61][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[61][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[61][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[61][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd62 : {rd_data_fifo[62][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[62][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[62][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[62][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
      6'd63 : {rd_data_fifo[63][DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[63][DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[63][DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],rd_data_fifo[63][DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]}  <= {ddr_dq[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8],rd_data_piece_2[8],rd_data_piece_1[8],rd_data_piece_0[8]};
	endcase
    end
end

always @ (posedge ddr_dqs_modified[9] or negedge rst_n) begin
    if (!rst_n) begin
       rd_data_cnt[9]                 <= 0;
    end
    else begin
	    if (mem_rd_cmd_lat)
          rd_data_cnt[9]              <= rd_data_cnt[9] + 1;
    end
end

always @ (posedge ddr_dqs_modified[9] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_0[9] <= 0;
      rd_data_piece_2[9] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[9][0] == 0)
             rd_data_piece_0[9] <= ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9];
         else if (rd_data_cnt[9][0] == 1)
             rd_data_piece_2[9] <= ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9];
   end
end

always @ (negedge ddr_dqs_modified[9] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_1[9] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[9][0] == 1)
             rd_data_piece_1[9] <= ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9];
   end
end

// Write a data pair into the fifo
always @ (negedge ddr_dqs_modified[9] or negedge rst_n) begin
    if (!rst_n) begin
	    rdf_wr_addr[9]       <= 0;
    end
    else begin
	if (mem_rd_cmd_lat) begin
     if (rd_data_cnt[9][0] == 0)
	    rdf_wr_addr[9]       <= rdf_wr_addr[9] + 1;
	end

	case (rdf_wr_addr[9])
      6'd0  : {rd_data_fifo[0][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[0][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[0][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[0][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}   <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd1  : {rd_data_fifo[1][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[1][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[1][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[1][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}   <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd2  : {rd_data_fifo[2][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[2][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[2][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[2][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}   <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd3  : {rd_data_fifo[3][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[3][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[3][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[3][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}   <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd4  : {rd_data_fifo[4][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[4][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[4][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[4][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}   <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd5  : {rd_data_fifo[5][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[5][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[5][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[5][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}   <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd6  : {rd_data_fifo[6][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[6][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[6][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[6][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}   <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd7  : {rd_data_fifo[7][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[7][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[7][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[7][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}   <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd8  : {rd_data_fifo[8][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[8][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[8][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[8][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}   <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd9  : {rd_data_fifo[9][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[9][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[9][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[9][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}   <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd10 : {rd_data_fifo[10][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[10][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[10][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[10][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd11 : {rd_data_fifo[11][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[11][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[11][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[11][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd12 : {rd_data_fifo[12][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[12][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[12][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[12][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd13 : {rd_data_fifo[13][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[13][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[13][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[13][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd14 : {rd_data_fifo[14][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[14][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[14][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[14][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd15 : {rd_data_fifo[15][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[15][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[15][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[15][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd16 : {rd_data_fifo[16][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[16][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[16][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[16][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd17 : {rd_data_fifo[17][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[17][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[17][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[17][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd18 : {rd_data_fifo[18][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[18][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[18][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[18][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd19 : {rd_data_fifo[19][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[19][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[19][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[19][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd20 : {rd_data_fifo[20][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[20][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[20][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[20][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd21 : {rd_data_fifo[21][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[21][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[21][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[21][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd22 : {rd_data_fifo[22][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[22][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[22][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[22][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd23 : {rd_data_fifo[23][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[23][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[23][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[23][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd24 : {rd_data_fifo[24][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[24][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[24][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[24][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd25 : {rd_data_fifo[25][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[25][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[25][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[25][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd26 : {rd_data_fifo[26][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[26][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[26][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[26][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd27 : {rd_data_fifo[27][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[27][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[27][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[27][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd28 : {rd_data_fifo[28][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[28][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[28][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[28][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd29 : {rd_data_fifo[29][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[29][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[29][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[29][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd30 : {rd_data_fifo[30][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[30][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[30][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[30][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd31 : {rd_data_fifo[31][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[31][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[31][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[31][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd32 : {rd_data_fifo[32][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[32][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[32][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[32][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd33 : {rd_data_fifo[33][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[33][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[33][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[33][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd34 : {rd_data_fifo[34][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[34][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[34][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[34][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd35 : {rd_data_fifo[35][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[35][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[35][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[35][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd36 : {rd_data_fifo[36][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[36][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[36][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[36][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd37 : {rd_data_fifo[37][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[37][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[37][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[37][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd38 : {rd_data_fifo[38][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[38][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[38][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[38][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd39 : {rd_data_fifo[39][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[39][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[39][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[39][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd40 : {rd_data_fifo[40][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[40][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[40][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[40][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd41 : {rd_data_fifo[41][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[41][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[41][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[41][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd42 : {rd_data_fifo[42][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[42][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[42][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[42][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd43 : {rd_data_fifo[43][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[43][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[43][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[43][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd44 : {rd_data_fifo[44][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[44][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[44][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[44][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd45 : {rd_data_fifo[45][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[45][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[45][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[45][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd46 : {rd_data_fifo[46][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[46][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[46][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[46][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd47 : {rd_data_fifo[47][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[47][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[47][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[47][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd48 : {rd_data_fifo[48][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[48][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[48][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[48][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd49 : {rd_data_fifo[49][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[49][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[49][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[49][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd50 : {rd_data_fifo[50][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[50][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[50][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[50][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd51 : {rd_data_fifo[51][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[51][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[51][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[51][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd52 : {rd_data_fifo[52][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[52][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[52][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[52][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd53 : {rd_data_fifo[53][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[53][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[53][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[53][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd54 : {rd_data_fifo[54][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[54][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[54][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[54][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd55 : {rd_data_fifo[55][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[55][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[55][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[55][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd56 : {rd_data_fifo[56][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[56][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[56][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[56][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd57 : {rd_data_fifo[57][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[57][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[57][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[57][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd58 : {rd_data_fifo[58][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[58][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[58][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[58][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd59 : {rd_data_fifo[59][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[59][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[59][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[59][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd60 : {rd_data_fifo[60][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[60][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[60][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[60][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd61 : {rd_data_fifo[61][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[61][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[61][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[61][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd62 : {rd_data_fifo[62][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[62][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[62][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[62][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
      6'd63 : {rd_data_fifo[63][DQ_PER_DQS*(9+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[63][DQ_PER_DQS*(9+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[63][DQ_PER_DQS*(9+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*9],rd_data_fifo[63][DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9]}  <= {ddr_dq[DQ_PER_DQS*(9+1)-1:DQ_PER_DQS*9],rd_data_piece_2[9],rd_data_piece_1[9],rd_data_piece_0[9]};
	endcase
    end
end

`ifdef ddr3_ip_inst_DQS_WIDTH_10
`else
//================================================================

always @ (posedge ddr_dqs_modified[10] or negedge rst_n) begin
    if (!rst_n) begin
       rd_data_cnt[10]                 <= 0;
    end
    else begin
	    if (mem_rd_cmd_lat)
          rd_data_cnt[10]              <= rd_data_cnt[10] + 1;
    end
end

always @ (posedge ddr_dqs_modified[10] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_0[10] <= 0;
      rd_data_piece_2[10] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[10][0] == 0)
             rd_data_piece_0[10] <= ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10];
         else if (rd_data_cnt[10][0] == 1)
             rd_data_piece_2[10] <= ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10];
   end
end

always @ (negedge ddr_dqs_modified[10] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_1[10] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[10][0] == 1)
             rd_data_piece_1[10] <= ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10];
   end
end

// Write a data pair into the fifo
always @ (negedge ddr_dqs_modified[10] or negedge rst_n) begin
    if (!rst_n) begin
	    rdf_wr_addr[10]       <= 0;
    end
    else begin
	if (mem_rd_cmd_lat) begin
     if (rd_data_cnt[10][0] == 0)
	    rdf_wr_addr[10]       <= rdf_wr_addr[10] + 1;
	end

	case (rdf_wr_addr[10])
      6'd0  : {rd_data_fifo[0][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[0][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[0][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[0][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}   <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd1  : {rd_data_fifo[1][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[1][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[1][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[1][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}   <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd2  : {rd_data_fifo[2][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[2][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[2][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[2][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}   <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd3  : {rd_data_fifo[3][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[3][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[3][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[3][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}   <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd4  : {rd_data_fifo[4][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[4][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[4][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[4][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}   <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd5  : {rd_data_fifo[5][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[5][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[5][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[5][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}   <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd6  : {rd_data_fifo[6][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[6][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[6][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[6][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}   <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd7  : {rd_data_fifo[7][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[7][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[7][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[7][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}   <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd8  : {rd_data_fifo[8][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[8][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[8][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[8][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}   <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd9  : {rd_data_fifo[9][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[9][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[9][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[9][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}   <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd10 : {rd_data_fifo[10][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[10][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[10][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[10][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd11 : {rd_data_fifo[11][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[11][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[11][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[11][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd12 : {rd_data_fifo[12][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[12][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[12][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[12][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd13 : {rd_data_fifo[13][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[13][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[13][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[13][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd14 : {rd_data_fifo[14][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[14][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[14][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[14][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd15 : {rd_data_fifo[15][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[15][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[15][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[15][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd16 : {rd_data_fifo[16][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[16][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[16][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[16][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd17 : {rd_data_fifo[17][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[17][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[17][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[17][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd18 : {rd_data_fifo[18][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[18][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[18][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[18][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd19 : {rd_data_fifo[19][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[19][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[19][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[19][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd20 : {rd_data_fifo[20][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[20][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[20][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[20][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd21 : {rd_data_fifo[21][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[21][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[21][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[21][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd22 : {rd_data_fifo[22][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[22][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[22][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[22][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd23 : {rd_data_fifo[23][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[23][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[23][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[23][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd24 : {rd_data_fifo[24][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[24][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[24][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[24][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd25 : {rd_data_fifo[25][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[25][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[25][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[25][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd26 : {rd_data_fifo[26][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[26][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[26][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[26][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd27 : {rd_data_fifo[27][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[27][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[27][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[27][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd28 : {rd_data_fifo[28][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[28][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[28][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[28][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd29 : {rd_data_fifo[29][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[29][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[29][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[29][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd30 : {rd_data_fifo[30][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[30][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[30][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[30][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd31 : {rd_data_fifo[31][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[31][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[31][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[31][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd32 : {rd_data_fifo[32][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[32][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[32][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[32][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd33 : {rd_data_fifo[33][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[33][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[33][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[33][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd34 : {rd_data_fifo[34][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[34][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[34][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[34][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd35 : {rd_data_fifo[35][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[35][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[35][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[35][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd36 : {rd_data_fifo[36][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[36][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[36][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[36][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd37 : {rd_data_fifo[37][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[37][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[37][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[37][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd38 : {rd_data_fifo[38][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[38][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[38][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[38][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd39 : {rd_data_fifo[39][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[39][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[39][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[39][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd40 : {rd_data_fifo[40][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[40][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[40][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[40][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd41 : {rd_data_fifo[41][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[41][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[41][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[41][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd42 : {rd_data_fifo[42][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[42][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[42][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[42][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd43 : {rd_data_fifo[43][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[43][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[43][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[43][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd44 : {rd_data_fifo[44][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[44][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[44][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[44][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd45 : {rd_data_fifo[45][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[45][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[45][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[45][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd46 : {rd_data_fifo[46][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[46][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[46][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[46][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd47 : {rd_data_fifo[47][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[47][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[47][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[47][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd48 : {rd_data_fifo[48][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[48][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[48][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[48][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd49 : {rd_data_fifo[49][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[49][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[49][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[49][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd50 : {rd_data_fifo[50][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[50][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[50][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[50][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd51 : {rd_data_fifo[51][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[51][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[51][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[51][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd52 : {rd_data_fifo[52][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[52][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[52][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[52][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd53 : {rd_data_fifo[53][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[53][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[53][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[53][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd54 : {rd_data_fifo[54][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[54][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[54][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[54][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd55 : {rd_data_fifo[55][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[55][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[55][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[55][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd56 : {rd_data_fifo[56][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[56][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[56][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[56][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd57 : {rd_data_fifo[57][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[57][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[57][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[57][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd58 : {rd_data_fifo[58][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[58][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[58][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[58][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd59 : {rd_data_fifo[59][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[59][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[59][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[59][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd60 : {rd_data_fifo[60][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[60][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[60][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[60][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd61 : {rd_data_fifo[61][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[61][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[61][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[61][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd62 : {rd_data_fifo[62][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[62][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[62][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[62][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
      6'd63 : {rd_data_fifo[63][DQ_PER_DQS*(10+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[63][DQ_PER_DQS*(10+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[63][DQ_PER_DQS*(10+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*10],rd_data_fifo[63][DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10]}  <= {ddr_dq[DQ_PER_DQS*(10+1)-1:DQ_PER_DQS*10],rd_data_piece_2[10],rd_data_piece_1[10],rd_data_piece_0[10]};
	endcase
    end
end

always @ (posedge ddr_dqs_modified[11] or negedge rst_n) begin
    if (!rst_n) begin
       rd_data_cnt[11]                 <= 0;
    end
    else begin
	    if (mem_rd_cmd_lat)
          rd_data_cnt[11]              <= rd_data_cnt[11] + 1;
    end
end

always @ (posedge ddr_dqs_modified[11] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_0[11] <= 0;
      rd_data_piece_2[11] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[11][0] == 0)
             rd_data_piece_0[11] <= ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11];
         else if (rd_data_cnt[11][0] == 1)
             rd_data_piece_2[11] <= ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11];
   end
end

always @ (negedge ddr_dqs_modified[11] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_1[11] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[11][0] == 1)
             rd_data_piece_1[11] <= ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11];
   end
end

// Write a data pair into the fifo
always @ (negedge ddr_dqs_modified[11] or negedge rst_n) begin
    if (!rst_n) begin
	    rdf_wr_addr[11]       <= 0;
    end
    else begin
	if (mem_rd_cmd_lat) begin
     if (rd_data_cnt[11][0] == 0)
	    rdf_wr_addr[11]       <= rdf_wr_addr[11] + 1;
	end

	case (rdf_wr_addr[11])
      6'd0  : {rd_data_fifo[0][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[0][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[0][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[0][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}   <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd1  : {rd_data_fifo[1][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[1][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[1][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[1][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}   <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd2  : {rd_data_fifo[2][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[2][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[2][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[2][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}   <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd3  : {rd_data_fifo[3][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[3][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[3][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[3][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}   <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd4  : {rd_data_fifo[4][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[4][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[4][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[4][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}   <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd5  : {rd_data_fifo[5][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[5][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[5][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[5][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}   <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd6  : {rd_data_fifo[6][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[6][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[6][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[6][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}   <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd7  : {rd_data_fifo[7][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[7][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[7][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[7][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}   <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd8  : {rd_data_fifo[8][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[8][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[8][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[8][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}   <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd9  : {rd_data_fifo[9][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[9][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[9][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[9][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}   <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd10 : {rd_data_fifo[10][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[10][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[10][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[10][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd11 : {rd_data_fifo[11][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[11][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[11][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[11][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd12 : {rd_data_fifo[12][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[12][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[12][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[12][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd13 : {rd_data_fifo[13][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[13][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[13][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[13][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd14 : {rd_data_fifo[14][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[14][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[14][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[14][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd15 : {rd_data_fifo[15][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[15][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[15][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[15][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd16 : {rd_data_fifo[16][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[16][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[16][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[16][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd17 : {rd_data_fifo[17][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[17][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[17][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[17][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd18 : {rd_data_fifo[18][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[18][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[18][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[18][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd19 : {rd_data_fifo[19][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[19][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[19][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[19][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd20 : {rd_data_fifo[20][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[20][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[20][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[20][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd21 : {rd_data_fifo[21][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[21][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[21][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[21][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd22 : {rd_data_fifo[22][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[22][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[22][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[22][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd23 : {rd_data_fifo[23][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[23][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[23][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[23][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd24 : {rd_data_fifo[24][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[24][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[24][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[24][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd25 : {rd_data_fifo[25][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[25][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[25][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[25][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd26 : {rd_data_fifo[26][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[26][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[26][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[26][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd27 : {rd_data_fifo[27][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[27][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[27][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[27][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd28 : {rd_data_fifo[28][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[28][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[28][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[28][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd29 : {rd_data_fifo[29][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[29][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[29][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[29][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd30 : {rd_data_fifo[30][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[30][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[30][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[30][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd31 : {rd_data_fifo[31][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[31][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[31][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[31][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd32 : {rd_data_fifo[32][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[32][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[32][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[32][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd33 : {rd_data_fifo[33][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[33][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[33][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[33][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd34 : {rd_data_fifo[34][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[34][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[34][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[34][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd35 : {rd_data_fifo[35][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[35][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[35][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[35][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd36 : {rd_data_fifo[36][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[36][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[36][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[36][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd37 : {rd_data_fifo[37][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[37][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[37][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[37][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd38 : {rd_data_fifo[38][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[38][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[38][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[38][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd39 : {rd_data_fifo[39][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[39][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[39][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[39][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd40 : {rd_data_fifo[40][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[40][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[40][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[40][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd41 : {rd_data_fifo[41][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[41][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[41][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[41][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd42 : {rd_data_fifo[42][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[42][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[42][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[42][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd43 : {rd_data_fifo[43][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[43][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[43][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[43][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd44 : {rd_data_fifo[44][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[44][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[44][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[44][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd45 : {rd_data_fifo[45][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[45][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[45][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[45][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd46 : {rd_data_fifo[46][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[46][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[46][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[46][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd47 : {rd_data_fifo[47][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[47][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[47][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[47][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd48 : {rd_data_fifo[48][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[48][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[48][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[48][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd49 : {rd_data_fifo[49][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[49][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[49][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[49][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd50 : {rd_data_fifo[50][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[50][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[50][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[50][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd51 : {rd_data_fifo[51][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[51][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[51][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[51][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd52 : {rd_data_fifo[52][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[52][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[52][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[52][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd53 : {rd_data_fifo[53][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[53][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[53][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[53][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd54 : {rd_data_fifo[54][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[54][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[54][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[54][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd55 : {rd_data_fifo[55][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[55][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[55][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[55][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd56 : {rd_data_fifo[56][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[56][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[56][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[56][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd57 : {rd_data_fifo[57][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[57][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[57][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[57][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd58 : {rd_data_fifo[58][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[58][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[58][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[58][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd59 : {rd_data_fifo[59][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[59][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[59][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[59][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd60 : {rd_data_fifo[60][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[60][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[60][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[60][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd61 : {rd_data_fifo[61][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[61][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[61][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[61][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd62 : {rd_data_fifo[62][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[62][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[62][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[62][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
      6'd63 : {rd_data_fifo[63][DQ_PER_DQS*(11+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[63][DQ_PER_DQS*(11+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[63][DQ_PER_DQS*(11+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*11],rd_data_fifo[63][DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11]}  <= {ddr_dq[DQ_PER_DQS*(11+1)-1:DQ_PER_DQS*11],rd_data_piece_2[11],rd_data_piece_1[11],rd_data_piece_0[11]};
	endcase
    end
end

`ifdef ddr3_ip_inst_DQS_WIDTH_12
`else
//================================================================

always @ (posedge ddr_dqs_modified[12] or negedge rst_n) begin
    if (!rst_n) begin
       rd_data_cnt[12]                 <= 0;
    end
    else begin
	    if (mem_rd_cmd_lat)
          rd_data_cnt[12]              <= rd_data_cnt[12] + 1;
    end
end

always @ (posedge ddr_dqs_modified[12] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_0[12] <= 0;
      rd_data_piece_2[12] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[12][0] == 0)
             rd_data_piece_0[12] <= ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12];
         else if (rd_data_cnt[12][0] == 1)
             rd_data_piece_2[12] <= ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12];
   end
end

always @ (negedge ddr_dqs_modified[12] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_1[12] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[12][0] == 1)
             rd_data_piece_1[12] <= ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12];
   end
end

// Write a data pair into the fifo
always @ (negedge ddr_dqs_modified[12] or negedge rst_n) begin
    if (!rst_n) begin
	    rdf_wr_addr[12]       <= 0;
    end
    else begin
	if (mem_rd_cmd_lat) begin
     if (rd_data_cnt[12][0] == 0)
	    rdf_wr_addr[12]       <= rdf_wr_addr[12] + 1;
	end

	case (rdf_wr_addr[12])
      6'd0  : {rd_data_fifo[0][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[0][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[0][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[0][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}   <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd1  : {rd_data_fifo[1][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[1][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[1][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[1][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}   <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd2  : {rd_data_fifo[2][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[2][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[2][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[2][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}   <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd3  : {rd_data_fifo[3][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[3][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[3][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[3][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}   <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd4  : {rd_data_fifo[4][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[4][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[4][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[4][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}   <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd5  : {rd_data_fifo[5][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[5][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[5][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[5][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}   <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd6  : {rd_data_fifo[6][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[6][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[6][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[6][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}   <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd7  : {rd_data_fifo[7][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[7][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[7][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[7][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}   <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd8  : {rd_data_fifo[8][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[8][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[8][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[8][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}   <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd9  : {rd_data_fifo[9][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[9][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[9][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[9][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}   <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd10 : {rd_data_fifo[10][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[10][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[10][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[10][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd11 : {rd_data_fifo[11][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[11][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[11][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[11][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd12 : {rd_data_fifo[12][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[12][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[12][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[12][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd13 : {rd_data_fifo[13][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[13][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[13][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[13][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd14 : {rd_data_fifo[14][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[14][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[14][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[14][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd15 : {rd_data_fifo[15][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[15][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[15][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[15][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd16 : {rd_data_fifo[16][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[16][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[16][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[16][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd17 : {rd_data_fifo[17][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[17][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[17][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[17][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd18 : {rd_data_fifo[18][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[18][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[18][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[18][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd19 : {rd_data_fifo[19][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[19][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[19][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[19][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd20 : {rd_data_fifo[20][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[20][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[20][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[20][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd21 : {rd_data_fifo[21][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[21][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[21][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[21][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd22 : {rd_data_fifo[22][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[22][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[22][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[22][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd23 : {rd_data_fifo[23][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[23][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[23][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[23][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd24 : {rd_data_fifo[24][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[24][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[24][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[24][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd25 : {rd_data_fifo[25][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[25][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[25][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[25][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd26 : {rd_data_fifo[26][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[26][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[26][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[26][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd27 : {rd_data_fifo[27][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[27][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[27][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[27][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd28 : {rd_data_fifo[28][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[28][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[28][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[28][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd29 : {rd_data_fifo[29][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[29][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[29][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[29][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd30 : {rd_data_fifo[30][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[30][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[30][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[30][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd31 : {rd_data_fifo[31][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[31][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[31][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[31][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd32 : {rd_data_fifo[32][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[32][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[32][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[32][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd33 : {rd_data_fifo[33][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[33][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[33][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[33][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd34 : {rd_data_fifo[34][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[34][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[34][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[34][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd35 : {rd_data_fifo[35][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[35][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[35][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[35][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd36 : {rd_data_fifo[36][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[36][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[36][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[36][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd37 : {rd_data_fifo[37][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[37][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[37][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[37][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd38 : {rd_data_fifo[38][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[38][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[38][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[38][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd39 : {rd_data_fifo[39][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[39][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[39][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[39][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd40 : {rd_data_fifo[40][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[40][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[40][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[40][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd41 : {rd_data_fifo[41][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[41][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[41][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[41][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd42 : {rd_data_fifo[42][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[42][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[42][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[42][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd43 : {rd_data_fifo[43][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[43][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[43][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[43][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd44 : {rd_data_fifo[44][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[44][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[44][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[44][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd45 : {rd_data_fifo[45][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[45][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[45][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[45][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd46 : {rd_data_fifo[46][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[46][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[46][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[46][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd47 : {rd_data_fifo[47][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[47][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[47][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[47][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd48 : {rd_data_fifo[48][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[48][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[48][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[48][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd49 : {rd_data_fifo[49][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[49][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[49][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[49][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd50 : {rd_data_fifo[50][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[50][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[50][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[50][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd51 : {rd_data_fifo[51][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[51][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[51][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[51][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd52 : {rd_data_fifo[52][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[52][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[52][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[52][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd53 : {rd_data_fifo[53][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[53][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[53][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[53][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd54 : {rd_data_fifo[54][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[54][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[54][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[54][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd55 : {rd_data_fifo[55][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[55][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[55][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[55][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd56 : {rd_data_fifo[56][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[56][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[56][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[56][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd57 : {rd_data_fifo[57][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[57][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[57][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[57][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd58 : {rd_data_fifo[58][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[58][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[58][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[58][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd59 : {rd_data_fifo[59][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[59][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[59][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[59][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd60 : {rd_data_fifo[60][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[60][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[60][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[60][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd61 : {rd_data_fifo[61][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[61][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[61][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[61][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd62 : {rd_data_fifo[62][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[62][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[62][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[62][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
      6'd63 : {rd_data_fifo[63][DQ_PER_DQS*(12+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[63][DQ_PER_DQS*(12+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[63][DQ_PER_DQS*(12+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*12],rd_data_fifo[63][DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12]}  <= {ddr_dq[DQ_PER_DQS*(12+1)-1:DQ_PER_DQS*12],rd_data_piece_2[12],rd_data_piece_1[12],rd_data_piece_0[12]};
	endcase
    end
end

always @ (posedge ddr_dqs_modified[13] or negedge rst_n) begin
    if (!rst_n) begin
       rd_data_cnt[13]                 <= 0;
    end
    else begin
	    if (mem_rd_cmd_lat)
          rd_data_cnt[13]              <= rd_data_cnt[13] + 1;
    end
end

always @ (posedge ddr_dqs_modified[13] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_0[13] <= 0;
      rd_data_piece_2[13] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[13][0] == 0)
             rd_data_piece_0[13] <= ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13];
         else if (rd_data_cnt[13][0] == 1)
             rd_data_piece_2[13] <= ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13];
   end
end

always @ (negedge ddr_dqs_modified[13] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_1[13] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[13][0] == 1)
             rd_data_piece_1[13] <= ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13];
   end
end

// Write a data pair into the fifo
always @ (negedge ddr_dqs_modified[13] or negedge rst_n) begin
    if (!rst_n) begin
	    rdf_wr_addr[13]       <= 0;
    end
    else begin
	if (mem_rd_cmd_lat) begin
     if (rd_data_cnt[13][0] == 0)
	    rdf_wr_addr[13]       <= rdf_wr_addr[13] + 1;
	end

	case (rdf_wr_addr[13])
      6'd0  : {rd_data_fifo[0][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[0][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[0][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[0][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}   <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd1  : {rd_data_fifo[1][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[1][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[1][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[1][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}   <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd2  : {rd_data_fifo[2][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[2][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[2][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[2][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}   <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd3  : {rd_data_fifo[3][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[3][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[3][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[3][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}   <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd4  : {rd_data_fifo[4][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[4][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[4][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[4][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}   <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd5  : {rd_data_fifo[5][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[5][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[5][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[5][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}   <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd6  : {rd_data_fifo[6][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[6][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[6][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[6][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}   <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd7  : {rd_data_fifo[7][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[7][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[7][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[7][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}   <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd8  : {rd_data_fifo[8][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[8][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[8][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[8][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}   <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd9  : {rd_data_fifo[9][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[9][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[9][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[9][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}   <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd10 : {rd_data_fifo[10][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[10][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[10][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[10][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd11 : {rd_data_fifo[11][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[11][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[11][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[11][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd12 : {rd_data_fifo[12][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[12][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[12][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[12][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd13 : {rd_data_fifo[13][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[13][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[13][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[13][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd14 : {rd_data_fifo[14][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[14][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[14][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[14][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd15 : {rd_data_fifo[15][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[15][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[15][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[15][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd16 : {rd_data_fifo[16][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[16][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[16][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[16][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd17 : {rd_data_fifo[17][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[17][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[17][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[17][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd18 : {rd_data_fifo[18][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[18][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[18][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[18][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd19 : {rd_data_fifo[19][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[19][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[19][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[19][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd20 : {rd_data_fifo[20][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[20][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[20][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[20][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd21 : {rd_data_fifo[21][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[21][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[21][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[21][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd22 : {rd_data_fifo[22][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[22][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[22][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[22][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd23 : {rd_data_fifo[23][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[23][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[23][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[23][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd24 : {rd_data_fifo[24][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[24][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[24][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[24][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd25 : {rd_data_fifo[25][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[25][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[25][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[25][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd26 : {rd_data_fifo[26][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[26][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[26][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[26][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd27 : {rd_data_fifo[27][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[27][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[27][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[27][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd28 : {rd_data_fifo[28][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[28][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[28][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[28][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd29 : {rd_data_fifo[29][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[29][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[29][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[29][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd30 : {rd_data_fifo[30][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[30][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[30][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[30][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd31 : {rd_data_fifo[31][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[31][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[31][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[31][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd32 : {rd_data_fifo[32][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[32][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[32][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[32][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd33 : {rd_data_fifo[33][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[33][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[33][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[33][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd34 : {rd_data_fifo[34][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[34][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[34][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[34][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd35 : {rd_data_fifo[35][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[35][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[35][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[35][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd36 : {rd_data_fifo[36][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[36][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[36][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[36][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd37 : {rd_data_fifo[37][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[37][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[37][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[37][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd38 : {rd_data_fifo[38][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[38][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[38][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[38][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd39 : {rd_data_fifo[39][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[39][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[39][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[39][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd40 : {rd_data_fifo[40][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[40][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[40][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[40][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd41 : {rd_data_fifo[41][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[41][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[41][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[41][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd42 : {rd_data_fifo[42][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[42][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[42][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[42][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd43 : {rd_data_fifo[43][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[43][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[43][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[43][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd44 : {rd_data_fifo[44][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[44][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[44][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[44][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd45 : {rd_data_fifo[45][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[45][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[45][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[45][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd46 : {rd_data_fifo[46][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[46][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[46][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[46][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd47 : {rd_data_fifo[47][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[47][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[47][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[47][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd48 : {rd_data_fifo[48][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[48][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[48][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[48][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd49 : {rd_data_fifo[49][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[49][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[49][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[49][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd50 : {rd_data_fifo[50][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[50][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[50][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[50][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd51 : {rd_data_fifo[51][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[51][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[51][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[51][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd52 : {rd_data_fifo[52][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[52][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[52][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[52][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd53 : {rd_data_fifo[53][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[53][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[53][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[53][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd54 : {rd_data_fifo[54][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[54][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[54][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[54][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd55 : {rd_data_fifo[55][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[55][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[55][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[55][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd56 : {rd_data_fifo[56][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[56][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[56][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[56][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd57 : {rd_data_fifo[57][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[57][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[57][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[57][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd58 : {rd_data_fifo[58][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[58][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[58][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[58][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd59 : {rd_data_fifo[59][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[59][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[59][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[59][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd60 : {rd_data_fifo[60][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[60][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[60][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[60][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd61 : {rd_data_fifo[61][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[61][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[61][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[61][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd62 : {rd_data_fifo[62][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[62][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[62][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[62][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
      6'd63 : {rd_data_fifo[63][DQ_PER_DQS*(13+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[63][DQ_PER_DQS*(13+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[63][DQ_PER_DQS*(13+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*13],rd_data_fifo[63][DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13]}  <= {ddr_dq[DQ_PER_DQS*(13+1)-1:DQ_PER_DQS*13],rd_data_piece_2[13],rd_data_piece_1[13],rd_data_piece_0[13]};
	endcase
    end
end

`ifdef ddr3_ip_inst_DQS_WIDTH_14
`else
//================================================================

always @ (posedge ddr_dqs_modified[14] or negedge rst_n) begin
    if (!rst_n) begin
       rd_data_cnt[14]                 <= 0;
    end
    else begin
	    if (mem_rd_cmd_lat)
          rd_data_cnt[14]              <= rd_data_cnt[14] + 1;
    end
end

always @ (posedge ddr_dqs_modified[14] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_0[14] <= 0;
      rd_data_piece_2[14] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[14][0] == 0)
             rd_data_piece_0[14] <= ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14];
         else if (rd_data_cnt[14][0] == 1)
             rd_data_piece_2[14] <= ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14];
   end
end

always @ (negedge ddr_dqs_modified[14] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_1[14] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[14][0] == 1)
             rd_data_piece_1[14] <= ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14];
   end
end

// Write a data pair into the fifo
always @ (negedge ddr_dqs_modified[14] or negedge rst_n) begin
    if (!rst_n) begin
	    rdf_wr_addr[14]       <= 0;
    end
    else begin
	if (mem_rd_cmd_lat) begin
     if (rd_data_cnt[14][0] == 0)
	    rdf_wr_addr[14]       <= rdf_wr_addr[14] + 1;
	end

	case (rdf_wr_addr[14])
      6'd0  : {rd_data_fifo[0][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[0][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[0][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[0][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}   <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd1  : {rd_data_fifo[1][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[1][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[1][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[1][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}   <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd2  : {rd_data_fifo[2][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[2][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[2][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[2][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}   <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd3  : {rd_data_fifo[3][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[3][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[3][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[3][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}   <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd4  : {rd_data_fifo[4][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[4][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[4][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[4][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}   <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd5  : {rd_data_fifo[5][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[5][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[5][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[5][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}   <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd6  : {rd_data_fifo[6][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[6][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[6][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[6][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}   <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd7  : {rd_data_fifo[7][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[7][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[7][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[7][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}   <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd8  : {rd_data_fifo[8][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[8][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[8][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[8][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}   <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd9  : {rd_data_fifo[9][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[9][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[9][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[9][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}   <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd10 : {rd_data_fifo[10][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[10][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[10][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[10][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd11 : {rd_data_fifo[11][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[11][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[11][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[11][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd12 : {rd_data_fifo[12][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[12][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[12][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[12][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd13 : {rd_data_fifo[13][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[13][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[13][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[13][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd14 : {rd_data_fifo[14][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[14][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[14][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[14][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd15 : {rd_data_fifo[15][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[15][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[15][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[15][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd16 : {rd_data_fifo[16][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[16][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[16][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[16][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd17 : {rd_data_fifo[17][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[17][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[17][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[17][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd18 : {rd_data_fifo[18][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[18][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[18][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[18][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd19 : {rd_data_fifo[19][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[19][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[19][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[19][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd20 : {rd_data_fifo[20][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[20][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[20][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[20][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd21 : {rd_data_fifo[21][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[21][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[21][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[21][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd22 : {rd_data_fifo[22][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[22][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[22][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[22][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd23 : {rd_data_fifo[23][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[23][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[23][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[23][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd24 : {rd_data_fifo[24][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[24][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[24][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[24][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd25 : {rd_data_fifo[25][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[25][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[25][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[25][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd26 : {rd_data_fifo[26][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[26][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[26][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[26][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd27 : {rd_data_fifo[27][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[27][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[27][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[27][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd28 : {rd_data_fifo[28][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[28][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[28][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[28][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd29 : {rd_data_fifo[29][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[29][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[29][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[29][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd30 : {rd_data_fifo[30][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[30][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[30][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[30][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd31 : {rd_data_fifo[31][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[31][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[31][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[31][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd32 : {rd_data_fifo[32][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[32][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[32][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[32][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd33 : {rd_data_fifo[33][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[33][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[33][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[33][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd34 : {rd_data_fifo[34][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[34][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[34][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[34][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd35 : {rd_data_fifo[35][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[35][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[35][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[35][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd36 : {rd_data_fifo[36][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[36][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[36][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[36][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd37 : {rd_data_fifo[37][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[37][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[37][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[37][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd38 : {rd_data_fifo[38][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[38][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[38][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[38][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd39 : {rd_data_fifo[39][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[39][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[39][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[39][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd40 : {rd_data_fifo[40][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[40][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[40][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[40][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd41 : {rd_data_fifo[41][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[41][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[41][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[41][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd42 : {rd_data_fifo[42][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[42][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[42][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[42][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd43 : {rd_data_fifo[43][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[43][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[43][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[43][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd44 : {rd_data_fifo[44][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[44][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[44][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[44][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd45 : {rd_data_fifo[45][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[45][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[45][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[45][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd46 : {rd_data_fifo[46][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[46][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[46][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[46][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd47 : {rd_data_fifo[47][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[47][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[47][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[47][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd48 : {rd_data_fifo[48][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[48][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[48][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[48][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd49 : {rd_data_fifo[49][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[49][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[49][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[49][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd50 : {rd_data_fifo[50][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[50][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[50][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[50][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd51 : {rd_data_fifo[51][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[51][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[51][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[51][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd52 : {rd_data_fifo[52][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[52][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[52][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[52][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd53 : {rd_data_fifo[53][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[53][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[53][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[53][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd54 : {rd_data_fifo[54][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[54][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[54][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[54][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd55 : {rd_data_fifo[55][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[55][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[55][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[55][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd56 : {rd_data_fifo[56][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[56][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[56][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[56][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd57 : {rd_data_fifo[57][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[57][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[57][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[57][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd58 : {rd_data_fifo[58][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[58][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[58][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[58][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd59 : {rd_data_fifo[59][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[59][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[59][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[59][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd60 : {rd_data_fifo[60][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[60][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[60][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[60][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd61 : {rd_data_fifo[61][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[61][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[61][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[61][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd62 : {rd_data_fifo[62][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[62][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[62][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[62][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
      6'd63 : {rd_data_fifo[63][DQ_PER_DQS*(14+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[63][DQ_PER_DQS*(14+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[63][DQ_PER_DQS*(14+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*14],rd_data_fifo[63][DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14]}  <= {ddr_dq[DQ_PER_DQS*(14+1)-1:DQ_PER_DQS*14],rd_data_piece_2[14],rd_data_piece_1[14],rd_data_piece_0[14]};
	endcase
    end
end

always @ (posedge ddr_dqs_modified[15] or negedge rst_n) begin
    if (!rst_n) begin
       rd_data_cnt[15]                 <= 0;
    end
    else begin
	    if (mem_rd_cmd_lat)
          rd_data_cnt[15]              <= rd_data_cnt[15] + 1;
    end
end

always @ (posedge ddr_dqs_modified[15] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_0[15] <= 0;
      rd_data_piece_2[15] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[15][0] == 0)
             rd_data_piece_0[15] <= ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15];
         else if (rd_data_cnt[15][0] == 1)
             rd_data_piece_2[15] <= ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15];
   end
end

always @ (negedge ddr_dqs_modified[15] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_1[15] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[15][0] == 1)
             rd_data_piece_1[15] <= ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15];
   end
end

// Write a data pair into the fifo
always @ (negedge ddr_dqs_modified[15] or negedge rst_n) begin
    if (!rst_n) begin
	    rdf_wr_addr[15]       <= 0;
    end
    else begin
	if (mem_rd_cmd_lat) begin
     if (rd_data_cnt[15][0] == 0)
	    rdf_wr_addr[15]       <= rdf_wr_addr[15] + 1;
	end

	case (rdf_wr_addr[15])
      6'd0  : {rd_data_fifo[0][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[0][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[0][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[0][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}   <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd1  : {rd_data_fifo[1][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[1][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[1][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[1][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}   <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd2  : {rd_data_fifo[2][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[2][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[2][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[2][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}   <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd3  : {rd_data_fifo[3][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[3][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[3][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[3][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}   <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd4  : {rd_data_fifo[4][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[4][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[4][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[4][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}   <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd5  : {rd_data_fifo[5][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[5][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[5][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[5][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}   <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd6  : {rd_data_fifo[6][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[6][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[6][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[6][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}   <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd7  : {rd_data_fifo[7][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[7][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[7][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[7][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}   <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd8  : {rd_data_fifo[8][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[8][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[8][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[8][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}   <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd9  : {rd_data_fifo[9][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[9][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[9][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[9][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}   <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd10 : {rd_data_fifo[10][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[10][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[10][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[10][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd11 : {rd_data_fifo[11][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[11][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[11][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[11][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd12 : {rd_data_fifo[12][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[12][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[12][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[12][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd13 : {rd_data_fifo[13][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[13][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[13][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[13][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd14 : {rd_data_fifo[14][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[14][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[14][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[14][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd15 : {rd_data_fifo[15][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[15][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[15][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[15][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd16 : {rd_data_fifo[16][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[16][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[16][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[16][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd17 : {rd_data_fifo[17][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[17][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[17][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[17][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd18 : {rd_data_fifo[18][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[18][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[18][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[18][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd19 : {rd_data_fifo[19][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[19][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[19][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[19][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd20 : {rd_data_fifo[20][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[20][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[20][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[20][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd21 : {rd_data_fifo[21][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[21][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[21][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[21][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd22 : {rd_data_fifo[22][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[22][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[22][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[22][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd23 : {rd_data_fifo[23][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[23][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[23][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[23][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd24 : {rd_data_fifo[24][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[24][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[24][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[24][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd25 : {rd_data_fifo[25][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[25][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[25][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[25][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd26 : {rd_data_fifo[26][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[26][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[26][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[26][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd27 : {rd_data_fifo[27][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[27][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[27][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[27][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd28 : {rd_data_fifo[28][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[28][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[28][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[28][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd29 : {rd_data_fifo[29][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[29][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[29][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[29][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd30 : {rd_data_fifo[30][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[30][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[30][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[30][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd31 : {rd_data_fifo[31][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[31][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[31][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[31][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd32 : {rd_data_fifo[32][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[32][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[32][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[32][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd33 : {rd_data_fifo[33][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[33][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[33][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[33][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd34 : {rd_data_fifo[34][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[34][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[34][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[34][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd35 : {rd_data_fifo[35][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[35][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[35][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[35][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd36 : {rd_data_fifo[36][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[36][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[36][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[36][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd37 : {rd_data_fifo[37][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[37][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[37][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[37][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd38 : {rd_data_fifo[38][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[38][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[38][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[38][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd39 : {rd_data_fifo[39][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[39][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[39][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[39][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd40 : {rd_data_fifo[40][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[40][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[40][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[40][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd41 : {rd_data_fifo[41][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[41][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[41][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[41][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd42 : {rd_data_fifo[42][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[42][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[42][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[42][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd43 : {rd_data_fifo[43][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[43][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[43][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[43][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd44 : {rd_data_fifo[44][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[44][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[44][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[44][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd45 : {rd_data_fifo[45][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[45][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[45][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[45][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd46 : {rd_data_fifo[46][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[46][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[46][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[46][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd47 : {rd_data_fifo[47][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[47][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[47][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[47][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd48 : {rd_data_fifo[48][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[48][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[48][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[48][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd49 : {rd_data_fifo[49][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[49][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[49][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[49][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd50 : {rd_data_fifo[50][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[50][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[50][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[50][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd51 : {rd_data_fifo[51][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[51][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[51][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[51][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd52 : {rd_data_fifo[52][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[52][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[52][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[52][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd53 : {rd_data_fifo[53][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[53][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[53][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[53][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd54 : {rd_data_fifo[54][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[54][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[54][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[54][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd55 : {rd_data_fifo[55][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[55][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[55][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[55][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd56 : {rd_data_fifo[56][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[56][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[56][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[56][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd57 : {rd_data_fifo[57][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[57][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[57][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[57][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd58 : {rd_data_fifo[58][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[58][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[58][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[58][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd59 : {rd_data_fifo[59][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[59][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[59][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[59][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd60 : {rd_data_fifo[60][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[60][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[60][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[60][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd61 : {rd_data_fifo[61][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[61][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[61][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[61][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd62 : {rd_data_fifo[62][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[62][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[62][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[62][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
      6'd63 : {rd_data_fifo[63][DQ_PER_DQS*(15+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[63][DQ_PER_DQS*(15+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[63][DQ_PER_DQS*(15+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*15],rd_data_fifo[63][DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15]}  <= {ddr_dq[DQ_PER_DQS*(15+1)-1:DQ_PER_DQS*15],rd_data_piece_2[15],rd_data_piece_1[15],rd_data_piece_0[15]};
	endcase
    end
end

`ifdef ddr3_ip_inst_DQS_WIDTH_16
`else
//================================================================

always @ (posedge ddr_dqs_modified[16] or negedge rst_n) begin
    if (!rst_n) begin
       rd_data_cnt[16]                 <= 0;
    end
    else begin
	    if (mem_rd_cmd_lat)
          rd_data_cnt[16]              <= rd_data_cnt[16] + 1;
    end
end

always @ (posedge ddr_dqs_modified[16] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_0[16] <= 0;
      rd_data_piece_2[16] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[16][0] == 0)
             rd_data_piece_0[16] <= ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16];
         else if (rd_data_cnt[16][0] == 1)
             rd_data_piece_2[16] <= ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16];
   end
end

always @ (negedge ddr_dqs_modified[16] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_1[16] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[16][0] == 1)
             rd_data_piece_1[16] <= ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16];
   end
end

// Write a data pair into the fifo
always @ (negedge ddr_dqs_modified[16] or negedge rst_n) begin
    if (!rst_n) begin
	    rdf_wr_addr[16]       <= 0;
    end
    else begin
	if (mem_rd_cmd_lat) begin
     if (rd_data_cnt[16][0] == 0)
	    rdf_wr_addr[16]       <= rdf_wr_addr[16] + 1;
	end

	case (rdf_wr_addr[16])
      6'd0  : {rd_data_fifo[0][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[0][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[0][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[0][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}   <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd1  : {rd_data_fifo[1][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[1][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[1][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[1][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}   <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd2  : {rd_data_fifo[2][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[2][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[2][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[2][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}   <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd3  : {rd_data_fifo[3][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[3][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[3][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[3][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}   <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd4  : {rd_data_fifo[4][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[4][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[4][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[4][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}   <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd5  : {rd_data_fifo[5][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[5][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[5][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[5][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}   <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd6  : {rd_data_fifo[6][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[6][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[6][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[6][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}   <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd7  : {rd_data_fifo[7][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[7][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[7][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[7][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}   <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd8  : {rd_data_fifo[8][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[8][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[8][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[8][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}   <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd9  : {rd_data_fifo[9][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[9][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[9][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[9][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}   <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd10 : {rd_data_fifo[10][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[10][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[10][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[10][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd11 : {rd_data_fifo[11][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[11][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[11][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[11][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd12 : {rd_data_fifo[12][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[12][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[12][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[12][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd13 : {rd_data_fifo[13][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[13][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[13][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[13][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd14 : {rd_data_fifo[14][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[14][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[14][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[14][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd15 : {rd_data_fifo[15][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[15][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[15][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[15][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd16 : {rd_data_fifo[16][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[16][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[16][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[16][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd17 : {rd_data_fifo[17][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[17][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[17][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[17][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd18 : {rd_data_fifo[18][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[18][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[18][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[18][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd19 : {rd_data_fifo[19][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[19][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[19][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[19][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd20 : {rd_data_fifo[20][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[20][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[20][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[20][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd21 : {rd_data_fifo[21][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[21][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[21][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[21][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd22 : {rd_data_fifo[22][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[22][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[22][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[22][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd23 : {rd_data_fifo[23][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[23][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[23][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[23][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd24 : {rd_data_fifo[24][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[24][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[24][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[24][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd25 : {rd_data_fifo[25][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[25][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[25][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[25][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd26 : {rd_data_fifo[26][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[26][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[26][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[26][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd27 : {rd_data_fifo[27][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[27][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[27][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[27][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd28 : {rd_data_fifo[28][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[28][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[28][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[28][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd29 : {rd_data_fifo[29][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[29][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[29][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[29][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd30 : {rd_data_fifo[30][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[30][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[30][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[30][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd31 : {rd_data_fifo[31][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[31][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[31][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[31][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd32 : {rd_data_fifo[32][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[32][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[32][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[32][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd33 : {rd_data_fifo[33][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[33][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[33][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[33][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd34 : {rd_data_fifo[34][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[34][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[34][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[34][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd35 : {rd_data_fifo[35][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[35][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[35][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[35][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd36 : {rd_data_fifo[36][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[36][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[36][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[36][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd37 : {rd_data_fifo[37][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[37][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[37][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[37][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd38 : {rd_data_fifo[38][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[38][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[38][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[38][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd39 : {rd_data_fifo[39][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[39][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[39][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[39][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd40 : {rd_data_fifo[40][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[40][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[40][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[40][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd41 : {rd_data_fifo[41][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[41][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[41][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[41][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd42 : {rd_data_fifo[42][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[42][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[42][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[42][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd43 : {rd_data_fifo[43][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[43][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[43][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[43][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd44 : {rd_data_fifo[44][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[44][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[44][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[44][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd45 : {rd_data_fifo[45][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[45][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[45][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[45][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd46 : {rd_data_fifo[46][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[46][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[46][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[46][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd47 : {rd_data_fifo[47][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[47][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[47][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[47][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd48 : {rd_data_fifo[48][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[48][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[48][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[48][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd49 : {rd_data_fifo[49][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[49][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[49][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[49][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd50 : {rd_data_fifo[50][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[50][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[50][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[50][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd51 : {rd_data_fifo[51][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[51][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[51][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[51][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd52 : {rd_data_fifo[52][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[52][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[52][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[52][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd53 : {rd_data_fifo[53][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[53][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[53][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[53][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd54 : {rd_data_fifo[54][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[54][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[54][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[54][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd55 : {rd_data_fifo[55][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[55][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[55][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[55][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd56 : {rd_data_fifo[56][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[56][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[56][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[56][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd57 : {rd_data_fifo[57][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[57][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[57][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[57][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd58 : {rd_data_fifo[58][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[58][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[58][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[58][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd59 : {rd_data_fifo[59][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[59][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[59][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[59][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd60 : {rd_data_fifo[60][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[60][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[60][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[60][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd61 : {rd_data_fifo[61][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[61][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[61][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[61][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd62 : {rd_data_fifo[62][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[62][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[62][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[62][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
      6'd63 : {rd_data_fifo[63][DQ_PER_DQS*(16+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[63][DQ_PER_DQS*(16+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[63][DQ_PER_DQS*(16+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*16],rd_data_fifo[63][DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16]}  <= {ddr_dq[DQ_PER_DQS*(16+1)-1:DQ_PER_DQS*16],rd_data_piece_2[16],rd_data_piece_1[16],rd_data_piece_0[16]};
	endcase
    end
end

always @ (posedge ddr_dqs_modified[17] or negedge rst_n) begin
    if (!rst_n) begin
       rd_data_cnt[17]                 <= 0;
    end
    else begin
	    if (mem_rd_cmd_lat)
          rd_data_cnt[17]              <= rd_data_cnt[17] + 1;
    end
end

always @ (posedge ddr_dqs_modified[17] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_0[17] <= 0;
      rd_data_piece_2[17] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[17][0] == 0)
             rd_data_piece_0[17] <= ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17];
         else if (rd_data_cnt[17][0] == 1)
             rd_data_piece_2[17] <= ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17];
   end
end

always @ (negedge ddr_dqs_modified[17] or negedge rst_n) begin
   if (!rst_n) begin
      rd_data_piece_1[17] <= 0;
   end
   else begin
      if (mem_rd_cmd_lat)
         if (rd_data_cnt[17][0] == 1)
             rd_data_piece_1[17] <= ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17];
   end
end

// Write a data pair into the fifo
always @ (negedge ddr_dqs_modified[17] or negedge rst_n) begin
    if (!rst_n) begin
	    rdf_wr_addr[17]       <= 0;
    end
    else begin
	if (mem_rd_cmd_lat) begin
     if (rd_data_cnt[17][0] == 0)
	    rdf_wr_addr[17]       <= rdf_wr_addr[17] + 1;
	end

	case (rdf_wr_addr[17])
      6'd0  : {rd_data_fifo[0][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[0][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[0][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[0][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}   <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd1  : {rd_data_fifo[1][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[1][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[1][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[1][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}   <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd2  : {rd_data_fifo[2][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[2][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[2][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[2][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}   <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd3  : {rd_data_fifo[3][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[3][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[3][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[3][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}   <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd4  : {rd_data_fifo[4][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[4][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[4][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[4][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}   <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd5  : {rd_data_fifo[5][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[5][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[5][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[5][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}   <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd6  : {rd_data_fifo[6][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[6][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[6][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[6][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}   <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd7  : {rd_data_fifo[7][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[7][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[7][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[7][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}   <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd8  : {rd_data_fifo[8][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[8][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[8][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[8][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}   <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd9  : {rd_data_fifo[9][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[9][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[9][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[9][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}   <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd10 : {rd_data_fifo[10][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[10][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[10][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[10][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd11 : {rd_data_fifo[11][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[11][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[11][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[11][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd12 : {rd_data_fifo[12][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[12][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[12][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[12][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd13 : {rd_data_fifo[13][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[13][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[13][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[13][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd14 : {rd_data_fifo[14][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[14][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[14][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[14][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd15 : {rd_data_fifo[15][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[15][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[15][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[15][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd16 : {rd_data_fifo[16][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[16][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[16][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[16][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd17 : {rd_data_fifo[17][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[17][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[17][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[17][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd18 : {rd_data_fifo[18][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[18][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[18][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[18][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd19 : {rd_data_fifo[19][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[19][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[19][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[19][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd20 : {rd_data_fifo[20][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[20][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[20][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[20][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd21 : {rd_data_fifo[21][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[21][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[21][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[21][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd22 : {rd_data_fifo[22][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[22][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[22][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[22][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd23 : {rd_data_fifo[23][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[23][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[23][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[23][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd24 : {rd_data_fifo[24][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[24][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[24][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[24][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd25 : {rd_data_fifo[25][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[25][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[25][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[25][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd26 : {rd_data_fifo[26][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[26][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[26][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[26][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd27 : {rd_data_fifo[27][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[27][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[27][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[27][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd28 : {rd_data_fifo[28][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[28][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[28][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[28][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd29 : {rd_data_fifo[29][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[29][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[29][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[29][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd30 : {rd_data_fifo[30][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[30][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[30][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[30][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd31 : {rd_data_fifo[31][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[31][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[31][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[31][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd32 : {rd_data_fifo[32][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[32][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[32][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[32][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd33 : {rd_data_fifo[33][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[33][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[33][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[33][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd34 : {rd_data_fifo[34][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[34][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[34][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[34][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd35 : {rd_data_fifo[35][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[35][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[35][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[35][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd36 : {rd_data_fifo[36][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[36][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[36][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[36][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd37 : {rd_data_fifo[37][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[37][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[37][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[37][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd38 : {rd_data_fifo[38][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[38][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[38][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[38][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd39 : {rd_data_fifo[39][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[39][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[39][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[39][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd40 : {rd_data_fifo[40][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[40][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[40][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[40][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd41 : {rd_data_fifo[41][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[41][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[41][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[41][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd42 : {rd_data_fifo[42][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[42][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[42][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[42][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd43 : {rd_data_fifo[43][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[43][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[43][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[43][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd44 : {rd_data_fifo[44][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[44][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[44][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[44][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd45 : {rd_data_fifo[45][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[45][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[45][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[45][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd46 : {rd_data_fifo[46][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[46][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[46][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[46][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd47 : {rd_data_fifo[47][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[47][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[47][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[47][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd48 : {rd_data_fifo[48][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[48][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[48][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[48][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd49 : {rd_data_fifo[49][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[49][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[49][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[49][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd50 : {rd_data_fifo[50][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[50][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[50][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[50][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd51 : {rd_data_fifo[51][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[51][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[51][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[51][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd52 : {rd_data_fifo[52][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[52][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[52][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[52][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd53 : {rd_data_fifo[53][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[53][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[53][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[53][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd54 : {rd_data_fifo[54][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[54][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[54][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[54][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd55 : {rd_data_fifo[55][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[55][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[55][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[55][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd56 : {rd_data_fifo[56][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[56][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[56][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[56][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd57 : {rd_data_fifo[57][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[57][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[57][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[57][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd58 : {rd_data_fifo[58][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[58][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[58][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[58][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd59 : {rd_data_fifo[59][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[59][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[59][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[59][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd60 : {rd_data_fifo[60][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[60][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[60][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[60][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd61 : {rd_data_fifo[61][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[61][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[61][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[61][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd62 : {rd_data_fifo[62][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[62][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[62][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[62][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
      6'd63 : {rd_data_fifo[63][DQ_PER_DQS*(17+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[63][DQ_PER_DQS*(17+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[63][DQ_PER_DQS*(17+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*17],rd_data_fifo[63][DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17]}  <= {ddr_dq[DQ_PER_DQS*(17+1)-1:DQ_PER_DQS*17],rd_data_piece_2[17],rd_data_piece_1[17],rd_data_piece_0[17]};
	endcase
    end
end
`endif //16
`endif //14
`endif //12
`endif //10
`endif //9
`endif //8
`endif //7
`endif //6
`endif //5
`endif //4
`endif //3
`endif //2
`endif //1
// read the data from the fifo and compare it with the data presented by the
// controller.
//always @ (posedge mem_clk or negedge rst_n) begin
//    if (!rst_n) begin
//      mem_rd_cmd_lat <= 0;
//    end
//    else begin
//      mem_rd_cmd_lat <= (mem_rd_cmd_4d | mem_rd_cmd_lat) & ~(mem_wr_cmd_4d);
//    end
//end
assign mem_rd_cmd_lat = mem_rd_cmd_lat_new;

`ifdef ddr3_ip_inst_DUMMY_LOGIC
  `define ddr3_ip_inst_DSIZE_M `ddr3_ip_inst_DMY_WIDTH
`else
  `define ddr3_ip_inst_DSIZE_M `ddr3_ip_inst_DSIZE
`endif

always @ (posedge user_clk or negedge rst_n) begin
    if (!rst_n) begin
       rdf_rd_addr                  <= 0;
    end
    else begin 

       if (dataout_valid & ~until_init_done) begin
	    rdf_rd_addr              <= rdf_rd_addr + 1;
       `ifdef ddr3_ip_inst_DIS_RD_DT_CMP
       `else
         `ifdef ddr3_ip_inst_DATA_SIZE_72
            if (dataout != rd_data_compare) begin
     	          $display("MON ERROR: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time, dataout, rd_data_compare);
                test_mem_ctrl.error_flg <= 1'b1;
            end
             `ifdef ddr3_ip_inst_NO_DEBUG
             `else
                else if (dataout === rd_data_compare)
        	       $display("DATA MATCH!: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time, dataout, rd_data_compare);
             `endif
         `endif
    
         `ifdef ddr3_ip_inst_DATA_SIZE_64
/*          if (dataout != rd_data_compare[255:0]) begin
     	       $display("MON ERROR: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time, dataout,rd_data_compare[255:0] );
             test_mem_ctrl.error_flg <= 1'b1;
            end
*/
            if (dataout[`ddr3_ip_inst_DSIZE_M-1:0] != rd_data_compare[`ddr3_ip_inst_DSIZE_M-1:0]) begin
     	       $display("MON ERROR: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time, dataout[`ddr3_ip_inst_DSIZE_M-1:0],rd_data_compare[`ddr3_ip_inst_DSIZE_M-1:0] );
             test_mem_ctrl.error_flg <= 1'b1;
            end
             `ifdef ddr3_ip_inst_NO_DEBUG
             `else
//                else if (dataout === rd_data_compare[255:0])
//        	       $display("DATA MATCH!: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time, dataout, rd_data_compare[255:0]);
                else if (dataout[`ddr3_ip_inst_DSIZE_M-1:0] === rd_data_compare[`ddr3_ip_inst_DSIZE_M-1:0])
        	       $display("DATA MATCH!: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time, dataout[`ddr3_ip_inst_DSIZE_M-1:0], rd_data_compare[`ddr3_ip_inst_DSIZE_M-1:0]);
             `endif
         `endif
    

         `ifdef ddr3_ip_inst_DATA_SIZE_56
            if (dataout != rd_data_compare[223:0]) begin
     	       $display("MON ERROR: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time, dataout,rd_data_compare[223:0] );
             test_mem_ctrl.error_flg <= 1'b1;
            end
             `ifdef ddr3_ip_inst_NO_DEBUG
             `else
                else if (dataout === rd_data_compare[223:0])
        	       $display("DATA MATCH!: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time, dataout, rd_data_compare[223:0]);
             `endif
         `endif


         `ifdef ddr3_ip_inst_DATA_SIZE_48
            if (dataout != rd_data_compare[191:0]) begin
     	       $display("MON ERROR: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time, dataout,rd_data_compare[191:0] );
             test_mem_ctrl.error_flg <= 1'b1;
            end
             `ifdef ddr3_ip_inst_NO_DEBUG
             `else
                else if (dataout === rd_data_compare[191:0])
        	       $display("DATA MATCH!: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time, dataout, rd_data_compare[191:0]);
             `endif

         `endif

         `ifdef ddr3_ip_inst_DATA_SIZE_40
            if (dataout != rd_data_compare[159:0]) begin
     	       $display("MON ERROR: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time, dataout,rd_data_compare[159:0] );
             test_mem_ctrl.error_flg <= 1'b1;
            end
             `ifdef ddr3_ip_inst_NO_DEBUG
             `else
                else if (dataout === rd_data_compare[159:0])
        	       $display("DATA MATCH!: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time, dataout, rd_data_compare[159:0]);
             `endif

         `endif
    
         `ifdef ddr3_ip_inst_DATA_SIZE_32
            if (dataout != rd_data_compare[127:0]) begin
             $display("MON ERROR: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time,  dataout, rd_data_compare[127:0]);
             test_mem_ctrl.error_flg <= 1'b1;
            end
             `ifdef ddr3_ip_inst_NO_DEBUG
             `else
                else if (dataout === rd_data_compare[127:0])
        	       $display("DATA MATCH!: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time, dataout, rd_data_compare[127:0]);
             `endif
         `endif
    
         `ifdef ddr3_ip_inst_DATA_SIZE_24
            if (dataout != rd_data_compare[95:0]) begin
             $display("MON ERROR: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time,  dataout, rd_data_compare[95:0]);
             test_mem_ctrl.error_flg <= 1'b1;
            end
             `ifdef ddr3_ip_inst_NO_DEBUG
             `else
                else if (dataout === rd_data_compare[95:0])
        	       $display("DATA MATCH!: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time, dataout, rd_data_compare[95:0]);
             `endif

         `endif

         `ifdef ddr3_ip_inst_DATA_SIZE_16
            if (dataout !== rd_data_compare[63:0]) begin
     	       $display("MON ERROR: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time, dataout, rd_data_compare[63:0]);
             test_mem_ctrl.error_flg <= 1'b1;
            end
             `ifdef ddr3_ip_inst_NO_DEBUG
             `else
                else if (dataout === rd_data_compare[63:0])
     	          $display("DATA MATCH!: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time, dataout, rd_data_compare[63:0]);
             `endif

         `endif
    
         `ifdef ddr3_ip_inst_DATA_SIZE_8
            if (dataout !== rd_data_compare[31:0]) begin
          $display("MON ERROR: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time, dataout, rd_data_compare[31:0]);
             test_mem_ctrl.error_flg <= 1'b1;
            end
             `ifdef ddr3_ip_inst_NO_DEBUG
             `else
                else if (dataout === rd_data_compare[31:0])
     	          $display("DATA MATCH!: At time %0t, data output to FPGA is %h, Expected data is %h\n",$time, dataout, rd_data_compare[31:0]);
             `endif

         `endif
      `endif
     
       end //if (dataout_valid)
    end
end

initial begin
   `ifdef ddr3_ip_inst_DIS_RD_DT_CMP
      $display ("INFO: Read data comparision is disabled");
      $display ("INFO: Write data comparision is disabled");
   `endif
end


always @ (rdf_rd_addr or 
          rd_data_fifo[0] or rd_data_fifo[1] or rd_data_fifo[2] or rd_data_fifo[3]
         or rd_data_fifo[4] or rd_data_fifo[5] or rd_data_fifo[6] or rd_data_fifo[7]
         or rd_data_fifo[8] or rd_data_fifo[9] or rd_data_fifo[10] or rd_data_fifo[11]
         or rd_data_fifo[12] or rd_data_fifo[13] or rd_data_fifo[14] or rd_data_fifo[15]
         or rd_data_fifo[16] or rd_data_fifo[17] or rd_data_fifo[18] or rd_data_fifo[19]
         or rd_data_fifo[20] or rd_data_fifo[21] or rd_data_fifo[22] or rd_data_fifo[23]
         or rd_data_fifo[24] or rd_data_fifo[25] or rd_data_fifo[26] or rd_data_fifo[27]
         or rd_data_fifo[28] or rd_data_fifo[29] or rd_data_fifo[30] or rd_data_fifo[31]
         or rd_data_fifo[32] or rd_data_fifo[33] or rd_data_fifo[34] or rd_data_fifo[35]
         or rd_data_fifo[36] or rd_data_fifo[37] or rd_data_fifo[38] or rd_data_fifo[39]
         or rd_data_fifo[40] or rd_data_fifo[41] or rd_data_fifo[42] or rd_data_fifo[43]
         or rd_data_fifo[44] or rd_data_fifo[45] or rd_data_fifo[46] or rd_data_fifo[47]
         or rd_data_fifo[48] or rd_data_fifo[49] or rd_data_fifo[50] or rd_data_fifo[51]
         or rd_data_fifo[52] or rd_data_fifo[53] or rd_data_fifo[54] or rd_data_fifo[55]
         or rd_data_fifo[56] or rd_data_fifo[57] or rd_data_fifo[58] or rd_data_fifo[59]
         or rd_data_fifo[60] or rd_data_fifo[61] or rd_data_fifo[62] or rd_data_fifo[63]
          ) begin
    case (rdf_rd_addr)
      6'd0   : rd_data_fifo_out   = rd_data_fifo[0];
      6'd1   : rd_data_fifo_out   = rd_data_fifo[1];
      6'd2   : rd_data_fifo_out   = rd_data_fifo[2];
      6'd3   : rd_data_fifo_out   = rd_data_fifo[3];
      6'd4   : rd_data_fifo_out   = rd_data_fifo[4];
      6'd5   : rd_data_fifo_out   = rd_data_fifo[5];
      6'd6   : rd_data_fifo_out   = rd_data_fifo[6];
      6'd7   : rd_data_fifo_out   = rd_data_fifo[7];
      6'd8   : rd_data_fifo_out   = rd_data_fifo[8];
      6'd9   : rd_data_fifo_out   = rd_data_fifo[9];
      6'd10  : rd_data_fifo_out   = rd_data_fifo[10];
      6'd11  : rd_data_fifo_out   = rd_data_fifo[11];
      6'd12  : rd_data_fifo_out   = rd_data_fifo[12];
      6'd13  : rd_data_fifo_out   = rd_data_fifo[13];
      6'd14  : rd_data_fifo_out   = rd_data_fifo[14];
      6'd15  : rd_data_fifo_out   = rd_data_fifo[15];
      6'd16  : rd_data_fifo_out   = rd_data_fifo[16];
      6'd17  : rd_data_fifo_out   = rd_data_fifo[17];
      6'd18  : rd_data_fifo_out   = rd_data_fifo[18];
      6'd19  : rd_data_fifo_out   = rd_data_fifo[19];
      6'd20  : rd_data_fifo_out   = rd_data_fifo[20];
      6'd21  : rd_data_fifo_out   = rd_data_fifo[21];
      6'd22  : rd_data_fifo_out   = rd_data_fifo[22];
      6'd23  : rd_data_fifo_out   = rd_data_fifo[23];
      6'd24  : rd_data_fifo_out   = rd_data_fifo[24];
      6'd25  : rd_data_fifo_out   = rd_data_fifo[25];
      6'd26  : rd_data_fifo_out   = rd_data_fifo[26];
      6'd27  : rd_data_fifo_out   = rd_data_fifo[27];
      6'd28  : rd_data_fifo_out   = rd_data_fifo[28];
      6'd29  : rd_data_fifo_out   = rd_data_fifo[29];
      6'd30  : rd_data_fifo_out   = rd_data_fifo[30];
      6'd31  : rd_data_fifo_out   = rd_data_fifo[31];
      6'd32  : rd_data_fifo_out   = rd_data_fifo[32];
      6'd33  : rd_data_fifo_out   = rd_data_fifo[33];
      6'd34  : rd_data_fifo_out   = rd_data_fifo[34];
      6'd35  : rd_data_fifo_out   = rd_data_fifo[35];
      6'd36  : rd_data_fifo_out   = rd_data_fifo[36];
      6'd37  : rd_data_fifo_out   = rd_data_fifo[37];
      6'd38  : rd_data_fifo_out   = rd_data_fifo[38];
      6'd39  : rd_data_fifo_out   = rd_data_fifo[39];
      6'd40  : rd_data_fifo_out   = rd_data_fifo[40];
      6'd41  : rd_data_fifo_out   = rd_data_fifo[41];
      6'd42  : rd_data_fifo_out   = rd_data_fifo[42];
      6'd43  : rd_data_fifo_out   = rd_data_fifo[43];
      6'd44  : rd_data_fifo_out   = rd_data_fifo[44];
      6'd45  : rd_data_fifo_out   = rd_data_fifo[45];
      6'd46  : rd_data_fifo_out   = rd_data_fifo[46];
      6'd47  : rd_data_fifo_out   = rd_data_fifo[47];
      6'd48  : rd_data_fifo_out   = rd_data_fifo[48];
      6'd49  : rd_data_fifo_out   = rd_data_fifo[49];
      6'd50  : rd_data_fifo_out   = rd_data_fifo[50];
      6'd51  : rd_data_fifo_out   = rd_data_fifo[51];
      6'd52  : rd_data_fifo_out   = rd_data_fifo[52];
      6'd53  : rd_data_fifo_out   = rd_data_fifo[53];
      6'd54  : rd_data_fifo_out   = rd_data_fifo[54];
      6'd55  : rd_data_fifo_out   = rd_data_fifo[55];
      6'd56  : rd_data_fifo_out   = rd_data_fifo[56];
      6'd57  : rd_data_fifo_out   = rd_data_fifo[57];
      6'd58  : rd_data_fifo_out   = rd_data_fifo[58];
      6'd59  : rd_data_fifo_out   = rd_data_fifo[59];
      6'd60  : rd_data_fifo_out   = rd_data_fifo[60];
      6'd61  : rd_data_fifo_out   = rd_data_fifo[61];
      6'd62  : rd_data_fifo_out   = rd_data_fifo[62];
      6'd63  : rd_data_fifo_out   = rd_data_fifo[63];
    endcase
end
assign int_rd_data_compare = rd_data_fifo_out;
assign rd_data_compare = int_rd_data_compare;

/*
assign rd_data_compare = {rd_data_compare_8, 
                          rd_data_compare_7, rd_data_compare_6,rd_data_compare_5, rd_data_compare_4,
                          rd_data_compare_3, rd_data_compare_2,rd_data_compare_1, rd_data_compare_0};

//assign  rdata_cmp_0 =  {int_rd_data_compare[103:96], int_rd_data_compare[71:64],int_rd_data_compare[39:32], int_rd_data_compare[7:0]};
assign  rdata_cmp_0 =  {int_rd_data_compare[DQ_PER_DQS*(0+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],int_rd_data_compare[DQ_PER_DQS*(0+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],int_rd_data_compare[DQ_PER_DQS*(0+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*0],int_rd_data_compare[DQ_PER_DQS*(0+1)-1:DQ_PER_DQS*0]};

assign  rd_data_compare_0  = {rdata_cmp_0[31],rdata_cmp_0[23],rdata_cmp_0[15],rdata_cmp_0[ 7],rdata_cmp_0[30],rdata_cmp_0[22],rdata_cmp_0[14],rdata_cmp_0[ 6],
	                      rdata_cmp_0[29],rdata_cmp_0[21],rdata_cmp_0[13],rdata_cmp_0[ 5],rdata_cmp_0[28],rdata_cmp_0[20],rdata_cmp_0[12],rdata_cmp_0[ 4],
	                      rdata_cmp_0[27],rdata_cmp_0[19],rdata_cmp_0[11],rdata_cmp_0[ 3],rdata_cmp_0[26],rdata_cmp_0[18],rdata_cmp_0[10],rdata_cmp_0[ 2],
	                      rdata_cmp_0[25],rdata_cmp_0[17],rdata_cmp_0[ 9],rdata_cmp_0[ 1],rdata_cmp_0[24],rdata_cmp_0[16],rdata_cmp_0[ 8],rdata_cmp_0[ 0]};

//assign  rdata_cmp_1 =  {int_rd_data_compare[111:104], int_rd_data_compare[79:72],int_rd_data_compare[47:40], int_rd_data_compare[15:8]};
assign  rdata_cmp_1 =  {int_rd_data_compare[DQ_PER_DQS*(1+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],int_rd_data_compare[DQ_PER_DQS*(1+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],int_rd_data_compare[DQ_PER_DQS*(1+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*1],int_rd_data_compare[DQ_PER_DQS*(1+1)-1:DQ_PER_DQS*1]};


assign  rd_data_compare_1  = {rdata_cmp_1[31],rdata_cmp_1[23],rdata_cmp_1[15],rdata_cmp_1[ 7],rdata_cmp_1[30],rdata_cmp_1[22],rdata_cmp_1[14],rdata_cmp_1[ 6],
	                      rdata_cmp_1[29],rdata_cmp_1[21],rdata_cmp_1[13],rdata_cmp_1[ 5],rdata_cmp_1[28],rdata_cmp_1[20],rdata_cmp_1[12],rdata_cmp_1[ 4],
	                      rdata_cmp_1[27],rdata_cmp_1[19],rdata_cmp_1[11],rdata_cmp_1[ 3],rdata_cmp_1[26],rdata_cmp_1[18],rdata_cmp_1[10],rdata_cmp_1[ 2],
	                      rdata_cmp_1[25],rdata_cmp_1[17],rdata_cmp_1[ 9],rdata_cmp_1[ 1],rdata_cmp_1[24],rdata_cmp_1[16],rdata_cmp_1[ 8],rdata_cmp_1[ 0]};

//assign  rdata_cmp_2 =  {int_rd_data_compare[119:112], int_rd_data_compare[87:80],int_rd_data_compare[55:48], int_rd_data_compare[23:16]};
assign  rdata_cmp_2 =  {int_rd_data_compare[DQ_PER_DQS*(2+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],int_rd_data_compare[DQ_PER_DQS*(2+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],int_rd_data_compare[DQ_PER_DQS*(2+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*2],int_rd_data_compare[DQ_PER_DQS*(2+1)-1:DQ_PER_DQS*2]};


assign  rd_data_compare_2  = {rdata_cmp_2[31],rdata_cmp_2[23],rdata_cmp_2[15],rdata_cmp_2[ 7],rdata_cmp_2[30],rdata_cmp_2[22],rdata_cmp_2[14],rdata_cmp_2[ 6],
	                      rdata_cmp_2[29],rdata_cmp_2[21],rdata_cmp_2[13],rdata_cmp_2[ 5],rdata_cmp_2[28],rdata_cmp_2[20],rdata_cmp_2[12],rdata_cmp_2[ 4],
	                      rdata_cmp_2[27],rdata_cmp_2[19],rdata_cmp_2[11],rdata_cmp_2[ 3],rdata_cmp_2[26],rdata_cmp_2[18],rdata_cmp_2[10],rdata_cmp_2[ 2],
	                      rdata_cmp_2[25],rdata_cmp_2[17],rdata_cmp_2[ 9],rdata_cmp_2[ 1],rdata_cmp_2[24],rdata_cmp_2[16],rdata_cmp_2[ 8],rdata_cmp_2[ 0]};

//assign  rdata_cmp_3 =  {int_rd_data_compare[127:120], int_rd_data_compare[95:88],int_rd_data_compare[63:56], int_rd_data_compare[31:24]};
assign  rdata_cmp_3 =  {int_rd_data_compare[DQ_PER_DQS*(3+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],int_rd_data_compare[DQ_PER_DQS*(3+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],int_rd_data_compare[DQ_PER_DQS*(3+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*3],int_rd_data_compare[DQ_PER_DQS*(3+1)-1:DQ_PER_DQS*3]};


assign  rd_data_compare_3  = {rdata_cmp_3[31],rdata_cmp_3[23],rdata_cmp_3[15],rdata_cmp_3[ 7],rdata_cmp_3[30],rdata_cmp_3[22],rdata_cmp_3[14],rdata_cmp_3[ 6],
	                      rdata_cmp_3[29],rdata_cmp_3[21],rdata_cmp_3[13],rdata_cmp_3[ 5],rdata_cmp_3[28],rdata_cmp_3[20],rdata_cmp_3[12],rdata_cmp_3[ 4],
	                      rdata_cmp_3[27],rdata_cmp_3[19],rdata_cmp_3[11],rdata_cmp_3[ 3],rdata_cmp_3[26],rdata_cmp_3[18],rdata_cmp_3[10],rdata_cmp_3[ 2],
	                      rdata_cmp_3[25],rdata_cmp_3[17],rdata_cmp_3[ 9],rdata_cmp_3[ 1],rdata_cmp_3[24],rdata_cmp_3[16],rdata_cmp_3[ 8],rdata_cmp_3[ 0]};


assign  rdata_cmp_4 =  {int_rd_data_compare[DQ_PER_DQS*(4+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],int_rd_data_compare[DQ_PER_DQS*(4+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],int_rd_data_compare[DQ_PER_DQS*(4+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*4],int_rd_data_compare[DQ_PER_DQS*(4+1)-1:DQ_PER_DQS*4]};


assign  rd_data_compare_4  = {rdata_cmp_4[31],rdata_cmp_4[23],rdata_cmp_4[15],rdata_cmp_4[ 7],rdata_cmp_4[30],rdata_cmp_4[22],rdata_cmp_4[14],rdata_cmp_4[ 6],
	                      rdata_cmp_4[29],rdata_cmp_4[21],rdata_cmp_4[13],rdata_cmp_4[ 5],rdata_cmp_4[28],rdata_cmp_4[20],rdata_cmp_4[12],rdata_cmp_4[ 4],
	                      rdata_cmp_4[27],rdata_cmp_4[19],rdata_cmp_4[11],rdata_cmp_4[ 3],rdata_cmp_4[26],rdata_cmp_4[18],rdata_cmp_4[10],rdata_cmp_4[ 2],
	                      rdata_cmp_4[25],rdata_cmp_4[17],rdata_cmp_4[ 9],rdata_cmp_4[ 1],rdata_cmp_4[24],rdata_cmp_4[16],rdata_cmp_4[ 8],rdata_cmp_4[ 0]};


assign  rdata_cmp_5 =  {int_rd_data_compare[DQ_PER_DQS*(5+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],int_rd_data_compare[DQ_PER_DQS*(5+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],int_rd_data_compare[DQ_PER_DQS*(5+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*5],int_rd_data_compare[DQ_PER_DQS*(5+1)-1:DQ_PER_DQS*5]};


assign  rd_data_compare_5  = {rdata_cmp_5[31],rdata_cmp_5[23],rdata_cmp_5[15],rdata_cmp_5[ 7],rdata_cmp_5[30],rdata_cmp_5[22],rdata_cmp_5[14],rdata_cmp_5[ 6],
	                      rdata_cmp_5[29],rdata_cmp_5[21],rdata_cmp_5[13],rdata_cmp_5[ 5],rdata_cmp_5[28],rdata_cmp_5[20],rdata_cmp_5[12],rdata_cmp_5[ 4],
	                      rdata_cmp_5[27],rdata_cmp_5[19],rdata_cmp_5[11],rdata_cmp_5[ 3],rdata_cmp_5[26],rdata_cmp_5[18],rdata_cmp_5[10],rdata_cmp_5[ 2],
	                      rdata_cmp_5[25],rdata_cmp_5[17],rdata_cmp_5[ 9],rdata_cmp_5[ 1],rdata_cmp_5[24],rdata_cmp_5[16],rdata_cmp_5[ 8],rdata_cmp_5[ 0]};

assign  rdata_cmp_6 =  {int_rd_data_compare[DQ_PER_DQS*(6+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],int_rd_data_compare[DQ_PER_DQS*(6+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],int_rd_data_compare[DQ_PER_DQS*(6+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*6],int_rd_data_compare[DQ_PER_DQS*(6+1)-1:DQ_PER_DQS*6]};


assign  rd_data_compare_6  = {rdata_cmp_6[31],rdata_cmp_6[23],rdata_cmp_6[15],rdata_cmp_6[ 7],rdata_cmp_6[30],rdata_cmp_6[22],rdata_cmp_6[14],rdata_cmp_6[ 6],
	                      rdata_cmp_6[29],rdata_cmp_6[21],rdata_cmp_6[13],rdata_cmp_6[ 5],rdata_cmp_6[28],rdata_cmp_6[20],rdata_cmp_6[12],rdata_cmp_6[ 4],
	                      rdata_cmp_6[27],rdata_cmp_6[19],rdata_cmp_6[11],rdata_cmp_6[ 3],rdata_cmp_6[26],rdata_cmp_6[18],rdata_cmp_6[10],rdata_cmp_6[ 2],
	                      rdata_cmp_6[25],rdata_cmp_6[17],rdata_cmp_6[ 9],rdata_cmp_6[ 1],rdata_cmp_6[24],rdata_cmp_6[16],rdata_cmp_6[ 8],rdata_cmp_6[ 0]};

assign  rdata_cmp_7 =  {int_rd_data_compare[DQ_PER_DQS*(7+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],int_rd_data_compare[DQ_PER_DQS*(7+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],int_rd_data_compare[DQ_PER_DQS*(7+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*7],int_rd_data_compare[DQ_PER_DQS*(7+1)-1:DQ_PER_DQS*7]};


assign  rd_data_compare_7  = {rdata_cmp_7[31],rdata_cmp_7[23],rdata_cmp_7[15],rdata_cmp_7[ 7],rdata_cmp_7[30],rdata_cmp_7[22],rdata_cmp_7[14],rdata_cmp_7[ 6],
	                      rdata_cmp_7[29],rdata_cmp_7[21],rdata_cmp_7[13],rdata_cmp_7[ 5],rdata_cmp_7[28],rdata_cmp_7[20],rdata_cmp_7[12],rdata_cmp_7[ 4],
	                      rdata_cmp_7[27],rdata_cmp_7[19],rdata_cmp_7[11],rdata_cmp_7[ 3],rdata_cmp_7[26],rdata_cmp_7[18],rdata_cmp_7[10],rdata_cmp_7[ 2],
	                      rdata_cmp_7[25],rdata_cmp_7[17],rdata_cmp_7[ 9],rdata_cmp_7[ 1],rdata_cmp_7[24],rdata_cmp_7[16],rdata_cmp_7[ 8],rdata_cmp_7[ 0]};

assign  rdata_cmp_8 =  {int_rd_data_compare[DQ_PER_DQS*(8+1)+3*`ddr3_ip_inst_DATA_WIDTH-1:3*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],int_rd_data_compare[DQ_PER_DQS*(8+1)+2*`ddr3_ip_inst_DATA_WIDTH-1:2*`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],int_rd_data_compare[DQ_PER_DQS*(8+1)+`ddr3_ip_inst_DATA_WIDTH-1:`ddr3_ip_inst_DATA_WIDTH+DQ_PER_DQS*8],int_rd_data_compare[DQ_PER_DQS*(8+1)-1:DQ_PER_DQS*8]};


assign  rd_data_compare_8  = {rdata_cmp_8[31],rdata_cmp_8[23],rdata_cmp_8[15],rdata_cmp_8[ 7],rdata_cmp_8[30],rdata_cmp_8[22],rdata_cmp_8[14],rdata_cmp_8[ 6],
	                      rdata_cmp_8[29],rdata_cmp_8[21],rdata_cmp_8[13],rdata_cmp_8[ 5],rdata_cmp_8[28],rdata_cmp_8[20],rdata_cmp_8[12],rdata_cmp_8[ 4],
	                      rdata_cmp_8[27],rdata_cmp_8[19],rdata_cmp_8[11],rdata_cmp_8[ 3],rdata_cmp_8[26],rdata_cmp_8[18],rdata_cmp_8[10],rdata_cmp_8[ 2],
	                      rdata_cmp_8[25],rdata_cmp_8[17],rdata_cmp_8[ 9],rdata_cmp_8[ 1],rdata_cmp_8[24],rdata_cmp_8[16],rdata_cmp_8[ 8],rdata_cmp_8[ 0]};
*/
///////////////////////////////////////////////////////////////////////
// Flag an error is the data output to the FPGA has an X value on it
reg   dout_xfound;
reg   dataout_valid_xfound;
integer j;
initial begin
    dout_xfound    = 0;
    dataout_valid_xfound = 0;
end

always @ (posedge clk) begin
    dout_xfound    = 0;

 if ((dataout_valid === 1'bx) || (dataout_valid === 1'bz)) begin
    dataout_valid_xfound = 1;
        //if ($time) $display ("MON ERROR: At time %0t, Unknown values were found on the data_valid output to FPGA\n",$time);
    end

 if (dataout_valid) begin
    //for (j=0; j <`DSIZE; j=j+1) begin
    for (j=0; j <`ddr3_ip_inst_DSIZE_M; j=j+1) begin
       if ((dataout[j] === 1'bx) || (dataout[j] === 1'bz)) 
   	    dout_xfound = 1;
    end
    end // if (dataout_valid) begin
    if (dout_xfound) begin
        $display ("MON ERROR: At time %0t, Unknown values were found on the data output to FPGA\n",$time);
        test_mem_ctrl.error_flg <= 1'b1;
    end
end

///////////////////////////////////////////////////////////////////////
// Put a check in to see if a dataout valid happened after a memory 
// read was presented.  This will ensure that the test does not pass if no
// datavalid signal was ever asserted.

integer     rd_clk_count;
reg         mem_rd_cmd_sth;

initial begin
    rd_clk_count      = 0;
end

always @ (posedge mem_clk) begin
    mem_rd_cmd_sth <= (mem_rd_cmd_sth | mem_rd_cmd) & ~dataout_valid;

    if (mem_rd_cmd_sth)
	rd_clk_count   <= rd_clk_count + 1;
    else
	rd_clk_count   <= 0;

    if (rd_clk_count > 50) begin
        $display ("MON ERROR: At least 50 memory clock cycles elapsed after a read command with no datavalid asserion\n");
        test_mem_ctrl.error_flg <= 1'b1;
	rd_clk_count   <= 0;
    end
end



///////////////////////////////////////////////////////////////////////
// Flag an error if init done is ever asserted without the init_start 
// being active

reg  init_start_d;

always @ (posedge clk) begin
   if (init_done && !init_start_d) begin
        $display ("MON ERROR: At time %0t, init_done was asserted without a valid init_start request\n", $time);
        test_mem_ctrl.error_flg <= 1'b1;
   end
end

reg  [5:0] otf_fifo[0:7];
reg  [2:0] otf_wr_addr;
reg  [2:0] otf_rd_addr;
reg  [5:0] otf_fifo_out;
wire       otf_bl;
wire [4:0] otf_burst_cnt;
wire       otf_fifo_rd;//the otf_fifo read point is increased on the begining of each RD/WR
reg  [4:0] mem_burst_cnt_dup;
reg  [4:0] orig_mem_burst_cnt_dup;

always @ (posedge mem_clk or negedge rst_n) begin
   if (!rst_n) begin
      otf_wr_addr <= 3'd0;
      mem_burst_cnt_dup <= 5'd0;
   end
   else begin
      if (fifo_rd) begin
         if (mem_rd_cmd || mem_wr_cmd)
           mem_burst_cnt_dup  =  fifo_out[`ddr3_ip_inst_ADDR_WIDTH+8:`ddr3_ip_inst_ADDR_WIDTH+4];
      end
      orig_mem_burst_cnt_dup  = fifo_out[`ddr3_ip_inst_ADDR_WIDTH+8:`ddr3_ip_inst_ADDR_WIDTH+4];
       
      if (mem_rd_cmd || mem_wr_cmd) begin
         if (mem_burst_cnt_dup != 5'b0) begin
           mem_burst_cnt_dup = mem_burst_cnt_dup - 1;
       end
       else begin
           mem_burst_cnt_dup = 0;
       end
     end

      if (burst_len == 2'b01) begin // OTF
         if ((mem_rd_cmd || mem_wr_cmd)&& (mem_burst_cnt_dup == orig_mem_burst_cnt_dup-1)) begin 
            otf_wr_addr <= otf_wr_addr + 1;
        
            case (otf_wr_addr)
               3'd0 : otf_fifo[0] <= {fifo_out[`ddr3_ip_inst_ADDR_WIDTH+8:`ddr3_ip_inst_ADDR_WIDTH+4],ddr_ad[12]};
               3'd1 : otf_fifo[1] <= {fifo_out[`ddr3_ip_inst_ADDR_WIDTH+8:`ddr3_ip_inst_ADDR_WIDTH+4],ddr_ad[12]};
               3'd2 : otf_fifo[2] <= {fifo_out[`ddr3_ip_inst_ADDR_WIDTH+8:`ddr3_ip_inst_ADDR_WIDTH+4],ddr_ad[12]};
               3'd3 : otf_fifo[3] <= {fifo_out[`ddr3_ip_inst_ADDR_WIDTH+8:`ddr3_ip_inst_ADDR_WIDTH+4],ddr_ad[12]};
               3'd4 : otf_fifo[4] <= {fifo_out[`ddr3_ip_inst_ADDR_WIDTH+8:`ddr3_ip_inst_ADDR_WIDTH+4],ddr_ad[12]};
               3'd5 : otf_fifo[5] <= {fifo_out[`ddr3_ip_inst_ADDR_WIDTH+8:`ddr3_ip_inst_ADDR_WIDTH+4],ddr_ad[12]};
               3'd6 : otf_fifo[6] <= {fifo_out[`ddr3_ip_inst_ADDR_WIDTH+8:`ddr3_ip_inst_ADDR_WIDTH+4],ddr_ad[12]};
               3'd7 : otf_fifo[7] <= {fifo_out[`ddr3_ip_inst_ADDR_WIDTH+8:`ddr3_ip_inst_ADDR_WIDTH+4],ddr_ad[12]};
            endcase
         end //if (mem_rd_cmd || mem_wr_cmd)
      end // OTF
   end // else
end // always @(posedge mem_clk)

// for the ddr_dqs_modified is #1 delayed from dqs, use negedge to sample it.
always @(negedge mem_clk or negedge rst_n) begin
   if (!rst_n) begin
      dqs_reg1 <= 0;
      dqs_reg2 <= 0;
      dqs_reg3 <= 0;
      dqs_reg4 <= 0;
      dqs_reg5 <= 0;
      dqs_reg6 <= 0;
      dqs_reg7 <= 0;
   end
   else begin
      dqs_reg1 <= ddr_dqs_original;
      dqs_reg2 <= dqs_reg1;
      dqs_reg3 <= dqs_reg2;
      dqs_reg4 <= dqs_reg3;
      dqs_reg5 <= dqs_reg4;
      dqs_reg6 <= dqs_reg5;
      dqs_reg7 <= dqs_reg6;
   end // else
end //always @(negedge mem_clk)

//assign otf_fifo_rd = ((({mem_wr_cmd_lat,ddr_dqs_original,dqs_reg1,dqs_reg2} == 4'b1100) && (int_burst_len == 4'h4))
//       || (({mem_wr_cmd_lat,ddr_dqs_original,dqs_reg1} == 3'b110) && (int_burst_len == 4'h8))
//       || (({mem_rd_cmd_lat,ddr_dqs_original,dqs_reg1,dqs_reg2} == 4'b1100) && (int_burst_len == 4'h4))
//       || (({mem_rd_cmd_lat,ddr_dqs_original,dqs_reg1} == 3'b110) && (int_burst_len == 4'h8)))? 
//       1'b1:1'b0;

/*--SK
assign otf_fifo_rd = (
                        (({mem_wr_cmd_lat,ddr_dqs_original,dqs_reg1,dqs_reg2}          == 4'b1100) && (int_burst_len == 4'h4))
       || (({mem_wr_cmd_lat,ddr_dqs_original,dqs_reg1} == 3'b110) && (int_burst_len == 4'h8))
       || ({mem_rd_cmd_lat,ddr_dqs_original,dqs_reg1,dqs_reg2,dqs_reg3} == 5'b11000)
                     || (({mem_rd_cmd_lat,ddr_dqs_original,dqs_reg1,dqs_reg2}          == 4'b1100) && (int_burst_len == 4'h8))
       )?
       1'b1:1'b0;
*/

wire  otf_fifo_rd0;
wire  otf_fifo_rd1;
wire  otf_fifo_rd2;
wire  otf_fifo_rd3;

assign otf_fifo_rd0 = (({mem_wr_cmd_lat,ddr_dqs_original,dqs_reg1,dqs_reg2} == 4'b1100) && (int_burst_len == 4'h4)) ? 1'b1:1'b0;
assign otf_fifo_rd1 = (({mem_wr_cmd_lat,ddr_dqs_original,dqs_reg1} == 3'b110)  && (int_burst_len == 4'h8)) ? 1'b1:1'b0;
assign otf_fifo_rd2 = ({mem_rd_cmd_lat,ddr_dqs_original,dqs_reg1,dqs_reg2,dqs_reg3,dqs_reg4,dqs_reg5,dqs_reg6} == 8'b11000000 && (int_burst_len == 4'h4)) ? 1'b1:1'b0;
//assign otf_fifo_rd2 = (({ddr_dqs_original,dqs_reg1,dqs_reg2,dqs_reg3} == 4'b1000) && (mem_rd_cmd_lat == 1'b1)) ? 1'b1:1'b0;
assign otf_fifo_rd3 = (({mem_rd_cmd_lat,ddr_dqs_original,dqs_reg1,dqs_reg2}          == 4'b1100) && (int_burst_len == 4'h8)) ? 1'b1:1'b0; 

assign otf_fifo_rd = (otf_fifo_rd0 || otf_fifo_rd1 || otf_fifo_rd2 || otf_fifo_rd3)  ? 1'b1:1'b0;


//assign otf_fifo_rd = ({ddr_dqs_modified,dqs_reg1} == 2'b10)? 1'b1:1'b0;

//always @ (mem_clk or negedge rst_n) begin
always @ (negedge mem_clk or negedge rst_n) begin
   if (!rst_n) begin
      otf_rd_addr <= 3'd0;
      otf_fifo_out <= 5'd0;
   end
   else if (burst_len == 2'b01) begin
      if (otf_fifo_rd == 1'b1) begin
        otf_rd_addr <= otf_rd_addr + 1;
  
        case (otf_rd_addr)
                 3'd0 : otf_fifo_out <= otf_fifo[0];
                 3'd1 : otf_fifo_out <= otf_fifo[1];
                 3'd2 : otf_fifo_out <= otf_fifo[2];
                 3'd3 : otf_fifo_out <= otf_fifo[3];
                 3'd4 : otf_fifo_out <= otf_fifo[4];
                 3'd5 : otf_fifo_out <= otf_fifo[5];
                 3'd6 : otf_fifo_out <= otf_fifo[6];
                 3'd7 : otf_fifo_out <= otf_fifo[7];
        endcase
      end // burst_len == 2'b01
   end // bl otf
end //always

assign otf_burst_cnt = otf_fifo_out[5:1];
assign otf_bl = otf_fifo_out[0];

always @ (burst_len, otf_bl) begin
    casex ({burst_len, otf_bl})
        3'b00x   : int_burst_len = 4'b1000;
        3'b010   : int_burst_len = 4'b0100;
        3'b011   : int_burst_len = 4'b1000;
        3'b10x   : int_burst_len = 4'b0100;
        default : int_burst_len = 4'b1000;
    endcase
end //always @(burst_len)

/*
// activation bank number checking -- add on OCT 31th by Mai
integer crnt_act_bnk_num;  //The number of activated banks on CURRENT RANK
initial begin //reset the number at time 0
 crnt_act_bnk_num <= 0;
end

integer bn;
integer cs_num;

always
begin : act_bnk_checking
   wait (mem_act_cmd); 
     @ (posedge mem_clk); 

   if (test_mem_ctrl.error_flg == 1'b1)
      disable act_bnk_checking;

   `ifdef ddr3_ip_inst_CS_WIDTH_1
       cs_num = 0;
   `endif

   `ifdef ddr3_ip_inst_CS_WIDTH_2
   case (ddr_cs_n)
   2'b10: cs_num = 0;
   2'b01: cs_num = 1;
   endcase
   `endif

   `ifdef ddr3_ip_inst_CS_WIDTH_4
   case (ddr_cs_n)
   4'b1110: cs_num = 0;
   4'b1101: cs_num = 1;
   4'b1011: cs_num = 2;
   4'b0111: cs_num = 3;
   endcase
   `endif

   for (bn=cs_num*8;bn<cs_num*8+8;bn=bn+1) begin
       if (bnksts_tab[bn]) begin
           crnt_act_bnk_num = crnt_act_bnk_num + 1;
       end
   end

   if (crnt_act_bnk_num > 3) begin
       $display("MON INFO: Over 4 banks are activated at time %0t of RANK %0d", $time, cs_num);
       test_mem_ctrl.error_flg <= 1'b1;
   end
   
   @(posedge clk);
   crnt_act_bnk_num = 0;
end
*/



///////////////////////////////////////////////////////////////////////
endmodule


